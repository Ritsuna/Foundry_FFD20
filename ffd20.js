{const e=TextEditor._createContentLink;TextEditor._createContentLink=async function(t,{relativeTo:s}={}){const a=t[4],i=await e.call(this,t,{relativeTo:s});if(a?.indexOf("::")>-1){const e=a.split("::"),t=e.pop();e.length&&(e.forEach((e=>{let[t,s]=e.split(/(?<!\\):/);switch(t&&s||(s=t,t="extra"),t){case"icon":i.firstChild.className="fa-solid fa-"+s;break;case"class":i.classList.add(...s.split(" "));break;default:i.setAttribute("data-"+t,s)}})),i.lastChild.textContent=t)}return i}}{const e=Roll.fromData;Roll.fromData=function(t,...s){return["RollPF$1","RollPF2"].includes(t.class)&&(t.class="RollPF"),e.call(this,t,...s)}}{const e=ImagePopout._handleShareImage;ImagePopout._handleShareImage=async function({image:t,title:s,caption:a,uuid:i,showTitle:n}={}){const o=await fromUuid(i);return o instanceof Item&&(s=o.name),e.call(this,{image:t,title:s,caption:a,uuid:i,showTitle:n})}}KeyboardManager.prototype._onFocusIn=function(e){const t=[HTMLInputElement,HTMLSelectElement,HTMLTextAreaElement,HTMLOptionElement];(e.target.isContentEditable||t.some((t=>e.target instanceof t)))&&this.releaseKeys()},Object.defineProperty(KeyboardManager.prototype,"hasFocus",{get(){const e=["input","select","textarea","option","[contenteditable]"].map((e=>e+":focus")).join(", ");return document.querySelectorAll(e).length>0}});const e={spells:{label:"FFD20.BrowseSpells"},items:{label:"FFD20.BrowseItems"},bestiary:{label:"FFD20.BrowseBestiary"},feats:{label:"FFD20.BrowseFeats"},classes:{label:"FFD20.BrowseClasses"},races:{label:"FFD20.BrowseRaces"},buffs:{label:"FFD20.BrowseBuffs",wide:!0}};function compendiumButtonClick(e){e.preventDefault();const t=e.target.dataset.category;ffd20.applications.compendiums[t]._render(!0,{focus:!0})}function toggleCompendiumVisibility(e,t){t.unshift({name:game.i18n.localize("FFD20.CompendiumBrowser.HidePack"),icon:'<i class="fa-solid fa-low-vision"></i>',condition:e=>{e instanceof jQuery&&(e=e[0]);const t=game.packs.get(e.dataset.pack);return!0!==t.config.ffd20?.disabled},callback:e=>{e instanceof jQuery&&(e=e[0]);game.packs.get(e.dataset.pack).configure({ffd20:{disabled:!0}})}},{name:game.i18n.localize("FFD20.CompendiumBrowser.ShowPack"),icon:'<i class="fa-solid fa-eye"></i>',condition:e=>{e instanceof jQuery&&(e=e[0]);const t=game.packs.get(e.dataset.pack);return!0===t.config.ffd20?.disabled},callback:e=>{e instanceof jQuery&&(e=e[0]);game.packs.get(e.dataset.pack).configure({ffd20:{disabled:!1}})}})}Hooks.on("renderCompendiumDirectory",(async(t,s)=>{if(s instanceof jQuery&&(s=s[0]),s.querySelector("section.ffd20.action-buttons"))return;let a;game.release.generation>=13?(a=document.createElement("section"),s.append(a)):a=s.querySelector("footer.directory-footer"),a.classList.add("ffd20","action-buttons"),game.release.generation>=13&&a.classList.add("v13");for(const[t,s]of Object.entries(e)){const e=document.createElement("button");e.type="button",e.dataset.category=t,e.classList.add("compendium",t),e.innerText=game.i18n.localize(s.label),s.wide&&e.classList.add("colspan-2"),a.append(e),e.addEventListener("click",compendiumButtonClick)}})),Hooks.on("getCompendiumDirectoryEntryContext",toggleCompendiumVisibility),Hooks.on("getCompendiumContextOptions",toggleCompendiumVisibility),Hooks.on("renderCompendiumDirectory",(function displayCompendiumVisibility(e,t){t instanceof jQuery&&(t=t[0]);for(const e of t.querySelectorAll("li[data-pack]")){const t=game.packs.get(e.dataset.pack);if(!(!0===t.config.ffd20?.disabled))continue;const s=e.querySelector(".status-icons"),a=document.createElement("i");a.classList.add("fa-solid","fa-filter-circle-xmark"),a.dataset.tooltip="FFD20.Hidden",a.ariaLabel=game.i18n.localize("FFD20.Hidden"),s.prepend(a)}}));const getMessage$1=e=>game.messages.get(e.dataset.messageId),isOwnedSpellCard=e=>{const t=e.itemSource;return t&&"spell"===t.type&&t.isOwner&&!!t.actor};function spellCardContextMenu(e,t){t.unshift({name:"FFD20.Chat.FocusReference",id:"pf1-focus-reference",icon:'<i class="fa-solid fa-magnifying-glass context-icon ffd20 focus-reference"></i>',condition:e=>(e instanceof jQuery&&(e=e[0]),fromUuidSync(getMessage$1(e)?.system.reference)instanceof ChatMessage),callback:e=>{e instanceof jQuery&&(e=e[0]);const t=fromUuidSync(getMessage$1(e).system.reference);e.closest(".chat-message[data-message-id]").parentElement.querySelector(`.chat-message[data-message-id='${t.id}']`).scrollIntoView({block:"start"})}},{name:"FFD20.ConcentrationCheck",id:"pf1-roll-concentration",icon:'<i class="fa-solid fa-brain context-icon ffd20 concentration"></i>',condition:e=>{e instanceof jQuery&&(e=e[0]),isOwnedSpellCard(getMessage$1(e))},callback:e=>{e instanceof jQuery&&(e=e[0]);const t=getMessage$1(e),s=t.itemSource,a=s?.actor;a.rollConcentration(s.system.spellbook,{messageId:t.id,reference:t.uuid})}},{name:"FFD20.CasterLevelCheck",id:"pf1-roll-caster-level",icon:'<i class="fa-solid fa-wand-magic-sparkles context-icon ffd20 caster-level"></i>',condition:e=>(e instanceof jQuery&&(e=e[0]),isOwnedSpellCard(getMessage$1(e))),callback:e=>{e instanceof jQuery&&(e=e[0]);const t=getMessage$1(e),s=t.itemSource,a=s?.actor;a.rollCL(s.system.spellbook,{messageId:t.id,reference:t.uuid})}})}Hooks.on("getChatLogEntryContext",spellCardContextMenu),Hooks.on("getChatMessageContextOptions",spellCardContextMenu);function isValidChangeTarget(e,{actor:t,item:s}={}){const{filters:a}=e;if(!a)return{actor:!0,item:!0,valid:!0};let i=!0;if(a.actor&&t){const{include:n,exclude:o,fn:r}=a.actor;o&&o.includes(t.type)||n&&!n.includes(t.type)?i=!1:"function"==typeof r&&(i=r(e,{actor:t,item:s}))}let n=!0;if(a.item&&s){const{include:i,exclude:o,fn:r}=a.item;o&&o.includes(s.type)||i&&!i.includes(s.type)?n=!1:"function"==typeof r&&(n=r(e,{actor:t,item:s}))}return{actor:t?i:void 0,item:s?n:void 0,valid:i&&n}}function getBuffTargets(e,{actor:t,item:s}={}){const a=foundry.utils.deepClone({buffs:ffd20.config.buffTargets,contextNotes:ffd20.config.contextNoteTargets}[e]),i=isValidChangeTarget(ffd20.config.buffTargetCategories.skills,{actor:t,item:s}).valid;if(t){const e=t._skillTargets??[];for(const s of e){const e=s.split(".").slice(1).join(".");if(e.startsWith("~"))continue;const n=t.getSkillInfo(e);a[s]={label:n.fullName,category:"skill",valid:i}}}else for(const[e,t]of Object.entries(ffd20.config.skills))a["skill."+e]={label:t,category:"skill",valid:i};const n=isValidChangeTarget(ffd20.config.buffTargetCategories.spell,{actor:t,item:s}).valid,o=t?.system.attributes?.spells?.spellbooks??{primary:{label:game.i18n.localize("FFD20.SpellBookPrimary")},secondary:{label:game.i18n.localize("FFD20.SpellBookSecondary")},tertiary:{label:game.i18n.localize("FFD20.SpellBookTertiary")},quaternary:{label:game.i18n.localize("FFD20.SpellBookQuaternary")},spelllike:{label:game.i18n.localize("FFD20.SpellBookSpelllike")}},r=t?._spellbookTargets??[];for(const e of Object.keys(ffd20.config.spellSchools))r.push("dc.school."+e,"cl.school."+e);for(const e of r){const t=/^(?<key>\w+)(?:\.(?<category>\w+))?\.(?<subKey>\w+)$/.exec(e);if(!t)continue;const{key:s,category:i,subKey:r}=t.groups;let l;l="school"===i?ffd20.config.spellSchools[r]:o[r]?.label||r;const c=i?`${s}.${i}`:s,d=game.i18n.localize({"dc.school":"FFD20.DC",concn:"FFD20.Concentration","cl.book":"FFD20.CasterLevel","cl.school":"FFD20.CasterLevelAbbr"}[c]);a[e]={label:`${d} (${l})`,category:"spell",valid:n}}return a}function moduleToObject(e){const t={};for(const s in e)"[object Module]"===Object.prototype.toString.call(e[s])?t[s]=moduleToObject(e[s]):t[s]=e[s];return t}const t=Object.freeze(Object.defineProperty({__proto__:null,adjustNumberByStringCommand:(e,t,s=null,a=null)=>{let i=e;const n=t.match(/(?<abs>=)?(?<op>[+-]+)?(?<value>\d+)/);if(n){const{op:t,abs:s,value:a}=n.groups,o="="==s||["--","++"].includes(t)||!s&&!t,r=["-","--"].includes(t);let l=parseInt(a);r&&(l=-l),i=o?l:e+l}else i=""===t&&null!==a?a:parseFloat(t||"0");return Number.isFinite(s)&&(i=Math.min(i,s)),Number.isNaN(i)&&(console.warn("Input resulted in NaN",{initial:e,command:t}),i=e),i},createInlineFormula:function createInlineFormula(e,t,s){let[a,i,n,o]=e.slice(1,5);if(a)return TextEditor._createInlineRoll(e,t);3===n.length&&(i+="]");const r=Roll.defaultImplementation,l=r.replaceFormulaData(i.trim()||"0",t||{});let c;if(!o){const e=new r(l);e.isDeterministic?(e.evaluateSync(),c=e.total):c=ffd20.utils.formula.simplify(l)}const d=document.createElement("a");return d.classList.add("inline-preroll","inline-formula"),d.dataset.formula=l,d.dataset.tooltip=i,d.innerHTML='<i class="fa-solid fa-dice-d20"></i>'+(o||c||l),d},fromUuid:function fromUuid$1(e,t){if(!t?.pack)return fromUuidSync(e,{relative:t});const s=foundry.utils.parseUuid(e,{relative:t});if(s.embedded.length){const[a,i]=s.embedded;if("Item"===a)return t.items.get(i);throw Error(`Unsupported embedded document type "${a}" for UUID: ${e}`)}return fromUuidSync(e,{relative:t})},getBuffTargetDictionary:function getBuffTargetDictionary(e="buffs",{actor:t,item:s}={}){const a=getBuffTargets(e,{actor:t,item:s}),i=foundry.utils.deepClone({buffs:ffd20.config.buffTargetCategories,contextNotes:ffd20.config.contextNoteCategories}[e]),n=Object.values(Object.entries(a).reduce(((e,[a,{label:n,category:o,icon:r,...l}])=>(a.startsWith("~")||(e[o]??={key:o,label:i[o].label,items:[],validity:isValidChangeTarget(i[o],{actor:t,item:s})},e[o].items.push({key:a,label:n,icon:r,validity:isValidChangeTarget({key:a,label:n,category:o,icon:r,...l},{actor:t,item:s})})),e)),{}));return ffd20.utils.naturalSort(n,"label"),n},getBuffTargets,getTemplateTypes:function getTemplateTypes(){return game.release.generation>=13?Object.fromEntries(Object.values(CONST.MEASURED_TEMPLATE_TYPES).map((e=>[e,game.i18n.localize("TEMPLATE.TYPES."+e)]))):CONFIG.MeasuredTemplate.types},isValidChangeTarget,keepUpdateArray:function keepUpdateArray(e,t,s){const a=foundry.utils.getProperty(t,s);if(null==a)return;if(Array.isArray(a))return;const i=foundry.utils.deepClone(foundry.utils.getProperty(e,s)||[]);for(const[e,t]of Object.entries(a))if("Object"===foundry.utils.getType(t)){const s=foundry.utils.expandObject(t);i[e]=foundry.utils.mergeObject(i[e],s)}else i[e]=t;foundry.utils.setProperty(t,s,i)},moduleToObject,setDefaultSceneScaling:function setDefaultSceneScaling(e){let t,s;e??=ffd20.utils.getDistanceSystem(),"metric"==e?(s="m",t=1.5):(s="ft",t=5),game.system.grid.units=s,game.system.grid.distance=t,CONFIG.MeasuredTemplate.defaults.width=t},sortArrayByName:e=>{e=foundry.utils.deepClone(e);for(const t of e)t.name=t.name.toLocaleLowerCase();return ffd20.utils.naturalSort(e,"name",{numeric:!0,ignorePunctuation:!0})},uniformUuid:function uniformUuid(e,t){return foundry.utils.parseUuid(e,{relative:t}).uuid}},Symbol.toStringTag,{value:"Module"}));async function runSocketFunction(e,t){const s=game.users.activeGM?.isSelf,a=game.users.get(t);try{switch(e.eventType){case"currencyTransfer":{if(!s)return;let t=await fromUuid(e.data.sourceActor),a=await fromUuid(e.data.destActor);e.data.sourceContainer&&(t=t.items.get(e.data.sourceContainer)),e.data.destContainer&&(a=a.items.get(e.data.destContainer));const i=e.data.amount;ffd20.applications.CurrencyTransfer.transfer(t,a,i,e.data.sourceAlt,e.data.destAlt,!1);break}case"alterChatTargetAttribute":s&&function alterChatTargetAttribute(e){const t=game.messages.get(e.message),s=$(t.content);if(null!=e.save){const a=s.find(`div.attack-targets .target[data-uuid="${e.targetUuid}"] .saving-throws .${e.save}`).find(".value");return a.html(""+e.value),e.isFailure?a.addClass("failure"):a.removeClass("failure"),e.isSuccess?a.addClass("success"):a.removeClass("success"),t.update({content:s.prop("outerHTML")})}}(e);break;case"giveItem":{if(!s)return;const t=await fromUuid(e.item),i=t.actor;if(!i.testUserPermission(a,"OWNER"))return;const n=await fromUuid(e.targetActor),o=t.toObject();await Item.implementation.create(o,{parent:n})&&await i.deleteEmbeddedDocuments("Item",[t.id]);break}case"refreshActorSheets":a.hasPermission(CONST.USER_PERMISSIONS.SETTINGS_MODIFY)&&ffd20.utils.refreshActors({renderOnly:!0})}}catch(e){console.log("FFD20 | Socket Error:",e)}}class SemanticVersion{static re=/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)?$/;constructor(){this.fversion=0,this.major=0,this.minor=0,this.patch=0,this.preRelease="",this.buildMetaData=""}static fromString(e){if(e.match(this.re)){const e=new this;return e.fversion=parseInt(RegExp.$1),e.major=parseInt(RegExp.$2),e.minor=parseInt(RegExp.$3),e.patch=parseInt(RegExp.$4||0),e.preRelease=RegExp.$5||"",e.buildMetaData=RegExp.$6||"",e}return null}toString(){return`${this.fversion}.${this.major}.${this.minor}.${this.patch}`}isHigherThan(e){return this.fversion>e.fversion||(this.major>e.major||(this.major===e.major&&this.minor>e.minor||this.major===e.major&&this.minor===e.minor&&this.patch>e.patch))}isLowerThan(e){return this.fversion<e.fversion||(this.major<e.major||(this.major===e.major&&this.minor<e.minor||this.major===e.major&&this.minor===e.minor&&this.patch<e.patch))}isSame(e){return this.fversion==e.fversion&&this.major==e.major&&this.minor==e.minor&&this.patch==e.patch}}function findOldMacro(e,t){return game.macros.find((s=>s.name===e&&s.command===t&&s.canExecute&&s.visible&&s.isAuthor))}const createItemMacro=async(e,t)=>{const s=fromUuidSync(e),a=`fromUuidSync("${e}").use();`;let i=findOldMacro(s.name,a);return i||(i=await Macro.create({name:s.name,type:"script",img:s.img,command:a,flags:{"ffd20.itemMacro":!0}},{displaySheet:!1})),game.user.assignHotbarMacro(i,t)},createActionMacro=async(e,t,s)=>{let a;if("number"==typeof s){foundry.utils.logCompatibilityWarning("ffd20.documents.macros.createActionMacro() parameters have changed to (uuid, slot).",{since:"PF1 v11",until:"PF1 v12"});const i=fromUuidSync(t);a=i?.actions.get(e),e=a.uuid,t=s}else a=fromUuidSync(e);if(!a)return void ui.notifications.error(game.i18n.format("FFD20.Error.UUIDNotFound",{uuid:e}));const i=a.parent,n=`fromUuidSync("${e}")\n\t.use();`,o=`${a.name} (${i.name})`;let r=findOldMacro(o,n);return r||(r=await Macro.create({name:o,type:"script",img:a.img,command:n,flags:{ffd20:{actionMacro:{uuid:a.uuid}}}},{displaySheet:!1})),game.user.assignHotbarMacro(r,t)},createSkillMacro=async(e,t,s)=>{const a=fromUuidSync(t);if(!a)return;const i=a.getSkillInfo(e),n=`fromUuidSync("${a.uuid}")\n\t.rollSkill("${e}");`,o=game.i18n.format("FFD20.RollSkillMacroName",{actor:a.name,skill:i.fullName});let r=findOldMacro(o,n);return r||(r=await Macro.create({name:o,type:"script",img:"systems/ffd20/icons/items/inventory/dice.jpg",command:n,flags:{"ffd20.skillMacro":!0}},{displaySheet:!1})),game.user.assignHotbarMacro(r,s)},createSaveMacro=async(e,t,s)=>{const a=fromUuidSync(t);if(!a)return;const i=game.i18n.localize("FFD20.SavingThrow"+e.capitalize()),n=`fromUuidSync("${a.uuid}")\n\t.rollSavingThrow("${e}");`,o=game.i18n.format("FFD20.RollSaveMacroName",{actor:a.name,type:i});let r=findOldMacro(o,n);return r||(r=await Macro.create({name:o,type:"script",img:"systems/ffd20/icons/items/inventory/dice.jpg",command:n,flags:{"ffd20.saveMacro":!0}},{displaySheet:!1})),game.user.assignHotbarMacro(r,s)},createMiscActorMacro=async(e,t,s,a)=>{const i=fromUuidSync(t);if(!i)return;const getBookLabel=e=>i.system.attributes?.spells?.spellbooks?.[e]?.label;let n,o,r=`fromUuidSync("${i.uuid}")\n\t`;switch(e){case"defenses":r+=".displayDefenseCard();",n=game.i18n.format("FFD20.DisplayDefensesMacroName",{actor:i.name}),o="systems/ffd20/icons/items/armor/shield-light-metal.png";break;case"cmb":r+=".rollAttack({maneuver:true});",n=game.i18n.format("FFD20.RollCMBMacroName",{actor:i.name}),o="systems/ffd20/icons/feats/improved-grapple.jpg";break;case"cl":{const{bookId:e}=a;r+=`.rollCL("${e}");`,n=game.i18n.format("FFD20.RollCLMacroName",{actor:i.name,book:getBookLabel(e)}),o="systems/ffd20/icons/spells/wind-grasp-eerie-3.jpg";break}case"concentration":{const{bookId:e}=a;r+=`.rollConcentration("${e}");`,n=game.i18n.format("FFD20.RollConcentrationMacroName",{actor:i.name,book:getBookLabel(e)}),o="systems/ffd20/icons/skills/light_01.jpg";break}case"bab":r+=".rollBAB();",n=game.i18n.format("FFD20.RollBABMacroName",{actor:i.name}),o="systems/ffd20/icons/skills/yellow_08.jpg";break;case"initiative":r+=".rollInitiative({ createCombatants: true });",n=game.i18n.format("FFD20.RollInitiativeMacroName",{actor:i.name}),o="systems/ffd20/icons/skills/weapon_41.jpg";break;case"attack":{const{attack:e}=a,t="melee"===e;r+=`.rollAttack({ ranged: ${t?"false":"true"}});`,n=game.i18n.format(t?"FFD20.RollMeleeMacroName":"FFD20.RollRangedMacroName",{actor:i.name}),o=t?"systems/ffd20/icons/skills/weapon_23.jpg":"systems/ffd20/icons/skills/arrow_07.jpg";break}case"abilityScore":{const{ability:e}=a;r+=`.rollAbilityTest("${e}");`,n=game.i18n.format("FFD20.RollAbilityMacroName",{actor:i.name,ability:ffd20.config.abilities[e]}),o="systems/ffd20/icons/skills/blue_35.jpg";break}}if(!n)return;let l=findOldMacro(n,r);return l??=await Macro.create({name:n,type:"script",img:o,command:r,flags:{ffd20:{type:e,actor:t}}},{displaySheet:!1}),game.user.assignHotbarMacro(l,s)},s=Object.freeze(Object.defineProperty({__proto__:null,createActionMacro,createItemMacro,createMiscActorMacro,createSaveMacro,createSkillMacro},Symbol.toStringTag,{value:"Module"}));function hideRollInfo(e,t){const s=e.whisper||[],a=s.length&&e.blind;!s.length||(s.includes(game.user.id)||e.isAuthor&&!a)||(t.find(".dice-formula").text("???"),t.find(".dice-total").text("?"),t.find(".dice").text(""),t.find(".success").removeClass("success"),t.find(".failure").removeClass("failure"))}async function addExtraGMInfo(e,t){if(!game.user.isGM)return;if(!["item","action"].includes(e.type))return;const s=e.system,{identified:a,id:i}=s.item;if(!1===a&&i){const e=t.querySelector(".card-content");if(!e)return;e.insertAdjacentHTML("beforeEnd",await function getIdentifiedBlock(e){const t=e.action?.name&&e.item.name!==e.action?.name;return renderTemplate("systems/ffd20/templates/chat/parts/gm-description.hbs",{...e,hasUniqueActionName:t})}(s))}}function hideGMSensitiveInfo(e,t){if(game.user.isGM)return addExtraGMInfo(e,t);for(const e of t.querySelectorAll("[data-gm-sensitive-uuid]")){e.classList.add("hidden");const t=e.dataset.gmSensitiveUuid;if(!t)continue;let s=fromUuidSync(t);(s instanceof Token||s instanceof TokenDocument)&&(s=s.actor),s?.testUserPermission&&s.testUserPermission(game.user,"OBSERVER")?e.classList.remove("hidden"):e.remove()}const s=!game.settings.get("ffd20","obscureSaveDCs");if(!s)for(const e of t.querySelectorAll(".difficulty-class .threshold.sensitive"))e.remove();if(e.isAuthor)return;const a=ChatMessage.getSpeakerActor(e.speaker);if(!a?.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)){for(const e of t.querySelectorAll(".pf1-link[data-dc][data-sensitive-label]")){for(const t of e.childNodes)"#text"===t.nodeName&&t.remove();e.children.length&&e.append(" "),e.append(e.dataset.sensitiveLabel),delete e.dataset.sensitiveLabel}for(const e of t.querySelectorAll(".gm-sensitive"))e.remove();for(const e of t.querySelectorAll("[data-gm-sensitive-inner]"))s&&"save"===e.dataset.action||(e.textContent=e.dataset.gmSensitiveInner,delete e.dataset["gm-sensitive-inner"]);if(game.settings.get("ffd20","obscureInlineRolls")){const s=t.querySelectorAll(".inline-roll");for(const t of s){if(!t.dataset.roll)continue;let s;try{s=Roll.fromJSON(unescape(t.dataset.roll))}catch(t){console.error(`Inline roll in chat message ${e.id} had invalid data`,t);continue}const a=Roll.defaultImplementation.safeRollSync(""+s.total);t.dataset.roll=escape(JSON.stringify(a)),delete t.dataset.tooltip,t.classList.add("obfuscated")}const a=t.querySelectorAll(".dice-roll .dice-result");for(const e of a){const t=e.querySelectorAll(".roll-total");for(const e of t)e.replaceChildren(...[...e.children].filter((e=>e.classList.contains("total")||"I"===e.tagName))),e.classList.add("obfuscated"),e.classList.remove("has-details"),delete e.dataset.tooltip;const s=e.querySelectorAll(".dice-tooltip");for(const e of s)e.remove()}}}}function alterAmmoRecovery(e,t){const s=e.getFlag("ffd20","ammoRecovery");s&&t.find(".chat-attack .ammo[data-ammo-id]").each(((e,t)=>{const a=t.closest(".chat-attack").dataset.index,i=t.dataset.ammoId,n=s[a]?.[i];if(!n)return;const{recovered:o}=n;$(t).find(".inline-action").each(((e,t)=>{void 0!==o&&(o>0?t.classList.add("recovered"):t.classList.add("recovery-failed"))}))}))}function alterTargetDefense(e,t){const s=e.getFlag("ffd20","targetDefense");if(!s)return;const a=t[0];for(const e of a.querySelectorAll(".attack-targets .target[data-uuid]")){const t=e.dataset.uuid,a=foundry.utils.getProperty(s,t)?.save;if(a)for(const t of e.querySelectorAll("[data-save],[data-saving-throw]")){const e=a[t.dataset.save||t.dataset.savingThrow];Number.isFinite(e)&&(t.querySelector(".value").textContent=e)}}}function hideInvisibleTargets(e,t,s=!1){const a=t.querySelector(".ffd20.chat-card .attack-targets");if(!a)return;if(!canvas.ready){if(s)return;return a.classList.add("hidden"),void(game.settings.get("core","noCanvas")?a.remove():Hooks.once("canvasReady",(()=>hideInvisibleTargets(e,t,!0))))}const i=a.querySelectorAll(".target"),n=Array.from(i).map((e=>({uuid:e.dataset.uuid,elem:e})));let o=!1;for(const e of n){const t=fromUuidSync(e.uuid);if(!t)continue;e.token=t.object;const s=e.token?.isVisible,a=t.actor?.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)??!1;!s&&!a||t.isSecret?e.elem.remove():o=!0}o?a.classList.remove("hidden"):a.remove()}const getTokenByUuid=e=>fromUuidSync(e)?.object;function addTargetCallbacks(e,t){const s=t[0].querySelectorAll(".attack-targets .target[data-uuid]"),_mouseEnterCallback=(e,t)=>getTokenByUuid(t)?._onHoverIn(e,{hoverOutOthers:!1}),_mouseLeaveCallback=(e,t)=>getTokenByUuid(t)?._onHoverOut(e),_imageClickCallback=(e,t)=>{e.preventDefault();const s=getTokenByUuid(t);if(!s?.actor.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER))return;const a=e.shiftKey;(!a||!s.controlled&&a)&&ffd20.utils.chat.panToToken(s),s.actor.isOwner&&(s.controlled?a&&s.release():s.control({releaseOthers:!a}))};for(let a of s){const s=a.dataset.uuid;if(!fromUuidSync(s))continue;const i=a.querySelector(".target-image");i.addEventListener("pointerenter",(e=>_mouseEnterCallback(e,s)),{passive:!0}),i.addEventListener("pointerleave",(e=>_mouseLeaveCallback(e,s)),{passive:!0}),i.addEventListener("click",(e=>_imageClickCallback(e,s))),a=$(a),a.find(".ac").on("click",(a=>{a.preventDefault();const i=fromUuidSync(s);i?.actor&&ffd20.utils.chat.targetACClick(e,t,i.actor,a)})),a.find(".saving-throws .click").on("click",(a=>{a.preventDefault();const i=fromUuidSync(s);i?.actor&&ffd20.utils.chat.targetSavingThrowClick(e,t,i,i.actor,a)}))}}const a=Object.freeze(Object.defineProperty({__proto__:null,addExtraGMInfo,addListeners:function addListeners(e,t){t.querySelector(".item-name")?.addEventListener("click",(t=>ffd20.utils.chat.onToggleDescription(e,t)));for(const s of t.querySelectorAll("button[data-action], a[data-action]"))s.addEventListener("click",(t=>ffd20.utils.chat.onButton(e,t)))},addTargetCallbacks,alterAmmoRecovery,alterTargetDefense,hideGMSensitiveInfo,hideInvisibleTargets,hideRollInfo,onButton:async function onButton(e,t){t.preventDefault();const s=t.currentTarget,a=s.dataset.action,getLinkedItem=()=>{const t=e.itemSource;if(!t)throw Error("Associated item not found");return t};switch(a){case"applyDamage":{let a,i;e.system.config?.nonlethal&&(a=!0),e.system.config?.manadamage&&(i=!0);const n=parseInt(s.dataset.value);if(isNaN(n))return void console.warn("Invalid damage value:",n,{button:s});const o=parseInt(s.closest("[data-index]")?.dataset.index),r=s.dataset.type,l=e.systemRolls?.attacks?.[o],c="critical"===r,d=[],addInstances=e=>{if(e)for(const t of e){const e=new ffd20.models.action.DamagePartModel(t.damageType.toObject());e.value=t.total,d.push(e)}};l&&(addInstances(l.damage),c&&addInstances(l.critDamage)),ffd20.documents.actor.ActorPF.applyDamage(n,{asNonlethal:a,asManaDamage:i,event:t,element:s,message:e,reference:e.uuid,isCritical:c,critMult:c?e.system.config.critMult??0:0,instances:d}),s.disabled=!1;break}case"recoverAmmo":case"forceRecoverAmmo":{const t=e.itemSource;if(!t?.isOwner)return;const i=s.closest(".chat-attack").dataset.index;if(!i)throw Error("Attack index not found");const n=s.dataset.ammoId||s.closest(".ammo")?.dataset.ammoId,o=t.actor.items.get(n);if(!o)return void ui.notifications.error(game.i18n.format("FFD20.Error.ItemNotFound",{id:n}));if(o.getFlag("ffd20","abundant"))return;const r=s.dataset.ammoQuantity||s.closest(".ammo")?.dataset.ammoQuantity||1;if(0==r)return;const l=e.getFlag("ffd20","ammoRecovery"),c=l?.[i]?.[n];if(!0===c?.failed)return;if(void 0!==c?.recovered)return;let d=100;"recoverAmmo"===a&&(d=o.system.recoverChance??50);let u=0;if(d>0)for(let e=0;e<r;e++){100*Math.random()<=d&&(u+=1)}const m=[];return u>0&&m.push(o.addCharges(u)),m.push(e.setFlag("ffd20","ammoRecovery",{[i]:{[n]:{recovered:u}}})),await Promise.all(m),ui.notifications.info(game.i18n.format("FFD20.RecoveredAmmo",{count:u})),!0}case"save":{const a=s.dataset.save||s.dataset.type,i=s.dataset.as,n=e.system.save?.dc??(s.dataset.dc?parseInt(s.dataset.dc):void 0);let o;if("speaker"===i?o=[ChatMessage.getSpeakerActor(e.speaker)]:(o=canvas.tokens.controlled.map((e=>e.actor)),0==o.length&&game.user.character&&(o=[game.user.character])),o=o.filter((e=>!!e)),!o.length)return void ui.notifications.warn("FFD20.Warning.NoActorSelected",{localize:!0});let r=!1,l=!1;for(const s of o)s?.rollSavingThrow(a,{event:t,noSound:r,dc:n,reference:e.uuid}).catch((e=>{throw l||(ui.notifications.error("FFD20.Error.NoSave",{localize:!0,console:!1}),l=!0),Error("Failed to roll saving throw",{cause:e})})),r=!0;break}case"concentration":{const t=getLinkedItem();t.actor.rollConcentration(t.system.spellbook,{item:t,reference:e.uuid,dc:t.getConcentrationDC("defensive")});break}case"caster-level-check":{const t=getLinkedItem();t.actor.rollCL(t.system.spellbook,{item:t,reference:e.uuid});break}case"journal":case"open-compendium-entry":{const e=s.dataset.uuid||s.dataset.compendiumEntry;ffd20.utils.openJournal(e);break}}},onToggleDescription:function onToggleDescription(e,t){t.preventDefault();const s=t.currentTarget.closest(".message-content"),a=s.querySelector(".card-content");e._collapsedDescription=a.classList.toggle("hidden");const i=s.closest(".chat-popout");ui.windows[i?.dataset.appid]?.setPosition()},panToToken:function panToToken(e,t=250){canvas.animatePan({...e.center,duration:t})},targetACClick:async function targetACClick(e,t,s,a){try{await s.displayDefenseCard({rollMode:"selfroll"})}catch(e){throw ui.notifications.error("FFD20.Error.NoDefenseCard",{localize:!0,console:!1}),Error("Could not display defense card",{cause:e})}},targetSavingThrowClick:async function targetSavingThrowClick(e,t,s,a,i){const n=i.currentTarget,o=n.dataset.save||n.dataset.savingThrow,r=e.system.save?.dc;a.rollSavingThrow(o,{event:i,dc:r,reference:e.uuid})}},Symbol.toStringTag,{value:"Module"}));class ActorBasePF extends Actor{static getDefaultArtwork(e){const t=super.getDefaultArtwork(e),s=ffd20.config.defaultIcons.actors[e?.type];return s&&(t.img=s,t.texture.src=s),t}reset(){this._itemTypes=null,this._rollData=null,this._initialized=!1,super.reset()}_initialize(e){super._initialize(e),this._initialized=!0}getItemByTag(e){return this.items.find((t=>t.system.tag===e))}_itemTypes;get itemTypes(){if(this._itemTypes)return this._itemTypes;if(this._itemTypes=super.itemTypes,this._itemTypes.base.getName)return this._itemTypes;for(const e of Object.values(this._itemTypes))Object.defineProperties(e,{getName:{value:function(e){return this.find((t=>t.name===e))}},getId:{value:function(e){return this.find((t=>t.system.tag===e))}}});return this._itemTypes}get activeOwner(){return game.users.filter((e=>e.active&&!e.isGM)).filter((e=>this.testUserPermission(e,"OWNER"))).sort(((e,t)=>e.id>t.id?1:-1))[0]??null??game.users.activeGM}getCombatants(e=game.combat){return e?.combatants.filter((e=>e.actor===this))??[]}get sharesVision(){const e=this.getFlag("ffd20","visionSharing");return!!e&&(e.users?.[game.user.id]??e.default??!1)}get _effectsWithDuration(){const e=[];for(const t of this.allApplicableEffects())t.active&&t._hasDuration&&e.push(t);return e}async toggleStatusEffect(e,{active:t,overlay:s=!1,interaction:a}={}){const i=CONFIG.statusEffects.find((t=>t.id===e));if(i?._id)return super.toggleStatusEffect(e,{active:t,overlay:s});const[n,o]=e?.split("buff-")??[];if(o){const e=this.items.get(o);if(!e)throw Error("Buff not found to toggle: "+o);const s=e.activeState,a=t??!s;if(a===s)return;return await e.setActive(a),a}if(ffd20.registry.conditions.get(e)&&this.setCondition){let a=t;const i=this.statuses.has(e);return s&&!i&&(a={flags:{core:{overlay:!0}}}),void 0!==a?this.setCondition(e,a):this.toggleCondition(e)}return super.toggleStatusEffect(e,{active:t,overlay:s})}getConditionImmunities(){const e=this.system.traits?.ci?.total??[],t=new Set([...e]),s={confuse:["confused"],daze:["dazed"],dazzle:["dazzled"],fatigue:["fatigued"],fear:ffd20.registry.conditions.conditionsInTrack("fear"),sicken:["sickened"],paralyze:["paralyzed"],petrify:["petrified"],stun:["stunned"]};for(const[e,a]of Object.entries(s))if(t.has(e))for(const e of a)t.add(e);return t}getInitiativeOptions(){return{}}expireActiveEffects(){}getMovement(e){return this.system.getMovement?.(e)}}const i=new Proxy(ActorBasePF,{construct(e,t){const s=t[0]?.type;return new(CONFIG.Actor.documentClasses[s]??ActorBasePF)(...t)}});class ItemBasePF extends Item{static getDefaultArtwork(e){const t=super.getDefaultArtwork(e),s=ffd20.config.defaultIcons.items[e?.type];return s&&(t.img=s),t}static async createDialog(e={},t={},{folders:s,types:a,template:i,context:n,renderOptions:o,...r}={}){const l={top:"position",left:"position",width:"position",height:"position",scale:"position",zIndex:"position",title:"window",id:"",classes:"",jQuery:""};for(const[e,s]of Object.entries(t))if(e in l){game.release.generation>=13&&foundry.utils.logCompatibilityWarning("The ClientDocument.createDialog signature has changed. It now accepts database operation options in its second parameter, and options for DialogV2.prompt in its third parameter.",{since:13,until:15,once:!0});const a=l[e];a?foundry.utils.setProperty(r,`${a}.${e}`,s):r[e]=s,delete t[e]}return i??="systems/ffd20/templates/widgets/item-create.hbs",r={creationData:e,folders:s,context:n,types:a,template:i,...r,createOptions:t},ffd20.applications.item.CreateDialog.waitPrompt(r,o)}static defaultName({type:e,subType:t,parent:s,pack:a}={}){const i=this.metadata.name;let n;n=s?s.getEmbeddedCollection(i):a?game.packs.get(a):game.collections.get(i);const o=new Set;for(const e of n)o.add(e.name);let r=this.metadata.label;if(e&&this.hasTypeData){let s;if(t&&CONFIG.Item.documentClasses[e]?.system?.subtypeName){const a=`FFD20.Subtypes.Item.${e}.${t}.Single`;game.i18n.has(a)&&(s=a)}s||=CONFIG[i].typeLabels?.[e],s&&game.i18n.has(s)&&(r=s)}const l=game.i18n.localize(r);let c=l,d=1;for(;o.has(c);)c=`${l} (${++d})`;return c}static async _onCreateOperation(e,t,s){if(await super._onCreateOperation(e,t,s),!s.isSelf)return;const a=t.parent?.syntheticActor??t.parent;if(!(a instanceof Actor))return;const i=[];for(const s of e){const e=t.data.find((e=>e._id===s.id));if(e)switch(s.type){case"class":{if(s.system.casting?.type){const e={...s.system.casting,class:s.system.tag},t=a.createSpellbook(e);i.push(t)}const e=s.system.level??0;if(e>0){const t=s._onLevelChange(0,e,{event:"create"});i.push(t)}break}case"buff":if(s.isActive){const t=s._updateTrackingEffect(e);i.push(t)}break;case"race":if(s.system.speeds){const e={};for(const t of ffd20.const.movementKeys)e[t]={base:s.system.speeds[t]??null};e.fly&&(e.fly.maneuverability=s.system.speeds.flyManeuverability||"average");const t=a.update({"system.attributes.speed":e});i.push(t)}}}if(!0!==t._pf1NoSupplements){const t=this._createSupplements(e,a);i.push(t)}await Promise.all(i)}static async _onUpdateOperation(e,t,s){if(await super._onUpdateOperation(e,t,s),!s.isSelf)return;const a=t.parent?.syntheticActor??t.parent;if(!(a instanceof Actor))return;const i=[];for(const s of e){const e=t.updates.find((e=>e._id===s.id));if(e)switch(s.type){case"class":{const a=t.ffd20?.item?.[s.id]?.oldLevel??0,n=e.system?.level??0;if(n!==a){const e=s._onLevelChange(a,n,{event:"update"});i.push(e)}break}case"buff":{const t=s._updateTrackingEffect(e);i.push(t);break}case"race":if(t._pf1SizeChanged){const e=a.update({"system.traits.size":s.system.size});i.push(e)}}}await Promise.all(i)}static async _onDeleteOperation(e,t,s){if(await super._onDeleteOperation(e,t,s),!s.isSelf)return;const a=t.parent?.syntheticActor??t.parent;if(!(a instanceof Actor))return;const i=[];for(const t of e)switch(t.type){case"class":{const e=t.system.level??0;if(e>0){const s=t._onLevelChange(e,0,{event:"delete"});i.push(s)}const s=t.system.tag;if(!s||!t.system.casting?.type)continue;const n=a.system.attributes.spells.spellbooks??{},o=Object.entries(n).find((([e,t])=>!!t.class&&t.class===s));if(void 0===o)continue;const[r,l]=o;if(!l.inUse)continue;const c=a.update({[`system.attributes.spells.spellbooks.${r}.inUse`]:!1});i.push(c);break}case"race":if(0===a.itemTypes.race.length){const e=a.update({"system.attributes.speed":{"land.base":30,"fly.base":0,"fly.maneuverability":"average","swim.base":0,"climb.base":0,"burrow.base":0}});i.push(e)}}await Promise.all(i)}static async _createSupplements(e,t){const s=new Collection;let a=performance.now();const collect=async(e,t,i=0)=>{const n=e.system.links?.supplements??[];t??=e.system.class;const o=performance.now();o-a>=2e3&&(console.debug("Fetching",n.length,"supplements for",e.name),a=o);const r=[];for(const a of n){const{uuid:i}=a;if(!i)continue;const n=await fromUuid(i);if(!n){console.warn("Supplement",i,"not found for",e.name,e);continue}const o=game.items.fromCompendium(n,{clearFolder:!0});foundry.utils.setProperty(o,"flags.ffd20.source",i);const l=s.get(i);l?l.count+=1:(s.set(i,{parent:e,item:n,data:o,count:1,classLink:t,uuid:i}),r.push(o))}if(r.length)if(i>3)console.warn("Stopping collecting supplements deeper than 3 layers");else if(s.size>100&&r.length)console.warn(`Too many supplements (${s.size}), stopping collecting more`);else for(const e of r)await collect(e,t,i+1)};for(const t of e)await collect(t);const i={},n=[];for(const e of s){const{item:s,data:a,count:o}=e;s.isPhysical&&a.system.quantity>0&&(a.system.quantity*=o),e.classLink&&"feat"===s.type&&"classFeat"===s.system.subType&&(a.system.class=e.classLink);const r=t.itemTypes[a.type]??[];i[a.type]??=r.length?r.reduce(((e,t)=>Math.max(t.sort||0,e)),-Number.MIN_SAFE_INTEGER)+CONST.SORT_INTEGER_DENSITY:0,a.sort=i[a.type],i[a.type]+=CONST.SORT_INTEGER_DENSITY,n.push(a)}const o=await t.createEmbeddedDocuments("Item",n,{_pf1NoSupplements:!0,render:!1}),r=new Collection,l=[...e,...o];for(const e of o){const s=ffd20.utils.internal.uniformUuid(e.getFlag("ffd20","source")),a=l.find((e=>e.system.links?.supplements?.some((e=>ffd20.utils.internal.uniformUuid(e.uuid)===s))));if(!a){console.warn(e.name,"parent not found!",s,l);continue}let i=r.get(a.id);i||(i={system:{links:{children:[]}}},i._id=a.id,r.set(a.id,i)),i.system.links.children.push({uuid:e.getRelativeUUID(t)})}await t.updateEmbeddedDocuments("Item",Array.from(r))}getName(e=!1){return this.name}get isActive(){return!0}get activeState(){return this.isActive}async setActive(e,t){throw Error(`Item type ${this.type} does not support ItemBasePF#setActive`)}get canUse(){return this.isActive}getEmbeddedDocument(e,t,s){switch(e){case ffd20.components.ItemAction.metadata.name:return this.actions?.get(t);case ffd20.components.ItemChange.metadata.name:return this.changes?.get(t)}return super.getEmbeddedDocument(e,t,s)}}const n=new Proxy(ItemBasePF,{construct(e,t){const s=t[0]?.type;return new(CONFIG.Item.documentClasses[s]??ItemBasePF)(...t)}});class PF1Tour extends Tour{apps=[];get previousStep(){return this.hasPrevious?this.steps[this.stepIndex-1]:void 0}get sheetInDisplay(){return Object.values(ui.windows).find((e=>e instanceof ActorSheet))}get StepsEnum(){return this.steps.reduce(((e,t)=>(e[t.id.replaceAll(/-/g,"_").toUpperCase()]=t.id,e)),{})}getStepIndexById(e){return this.steps.findIndex((t=>t.id===e))}async openCompendiumBrowser(e,t={}){const s=ffd20.applications.compendiums[e];if(!s)throw Error(`Compendium "${e}" not found`);return await s._render(!0,{focus:!0,...t}),this.apps.push(s),s}async openCompendium(e,t={}){const s=game.packs.get(e,{strict:!0}),a=s.apps.find((e=>e instanceof s.applicationClass));return await a._render(!0,{focus:!0,...t}),this.apps.push(a),s}async closeCompendium(){const e=this.apps.filter((e=>e instanceof ffd20.applications.compendiumBrowser.CompendiumBrowser||e instanceof Compendium));for(const t of e)this._debug(`Closing \`${t.constructor.name}\` ${t.id}`),await t.close()}_log(e,t="log",...s){console[t]('[Tour Step "%s.%s.%s"]: '+e,this.namespace,this.id,this.currentStep?.id,...s)}_debug(e,...t){this._log(e,"debug",...t)}_warn(e,...t){this._log(e,"warn",...t)}expandCompendiumFolder(e){const t=game.packs.get(e,{strict:!0}).folder;if(!t)return this._debug("Couldn't find the folder ID for the Basic Monsters compendium. It could be that the compendium isn't in a folder."),null;const clickFolder=e=>{if(!e.expanded){const t=document.querySelector(`li.directory-item.folder[data-uuid="Folder.${e.id}"]`);t?.querySelector("header")?.click()}e.folder&&clickFolder(e.folder)};return clickFolder(t),t}async _preStep(){this.currentStep.sheetTab&&(this._debug(`(${this._preStep.name}) Activating ${this.currentStep.sheetTab.tabName} (${this.currentStep.sheetTab.group}) tab`),this.sheetInDisplay?.activateTab(this.currentStep.sheetTab.tabName,{group:this.currentStep.sheetTab.group})),await super._preStep()}}class PF1ActorSheetTour extends PF1Tour{async openSheet(e={}){const t=game.packs.get(this.config.compendiumId,{strict:!0}),s=await t.getDocument(this.config.actorId);if(!s)throw Error(`Actor with ID ${this.config.actorId} not found in compendium ${this.config.compendiumId}`);const a=s.sheet;return await a._render(!0,{focus:!0,options:e}),this.apps.push(a),a}async start(){ui.sidebar.tabs.compendium.activate(),await super.start()}async previous(){switch(this.previousStep?.id){case this.StepsEnum.GO_TO_BASIC_MONSTERS:this._debug(`(${this.previous.name}) Closing Basic Monsters compendium to return to the compendium tab`),await this.closeCompendium(),await this._postStep();break;case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:this._debug(`(${this.previous.name}) Closing sheet to return to the compendium`),await(this.sheetInDisplay?.close());break;default:this.previousStep||this._warn(`(${this.previous.name}) The previous step to ${this.currentStep?.id} doesn't seem exist.`)}await super.previous()}exit(){this.apps.forEach((e=>e.close())),super.exit()}async _preStep(){switch(this.stepIndex>=this.getStepIndexById(this.StepsEnum.HIGHLIGHT_SHEET)&&(this._debug(`(${this._preStep.name}) Opening character sheet for overview`),await this.openSheet(this.config.actorId)),this.currentStep?.id){case this.StepsEnum.GO_TO_BASIC_MONSTERS:this._debug(`(${this._preStep.name}) Expanding Actors folder`),this.expandCompendiumFolder(this.config.compendiumId);break;case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:this._debug(`(${this._preStep.name}) Rendering Basic Monsters compendium`),await this.openCompendium(this.config.compendiumId);break;case this.StepsEnum.SPELLBOOKS_CONFIGURATION:this._debug(`(${this._preStep.name}) Opening primary spellbook configuration`),document.querySelector(this.currentStep?.selector)?.click();break;default:if(!this.currentStep?.id)return void this._warn(`(${this._preStep.name}) The current step doesn't seem to have an ID.`)}await super._preStep()}async _postStep(){switch(await super._postStep(),this.currentStep?.id){case this.StepsEnum.HIGHLIGHT_STREET_MAGICIAN_IN_COMPENDIUM:this._debug(`(${this._postStep.name}) Closing Basic Monsters compendium`),this.closeCompendium();break;case this.StepsEnum.SPELLBOOKS_CONFIGURATION:this._debug(`(${this._postStep.name}) Closing primary spellbook configuration`),this.targetElement?.click();break;default:if(!this.currentStep?.id)return void this._warn(`(${this._postStep.name}) The current step doesn't seem to have an ID.`)}}async complete(){this._debug(`(${this.complete.name}) Completing tour`),this.apps.forEach((e=>e.close())),await super.complete()}}Hooks.once("ready",(async function registerPF1Tours(){game.tours.register("ffd20","actorSheet",await PF1ActorSheetTour.fromJSON("systems/ffd20/tours/actor-sheet-tour.json"))}));const o=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),r=new Set(["special","free","aoo","attack","move","nonaction","passive","standard","swift","reaction","immediate"]),l={rate:{pp:1e3,gp:100,sp:10},standard:"gp",base:"cp",get standardRate(){return this.rate[this.standard]||1}},c={castsPerDay:{prepared:{low:[[1/0],[1/0],[1/0],[1/0,0],[1/0,1],[1/0,1],[1/0,1,0],[1/0,1,1],[1/0,2,1],[1/0,2,1,0],[1/0,2,1,1],[1/0,2,2,1],[1/0,3,2,1,0],[1/0,3,2,1,1],[1/0,3,2,2,1],[1/0,3,3,2,1],[1/0,4,3,2,1],[1/0,4,3,2,2],[1/0,4,3,3,2],[1/0,4,4,3,3]],med:[[1/0,1],[1/0,2],[1/0,3],[1/0,3,1],[1/0,4,2],[1/0,4,3],[1/0,4,3,1],[1/0,4,4,2],[1/0,5,4,3],[1/0,5,4,3,1],[1/0,5,4,4,2],[1/0,5,5,4,3],[1/0,5,5,4,3,1],[1/0,5,5,4,4,2],[1/0,5,5,5,4,3],[1/0,5,5,5,4,3,1],[1/0,5,5,5,4,4,2],[1/0,5,5,5,5,4,3],[1/0,5,5,5,5,5,4],[1/0,5,5,5,5,5,5]],high:[[1/0,1],[1/0,2],[1/0,2,1],[1/0,3,2],[1/0,3,2,1],[1/0,3,3,2],[1/0,4,3,2,1],[1/0,4,3,3,2],[1/0,4,4,3,2,1],[1/0,4,4,3,3,2],[1/0,4,4,4,3,2,1],[1/0,4,4,4,3,3,2],[1/0,4,4,4,4,3,2,1],[1/0,4,4,4,4,3,3,2],[1/0,4,4,4,4,4,3,2,1],[1/0,4,4,4,4,4,3,3,2],[1/0,4,4,4,4,4,4,3,2,1],[1/0,4,4,4,4,4,4,3,3,2],[1/0,4,4,4,4,4,4,4,3,3],[1/0,4,4,4,4,4,4,4,4,4]]},spontaneous:{low:[[1/0],[1/0],[1/0],[1/0,1],[1/0,1],[1/0,1],[1/0,1,1],[1/0,1,1],[1/0,2,1],[1/0,2,1,1],[1/0,2,1,1],[1/0,2,2,1],[1/0,3,2,1,1],[1/0,3,2,1,1],[1/0,3,2,2,1],[1/0,3,3,2,1],[1/0,4,3,2,1],[1/0,4,3,2,2],[1/0,4,3,3,2],[1/0,4,4,3,2]],med:[[1/0,1],[1/0,2],[1/0,3],[1/0,3,1],[1/0,4,2],[1/0,4,3],[1/0,4,3,1],[1/0,4,4,2],[1/0,5,4,3],[1/0,5,4,3,1],[1/0,5,4,4,2],[1/0,5,5,4,3],[1/0,5,5,4,3,1],[1/0,5,5,4,4,2],[1/0,5,5,5,4,3],[1/0,5,5,5,4,3,1],[1/0,5,5,5,4,4,2],[1/0,5,5,5,5,4,3],[1/0,5,5,5,5,5,4],[1/0,5,5,5,5,5,5]],high:[[1/0,3],[1/0,4],[1/0,5],[1/0,6,3],[1/0,6,4],[1/0,6,5,3],[1/0,6,6,4],[1/0,6,6,5,3],[1/0,6,6,6,4],[1/0,6,6,6,5,3],[1/0,6,6,6,6,4],[1/0,6,6,6,6,5,3],[1/0,6,6,6,6,6,4],[1/0,6,6,6,6,6,5,3],[1/0,6,6,6,6,6,6,4],[1/0,6,6,6,6,6,6,5,3],[1/0,6,6,6,6,6,6,6,4],[1/0,6,6,6,6,6,6,6,5,3],[1/0,6,6,6,6,6,6,6,6,4],[1/0,6,6,6,6,6,6,6,6,6]]},hybrid:{high:[[1/0,2],[1/0,3],[1/0,4],[1/0,4,2],[1/0,4,3],[1/0,4,4,2],[1/0,4,4,3],[1/0,4,4,4,2],[1/0,4,4,4,3],[1/0,4,4,4,4,2],[1/0,4,4,4,4,3],[1/0,4,4,4,4,4,2],[1/0,4,4,4,4,4,3],[1/0,4,4,4,4,4,4,2],[1/0,4,4,4,4,4,4,3],[1/0,4,4,4,4,4,4,4,2],[1/0,4,4,4,4,4,4,4,3],[1/0,4,4,4,4,4,4,4,4,2],[1/0,4,4,4,4,4,4,4,4,3],[1/0,4,4,4,4,4,4,4,4,4]]},prestige:{low:[[1/0,1],[1/0,2],[1/0,3],[1/0,3,1],[1/0,4,2],[1/0,4,3],[1/0,4,3,1],[1/0,4,4,2],[1/0,5,4,3],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1],[1/0,5,4,3,1]]}},spellsPreparedPerDay:{prepared:{low:[[null],[null],[null],[null,0],[null,1],[null,1],[null,1,0],[null,1,1],[null,2,1],[null,2,1,0],[null,2,1,1],[null,2,2,1],[null,3,2,1,0],[null,3,2,1,1],[null,3,2,2,1],[null,3,3,2,1],[null,4,3,2,1],[null,4,3,2,2],[null,4,3,3,2],[null,4,4,3,3]],med:[[3,1],[4,2],[4,3],[4,3,1],[4,4,2],[5,4,3],[5,4,3,1],[5,4,4,2],[5,5,4,3],[5,5,4,3,1],[5,5,4,4,2],[5,5,5,4,3],[5,5,5,4,3,1],[5,5,5,4,4,2],[5,5,5,5,4,3],[5,5,5,5,4,3,1],[5,5,5,5,4,4,2],[5,5,5,5,5,4,3],[5,5,5,5,5,5,4],[5,5,5,5,5,5,5]],high:[[3,1],[4,2],[4,2,1],[4,3,2],[4,3,2,1],[4,3,3,2],[4,4,3,2,1],[4,4,3,3,2],[4,4,4,3,2,1],[4,4,4,3,3,2],[4,4,4,4,3,2,1],[4,4,4,4,3,3,2],[4,4,4,4,4,3,2,1],[4,4,4,4,4,3,3,2],[4,4,4,4,4,4,3,2,1],[4,4,4,4,4,4,3,3,2],[4,4,4,4,4,4,4,3,2,1],[4,4,4,4,4,4,4,3,3,2],[4,4,4,4,4,4,4,4,3,3],[4,4,4,4,4,4,4,4,4,4]]},spontaneous:{low:[[2],[3],[4],[4,2],[5,3],[5,4],[6,4,2],[6,4,3],[6,5,4],[6,5,4,2],[6,5,4,3],[6,6,5,4],[6,6,5,4,2],[6,6,5,4,3],[6,6,6,5,4],[6,6,6,5,4],[6,6,6,5,4],[6,6,6,6,5],[6,6,6,6,5],[6,6,6,6,5]],med:[[4,2],[5,3],[6,4],[6,4,2],[6,4,3],[6,4,4],[6,5,4,2],[6,5,4,3],[6,5,4,4],[6,5,5,4,2],[6,6,5,4,3],[6,6,5,4,4],[6,6,5,5,4,2],[6,6,6,5,4,3],[6,6,6,5,4,4],[6,6,6,5,5,4,2],[6,6,6,6,5,4,3],[6,6,6,6,5,4,4],[6,6,6,6,5,5,4],[6,6,6,6,6,5,5]],high:[[4,2],[5,2],[5,3],[6,3,1],[6,4,2],[7,4,2,1],[7,5,3,2],[8,5,3,2,1],[8,5,4,3,2],[9,5,4,3,2,1],[9,5,5,4,3,2],[9,5,5,4,3,2,1],[9,5,5,4,4,3,2],[9,5,5,4,4,3,2,1],[9,5,5,4,4,4,3,2],[9,5,5,4,4,4,3,2,1],[9,5,5,4,4,4,3,3,2],[9,5,5,4,4,4,3,3,2,1],[9,5,5,4,4,4,3,3,3,2],[9,5,5,4,4,4,3,3,3,3]]},hybrid:{high:[[4,2],[5,2],[5,3],[6,3,1],[6,4,2],[7,4,2,1],[7,5,3,2],[8,5,3,2,1],[8,5,4,3,2],[9,5,4,3,2,1],[9,5,5,4,3,2],[9,5,5,4,3,2,1],[9,5,5,4,4,3,2],[9,5,5,4,4,3,2,1],[9,5,5,4,4,4,3,2],[9,5,5,4,4,4,3,2,1],[9,5,5,4,4,4,3,3,2],[9,5,5,4,4,4,3,3,2,1],[9,5,5,4,4,4,3,3,3,2],[9,5,5,4,4,4,3,3,3,3]]},prestige:{low:[[null,2],[null,3],[null,4],[null,4,2],[null,4,3],[null,4,4],[null,5,4,2],[null,5,4,3],[null,5,4,4],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2],[null,5,5,4,2]]}}},d={crn:"FFD20.SpellSchools.core.Chronomancy",drk:"FFD20.SpellSchools.core.Dark",ele:"FFD20.SpellSchools.core.Elemental",enf:"FFD20.SpellSchools.core.Enfeebling",enh:"FFD20.SpellSchools.core.Enhancing",heal:"FFD20.SpellSchools.core.Healing",ill:"FFD20.SpellSchools.core.Illusion",lit:"FFD20.SpellSchools.core.Light",nec:"FFD20.SpellSchools.core.Necromancy",nel:"FFD20.SpellSchools.core.NonElemental",sum:"FFD20.SpellSchools.core.Summoning",uni:"FFD20.SpellSchools.core.Universal",misc:"FFD20.SpellSchools.core.Misc"},u={crn:[],drk:[],ele:[],enf:[],enh:[],heal:[],ill:[],lit:[],nec:[],nel:[],sum:[],uni:[],misc:[],multi:Object.keys(d)},m={charm:"FFD20.SpellSubschools.charm",compulsion:"FFD20.SpellSubschools.compulsion",divination:"FFD20.SpellSubschools.divination",figment:"FFD20.SpellSubschools.figment",glamer:"FFD20.SpellSubschools.glamer",pattern:"FFD20.SpellSubschools.pattern",phantasm:"FFD20.SpellSubschools.phantasm",polymorph:"FFD20.SpellSubschools.polymorph",scrying:"FFD20.SpellSubschools.scrying",shadow:"FFD20.SpellSubschools.shadow",teleportation:"FFD20.SpellSubschools.teleportation"},p={crn:Object.keys(m),drk:Object.keys(m),ele:Object.keys(m),enf:Object.keys(m),enh:Object.keys(m),heal:Object.keys(m),ill:Object.keys(m),lit:Object.keys(m),nec:Object.keys(m),nel:Object.keys(m),sum:Object.keys(m),uni:Object.keys(m),misc:Object.keys(m),multi:Object.keys(m)},h={acpA:{label:"FFD20.ACPArmor",category:"misc",sort:1e4,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},acpS:{label:"FFD20.ACPShield",category:"misc",sort:11e3,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},mDexA:{label:"FFD20.MaxDexArmor",category:"misc",sort:2e4},mDexS:{label:"FFD20.MaxDexShield",category:"misc",sort:21e3},str:{label:"FFD20.AbilityStr",category:"ability",sort:3e4},dex:{label:"FFD20.AbilityDex",category:"ability",sort:31e3},con:{label:"FFD20.AbilityCon",category:"ability",sort:32e3},int:{label:"FFD20.AbilityInt",category:"ability",sort:33e3},wis:{label:"FFD20.AbilityWis",category:"ability",sort:34e3},cha:{label:"FFD20.AbilityCha",category:"ability",sort:35e3},strMod:{label:"FFD20.AbilityStrMod",category:"ability",sort:4e4},dexMod:{label:"FFD20.AbilityDexMod",category:"ability",sort:41e3},conMod:{label:"FFD20.AbilityConMod",category:"ability",sort:42e3},intMod:{label:"FFD20.AbilityIntMod",category:"ability",sort:43e3},wisMod:{label:"FFD20.AbilityWisMod",category:"ability",sort:44e3},chaMod:{label:"FFD20.AbilityChaMod",category:"ability",sort:45e3},strPen:{label:"FFD20.AbilityStrPen",category:"ability",sort:5e4},dexPen:{label:"FFD20.AbilityDexPen",category:"ability",sort:51e3},conPen:{label:"FFD20.AbilityConPen",category:"ability",sort:52e3},intPen:{label:"FFD20.AbilityIntPen",category:"ability",sort:53e3},wisPen:{label:"FFD20.AbilityWisPen",category:"ability",sort:54e3},chaPen:{label:"FFD20.AbilityChaPen",category:"ability",sort:55e3},carryStr:{label:"FFD20.CarryStrength",category:"misc",sort:6e4,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},carryMult:{label:"FFD20.CarryMultiplier",category:"misc",sort:61e3,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},size:{label:"FFD20.Size",category:"misc",sort:63e3,filters:{actor:{exclude:["haunt","vehicle","trap"]}},simple:!0},reach:{label:"FFD20.BuffTarReach",category:"misc",sort:65e3},ageCategory:{label:"FFD20.AgeCategory.Base",category:"misc",sort:62e3,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},ageCategoryPhysical:{label:"FFD20.AgeCategory.Physical",category:"misc",sort:62250,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},ageCategoryMental:{label:"FFD20.AgeCategory.Mental",category:"misc",sort:62500,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},skills:{label:"FFD20.BuffTarAllSkills",category:"skills",sort:75e3,deferred:!0,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},unskills:{label:"FFD20.BuffTarUntrainedSkills",category:"skills",sort:75010,deferred:!0,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},strSkills:{label:"FFD20.BuffTarStrSkills",category:"skills",sort:80100,deferred:!0},dexSkills:{label:"FFD20.BuffTarDexSkills",category:"skills",sort:80200,deferred:!0},conSkills:{label:"FFD20.BuffTarConSkills",category:"skills",sort:80300,deferred:!0},intSkills:{label:"FFD20.BuffTarIntSkills",category:"skills",sort:80400,deferred:!0},wisSkills:{label:"FFD20.BuffTarWisSkills",category:"skills",sort:80500,deferred:!0},chaSkills:{label:"FFD20.BuffTarChaSkills",category:"skills",sort:80600,deferred:!0},allChecks:{label:"FFD20.BuffTarAllAbilityChecks",category:"abilityChecks",sort:81e3,deferred:!0},strChecks:{label:"FFD20.BuffTarStrChecks",category:"abilityChecks",sort:81100,deferred:!0},dexChecks:{label:"FFD20.BuffTarDexChecks",category:"abilityChecks",sort:81200,deferred:!0},conChecks:{label:"FFD20.BuffTarConChecks",category:"abilityChecks",sort:81300,deferred:!0},intChecks:{label:"FFD20.BuffTarIntChecks",category:"abilityChecks",sort:81400,deferred:!0},wisChecks:{label:"FFD20.BuffTarWisChecks",category:"abilityChecks",sort:81500,deferred:!0},chaChecks:{label:"FFD20.BuffTarChaChecks",category:"abilityChecks",sort:81600,deferred:!0},landSpeed:{label:"FFD20.Movement.Mode.land",category:"speed",sort:9e4},climbSpeed:{label:"FFD20.Movement.Mode.climb",category:"speed",sort:91e3},swimSpeed:{label:"FFD20.Movement.Mode.swim",category:"speed",sort:92e3},burrowSpeed:{label:"FFD20.Movement.Mode.burrow",category:"speed",sort:93e3},flySpeed:{label:"FFD20.Movement.Mode.fly",category:"speed",sort:94e3},allSpeeds:{label:"FFD20.BuffTarAllSpeeds",category:"speed",sort:95e3},ac:{label:"FFD20.BuffTarACGeneric",category:"defense",sort:1e5},aac:{label:"FFD20.BuffTarACArmor",category:"defense",sort:101e3},sac:{label:"FFD20.BuffTarACShield",category:"defense",sort:102e3},nac:{label:"FFD20.BuffTarACNatural",category:"defense",sort:103e3},tac:{label:"FFD20.BuffTarACTouch",category:"defense",sort:104e3},ffac:{label:"FFD20.BuffTarACFlatFooted",category:"defense",sort:105e3},bab:{label:"FFD20.BAB",category:"attack",sort:111e3},"~attackCore":{label:"",category:"attack",sort:112e3},attack:{label:"FFD20.BuffTarAllAttackRolls",category:"attack",sort:11e4,deferred:!0},wattack:{label:"FFD20.BuffTarWeaponAttack",category:"attack",sort:111e3,deferred:!0},sattack:{label:"FFD20.BuffTarSpellAttack",category:"attack",sort:112e3,deferred:!0},mattack:{label:"FFD20.BuffTarMeleeAttack",category:"attack",sort:113e3,deferred:!0},nattack:{label:"FFD20.BuffTarNaturalAttack",category:"attack",sort:114e3,deferred:!0},rattack:{label:"FFD20.BuffTarRangedAttack",category:"attack",sort:115e3,deferred:!0},tattack:{label:"FFD20.BuffTarThrownAttack",category:"attack",sort:116e3,deferred:!0},damage:{label:"FFD20.BuffTarAllDamageRolls",category:"damage",sort:12e4,deferred:!0},wdamage:{label:"FFD20.WeaponDamage",category:"damage",sort:121e3,deferred:!0},mwdamage:{label:"FFD20.MeleeWeaponDamage",category:"damage",sort:121100,deferred:!0},rwdamage:{label:"FFD20.RangedWeaponDamage",category:"damage",sort:121200,deferred:!0},twdamage:{label:"FFD20.ThrownWeaponDamage",category:"damage",sort:121300,deferred:!0},rdamage:{label:"FFD20.AllRangedDamage",category:"damage",sort:122100,deferred:!0},mdamage:{label:"FFD20.AllMeleeDamage",category:"damage",sort:122200,deferred:!0},ndamage:{label:"FFD20.NaturalAttackDamage",category:"damage",sort:123e3,deferred:!0},sdamage:{label:"FFD20.SpellDamage",category:"damage",sort:124e3,deferred:!0},critConfirm:{label:"FFD20.CriticalConfirmation",category:"attack",sort:13e4,deferred:!0},allSavingThrows:{label:"FFD20.BuffTarAllSavingThrows",category:"savingThrows",sort:14e4,deferred:!0},fort:{label:"FFD20.SavingThrowFort",category:"savingThrows",sort:141e3,deferred:!0},ref:{label:"FFD20.SavingThrowRef",category:"savingThrows",sort:142e3,deferred:!0},will:{label:"FFD20.SavingThrowWill",category:"savingThrows",sort:143e3,deferred:!0},cmb:{label:"FFD20.CMB",category:"attack",sort:15e4},cmd:{label:"FFD20.CMD",category:"defense",sort:151e3},ffcmd:{label:"FFD20.CMDFlatFooted",category:"defense",sort:152e3},init:{label:"FFD20.Initiative",category:"misc",sort:16e4},mhp:{label:"FFD20.HitPoints",category:"health",sort:17e4},wounds:{label:"FFD20.Wounds",category:"health",sort:18e4,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},vigor:{label:"FFD20.Vigor",category:"health",sort:181e3,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},mmp:{label:"FFD20.ManaPoints",category:"health",sort:171e3},mprec:{label:"FFD20.mpRecovery",category:"health",sort:172e3},spellResist:{label:"FFD20.SpellResistance",category:"defense",sort:19e4},bonusFeats:{label:"FFD20.BuffTarBonusFeats",category:"misc",sort:2e5,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},bonusSkillRanks:{label:"FFD20.BuffTarBonusSkillRanks",category:"skills",sort:21e4,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},concentration:{label:"FFD20.Concentration",category:"spell",sort:22e4,deferred:!0,filters:{actor:{exclude:["haunt","vehicle","trap"]}}},cl:{label:"FFD20.CasterLevel",category:"spell",sort:23e4},dc:{label:"FFD20.SpellDC",category:"spell",sort:24e4},sensedv:{label:"FFD20.Sense.darkvision",category:"senses",sort:25e4},sensets:{label:"FFD20.Sense.tremorsense",category:"senses",sort:250100},sensebse:{label:"FFD20.Sense.blindsense",category:"senses",sort:250200},sensebs:{label:"FFD20.Sense.blindsight",category:"senses",sort:250300},sensels:{label:"FFD20.Sense.lifesense",category:"senses",sort:250400},sensesc:{label:"FFD20.Sense.scent",category:"senses",sort:250500},sensetr:{label:"FFD20.Sense.trueseeing",category:"senses",sort:250600}},f={defense:{label:"FFD20.Defense"},savingThrows:{label:"FFD20.SavingThrowPlural"},attack:{label:"FFD20.Attack"},damage:{label:"FFD20.Damage"},ability:{label:"FFD20.AbilityScore",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},abilityChecks:{label:"FFD20.BuffTarAbilityChecks",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},health:{label:"FFD20.Health",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},skills:{label:"FFD20.Skills",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},skill:{label:"FFD20.BuffTarSpecificSkill",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},speed:{label:"FFD20.Movement.Speed"},spell:{label:"FFD20.BuffTarSpells",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},misc:{label:"FFD20.Misc"},senses:{label:"FFD20.Senses"}},g={attacks:{label:"FFD20.Attacks"},savingThrows:{label:"FFD20.SavingThrowPlural"},skills:{label:"FFD20.Skills",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},skill:{label:"FFD20.BuffTarSpecificSkill",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},abilityChecks:{label:"FFD20.BuffTarAbilityChecks"},spell:{label:"FFD20.BuffTarSpells",filters:{actor:{exclude:["haunt","vehicle","trap"]}}},defense:{label:"FFD20.Defense"},speed:{label:"FFD20.Movement.Speed"},misc:{label:"FFD20.Misc"}},y={classes:{class:{label:"FFD20.ClassPlural",filters:[{type:"class"}],interface:{types:!0,level:!0,create:!0},browse:{category:"classes",classType:"base"},create:{type:"class",system:{subType:"base"}},sort:1e3}},combat:{weapon:{label:"FFD20.InventoryWeapons",hideEmpty:!0,sort:1e3},weaponLike:{label:"FFD20.Subtypes.Item.attack.weapon.Plural",filters:[{type:"attack",subTypes:["weapon"]}],interface:{create:!0},create:{type:"attack",system:{subType:"weapon",proficient:!0}},sort:1100},natural:{label:"FFD20.Subtypes.Item.attack.natural.Plural",filters:[{type:"attack",subTypes:["natural"]}],interface:{create:!0},create:{type:"attack",system:{subType:"natural"}},sort:2e3},classFeat:{label:"FFD20.Subtypes.Item.feat.classFeat.Plural",hideEmpty:!0,sort:3e3},ability:{label:"FFD20.Subtypes.Item.attack.ability.Plural",filters:[{type:"attack",subTypes:["ability"]}],interface:{create:!0},create:{type:"attack",system:{subType:"ability"}},sort:3100},feat:{label:"FFD20.Subtypes.Item.feat.feat.Plural",hideEmpty:!0,sort:3200},racial:{label:"FFD20.Subtypes.Item.feat.racial.Plural",hideEmpty:!0,sort:4e3},racialAbility:{label:"FFD20.Subtypes.Item.attack.racialAbility.Plural",filters:[{type:"attack",subTypes:["racialAbility"]}],interface:{create:!0},create:{type:"attack",system:{subType:"racialAbility"}},sort:4100},spell:{label:"FFD20.Spells",hideEmpty:!0,sort:8e3},item:{label:"FFD20.Subtypes.Item.attack.item.Plural",filters:[{type:"attack",subTypes:["item"]}],interface:{create:!0},create:{type:"attack",system:{subType:"item"}},sort:1e4},equipment:{label:"FFD20.InventoryEquipment",hideEmpty:!0,sort:10500},consumable:{label:"FFD20.InventoryConsumables",hideEmpty:!0,sort:10700},miscFeat:{label:"FFD20.Features",hideEmpty:!0,sort:15e3},misc:{label:"FFD20.Subtypes.Item.attack.misc.Plural",filters:[{type:"attack",subTypes:["misc"]}],interface:{create:!0},create:{type:"attack",system:{subType:"misc"}},sort:16e3}},inventory:{weapon:{label:"FFD20.InventoryWeapons",filters:[{type:"weapon"}],interface:{create:!0,actions:!0,equip:!0},browse:{category:"items",type:"weapon"},create:{type:"weapon",system:{subType:"simple"}},sort:1e3},armor:{label:"FFD20.ArmorOrShield",filters:[{type:"equipment",subTypes:["armor","shield"]}],interface:{create:!0,actions:!0,equip:!0,slots:!0},browse:{category:"items",type:"equipment",equipmentType:["armor","shield"]},create:{type:"equipment",system:{subType:"armor",equipmentSubtype:"lightArmor",slot:""}},sort:2e3},equipment:{label:"FFD20.InventoryEquipment",filters:[{type:"equipment",subTypes:["wondrous","other","clothing"]}],interface:{create:!0,actions:!0,equip:!0,slots:!0},browse:{category:"items",type:"equipment",equipmentType:["wondrous"]},create:{type:"equipment",system:{subType:"wondrous",slot:"slotless"}},sort:3e3},materia:{label:"FFD20.Materia.Label",filters:[{type:"equipment",subTypes:"materia"}],interface:{create:!0,actions:!0,equip:!0,slots:!0},browse:{category:"items",type:"equipment",equipmentType:["materia"]},create:{type:"equipment",system:{subType:"materia",equipmentSubtype:"ability",slot:"any",slotted:"unslotted",rarity:"common"}},sort:4e3},implants:{label:"FFD20.InventoryImplants",filters:[{type:"implant"}],interface:{create:!0,actions:!0,equip:!0,slots:!0},labels:{equip:"FFD20.Implanted"},browse:{category:"items",type:"implant"},create:{type:"implant",system:{subType:"cybertech"}},sort:4e3},consumable:{label:"FFD20.InventoryConsumables",filters:[{type:"consumable"}],interface:{create:!0,actions:!0,equip:!1},browse:{category:"items",type:"consumable"},create:{type:"consumable"},sort:5e3},gear:{label:"FFD20.Subtypes.Item.loot.gear.Plural",filters:[{type:"loot",subTypes:["gear","adventuring","tool","reagent","remedy","herb","animal","animalGear"]}],interface:{create:!0,actions:!0,equip:()=>!ffd20.config.unequippableLoot.includes("gear")},browse:{category:"items",type:"loot"},create:{type:"loot",system:{subType:"gear"}},sort:6e3},ammo:{label:"FFD20.Subtypes.Item.loot.ammo.Plural",filters:[{type:"loot",subTypes:["ammo"]}],interface:{create:!0,actions:!1,equip:()=>!ffd20.config.unequippableLoot.includes("ammo")},browse:{category:"items",type:"loot",lootType:["ammo"]},create:{type:"loot",system:{subType:"ammo"}},sort:8e3},misc:{label:"FFD20.Subtypes.Item.loot.misc.Plural",filters:[{type:"loot",subTypes:["misc","food","entertainment","vehicle"]}],interface:{create:!0,actions:!1,equip:!0},browse:{category:"items",type:"loot"},create:{type:"loot",system:{subType:"misc"}},sort:9e3},tradeGoods:{label:"FFD20.Subtypes.Item.loot.tradeGoods.Plural",filters:[{type:"loot",subTypes:["tradeGoods","treasure"]}],interface:{create:!0,actions:!1,value:!0,equip:()=>!ffd20.config.unequippableLoot.includes("tradeGoods")},browse:{category:"items",type:"loot",lootType:["tradeGoods"]},create:{type:"loot",system:{subType:"tradeGoods"}},sort:15e3},container:{label:"FFD20.InventoryContainers",filters:[{type:"container"}],interface:{create:!0,actions:!1,equip:!0},browse:{category:"items",type:"container"},create:{type:"container"},sort:2e4}},features:{feat:{label:"FFD20.Subtypes.Item.feat.feat.Plural",filters:[{type:"feat",subTypes:["feat"]}],interface:{create:!0,actions:!0,types:!0},browse:{category:"feats",featType:["feat"]},create:{type:"feat",system:{subType:"feat"}},sort:2e3},classFeat:{label:"FFD20.Subtypes.Item.feat.classFeat.Plural",filters:[{type:"feat",subTypes:["classFeat"]}],interface:{create:!0,actions:!0,types:!0},browse:{category:"feats",featType:["classFeat"]},create:{type:"feat",system:{subType:"classFeat"}},sort:1e3},trait:{label:"FFD20.Subtypes.Item.feat.trait.Plural",filters:[{type:"feat",subTypes:["trait"]}],interface:{create:!0,actions:!0,types:!0},browse:{category:"feats",featType:["trait"]},create:{type:"feat",system:{subType:"trait"}},sort:3e3},racial:{label:"FFD20.Subtypes.Item.feat.racial.Plural",filters:[{type:"feat",subTypes:["racial"]}],interface:{create:!0,actions:!0,types:!0},browse:{category:"feats",featType:["racial"]},create:{type:"feat",system:{subType:"racial"}},sort:4e3},misc:{label:"FFD20.Subtypes.Item.feat.misc.Plural",filters:[{type:"feat",subTypes:["misc"]}],interface:{create:!0,actions:!0,types:!0},browse:{category:"feats",featType:["misc"]},create:{type:"feat",system:{subType:"misc"}},sort:15e3},template:{label:"FFD20.Subtypes.Item.feat.template.Plural",filters:[{type:"feat",subTypes:["template"]}],interface:{create:!0,actions:!1},browse:{category:"feats",featType:["template"]},create:{type:"feat",system:{subType:"template"}},sort:6e3}},buffs:{feat:{label:"FFD20.Subtypes.Item.buff.feat.Plural",filters:[{type:"buff",subTypes:["feat"]}],interface:{create:!0,actions:!0},browse:{category:"buffs",buffType:["feat"]},create:{type:"buff",system:{subType:"feat"}},sort:5e3},item:{label:"FFD20.Subtypes.Item.buff.item.Plural",filters:[{type:"buff",subTypes:["item"]}],interface:{create:!0,actions:!0},browse:{category:"buffs",buffType:["item"]},create:{type:"buff",system:{subType:"item"}},sort:4e3},misc:{label:"FFD20.Subtypes.Item.buff.misc.Plural",filters:[{type:"buff",subTypes:["misc"]}],interface:{create:!0,actions:!0},browse:{category:"buffs",subTypes:["misc"]},create:{type:"buff",system:{subType:"misc"}},sort:1e4},perm:{label:"FFD20.Subtypes.Item.buff.perm.Plural",filters:[{type:"buff",subTypes:["perm"]}],interface:{create:!0,actions:!0},browse:{category:"buffs",buffType:["perm"]},create:{type:"buff",system:{subType:"perm"}},sort:6e3},spell:{label:"FFD20.Subtypes.Item.buff.spell.Plural",filters:[{type:"buff",subTypes:["spell"]}],interface:{create:!0,actions:!0},browse:{category:"buffs",buffType:["spell"]},create:{type:"buff",system:{subType:"spell"}},sort:2e3},temp:{label:"FFD20.Subtypes.Item.buff.temp.Plural",filters:[{type:"buff",subTypes:["temp"]}],interface:{create:!0,actions:!0},browse:{category:"buffs",buffType:["temp"]},create:{type:"buff",system:{subType:"temp"}},sort:1e3}},spells:{spell:{interface:{create:!0},browse:{category:"spells",level:!0},create:{type:"spell",system:{school:"abj"}}}},combatlite:{attacks:{label:"FFD20.AbilityPlural",filters:[{type:"attack"}],interface:{create:!0,types:!0},create:{type:"attack",system:{subType:"weapon",proficient:!0}}}},misc:{race:{create:{type:"race"}}}};Hooks.once("setup",(()=>{for(const[e,t]of Object.entries(y))for(const[s,a]of Object.entries(t)){a.category=e,a.id=s,a.path=`${e}.${s}`,a.label=game.i18n.localize(a.label);const t=a.interface;"function"==typeof t?.equip&&(t.equip=t.equip())}}));const b=Object.freeze(Object.defineProperty({__proto__:null,CHARACTER_EXP_LEVELS:{slow:[0,3e3,7500,14e3,23e3,35e3,53e3,77e3,115e3,16e4,235e3,33e4,475e3,665e3,955e3,135e4,19e5,27e5,385e4,535e4,835e4,1435e4,2635e4,5035e4,9835e4,19435e4,38635e4,77035e4,153835e4,307435e4],medium:[0,2e3,5e3,9e3,15e3,23e3,35e3,51e3,75e3,105e3,155e3,22e4,315e3,445e3,635e3,89e4,13e5,18e5,255e4,36e5,57e5,99e5,183e5,351e5,687e5,1359e5,2703e5,5391e5,10767e5,21519e5],fast:[0,1300,3300,6e3,1e4,15e3,23e3,34e3,5e4,71e3,105e3,145e3,21e4,295e3,425e3,6e5,85e4,12e5,17e5,24e5,38e5,66e5,122e5,234e5,458e5,906e5,1802e5,3594e5,7178e5,14346e5]},CR_EXP_LEVELS:[200,400,600,800,1200,1600,2400,3200,4800,6400,9600,12800,19200,25600,38400,51200,76800,102400,153600,204800,307200,409600,614400,819200,1228800,1638400,2457600,3276800,4915200,6553600,9830400],ClassSpellLvlProgression:{noncaster:"0",halfCaster:"min(floor(((@level)-1)/3),4)",dimPacman:"min(floor(((@level)+2)/3),6)",pacman:"min(floor(((@level)+2)/3),6)",dimFullCaster:"min(floor(((@level)+1)/2),9)",fullCaster:"min(floor(((@level)+1)/2),9)",advFullCaster:"min(floor(((@level)+1)/2),9)"},abilities:{str:"FFD20.AbilityStr",dex:"FFD20.AbilityDex",con:"FFD20.AbilityCon",int:"FFD20.AbilityInt",wis:"FFD20.AbilityWis",cha:"FFD20.AbilityCha"},abilitiesShort:{str:"FFD20.AbilityShortStr",dex:"FFD20.AbilityShortDex",con:"FFD20.AbilityShortCon",int:"FFD20.AbilityShortInt",wis:"FFD20.AbilityShortWis",cha:"FFD20.AbilityShortCha"},abilityActivationTypes:{nonaction:"FFD20.Activation.nonaction.Single",passive:"FFD20.Activation.passive.Single",free:"FFD20.Activation.free.Single",swift:"FFD20.Activation.swift.Single",immediate:"FFD20.Activation.immediate.Single",move:"FFD20.Activation.move.Single",standard:"FFD20.Activation.standard.Single",full:"FFD20.Activation.fullRound.Single",attack:"FFD20.Activation.attack.Single",aoo:"FFD20.Activation.aoo.Single",round:"FFD20.Activation.round.Single",minute:"FFD20.Activation.minute.Single",hour:"FFD20.Activation.hour.Single",special:"FFD20.Activation.special.Single"},abilityActivationTypesPlurals:{free:"FFD20.Activation.free.Plural",swift:"FFD20.Activation.swift.Plural",immediate:"FFD20.Activation.immediate.Plural",move:"FFD20.Activation.move.Plural",standard:"FFD20.Activation.standard.Plural",full:"FFD20.Activation.fullRound.Plural",attack:"FFD20.Activation.attack.Plural",round:"FFD20.Activation.round.Plural",minute:"FFD20.Activation.minute.Plural",hour:"FFD20.Activation.hour.Plural"},abilityActivationTypesPlurals_unchained:{passive:"FFD20.Activation.passive.Plural",free:"FFD20.Activation.free.Plural",reaction:"FFD20.Activation.reaction.Plural",action:"FFD20.Activation.action.Plural",minute:"FFD20.Activation.minute.Plural",hour:"FFD20.Activation.hour.Plural",special:"FFD20.Activation.special.Plural"},abilityActivationTypes_unchained:{nonaction:"FFD20.Activation.nonaction.Single",passive:"FFD20.Activation.passive.Single",free:"FFD20.Activation.free.Single",reaction:"FFD20.Activation.reaction.Single",action:"FFD20.Activation.action.Single",attack:"FFD20.Activation.attack.Single",aoo:"FFD20.Activation.aoo.Single",minute:"FFD20.Activation.minute.Single",hour:"FFD20.Activation.hour.Single",special:"FFD20.Activation.special.Single"},abilityCost:{7:-4,8:-2,9:-1,10:0,11:1,12:2,13:3,14:5,15:7,16:10,17:13,18:17},abilityDamageHeldMultipliers:{oh:.5,"1h":1,"2h":1.5},abilityDamageMultipliers:[{value:.5,label:"×0.5"},{value:1,label:"×1"},{value:1.5,label:"×1.5"},{value:2,label:"×2"},{value:2.5,label:"×2.5"}],abilityTypes:{na:{long:"FFD20.AbilityTypes.na.Label",short:"FFD20.AbilityTypes.na.Short"},ex:{long:"FFD20.AbilityTypes.ex.Label",short:"FFD20.AbilityTypes.ex.Short"},su:{long:"FFD20.AbilityTypes.su.Label",short:"FFD20.AbilityTypes.su.Short"},sp:{long:"FFD20.AbilityTypes.sp.Label",short:"FFD20.AbilityTypes.sp.Short"}},ac:{normal:"FFD20.ACNormal",touch:"FFD20.ACTouch",flatFooted:"FFD20.ACFlatFooted"},actorSizes:{fine:"FFD20.ActorSize.fine",dim:"FFD20.ActorSize.dim",tiny:"FFD20.ActorSize.tiny",sm:"FFD20.ActorSize.sm",med:"FFD20.ActorSize.med",lg:"FFD20.ActorSize.lg",huge:"FFD20.ActorSize.huge",grg:"FFD20.ActorSize.grg",col:"FFD20.ActorSize.col"},actorStatures:{tall:"FFD20.StatureTall",long:"FFD20.StatureLong"},ageCategories:{young:{label:"FFD20.AgeCategories.young",modifiers:{str:-2,dex:2,con:-2,int:0,wis:-2,cha:0}},adult:{label:"FFD20.AgeCategories.adult",modifiers:{str:0,dex:0,con:0,int:0,wis:0,cha:0}},middleAge:{label:"FFD20.AgeCategories.middleAge",modifiers:{str:-1,dex:-1,con:-1,int:1,wis:1,cha:1}},old:{label:"FFD20.AgeCategories.old",modifiers:{str:-3,dex:-3,con:-3,int:2,wis:2,cha:2}},venerable:{label:"FFD20.AgeCategories.venerable",modifiers:{str:-6,dex:-6,con:-6,int:3,wis:3,cha:3}}},alignments:{lg:"FFD20.Alignments.lg",ng:"FFD20.Alignments.ng",cg:"FFD20.Alignments.cg",ln:"FFD20.Alignments.ln",tn:"FFD20.Alignments.tn",cn:"FFD20.Alignments.cn",le:"FFD20.Alignments.le",ne:"FFD20.Alignments.ne",ce:"FFD20.Alignments.ce"},alignmentsShort:{lg:"FFD20.Alignments.Short.lg",ng:"FFD20.Alignments.Short.ng",cg:"FFD20.Alignments.Short.cg",ln:"FFD20.Alignments.Short.ln",tn:"FFD20.Alignments.Short.tn",cn:"FFD20.Alignments.Short.cn",le:"FFD20.Alignments.Short.le",ne:"FFD20.Alignments.Short.ne",ce:"FFD20.Alignments.Short.ce"},ammoTypes:{arrow:"FFD20.AmmoType.arrow",bolt:"FFD20.AmmoType.bolt",repeatingBolt:"FFD20.AmmoType.repeatingBolt",slingBullet:"FFD20.AmmoType.slingBullet",gunBullet:"FFD20.AmmoType.gunBullet",dragoonBullet:"FFD20.AmmoType.dragoonBullet",dart:"FFD20.AmmoType.dart",siege:"FFD20.AmmoType.siege"},arbitrarySkills:["crf","prf","pro"],armorCost:{humanoid:{fine:.5,dim:.5,tiny:.5,sm:1,med:1,lg:2,huge:4,grg:8,col:16},nonhumanoid:{fine:1,dim:1,tiny:1,sm:2,med:2,lg:4,huge:8,grg:16,col:32}},armorProficiencies:{lgt:"FFD20.Proficiency.Armor.light",med:"FFD20.Proficiency.Armor.medium",hvy:"FFD20.Proficiency.Armor.heavy",shl:"FFD20.Proficiency.Armor.shield",twr:"FFD20.Proficiency.Armor.tower"},armorTypes:{none:0,light:1,medium:2,heavy:3},armorWeight:{fine:.1,dim:.1,tiny:.1,sm:.5,med:1,lg:2,huge:5,grg:8,col:12},attackTypes:{weapon:"FFD20.Subtypes.Item.attack.weapon.Single",natural:"FFD20.Subtypes.Item.attack.natural.Single",ability:"FFD20.Subtypes.Item.attack.ability.Single",racialAbility:"FFD20.Subtypes.Item.attack.racialAbility.Single",item:"FFD20.Item",misc:"FFD20.Misc"},auraStrengths:{1:"FFD20.Aura.Strength.faint",2:"FFD20.Aura.Strength.moderate",3:"FFD20.Aura.Strength.strong",4:"FFD20.Aura.Strength.overwhelming"},backgroundOnlySkills:["lor","art"],backgroundSkillClasses:["base","prestige"],backgroundSkills:["apr","crf","han","ken","kge","khi","kno","lin","prf","pro","slt"],backgroundSkillsPerLevel:2,bonusMPtest:{1:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)",2:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)",3:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)",4:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)+max(roundup((@attributes.mpAbility.mod-3)/4)*4,0)",5:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)+max(roundup((@attributes.mpAbility.mod-3)/4)*4,0)+max(roundup((@attributes.mpAbility.mod-4)/4)*5,0)",6:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)+max(roundup((@attributes.mpAbility.mod-3)/4)*4,0)+max(roundup((@attributes.mpAbility.mod-4)/4)*5,0)+max(roundup((@attributes.mpAbility.mod-5)/4)*6,0)",7:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)+max(roundup((@attributes.mpAbility.mod-3)/4)*4,0)+max(roundup((@attributes.mpAbility.mod-4)/4)*5,0)+max(roundup((@attributes.mpAbility.mod-5)/4)*6,0)+max(roundup((@attributes.mpAbility.mod-6)/4)*7,0)",8:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)+max(roundup((@attributes.mpAbility.mod-3)/4)*4,0)+max(roundup((@attributes.mpAbility.mod-4)/4)*5,0)+max(roundup((@attributes.mpAbility.mod-5)/4)*6,0)+max(roundup((@attributes.mpAbility.mod-6)/4)*7,0)+max(roundup((@attributes.mpAbility.mod-7)/4)*8,0)",9:"max(roundup((@attributes.mpAbility.mod-0)/4)*1,0)+max(roundup((@attributes.mpAbility.mod-1)/4)*2,0)+max(roundup((@attributes.mpAbility.mod-2)/4)*3,0)+max(roundup((@attributes.mpAbility.mod-3)/4)*4,0)+max(roundup((@attributes.mpAbility.mod-4)/4)*5,0)+max(roundup((@attributes.mpAbility.mod-5)/4)*6,0)+max(roundup((@attributes.mpAbility.mod-6)/4)*7,0)+max(roundup((@attributes.mpAbility.mod-7)/4)*8,0)+max(roundup((@attributes.mpAbility.mod-8)/4)*9,0)"},bonusTypes:{untyped:"FFD20.ModifierType.untyped",untypedPerm:"FFD20.ModifierType.untypedPerm",base:"FFD20.ModifierType.base",enh:"FFD20.ModifierType.enhancement",dodge:"FFD20.ModifierType.dodge",haste:"FFD20.ModifierType.haste",inherent:"FFD20.ModifierType.inherent",deflection:"FFD20.ModifierType.deflection",morale:"FFD20.ModifierType.morale",luck:"FFD20.ModifierType.luck",sacred:"FFD20.ModifierType.sacred",insight:"FFD20.ModifierType.insight",resist:"FFD20.ModifierType.resistance",profane:"FFD20.ModifierType.profane",trait:"FFD20.ModifierType.trait",racial:"FFD20.ModifierType.racial",size:"FFD20.ModifierType.size",competence:"FFD20.ModifierType.competence",circumstance:"FFD20.ModifierType.circumstance",alchemical:"FFD20.ModifierType.alchemical"},buffTargetCategories:f,buffTargets:h,buffTypes:{temp:"FFD20.Subtypes.Item.buff.temp.Single",spell:"FFD20.Subtypes.Item.buff.spell.Single",feat:"FFD20.Subtypes.Item.buff.feat.Single",perm:"FFD20.Subtypes.Item.buff.perm.Single",item:"FFD20.Subtypes.Item.buff.item.Single",misc:"FFD20.Subtypes.Item.buff.misc.Single"},caster:{type:{prepared:{label:"FFD20.SpellPrepPrepared",spontaneous:!1,prepared:!0},spontaneous:{label:"FFD20.SpellPrepSpontaneous",spontaneous:!0,prepared:!1},hybrid:{label:"FFD20.SpellPrepHybrid",spontaneous:!0,prepared:!0}},progression:{high:{label:"FFD20.High"},med:{label:"FFD20.Medium"},low:{label:"FFD20.Low"}}},casterProgression:c,changeFlags:{lowLightVision:"FFD20.ChangeFlags.LowLightVision",seeInDarkness:"FFD20.ChangeFlags.SeeInDarkness",seeInvisibility:"FFD20.ChangeFlags.SeeInvisibility",immuneToMorale:"FFD20.ChangeFlags.ImmuneToMoraleEffects",loseDexToAC:"FFD20.ChangeFlags.LoseDexToAC",noMediumEncumbrance:"FFD20.ChangeFlags.NoMediumEncumbrance",noHeavyEncumbrance:"FFD20.ChangeFlags.NoHeavyEncumbrance",mediumArmorFullSpeed:"FFD20.ChangeFlags.MediumArmorFullSpeed",heavyArmorFullSpeed:"FFD20.ChangeFlags.HeavyArmorFullSpeed"},classAssociations:["feat","attack"],classBAB:{low:"FFD20.Low",med:"FFD20.Medium",high:"FFD20.High",custom:"FFD20.Custom"},classBABFormulas:{low:"floor(@hitDice * 0.5)",med:"floor(@hitDice * 0.75)",high:"@hitDice",custom:"0"},classBaseMPTypes:{noncaster:"FFD20.ClassMPType.Progression.NonCaster",halfCaster:"FFD20.ClassMPType.Progression.HalfCaster",dimPacman:"FFD20.ClassMPType.Progression.DimPacman",pacman:"FFD20.ClassMPType.Progression.Pacman",dimFullCaster:"FFD20.ClassMPType.Progression.DimFullCaster",fullCaster:"FFD20.ClassMPType.Progression.FullCaster",advFullCaster:"FFD20.ClassMPType.Progression.AdvFullCaster"},classBaseMPauto:{no:"FFD20.No",yes:"FFD20.Yes",half:"FFD20.Half"},classCasterType:{astrologian:"high",blackmage:"high",bluemage:"high",geomancer:"high",illusionist:"high",necromancer:"high",summoner:"high",timemage:"high",whitemage:"high",bard:"med",cleric:"med",redmage:"med",scholar:"med",darkknight:"low",holyknight:"low"},classCastingStats:{noncaster:"FFD20.ClassMPType.Progression.NonCaster",int:"FFD20.AbilityShortInt",wis:"FFD20.AbilityShortWis",cha:"FFD20.AbilityShortCha",intAndWis:"FFD20.AbilityShortIntAndWis"},classFractionalBABFormulas:{low:"@hitDice * 0.5",med:"@hitDice * 0.75",high:"@hitDice",custom:"0"},classFractionalSavingThrowFormulas:{goodSaveBonus:"2",base:{low:"@hitDice / 3",high:"@hitDice / 2",goodSave:!0},prestige:{low:"@hitDice / 3",high:"@hitDice / 2",goodSave:!0},npc:{low:"@hitDice / 3",high:"@hitDice / 2",goodSave:!0},racial:{low:"@hitDice / 3",high:"@hitDice / 2",goodSave:!0},mythic:{low:"0",high:"0"},custom:{low:"0",high:"0"}},classMPStatsBonus:{1:[0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5],2:[0,1,3,3,3,4,6,6,6,7,9,9,9,10,12,12,12,13],3:[0,1,3,6,6,7,9,12,12,13,15,18,18,19,21,24,24,25],4:[0,1,3,6,10,11,13,16,20,21,23,26,30,31,33,36,40,41],5:[0,1,3,6,10,16,18,21,25,31,33,36,40,46,48,51,55,61],6:[0,1,3,6,10,16,24,27,31,37,45,48,52,58,66,69,73,79],7:[0,1,3,6,10,16,24,34,38,44,52,62,66,72,80,90,94,100],8:[0,1,3,6,10,16,24,34,46,52,60,70,82,88,96,106,118,124],9:[0,1,3,6,10,16,24,34,46,61,69,79,91,106,114,124,136,151]},classMPlevels:{noncaster:[0],halfCaster:[0,0,0,1,2,3,4,5,6,7,8,10,12,14,16,19,22,25,29,33],dimPacman:[1,2,3,4,5,6,8,10,12,15,18,21,25,29,33,38,43,48,53,58],pacman:[2,3,4,5,6,8,10,13,16,20,24,29,34,39,45,51,57,64,71,79],dimFullCaster:[2,3,4,5,6,8,11,15,20,24,29,35,42,49,56,65,74,83,92,101],fullCaster:[3,4,5,6,8,11,15,20,26,32,39,47,56,65,75,86,98,110,122,135],advFullCaster:[4,6,8,9,14,17,25,30,41,47,60,68,84,93,111,124,143,155,167,180]},classSavingThrowFormulas:{base:{low:"floor(@hitDice / 3)",high:"2 + floor(@hitDice / 2)"},prestige:{low:"floor((1 + @hitDice) / 3)",high:"floor((1 + @hitDice) / 2)"},npc:{low:"floor(@hitDice / 3)",high:"2 + floor(@hitDice / 2)"},racial:{low:"floor(@hitDice / 3)",high:"2 + floor(@hitDice / 2)"},mythic:{low:"0",high:"0"},custom:{low:"0",high:"0"}},classSavingThrows:{low:"FFD20.Poor",high:"FFD20.Good",custom:"FFD20.Custom"},classSkillBonus:3,classSubTypes:{none:"FFD20.None",core:"FFD20.ClassSubType.Core",coreArc:"FFD20.ClassSubType.CoreArc",base:"FFD20.ClassSubType.Base",baseArc:"FFD20.ClassSubType.BaseArc",hybrid:"FFD20.ClassSubType.Hybrid",hybridArc:"FFD20.ClassSubType.HybridArc"},classTypes:{base:"FFD20.Subtypes.Item.class.base.Single",prestige:"FFD20.Subtypes.Item.class.prestige.Single",npc:"FFD20.Subtypes.Item.class.npc.Single",racial:"FFD20.Subtypes.Item.class.racial.Single",mythic:"FFD20.Subtypes.Item.class.mythic.Single"},conditionTypes:{antagonized:"FFD20.Condition.antagonized",berserk:"FFD20.Condition.berserk",bleed:"FFD20.Condition.bleed",blind:"FFD20.Condition.blind",burning:"FFD20.Condition.burning",charmed:"FFD20.Condition.charmed",confuse:"FFD20.Condition.confused",cowering:"FFD20.Condition.cowering",cursed:"FFD20.Condition.cursed",daze:"FFD20.Condition.dazed",dazzle:"FFD20.Condition.dazzled",deaf:"FFD20.Condition.deaf",deathEffects:"FFD20.Condition.deathEffects",deprotect:"FFD20.Condition.deprotect",deshell:"FFD20.Condition.deshell",dimmed:"FFD20.Condition.dimmed",disabled:"FFD20.Condition.disabled",disease:"FFD20.Condition.disease",doom:"FFD20.Condition.doom",drenched:"FFD20.Condition.drenched",energyDrain:"FFD20.Condition.energyDrain",entangled:"FFD20.Condition.entangled",exhausted:"FFD20.Condition.exhausted",fascinated:"FFD20.Condition.fascinated",fatigue:"FFD20.Condition.fatigued",fear:"FFD20.Condition.fear",frightened:"FFD20.Condition.frightened",frog:"FFD20.Condition.frog",frozen:"FFD20.Condition.frozen",immobilized:"FFD20.Condition.immobilized",imperil:"FFD20.Condition.imperil",invisible:"FFD20.Condition.invisible",moraleEffects:"FFD20.Condition.moraleEffects",mindAffecting:"FFD20.Condition.mindAffecting",mini:"FFD20.Condition.mini",nauseated:"FFD20.Condition.nauseated",panicked:"FFD20.Condition.panicked",paralyze:"FFD20.Condition.paralyzed",petrify:"FFD20.Condition.petrified",poison:"FFD20.Condition.poison",polymorph:"FFD20.Condition.polymorph",prone:"FFD20.Condition.prone",sapped:"FFD20.Condition.sapped",shaken:"FFD20.Condition.shaken",sicken:"FFD20.Condition.sickened",silenced:"FFD20.Condition.silenced",sleep:"FFD20.Condition.sleep",slow:"FFD20.Condition.slow",squalled:"FFD20.Condition.squalled",staggered:"FFD20.Condition.staggered",static:"FFD20.Condition.static",stop:"FFD20.Condition.stop",stun:"FFD20.Condition.stunned",weighted:"FFD20.Condition.weighted",unlucky:"FFD20.Condition.unlucky",zombie:"FFD20.Condition.zombie"},conditionalTargets:{attack:{_label:"FFD20.AttackRollPlural",allAttack:"FFD20.All",hasteAttack:"FFD20.Haste",rapidShotAttack:"FFD20.RapidShot"},damage:{_label:"FFD20.Damage",allDamage:"FFD20.All",hasteDamage:"FFD20.Haste",rapidShotDamage:"FFD20.RapidShot"},size:{_label:"FFD20.Size"},critMult:{_label:"FFD20.CriticalMultiplier"},effect:{_label:"FFD20.Effects"},misc:{_label:"FFD20.MiscShort"}},consumableTypes:{potion:"FFD20.Subtypes.Item.consumable.potion.Single",oil:"FFD20.Subtypes.Item.consumable.oil.Single",poison:"FFD20.Subtypes.Item.consumable.poison.Single",drug:"FFD20.Subtypes.Item.consumable.drug.Single",alchContact:"FFD20.Subtypes.Item.consumable.alchContact.Single",alchIngested:"FFD20.Subtypes.Item.consumable.alchIngested.Single",alchInhaled:"FFD20.Subtypes.Item.consumable.alchInhaled.Single",scroll:"FFD20.Subtypes.Item.consumable.scroll.Single",wand:"FFD20.Subtypes.Item.consumable.wand.Single",rod:"FFD20.Subtypes.Item.consumable.rod.Single",staff:"FFD20.Subtypes.Item.consumable.staff.Single",pharmaceutical:"FFD20.Subtypes.Item.consumable.pharmaceutical.Single",misc:"FFD20.Misc"},contextNoteCategories:g,contextNoteTargets:{attack:{label:"FFD20.AttackRollPlural",category:"attacks"},critical:{label:"FFD20.CriticalHitPlural",category:"attacks"},effect:{label:"FFD20.Effects",category:"attacks"},melee:{label:"FFD20.Melee",category:"attacks"},meleeWeapon:{label:"FFD20.MeleeWeapon",category:"attacks"},meleeSpell:{label:"FFD20.MeleeSpell",category:"attacks"},ranged:{label:"FFD20.Ranged",category:"attacks"},rangedWeapon:{label:"FFD20.RangedWeapon",category:"attacks"},rangedSpell:{label:"FFD20.RangedSpell",category:"attacks"},cmb:{label:"FFD20.CMB",category:"attacks"},allSavingThrows:{label:"FFD20.BuffTarAllSavingThrows",category:"savingThrows"},fort:{label:"FFD20.SavingThrowFort",category:"savingThrows"},ref:{label:"FFD20.SavingThrowRef",category:"savingThrows"},will:{label:"FFD20.SavingThrowWill",category:"savingThrows"},skills:{label:"FFD20.BuffTarAllSkills",category:"skills"},strSkills:{label:"FFD20.BuffTarStrSkills",category:"skills"},dexSkills:{label:"FFD20.BuffTarDexSkills",category:"skills"},conSkills:{label:"FFD20.BuffTarConSkills",category:"skills"},intSkills:{label:"FFD20.BuffTarIntSkills",category:"skills"},wisSkills:{label:"FFD20.BuffTarWisSkills",category:"skills"},chaSkills:{label:"FFD20.BuffTarChaSkills",category:"skills"},allChecks:{label:"FFD20.BuffTarAllAbilityChecks",category:"abilityChecks"},strChecks:{label:"FFD20.BuffTarStrChecks",category:"abilityChecks"},dexChecks:{label:"FFD20.BuffTarDexChecks",category:"abilityChecks"},conChecks:{label:"FFD20.BuffTarConChecks",category:"abilityChecks"},intChecks:{label:"FFD20.BuffTarIntChecks",category:"abilityChecks"},wisChecks:{label:"FFD20.BuffTarWisChecks",category:"abilityChecks"},chaChecks:{label:"FFD20.BuffTarChaChecks",category:"abilityChecks"},spellEffect:{label:"FFD20.BuffTarSpellEffect",category:"spell"},concentration:{label:"FFD20.Concentration",category:"spell"},cl:{label:"FFD20.CasterLevel",category:"spell"},ac:{label:"FFD20.ACNormal",category:"defense"},cmd:{label:"FFD20.CMD",category:"defense"},sr:{label:"FFD20.SpellResistance",category:"defense"},init:{label:"FFD20.Initiative",category:"misc"},landSpeed:{label:"FFD20.Movement.Mode.land",category:"speed"},climbSpeed:{label:"FFD20.Movement.Mode.climb",category:"speed"},swimSpeed:{label:"FFD20.Movement.Mode.swim",category:"speed"},burrowSpeed:{label:"FFD20.Movement.Mode.burrow",category:"speed"},flySpeed:{label:"FFD20.Movement.Mode.fly",category:"speed"},allSpeeds:{label:"FFD20.BuffTarAllSpeeds",category:"speed"}},costlessActivation:r,countforexp:{exp:"FFD20.ClassExp",noExp:"FFD20.ClassNoExp"},creatureSubtypes:{aegyl:"FFD20.CreatureSubTypes.aegyl",albhed:"FFD20.CreatureSubTypes.albhed",amaljaa:"FFD20.CreatureSubTypes.amaljaa",antica:"FFD20.CreatureSubTypes.antica",aquatic:"FFD20.CreatureSubTypes.aquatic",archfiend:"FFD20.CreatureSubTypes.archfiend",aura:"FFD20.CreatureSubTypes.aura",avian:"FFD20.CreatureSubTypes.avian",bangaa:"FFD20.CreatureSubTypes.bangaa",bomb:"FFD20.CreatureSubTypes.bomb",boss:"FFD20.CreatureSubTypes.boss",burmecian:"FFD20.CreatureSubTypes.burmecian",centaur:"FFD20.CreatureSubTypes.centaur",cieth:"FFD20.CreatureSubTypes.cieth",clockwork:"FFD20.CreatureSubTypes.clockwork",daemon:"FFD20.CreatureSubTypes.daemon",demon:"FFD20.CreatureSubTypes.demon",devil:"FFD20.CreatureSubTypes.devil",dracobaltian:"FFD20.CreatureSubTypes.dracobaltian",dwarf:"FFD20.CreatureSubTypes.dwarf",earth:"FFD20.CreatureSubTypes.earth",elemental:"FFD20.CreatureSubTypes.elemental",elvaan:"FFD20.CreatureSubTypes.elvaan",extraplanar:"FFD20.CreatureSubTypes.extraplanar",fire:"FFD20.CreatureSubTypes.fire",forgiven:"FFD20.CreatureSubTypes.forgiven",galka:"FFD20.CreatureSubTypes.galka",garif:"FFD20.CreatureSubTypes.garif",garlean:"FFD20.CreatureSubTypes.garlean",genome:"FFD20.CreatureSubTypes.genome",giant:"FFD20.CreatureSubTypes.giant",gnath:"FFD20.CreatureSubTypes.gnath",goblin:"FFD20.CreatureSubTypes.goblin",goblinoid:"FFD20.CreatureSubTypes.goblinoid",gria:"FFD20.CreatureSubTypes.gria",guado:"FFD20.CreatureSubTypes.guado",halfbreed:"FFD20.CreatureSubTypes.halfbreed",halfgigas:"FFD20.CreatureSubTypes.halfgigas",holy:"FFD20.CreatureSubTypes.holy",humanoid:"FFD20.CreatureSubTypes.humanoid",hume:"FFD20.CreatureSubTypes.hume",hypello:"FFD20.CreatureSubTypes.hypello",ice:"FFD20.CreatureSubTypes.ice",immortal:"FFD20.CreatureSubTypes.immortal",incorporeal:"FFD20.CreatureSubTypes.incorporeal",ixal:"FFD20.CreatureSubTypes.ixal",kindred:"FFD20.CreatureSubTypes.kindred",kobold:"FFD20.CreatureSubTypes.kobold",kojin:"FFD20.CreatureSubTypes.kojin",lambkin:"FFD20.CreatureSubTypes.lambkin",lamia:"FFD20.CreatureSubTypes.lamia",lightning:"FFD20.CreatureSubTypes.lightning",livingconstruct:"FFD20.CreatureSubTypes.livingconstruct",lizardman:"FFD20.CreatureSubTypes.lizardman",loporrit:"FFD20.CreatureSubTypes.loporrit",machina:"FFD20.CreatureSubTypes.machina",mandragora:"FFD20.CreatureSubTypes.mandragora",matanga:"FFD20.CreatureSubTypes.matanga",merfolk:"FFD20.CreatureSubTypes.merfolk",miniboss:"FFD20.CreatureSubTypes.miniboss",mithra:"FFD20.CreatureSubTypes.mithra",moogle:"FFD20.CreatureSubTypes.moogle",moomba:"FFD20.CreatureSubTypes.moomba",namazu:"FFD20.CreatureSubTypes.namazu",native:"FFD20.CreatureSubTypes.native",nonelemental:"FFD20.CreatureSubTypes.nonelemental",numou:"FFD20.CreatureSubTypes.numou",orc:"FFD20.CreatureSubTypes.orc",palico:"FFD20.CreatureSubTypes.palico",primal:"FFD20.CreatureSubTypes.Primal",pupu:"FFD20.CreatureSubTypes.pupu",qiqirn:"FFD20.CreatureSubTypes.qiqirn",qu:"FFD20.CreatureSubTypes.qu",quadav:"FFD20.CreatureSubTypes.quadav",reptilian:"FFD20.CreatureSubTypes.reptilian",roegadyn:"FFD20.CreatureSubTypes.roegadyn",ronso:"FFD20.CreatureSubTypes.ronso",sahagin:"FFD20.CreatureSubTypes.sahagin",seeq:"FFD20.CreatureSubTypes.seeq",setolion:"FFD20.CreatureSubTypes.setolion",shadow:"FFD20.CreatureSubTypes.shadow",shindroid:"FFD20.CreatureSubTypes.shindroid",sineater:"FFD20.CreatureSubTypes.sineater",superboss:"FFD20.CreatureSubTypes.superboss",sylph:"FFD20.CreatureSubTypes.sylph",syricta:"FFD20.CreatureSubTypes.syricta",tarutaru:"FFD20.CreatureSubTypes.tarutaru",tonkin:"FFD20.CreatureSubTypes.tonkin",vanuvanu:"FFD20.CreatureSubTypes.vanuvanu",varg:"FFD20.CreatureSubTypes.varg",viera:"FFD20.CreatureSubTypes.viera",water:"FFD20.CreatureSubTypes.water",wind:"FFD20.CreatureSubTypes.wind",yagudo:"FFD20.CreatureSubTypes.yagudo"},creatureTypes:{aberration:"FFD20.CreatureTypes.aberration",animal:"FFD20.CreatureTypes.animal",construct:"FFD20.CreatureTypes.construct",dragon:"FFD20.CreatureTypes.dragon",fey:"FFD20.CreatureTypes.fey",humanoid:"FFD20.CreatureTypes.humanoid",magicalBeast:"FFD20.CreatureTypes.magicalBeast",monstrousHumanoid:"FFD20.CreatureTypes.monstrousHumanoid",ooze:"FFD20.CreatureTypes.ooze",outsider:"FFD20.CreatureTypes.outsider",plant:"FFD20.CreatureTypes.plant",undead:"FFD20.CreatureTypes.undead",vermin:"FFD20.CreatureTypes.vermin"},currencies:{pp:"FFD20.Currency.Abbr.pp",gp:"FFD20.Currency.Abbr.gp",sp:"FFD20.Currency.Abbr.sp",cp:"FFD20.Currency.Abbr.cp"},currency:l,damageResistances:{lawful:"FFD20.Alignments.l",chaotic:"FFD20.Alignments.c",good:"FFD20.Alignments.g",evil:"FFD20.Alignments.e"},defaultIcons:{items:{attack:"icons/svg/explosion.svg",buff:"icons/svg/ice-aura.svg",class:"icons/svg/paralysis.svg",consumable:"icons/svg/tankard.svg",container:"icons/svg/barrel.svg",equipment:"icons/svg/combat.svg",feat:"icons/svg/book.svg",loot:"icons/svg/item-bag.svg",race:"icons/svg/wing.svg",spell:"icons/svg/daze.svg",weapon:"icons/svg/sword.svg"},actors:{character:"icons/svg/mystery-man.svg",npc:"icons/svg/terror.svg",haunt:"icons/svg/stoned.svg",basic:"icons/svg/castle.svg",trap:"icons/svg/net.svg",vehicle:"icons/svg/stone-path.svg"}},distanceUnits:{none:"FFD20.None",personal:"FFD20.Distance.personal",touch:"FFD20.Distance.touch",melee:"FFD20.Distance.melee",reach:"FFD20.Distance.reach",close:"FFD20.Distance.close",medium:"FFD20.Distance.medium",long:"FFD20.Distance.long",ft:"FFD20.Distance.ft",mi:"FFD20.Distance.mi",spec:"FFD20.Special",seeText:"FFD20.SeeText",unlimited:"FFD20.Unlimited"},divineFocus:{0:"",1:"FFD20.SpellComponents.DFVariants.DF",2:"FFD20.SpellComponents.DFVariants.MDF",3:"FFD20.SpellComponents.DFVariants.FDF"},durationEndEvents:{turnStart:"FFD20.Time.Turn.Start",initiative:"FFD20.Initiative",turnEnd:"FFD20.Time.Turn.End"},encumbranceLevels:{light:0,medium:1,heavy:2},encumbranceLoads:[0,10,20,30,40,50,60,70,80,90,100,115,130,150,175,200,230,260,300,350,400,460,520,600,700,800,920,1040,1200,1400,1600,1840,2080,2400,2800,3200,3680,4160,4800,5600,6400,7360,8320,9600,11200,12800,14720,16640,19200,22400,25600],encumbranceMultipliers:{normal:{fine:.125,dim:.25,tiny:.5,sm:.75,med:1,lg:2,huge:4,grg:8,col:16},quadruped:{fine:.25,dim:.5,tiny:.75,sm:1,med:1.5,lg:3,huge:6,grg:12,col:24}},equipmentSlots:{armor:{armor:"FFD20.EquipSlots.armor"},shield:{shield:"FFD20.EquipSlots.shield"},wondrous:{slotless:"FFD20.EquipSlots.none",head:"FFD20.EquipSlots.head",headband:"FFD20.EquipSlots.headband",eyes:"FFD20.EquipSlots.eyes",shoulders:"FFD20.EquipSlots.shoulders",neck:"FFD20.EquipSlots.neck",chest:"FFD20.EquipSlots.chest",body:"FFD20.EquipSlots.body",belt:"FFD20.EquipSlots.belt",wrists:"FFD20.EquipSlots.wrists",hands:"FFD20.EquipSlots.hands",ring:"FFD20.EquipSlots.ring",feet:"FFD20.EquipSlots.feet"},clothing:{clothing:"FFD20.EquipSlots.clothing"},materia:{any:"FFD20.EquipSlots.anySlot",weapon:"FFD20.EquipSlots.weaponSlot",shield:"FFD20.EquipSlots.shieldSlot",armor:"FFD20.EquipSlots.armorSlot",weaponarmor:"FFD20.EquipSlots.weaponArmorSlot",armorShield:"FFD20.EquipSlots.armorShieldSlot",other:"FFD20.EquipSlots.otherSlot"},other:{other:"FFD20.Other"}},equipmentTypes:{armor:{_label:"FFD20.Subtypes.Item.equipment.armor.Single",lightArmor:"FFD20.Subtypes.Item.equipment.armor.Types.light",mediumArmor:"FFD20.Subtypes.Item.equipment.armor.Types.medium",heavyArmor:"FFD20.Subtypes.Item.equipment.armor.Types.heavy"},shield:{_label:"FFD20.Subtypes.Item.equipment.shield.Single",lightShield:"FFD20.Subtypes.Item.equipment.shield.Types.light",heavyShield:"FFD20.Subtypes.Item.equipment.shield.Types.heavy",towerShield:"FFD20.Subtypes.Item.equipment.shield.Types.tower",other:"FFD20.Subtypes.Item.equipment.shield.Types.misc"},wondrous:{_label:"FFD20.Subtypes.Item.equipment.wondrous.Single"},clothing:{_label:"FFD20.Subtypes.Item.equipment.clothing.Single"},materia:{_label:"FFD20.Subtypes.Item.equipment.materia.Single",ability:"FFD20.Subtypes.Item.equipment.materia.Types.ability",independent:"FFD20.Subtypes.Item.equipment.materia.Types.independent",spell:"FFD20.Subtypes.Item.equipment.materia.Types.spell",summon:"FFD20.Subtypes.Item.equipment.materia.Types.summon",support:"FFD20.Subtypes.Item.equipment.materia.Types.support"},other:{_label:"FFD20.Other"}},extraAttacks:{standard:{label:"FFD20.ExtraAttacks.Standard",iteratives:!0,manual:!1,formula:!1},advanced:{label:"FFD20.ExtraAttacks.Advanced",iteratives:!0,manual:!0,formula:!0},flurry:{label:"FFD20.ExtraAttacks.Flurry",count:"ceil(@class.level / 7)",bonus:"-(@attackSetCount * 5)",attackName:"FFD20.ExtraAttacks.FlurryAttack",flavor:"FFD20.ExtraAttacks.FlurryFlavor",modToAll:"-(@fullAttack * 2)",iteratives:!0,manual:!1,formula:!1},unflurry:{label:"FFD20.ExtraAttacks.UnFlurry",count:"floor((@class.level + 9) / 10)",flavor:"FFD20.ExtraAttacks.FlurryFlavor",attackName:"FFD20.ExtraAttacks.FlurryAttack",iteratives:!0,manual:!1,formula:!1},custom:{label:"FFD20.ExtraAttacks.Custom",iteratives:!1,manual:!0,formula:!0}},favoredClassTypes:["base","prestige","npc"],favouredClassBonusIcons:{hp:"fa-heartbeat",skill:"fa-wrench",alt:"fa-tag"},favouredClassBonuses:{hp:"FFD20.FavouredClass.Bonuses.hp",skill:"FFD20.FavouredClass.Bonuses.skill",alt:"FFD20.FavouredClass.Bonuses.alt"},featCount:!0,featTypes:{feat:"FFD20.Subtypes.Item.feat.feat.Single",classFeat:"FFD20.Subtypes.Item.feat.classFeat.Single",trait:"FFD20.Subtypes.Item.feat.trait.Single",racial:"FFD20.Subtypes.Item.feat.racial.Single",misc:"FFD20.Misc",template:"FFD20.Subtypes.Item.feat.template.Single"},featTypesPlurals:{feat:"FFD20.Subtypes.Item.feat.feat.Plural",classFeat:"FFD20.Subtypes.Item.feat.classFeat.Plural",trait:"FFD20.Subtypes.Item.feat.trait.Plural",racial:"FFD20.Subtypes.Item.feat.racial.Plural",template:"FFD20.Subtypes.Item.feat.template.Plural"},feedback:{deltas:{hp:{positive:"#00FF00",negative:"#FF0000"},temp:{positive:"#55FF00",negative:"#FF3300"},nonlethal:{positive:"#AA0077",negative:"#00AA33"},vigor:{positive:"#00FF00",negative:"#FF0000"},wounds:{positive:"#00FF00",negative:"#FF0000"},energyDrain:{positive:"#00FF00",negative:"#FF0000"},abilityScore:{positive:"#00FF00",negative:"#FF0000"}}},flyManeuverabilities:{clumsy:"FFD20.Movement.FlyManeuverability.Quality.clumsy",poor:"FFD20.Movement.FlyManeuverability.Quality.poor",average:"FFD20.Movement.FlyManeuverability.Quality.average",good:"FFD20.Movement.FlyManeuverability.Quality.good",perfect:"FFD20.Movement.FlyManeuverability.Quality.perfect"},flyManeuverabilityValues:{clumsy:-8,poor:-4,average:0,good:4,perfect:8},hauntTemplateLabels:{belligerent:"FFD20.Haunt.Template.belligerent",itemBound:"FFD20.Haunt.Template.itemBound",chained:"FFD20.Haunt.Template.chained",elusive:"FFD20.Haunt.Template.elusive",fast:"FFD20.Haunt.Template.fast",freeRoaming:"FFD20.Haunt.Template.freeRoaming",increasedArea:"FFD20.Haunt.Template.increasedArea",latent:"FFD20.Haunt.Template.latent",persistent:"FFD20.Haunt.Template.persistent",possessing:"FFD20.Haunt.Template.possessing",spiteful:"FFD20.Haunt.Template.spiteful",tenacious:"FFD20.Haunt.Template.tenacious",unyielding:"FFD20.Haunt.Template.unyielding",vaporous:"FFD20.Haunt.Template.vaporous",variant:"FFD20.Haunt.Template.variant"},hauntTemplates:{belligerent:{cr:3,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.ViD7x7D2AEIUp2dQ"},itemBound:{cr:-1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.GgK76mqrJm8iPitI"},chained:{cr:-1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.xRk4w3d0k9a3XfoR"},elusive:{cr:1,crBonus:1,crBonusTag:"persistent",uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.FeZDtjPSyxxqtvSP"},fast:{cr:2,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.gOUBR4eNOqKZrQbe"},freeRoaming:{cr:1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.70TeCwEEWNTqet9j"},increasedArea:{cr:1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.7bujYFyTIngbWcC7"},latent:{cr:0,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.LBvgVviZKigP49TT"},persistent:{cr:2,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.UJplPnsAXORwc0wG"},possessing:{cr:1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.POoYy22lWnkNtlrG"},spiteful:{cr:1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.bt61t3hOagcnoXzF"},tenacious:{cr:1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.NQsW2HGccyOeVFt0"},unyielding:{cr:2,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.F9mLugVUBaIUtU0g"},vaporous:{cr:1,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.eEur8JYjiDBCcpv6"},variant:{cr:0,uuid:"Compendium.ffd20.pf1e-rules.JournalEntry.LLIvEvZp2mWlJi72.JournalEntryPage.wo4WlQIj0hd4zYgn"}},hitDieSizes:[6,8,10,12],implantSlots:{cybertech:{none:"FFD20.Cybertech.Slots.none",arm:"FFD20.Cybertech.Slots.arm",body:"FFD20.Cybertech.Slots.body",brain:"FFD20.Cybertech.Slots.brain",ears:"FFD20.Cybertech.Slots.ears",eyes:"FFD20.Cybertech.Slots.eyes",head:"FFD20.Cybertech.Slots.head",legs:"FFD20.Cybertech.Slots.legs"}},implantTypes:{cybertech:"FFD20.Subtypes.Item.implant.cybertech.Single"},itemActionTypes:{mwak:"FFD20.ActionTypes.mwak",rwak:"FFD20.ActionTypes.rwak",twak:"FFD20.ActionTypes.twak",msak:"FFD20.ActionTypes.msak",rsak:"FFD20.ActionTypes.rsak",mcman:"FFD20.ActionTypes.mcman",rcman:"FFD20.ActionTypes.rcman",spellsave:"FFD20.ActionTypes.spellSave",save:"FFD20.ActionTypes.save",heal:"FFD20.ActionTypes.heal",other:"FFD20.ActionTypes.other"},itemEnhancementMods:{hp:10,hardness:2},iterativeAttackModifier:"@attackCount * -5",iterativeExtraAttacks:"min(3, ceil(@bab / 5) - 1)",languages:{common:"FFD20.Language.common",dwarven:"FFD20.Language.dwarven",elvaan:"FFD20.Language.elvaan",galkan:"FFD20.Language.galkan",lalafellan:"FFD20.Language.lalafellan",mithran:"FFD20.Language.mithran",moogle:"FFD20.Language.moogle",aegyllan:"FFD20.Language.aegyllan",albhedian:"FFD20.Language.albhedian",banganese:"FFD20.Language.banganese",burmecian:"FFD20.Language.burmecian",draconic:"FFD20.Language.draconic",garif:"FFD20.Language.garif",guado:"FFD20.Language.guado",hypello:"FFD20.Language.hypello",lupin:"FFD20.Language.lupin",mandragoran:"FFD20.Language.mandragoran",numish:"FFD20.Language.numish",qiqirn:"FFD20.Language.qiqirn",queran:"FFD20.Language.queran",roegadyn:"FFD20.Language.roegadyn",ronsaur:"FFD20.Language.ronsaur",seeq:"FFD20.Language.seeq",tonberry:"FFD20.Language.tonberry",vieran:"FFD20.Language.vieran",celestial:"FFD20.Language.celestial",infernal:"FFD20.Language.infernal",abyssal:"FFD20.Language.abyssal",aquan:"FFD20.Language.aquan",auran:"FFD20.Language.auran",auroran:"FFD20.Language.auroran",enochian:"FFD20.Language.enochian",ignan:"FFD20.Language.ignan",terran:"FFD20.Language.terran",thorian:"FFD20.Language.thorian",umbran:"FFD20.Language.umbran",amaljaa:"FFD20.Language.amaljaa",antican:"FFD20.Language.antican",goblin:"FFD20.Language.goblin",kojin:"FFD20.Language.kojin",orcish:"FFD20.Language.orcish",quadav:"FFD20.Language.quadav",sahagin:"FFD20.Language.sahagin",sylvan:"FFD20.Language.sylvan",undercommon:"FFD20.Language.undercommon",vanu:"FFD20.Language.vanu",yagudo:"FFD20.Language.yagudo"},levelAbilityScoreFeature:{img:"systems/ffd20/icons/skills/affliction_10.jpg",name:"FFD20.LevelUp.AbilityScore.Item.Name",system:{description:{value:"FFD20.LevelUp.AbilityScore.Item.Desc"},subType:"misc"},type:"feat"},levelAbilityScoreMult:1,levelAbilityScores:{4:1,8:1,12:1,16:1,20:1},limitedUsePeriodOrder:["round","minute","hour","day","week"],limitedUsePeriods:{single:"FFD20.LimitedUses.Periods.single",round:"FFD20.LimitedUses.Periods.round",minute:"FFD20.LimitedUses.Periods.minute",hour:"FFD20.LimitedUses.Periods.hour",day:"FFD20.LimitedUses.Periods.day",week:"FFD20.LimitedUses.Periods.week",charges:"FFD20.LimitedUses.Periods.charges"},lootTypes:{gear:"FFD20.Subtypes.Item.loot.gear.Plural",tool:"FFD20.Subtypes.Item.loot.tool.Plural",ammo:"FFD20.Subtypes.Item.loot.ammo.Plural",food:"FFD20.Subtypes.Item.loot.food.Plural",herb:"FFD20.Subtypes.Item.loot.herb.Plural",adventuring:"FFD20.Subtypes.Item.loot.adventuring.Plural",animal:"FFD20.Subtypes.Item.loot.animal.Plural",animalGear:"FFD20.Subtypes.Item.loot.animalGear.Plural",reagent:"FFD20.Subtypes.Item.loot.reagent.Plural",remedy:"FFD20.Subtypes.Item.loot.remedy.Plural",treasure:"FFD20.Subtypes.Item.loot.treasure.Plural",tradeGoods:"FFD20.Subtypes.Item.loot.tradeGoods.Plural",vehicle:"FFD20.Subtypes.Item.loot.vehicle.Plural",entertainment:"FFD20.Subtypes.Item.loot.entertainment.Plural",misc:"FFD20.Subtypes.Item.loot.misc.Plural"},magicAuraByLevel:{spell:[{power:"faint",level:1},{power:"moderate",level:4},{power:"strong",level:7},{power:"overwhelming",level:10}],item:[{power:"faint",level:1},{power:"moderate",level:6},{power:"strong",level:12},{power:"overwhelming",level:21}]},materia:{Rarity:{common:"FFD20.Materia.Rarity.Common",uncommon:"FFD20.Materia.Rarity.Uncommon",rare:"FFD20.Materia.Rarity.Rare",legendary:"FFD20.Materia.Rarity.Legendary"},RarityMath:{common:1,uncommon:2,rare:3,legendary:4},Slot:{unslotted:"FFD20.Materia.Slot.Unslotted",weapon:"FFD20.Materia.Slot.Weapon",shield:"FFD20.Materia.Slot.Shield",armor:"FFD20.Materia.Slot.Armor",other:"FFD20.Materia.Slot.Other"},Attuned:{unattuned:"",attuned:""}},measureUnits:{ft:"FFD20.Distance.ft",mi:"FFD20.Distance.mi",m:"FFD20.Distance.m",km:"FFD20.Distance.km"},measureUnitsShort:{ft:"FFD20.Distance.ftShort",mi:"FFD20.Distance.miShort",m:"FFD20.Distance.mShort",km:"FFD20.Distance.kmShort"},naturalAttacks:{secondary:{penalty:"-5"}},overlandSpeed:{imperial:{default:{per:10,out:1,unit:"mi"}},metric:{rounded:{per:3,out:1.5,unit:"km"},exact:{per:3,out:1.6,unit:"km"}}},partyRest:{1:{hours:8,double:null},2:{hours:16,double:null},3:{hours:12,double:null},4:{hours:10.667,double:16},5:{hours:10,double:16},6:{hours:9.6,double:12},7:{hours:9.332,double:12},8:{hours:9,double:10.667}},pointBuy:{low:{label:"FFD20.Application.PointBuy.Type.low",points:10},standard:{label:"FFD20.Application.PointBuy.Type.standard",points:15},high:{label:"FFD20.Application.PointBuy.Type.high",points:20},epic:{label:"FFD20.Application.PointBuy.Type.epic",points:25}},raceTypes:{core:"FFD20.RaceTypes.core",base:"FFD20.RaceTypes.base",beastman:"FFD20.RaceTypes.beastman",monstrous:"FFD20.RaceTypes.monstrous"},racialTraitCategories:{standard:"FFD20.RacialTraitCategories.standard",defense:"FFD20.RacialTraitCategories.defense",featSkills:"FFD20.RacialTraitCategories.featSkills",magical:"FFD20.RacialTraitCategories.magical",movement:"FFD20.RacialTraitCategories.movement",senses:"FFD20.RacialTraitCategories.senses",offense:"FFD20.RacialTraitCategories.offense",other:"FFD20.RacialTraitCategories.other",weakness:"FFD20.RacialTraitCategories.weakness",alternate:"FFD20.RacialTraitCategories.alternate"},re:{traitSeparator:/\s*[;]\s*/g},savingThrows:{fort:"FFD20.SavingThrowFort",ref:"FFD20.SavingThrowRef",will:"FFD20.SavingThrowWill"},senses:{bs:"FFD20.Sense.blindsight",bse:"FFD20.Sense.blindsense",dv:"FFD20.Sense.darkvision",ts:"FFD20.Sense.tremorsense",tr:"FFD20.Sense.trueseeing",ll:"FFD20.Sense.lowlight",ls:"FFD20.Sense.lifesense",si:"FFD20.Sense.seeInvis",sid:"FFD20.Sense.seeInDark",sc:"FFD20.Sense.scent"},sheetSections:y,shieldTypes:{none:0,other:1,light:2,heavy:3,tower:4},sizeChart:{fine:"F",dim:"D",tiny:"T",sm:"S",med:"M",lg:"L",huge:"H",grg:"G",col:"C"},sizeDie:["1","1d2","1d3","1d4","1d6","1d8","1d10","2d6","2d8","3d6","3d8","4d6","4d8","6d6","6d8","8d6","8d8","12d6","12d8","16d6","16d8"],sizeFlyMods:{fine:8,dim:6,tiny:4,sm:2,med:0,lg:-2,huge:-4,grg:-6,col:-8},sizeMods:{fine:8,dim:4,tiny:2,sm:1,med:0,lg:-1,huge:-2,grg:-4,col:-8},sizeSpecialMods:{fine:-8,dim:-4,tiny:-2,sm:-1,med:0,lg:1,huge:2,grg:4,col:8},sizeStealthMods:{fine:16,dim:12,tiny:8,sm:4,med:0,lg:-4,huge:-8,grg:-12,col:-16},skillCompendiumEntries:{acr:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.gGfJO90ZuRT4sZ9X",apr:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.QGxoGsSIAOoe5dTW",blf:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.kRK5XwVBvcMi35w2",clm:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ZAwjVOTwsBpZRgw4",crf:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.3E8pxbjI8MD3JbfQ",dip:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.uB9Fy36RUjibxqvt",dev:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.cSdUATLHBFfw3v4s",dis:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xg25z3GIpS590NDW",dri:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.EiaJIZVdGDvLxVll",esc:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.DTNlXXg77s3178WJ",fly:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.iH69GIwm8BjecrPN",han:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.IrVgSeMcAM8rAh2B",hea:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.nHbYSOoe1SzqEO9w",int:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.KNn8uxHu23phKC0y",kar:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kdu:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",ken:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kge:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",khi:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",klo:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kna:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kno:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kpl:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kre:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt",kte:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ki0QvL0K7u4YuK0O",lin:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.SqLm3Deag2FpP8ty",nav:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.qtwTUimJjHnSjLkp",per:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.2h6hz5AkTDxKPFxr",prf:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.emzBKDFNkNnC7N8u",pil:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.rVqzliJeSlYj7ewt",pro:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.224EaK0K72NhCeRi",rep:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.DWB0xZqtaxOwfd2S",rid:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xQbTtefpEfEaOYo7",sen:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ka0VQGItdrWw3paO",slt:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.joza8kAIiImrPft7",spl:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.VRD7jxiIAxKPt6EF",ste:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.wRWHk7tCUHR99PzD",sur:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.pLdYavy4nssLEoGV",swm:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xhmDhOXuBbfVcD0Q",umd:"Compendium.ffd20.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.A8j7nF6qHwuGEC2E"},skills:{acr:"FFD20.SkillAcr",apr:"FFD20.SkillApr",blf:"FFD20.SkillBlf",clm:"FFD20.SkillClm",crf:"FFD20.SkillCrf",dip:"FFD20.SkillDip",dev:"FFD20.SkillDev",dis:"FFD20.SkillDis",dri:"FFD20.SkillDri",esc:"FFD20.SkillEsc",fly:"FFD20.SkillFly",han:"FFD20.SkillHan",hea:"FFD20.SkillHea",int:"FFD20.SkillInt",kar:"FFD20.SkillKAr",kdu:"FFD20.SkillKDu",ken:"FFD20.SkillKEn",kge:"FFD20.SkillKGe",khi:"FFD20.SkillKHi",klo:"FFD20.SkillKLo",kna:"FFD20.SkillKNa",kno:"FFD20.SkillKNo",kpl:"FFD20.SkillKPl",kre:"FFD20.SkillKRe",kte:"FFD20.SkillKTe",lin:"FFD20.SkillLin",nav:"FFD20.SkillNav",per:"FFD20.SkillPer",prf:"FFD20.SkillPrf",pil:"FFD20.SkillPil",pro:"FFD20.SkillPro",rep:"FFD20.SkillRep",rid:"FFD20.SkillRid",sen:"FFD20.SkillSen",slt:"FFD20.SkillSlt",spl:"FFD20.SkillSpl",ste:"FFD20.SkillSte",sur:"FFD20.SkillSur",swm:"FFD20.SkillSwm",umd:"FFD20.SkillUMD"},spellComponents:{verbal:"FFD20.SpellComponents.Type.verbal.Abbr",somatic:"FFD20.SpellComponents.Type.somatic.Abbr",thought:"FFD20.SpellComponents.Type.thought.Abbr",emotion:"FFD20.SpellComponents.Type.emotion.Abbr",material:"FFD20.SpellComponents.Type.material.Abbr",focus:"FFD20.SpellComponents.Type.focus.Abbr",divineFocus:"FFD20.SpellComponents.Type.divineFocus.Abbr"},spellDescriptors:{acid:"FFD20.SpellDescriptors.acid",air:"FFD20.SpellDescriptors.air",chaotic:"FFD20.SpellDescriptors.chaotic",cold:"FFD20.SpellDescriptors.cold",curse:"FFD20.SpellDescriptors.curse",darkness:"FFD20.SpellDescriptors.darkness",death:"FFD20.SpellDescriptors.death",disease:"FFD20.SpellDescriptors.disease",draconic:"FFD20.SpellDescriptors.draconic",earth:"FFD20.SpellDescriptors.earth",electricity:"FFD20.SpellDescriptors.electricity",emotion:"FFD20.SpellDescriptors.emotion",evil:"FFD20.SpellDescriptors.evil",fear:"FFD20.SpellDescriptors.fear",fire:"FFD20.SpellDescriptors.fire",force:"FFD20.SpellDescriptors.force",good:"FFD20.SpellDescriptors.good",languageDependent:"FFD20.SpellDescriptors.languageDependent",lawful:"FFD20.SpellDescriptors.lawful",light:"FFD20.SpellDescriptors.light",meditative:"FFD20.SpellDescriptors.meditative",mindAffecting:"FFD20.SpellDescriptors.mindAffecting",pain:"FFD20.SpellDescriptors.pain",poison:"FFD20.SpellDescriptors.poison",ruse:"FFD20.SpellDescriptors.ruse",shadow:"FFD20.SpellDescriptors.shadow",sonic:"FFD20.SpellDescriptors.sonic",water:"FFD20.SpellDescriptors.water"},spellLevels:{0:"FFD20.SpellLevels.0",1:"FFD20.SpellLevels.1",2:"FFD20.SpellLevels.2",3:"FFD20.SpellLevels.3",4:"FFD20.SpellLevels.4",5:"FFD20.SpellLevels.5",6:"FFD20.SpellLevels.6",7:"FFD20.SpellLevels.7",8:"FFD20.SpellLevels.8",9:"FFD20.SpellLevels.9"},spellMultischools:d,spellMultischoolsMap:u,spellRangeFormulas:{close:"25 + floor(@cl / 2) * 5",medium:"100 + @cl * 10",long:"400 + @cl * 40"},spellSchools:{crn:"FFD20.SpellSchools.core.Chronomancy",drk:"FFD20.SpellSchools.core.Dark",ele:"FFD20.SpellSchools.core.Elemental",enf:"FFD20.SpellSchools.core.Enfeebling",enh:"FFD20.SpellSchools.core.Enhancing",heal:"FFD20.SpellSchools.core.Healing",ill:"FFD20.SpellSchools.core.Illusion",lit:"FFD20.SpellSchools.core.Light",nec:"FFD20.SpellSchools.core.Necromancy",nel:"FFD20.SpellSchools.core.NonElemental",sum:"FFD20.SpellSchools.core.Summoning",uni:"FFD20.SpellSchools.core.Universal",misc:"FFD20.SpellSchools.core.Misc",multi:"FFD20.SpellSchools.core.multiSchool"},spellSubschools:m,spellSubschoolsMap:p,spellcasting:{type:{spontaneous:"FFD20.UseSpellPoints",prepared:"FFD20.SpellPrepPrepared",hybrid:"FFD20.SpellPrepHybrid"},spells:{astrologian:"FFD20.Spellcasting.Type.Astrologian",blackmage:"FFD20.Spellcasting.Type.BlackMage",bluemage:"FFD20.Spellcasting.Type.BlueMage",geomancer:"FFD20.Spellcasting.Type.Geomancer",illusionist:"FFD20.Spellcasting.Type.Illusionist",necromancer:"FFD20.Spellcasting.Type.Necromancer",summoner:"FFD20.Spellcasting.Type.Summoner",timemage:"FFD20.Spellcasting.Type.TimeMage",whitemage:"FFD20.Spellcasting.Type.WhiteMage",bard:"FFD20.Spellcasting.Type.Bard",cleric:"FFD20.Spellcasting.Type.Cleric",redmage:"FFD20.Spellcasting.Type.RedMage",scholar:"FFD20.Spellcasting.Type.Scholar",darkknight:"FFD20.Spellcasting.Type.DarkKnight",holyknight:"FFD20.Spellcasting.Type.HolyKnight"}},stackingBonusTypes:["untyped","untypedPerm","dodge","racial","circumstance"],temporaryRollDataFields:{actor:["d20","attackBonus","attackCount","formulaicAttack","damageBonus","pointBlankBonus","rapidShotPenalty","powerAttackBonus","powerAttackPenalty","conditionals","concentrationBonus","formulaBonus","dcBonus","chargeCostBonus","chargeCost","sizeBonus","bonus","critMult","ablMult","ablDamage","cl","sl","class","ablMod","item","action","level","mod"]},tierAbilityScoreMult:2,tierAbilityScores:{2:2,4:2,6:2,8:2,10:2},timePeriods:{inst:"FFD20.Time.Period.inst.Label",turn:"FFD20.Time.Period.turn.Label",round:"FFD20.Time.Period.round.Label",minute:"FFD20.Time.Period.minute.Label",hour:"FFD20.Time.Period.hour.Label",day:"FFD20.Time.Period.day.Label",month:"FFD20.Time.Period.month.Label",year:"FFD20.Time.Period.year.Label",perm:"FFD20.Time.Period.perm.Label",seeText:"FFD20.SeeText",spec:"FFD20.Special"},timePeriodsShort:{turn:"FFD20.Time.Period.turn.Short",round:"FFD20.Time.Period.round.Short",minute:"FFD20.Time.Period.minute.Short",hour:"FFD20.Time.Period.hour.Short"},tokenRuler:{grid:{immobile:{color:16711680},start:{color:65280,alpha:.2},step:{color:43520},move:{color:39168},move2:{color:5609728},move3:{color:7829248},run:{color:11184640},run2:{color:12276992},exceed:{color:10027008}},movement:{default:{max:5,run:!0,step:!0},swimSkill:{factors:{2:4,3:5,4:5},max:2,run:!1,step:!1},climbSkill:{factors:{2:4,3:5,4:5},max:2,run:!1,step:!1},crawl:{max:1,run:!1,step:!1}}},tokenSizes:{fine:{w:1,h:1,scale:.25},dim:{w:1,h:1,scale:.4},tiny:{w:1,h:1,scale:.55},sm:{w:1,h:1,scale:.75},med:{w:1,h:1,scale:1},lg:{w:2,h:2,scale:1},huge:{w:3,h:3,scale:1},grg:{w:4,h:4,scale:1},col:{w:6,h:6,scale:1}},traitSelector:{minChoicesForSearch:6},traitTypes:{combat:"FFD20.Trait.combat",magic:"FFD20.Trait.magic",faith:"FFD20.Trait.faith",social:"FFD20.Trait.social",campaign:"FFD20.Trait.campaign",cosmic:"FFD20.Trait.cosmic",equipment:"FFD20.Trait.equipment",exemplar:"FFD20.Trait.exemplar",faction:"FFD20.Trait.faction",family:"FFD20.Trait.family",mount:"FFD20.Trait.mount",race:"FFD20.Trait.race",region:"FFD20.Trait.region",religion:"FFD20.Trait.religion",drawback:"FFD20.Trait.drawback"},trapPerceptionModifiers:{electricEyes:15,sound:15,vision:{arcaneEye:20,clairvoyance:15,trueSeeing:30}},traps:{bypass:{lock:"FFD20.Trap.Bypass.Lock",hiddenSwitch:"FFD20.Trap.Bypass.HiddenSwitch",hiddenLock:"FFD20.Trap.Bypass.HiddenLock"},reset:{automatic:"FFD20.Trap.Reset.Automatic",manual:"FFD20.Trap.Reset.Manual",repair:"FFD20.Trap.Reset.Repair"},trigger:{electricEyes:"FFD20.Trap.Triggers.ElectricEyes",genetic:"FFD20.Trap.Triggers.Genetic",location:"FFD20.Trap.Triggers.Location",proximity:"FFD20.Trap.Triggers.Proximity",sound:"FFD20.Trap.Triggers.Sound",spell:"FFD20.Trap.Triggers.Spell",timed:"FFD20.Trap.Triggers.Timed",touch:"FFD20.Trap.Triggers.Touch",visual:"FFD20.Trap.Triggers.Visual"},types:{magic:"FFD20.Trap.Types.Magic",mechanical:"FFD20.Trap.Types.Mechanical"},vision:{arcaneEye:"FFD20.Trap.Vision.ArcaneEye",clairvoyance:"FFD20.Trap.Vision.Clairvoyance",darkvision:"FFD20.Sense.darkvision",seeInDarkness:"FFD20.Sense.seeInDark",trueSeeing:"FFD20.Trap.Vision.TrueSeeing"}},unequippableLoot:["food","herb","reagent","treasure","tradeGoods","vehicle","entertainment","ammo"],vehicleMaterials:{leather:{label:"FFD20.Materials.Types.leather",hp:10,hardness:0},wood:{label:"FFD20.Materials.Types.wood",hp:15,hardness:5},stone:{label:"FFD20.Materials.Types.stone",hp:20,hardness:8},metal:{label:"FFD20.Vehicles.Metal",hp:20,hardness:10}},vehicles:{size:{lg:{label:"FFD20.ActorSize.lg",space:"FFD20.Vehicles.Space.Large"},huge:{label:"FFD20.ActorSize.huge",space:"FFD20.Vehicles.Space.Huge"},grg:{label:"FFD20.ActorSize.grg",space:"FFD20.Vehicles.Space.Gargantuan"},col:{label:"FFD20.ActorSize.col",space:"FFD20.Vehicles.Space.Colossal"}},type:{land:"FFD20.Vehicles.Types.Land",sea:"FFD20.Vehicles.Types.Sea",air:"FFD20.Vehicles.Types.Air"}},weaponGroups:{axes:"FFD20.WeaponGroup.axes",bladesHeavy:"FFD20.WeaponGroup.bladesHeavy",bladesLight:"FFD20.WeaponGroup.bladesLight",bows:"FFD20.WeaponGroup.bows",close:"FFD20.WeaponGroup.close",crossbows:"FFD20.WeaponGroup.crossbows",double:"FFD20.WeaponGroup.double",firearms:"FFD20.WeaponGroup.firearms",flails:"FFD20.WeaponGroup.flails",hammers:"FFD20.WeaponGroup.hammers",monk:"FFD20.WeaponGroup.monk",natural:"FFD20.WeaponGroup.natural",polearms:"FFD20.WeaponGroup.polearms",siegeEngines:"FFD20.WeaponGroup.siegeEngines",spears:"FFD20.WeaponGroup.spears",thrown:"FFD20.WeaponGroup.thrown",tribal:"FFD20.WeaponGroup.tribal"},weaponHoldTypes:{"1h":"FFD20.WeaponHoldTypeOneHanded","2h":"FFD20.WeaponHoldTypeTwoHanded",oh:"FFD20.WeaponHoldTypeOffhand"},weaponProficiencies:{simple:"FFD20.Proficiency.Weapon.simple",martial:"FFD20.Proficiency.Weapon.martial",exotic:"FFD20.Proficiency.Weapon.exotic",firearm:"FFD20.Proficiency.Weapon.firearm",siege:"FFD20.Proficiency.Weapon.siege",heavy:"FFD20.Proficiency.Weapon.heavy",chef:"FFD20.Proficiency.Weapon.chef",power:"FFD20.Proficiency.Weapon.power"},weaponProperties:{ato:"FFD20.WeaponProperty.Automatic",blc:"FFD20.WeaponProperty.Blocking",brc:"FFD20.WeaponProperty.Brace",dea:"FFD20.WeaponProperty.Deadly",dst:"FFD20.WeaponProperty.Distracting",dbl:"FFD20.WeaponProperty.Double",dis:"FFD20.WeaponProperty.Disarm",fin:"FFD20.WeaponProperty.Finesse",frg:"FFD20.WeaponProperty.Fragile",grp:"FFD20.WeaponProperty.Grapple",imp:"FFD20.WeaponProperty.Improvised",mnk:"FFD20.WeaponProperty.Monk",nnl:"FFD20.WeaponProperty.NonLethal",prf:"FFD20.WeaponProperty.Performance",rch:"FFD20.WeaponProperty.Reach",sct:"FFD20.WeaponProperty.Scatter",sma:"FFD20.WeaponProperty.SemiAutomatic",slf:"FFD20.WeaponProperty.SlowFiring",snd:"FFD20.WeaponProperty.Sunder",spc:"FFD20.WeaponProperty.Special",thr:"FFD20.WeaponProperty.Thrown",trp:"FFD20.WeaponProperty.Trip"},weaponTypes:{simple:{_label:"FFD20.Subtypes.Item.weapon.simple.Single",light:"FFD20.WeaponSubtypeLight","1h":"FFD20.WeaponSubtypeOneHanded","2h":"FFD20.WeaponSubtypeTwoHanded",ranged:"FFD20.WeaponSubtypeRanged"},martial:{_label:"FFD20.Subtypes.Item.weapon.martial.Single",light:"FFD20.WeaponSubtypeLight","1h":"FFD20.WeaponSubtypeOneHanded","2h":"FFD20.WeaponSubtypeTwoHanded",ranged:"FFD20.WeaponSubtypeRanged"},exotic:{_label:"FFD20.Subtypes.Item.weapon.exotic.Single",light:"FFD20.WeaponSubtypeLight","1h":"FFD20.WeaponSubtypeOneHanded","2h":"FFD20.WeaponSubtypeTwoHanded",ranged:"FFD20.WeaponSubtypeRanged"},firearm:{_label:"FFD20.Subtypes.Item.weapon.firearm.Single",ranged:"FFD20.WeaponSubtypeRanged"},siege:{_label:"FFD20.Subtypes.Item.weapon.siege.Single",assault:"FFD20.WeaponSubtypeAssault",indirect:"FFD20.WeaponSubtypeIndirect",direct:"FFD20.WeaponSubtypeDirect"},heavy:{_label:"FFD20.Subtypes.Item.weapon.heavy.Single",ranged:"FFD20.WeaponSubtypeRanged"},chef:{_label:"FFD20.Subtypes.Item.weapon.chef.Single",light:"FFD20.WeaponSubtypeLight","1h":"FFD20.WeaponSubtypeOneHanded","2h":"FFD20.WeaponSubtypeTwoHanded",ranged:"FFD20.WeaponSubtypeRanged"},power:{_label:"FFD20.Subtypes.Item.weapon.power.Single",light:"FFD20.WeaponSubtypeLight","1h":"FFD20.WeaponSubtypeOneHanded","2h":"FFD20.WeaponSubtypeTwoHanded",ranged:"FFD20.WeaponSubtypeRanged"},misc:{_label:"FFD20.Subtypes.Item.weapon.misc.Single",splash:"FFD20.WeaponTypeSplash",other:"FFD20.Other"}},weightUnitsShort:{kg:"FFD20.Kgs",lbs:"FFD20.Lbs"},woundThresholdChangeTargets:["~attackCore","cl","allSavingThrows","ac","skills","allChecks"],woundThresholdConditions:{0:"FFD20.WoundLevel.healthy",1:"FFD20.WoundLevel.grazed",2:"FFD20.WoundLevel.wounded",3:"FFD20.WoundLevel.critical"}},Symbol.toStringTag,{value:"Module"})),F=Object.freeze(Object.defineProperty({__proto__:null,actionTypeToContext:{mwak:"mwdamage",twak:"twdamage",rwak:"rwdamage",msak:"sdamage",rsak:"sdamage",spellsave:"sdamage"},messageVisibility:{publicroll:"FFD20.Chat.Visibility.Public",gmroll:"FFD20.Chat.Visibility.Private",blindroll:"FFD20.Chat.Visibility.Blind",selfroll:"FFD20.Chat.Visibility.Self"},movementKeys:["land","swim","fly","climb","burrow"],step:5},Symbol.toStringTag,{value:"Module"}));class BaseFilter{static localizeChoices=!1;static localizeLabel=!0;static localizePrefix="";static label="";static indexField="";static type="";static types=[];static TEMPLATE="";id;choices=null;compendiumBrowser=null;constructor(e){this.compendiumBrowser=e,Object.defineProperty(this,"id",{value:foundry.utils.randomID(),writable:!1,configurable:!1}),this.registerIndexFields()}static get handledTypes(){return new Set([this.type,...this.types].filter((e=>e)))}get active(){return this.choices?.some((e=>e.active))??!1}get activeChoiceCount(){return this.choices?.filter((e=>e.active)).length??0}registerIndexFields(){if(!this.compendiumBrowser)return;const e=this.compendiumBrowser.constructor.documentName;if(this.constructor.indexField.startsWith("__"))return;const t=CONFIG[e]?.compendiumIndexFields;t&&this.constructor.indexField&&!t.includes(this.constructor.indexField)&&t?.push(this.constructor.indexField)}async setup(){await this.prepareChoices()}prepareChoices(){this.choices=new foundry.utils.Collection}hasChoices(e=1){return this.choices?.size>e}reset(){}applyFilter(e){}getData(){return{id:this.id,template:this.constructor.TEMPLATE,label:this.constructor.localizeLabel?game.i18n.localize(this.constructor.label):this.constructor.label,active:this.active,activeCount:this.activeChoiceCount,choices:this.choices?.contents??[],field:this.constructor.indexField}}activateListeners(e){}}function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var v,D={exports:{}},S=D.exports;var k=function requireFuzzysort(){return v||(v=1,t=S,s=e=>{var prepare=e=>{"number"==typeof e?e=""+e:"string"!=typeof e&&(e="");var t=prepareLowerInfo(e);return new_result(e,{_targetLower:t._lower,_targetLowerCodes:t.lowerCodes,_bitflags:t.bitflags})};class Result{get indexes(){return this._indexes.slice(0,this._indexes.len).sort(((e,t)=>e-t))}set indexes(e){return this._indexes=e}highlight(e,t){return((e,t="<b>",s="</b>")=>{for(var a="function"==typeof t?t:void 0,i=e.target,n=i.length,o=e.indexes,r="",l=0,c=0,d=!1,u=[],m=0;m<n;++m){var p=i[m];if(o[c]===m){if(++c,d||(d=!0,a?(u.push(r),r=""):r+=t),c===o.length){a?(r+=p,u.push(a(r,l++)),r="",u.push(i.substr(m+1))):r+=p+s+i.substr(m+1);break}}else d&&(d=!1,a?(u.push(a(r,l++)),r=""):r+=s);r+=p}return a?u:r})(this,e,t)}get score(){return normalizeScore(this._score)}set score(e){this._score=denormalizeScore(e)}}class KeysResult extends Array{get score(){return normalizeScore(this._score)}set score(e){this._score=denormalizeScore(e)}}var new_result=(e,t)=>{const s=new Result;return s.target=e,s.obj=t.obj??y,s._score=t._score??u,s._indexes=t._indexes??[],s._targetLower=t._targetLower??"",s._targetLowerCodes=t._targetLowerCodes??y,s._nextBeginningIndexes=t._nextBeginningIndexes??y,s._bitflags=t._bitflags??0,s},normalizeScore=e=>e===u?0:e>1?e:Math.E**(-2*((1-e)**.04307-1)),denormalizeScore=e=>0===e?u:e>1?e:1-Math.pow(Math.log(e)/-2+1,1/.04307),prepareSearch=e=>{"number"==typeof e?e=""+e:"string"!=typeof e&&(e=""),e=e.trim();var t=prepareLowerInfo(e),s=[];if(t.containsSpace){var a=e.split(/\s+/);a=[...new Set(a)];for(var i=0;i<a.length;i++)if(""!==a[i]){var n=prepareLowerInfo(a[i]);s.push({lowerCodes:n.lowerCodes,_lower:a[i].toLowerCase(),containsSpace:!1})}}return{lowerCodes:t.lowerCodes,_lower:t._lower,containsSpace:t.containsSpace,bitflags:t.bitflags,spaceSearches:s}},getPrepared=e=>{if(e.length>999)return prepare(e);var s=t.get(e);return void 0!==s||(s=prepare(e),t.set(e,s)),s},getPreparedSearch=e=>{if(e.length>999)return prepareSearch(e);var t=s.get(e);return void 0!==t||(t=prepareSearch(e),s.set(e,t)),t},all=(e,t)=>{var s=[];s.total=e.length;var a=t?.limit||d;if(t?.key)for(var i=0;i<e.length;i++){var n=e[i];if((c=getValue(n,t.key))!=y){isPrepared(c)||(c=getPrepared(c));var o=new_result(c.target,{_score:c._score,obj:n});if(s.push(o),s.length>=a)return s}}else if(t?.keys)for(i=0;i<e.length;i++){n=e[i];for(var r=new KeysResult(t.keys.length),l=t.keys.length-1;l>=0;--l)(c=getValue(n,t.keys[l]))?(isPrepared(c)||(c=getPrepared(c)),c._score=u,c._indexes.len=0,r[l]=c):r[l]=b;if(r.obj=n,r._score=u,s.push(r),s.length>=a)return s}else for(i=0;i<e.length;i++){var c;if((c=e[i])!=y&&(isPrepared(c)||(c=getPrepared(c)),c._score=u,c._indexes.len=0,s.push(c),s.length>=a))return s}return s},algorithm=(e,t,s=!1,n=!1)=>{if(!1===s&&e.containsSpace)return algorithmSpaces(e,t,n);for(var o=e._lower,r=e.lowerCodes,l=r[0],c=t._targetLowerCodes,d=r.length,u=c.length,m=0,p=0,h=0;;){if(l===c[p]){if(a[h++]=p,++m===d)break;l=r[m]}if(++p>=u)return y}m=0;var f=!1,g=0,b=t._nextBeginningIndexes;b===y&&(b=t._nextBeginningIndexes=prepareNextBeginningIndexes(t.target));var F=0;if((p=0===a[0]?0:b[a[0]-1])!==u)for(;;)if(p>=u){if(m<=0)break;if(++F>200)break;--m;var v=i[--g];p=b[v]}else if(r[m]===c[p]){if(i[g++]=p,++m===d){f=!0;break}++p}else p=b[p];var D=d<=1?-1:t._targetLower.indexOf(o,a[0]),S=!!~D,k=!!S&&(0===D||t._nextBeginningIndexes[D-1]===D);if(S&&!k)for(var C=0;C<b.length;C=b[C])if(!(C<=D)){for(var w=0;w<d&&r[w]===t._targetLowerCodes[C+w];w++);if(w===d){D=C,k=!0;break}}var calculateScore=e=>{for(var t=0,s=0,a=1;a<d;++a)e[a]-e[a-1]!=1&&(t-=e[a],++s);if(t-=(e[d-1]-e[0]-(d-1)+12)*s,0!==e[0]&&(t-=e[0]*e[0]*.2),f){var i=1;for(a=b[0];a<u;a=b[a])++i;i>24&&(t*=10*(i-24))}else t*=1e3;return t-=(u-d)/2,S&&(t/=1+d*d*1),k&&(t/=1+d*d*1),t-=(u-d)/2};if(f)if(k){for(C=0;C<d;++C)a[C]=D+C;T=a,_=calculateScore(a)}else T=i,_=calculateScore(i);else{if(S)for(var C=0;C<d;++C)a[C]=D+C;var T,_=calculateScore(T=a)}for(t._score=_,C=0;C<d;++C)t._indexes[C]=T[C];t._indexes.len=d;const P=new Result;return P.target=t.target,P._score=t._score,P._indexes=t._indexes,P},algorithmSpaces=(e,t,s)=>{for(var a=new Set,i=0,o=y,l=0,c=e.spaceSearches,d=c.length,m=0,resetNextBeginningIndexes=()=>{for(let e=m-1;e>=0;e--)t._nextBeginningIndexes[n[2*e+0]]=n[2*e+1]},p=!1,h=0;h<d;++h){r[h]=u;var f=c[h];if(o=algorithm(f,t),s){if(o===y)continue;p=!0}else if(o===y)return resetNextBeginningIndexes(),y;if(h!==d-1){var g=o._indexes,b=!0;for(let e=0;e<g.len-1;e++)if(g[e+1]-g[e]!=1){b=!1;break}if(b){var F=g[g.len-1]+1,v=t._nextBeginningIndexes[F-1];for(let e=F-1;e>=0&&v===t._nextBeginningIndexes[e];e--)t._nextBeginningIndexes[e]=F,n[2*m+0]=e,n[2*m+1]=v,m++}}i+=o._score/d,r[h]=o._score/d,o._indexes[0]<l&&(i-=2*(l-o._indexes[0])),l=o._indexes[0];for(var D=0;D<o._indexes.len;++D)a.add(o._indexes[D])}if(s&&!p)return y;resetNextBeginningIndexes();var S=algorithm(e,t,!0);if(S!==y&&S._score>i){if(s)for(h=0;h<d;++h)r[h]=S._score/d;return S}s&&(o=t),o._score=i,h=0;for(let e of a)o._indexes[h++]=e;return o._indexes.len=h,o},remove_accents=e=>e.replace(/\p{Script=Latin}+/gu,(e=>e.normalize("NFD"))).replace(/[\u0300-\u036f]/g,""),prepareLowerInfo=e=>{for(var t=(e=remove_accents(e)).length,s=e.toLowerCase(),a=[],i=0,n=!1,o=0;o<t;++o){var r=a[o]=s.charCodeAt(o);32!==r?i|=1<<(r>=97&&r<=122?r-97:r>=48&&r<=57?26:r<=127?30:31):n=!0}return{lowerCodes:a,bitflags:i,containsSpace:n,_lower:s}},prepareNextBeginningIndexes=e=>{for(var t=(e=remove_accents(e)).length,s=(e=>{for(var t=e.length,s=[],a=0,i=!1,n=!1,o=0;o<t;++o){var r=e.charCodeAt(o),l=r>=65&&r<=90,c=l||r>=97&&r<=122||r>=48&&r<=57,d=l&&!i||!n||!c;i=l,n=c,d&&(s[a++]=o)}return s})(e),a=[],i=s[0],n=0,o=0;o<t;++o)i>o?a[o]=i:(i=s[++n],a[o]=void 0===i?t:i);return a},t=new Map,s=new Map,a=[],i=[],n=[],o=[],r=[],l=[],c=[],getValue=(e,t)=>{var s=e[t];if(void 0!==s)return s;if("function"==typeof t)return t(e);var a=t;Array.isArray(t)||(a=t.split("."));for(var i=a.length,n=-1;e&&++n<i;)e=e[a[n]];return e},isPrepared=e=>"object"==typeof e&&"number"==typeof e._bitflags,d=1/0,u=-d,m=[];m.total=0;var p,h,f,g,y=null,b=prepare(""),F=(p=[],h=0,g=e=>{for(var t=0,s=p[t],a=1;a<h;){var i=a+1;t=a,i<h&&p[i]._score<p[a]._score&&(t=i),p[t-1>>1]=p[t],a=1+(t<<1)}for(var n=t-1>>1;t>0&&s._score<p[n]._score;n=(t=n)-1>>1)p[t]=p[n];p[t]=s},(f={}).add=e=>{var t=h;p[h++]=e;for(var s=t-1>>1;t>0&&e._score<p[s]._score;s=(t=s)-1>>1)p[t]=p[s];p[t]=e},f.poll=e=>{if(0!==h){var t=p[0];return p[0]=p[--h],g(),t}},f.peek=e=>{if(0!==h)return p[0]},f.replaceTop=e=>{p[0]=e,g()},f);return{single:(e,t)=>{if(!e||!t)return y;var s=getPreparedSearch(e);isPrepared(t)||(t=getPrepared(t));var a=s.bitflags;return(a&t._bitflags)!==a?y:algorithm(s,t)},go:(e,t,s)=>{if(!e)return s?.all?all(t,s):m;var a=getPreparedSearch(e),i=a.bitflags,n=a.containsSpace,p=denormalizeScore(s?.threshold||0),h=s?.limit||d,f=0,g=0,v=t.length;function push_result(e){f<h?(F.add(e),++f):(++g,e._score>F.peek()._score&&F.replaceTop(e))}if(s?.key)for(var D=s.key,S=0;S<v;++S){var k=t[S];(x=getValue(k,D))&&(isPrepared(x)||(x=getPrepared(x)),(i&x._bitflags)===i&&(M=algorithm(a,x))!==y&&(M._score<p||(M.obj=k,push_result(M))))}else if(s?.keys){var C=s.keys,w=C.length;e:for(S=0;S<v;++S){k=t[S];for(var T=0,_=0;_<w;++_)D=C[_],(x=getValue(k,D))?(isPrepared(x)||(x=getPrepared(x)),l[_]=x,T|=x._bitflags):l[_]=b;if((i&T)===i){if(n)for(let e=0;e<a.spaceSearches.length;e++)o[e]=u;for(_=0;_<w;++_)if((x=l[_])!==b)if(c[_]=algorithm(a,x,!1,n),c[_]!==y){if(n)for(let e=0;e<a.spaceSearches.length;e++)r[e]>-1e3&&o[e]>u&&(O=(o[e]+r[e])/4)>o[e]&&(o[e]=O),r[e]>o[e]&&(o[e]=r[e])}else c[_]=b;else c[_]=b;if(n){for(let e=0;e<a.spaceSearches.length;e++)if(o[e]===u)continue e}else{var P=!1;for(let e=0;e<w;e++)if(c[e]._score!==u){P=!0;break}if(!P)continue}var A=new KeysResult(w);for(let e=0;e<w;e++)A[e]=c[e];if(n){var I=0;for(let e=0;e<a.spaceSearches.length;e++)I+=o[e]}else{I=u;for(let e=0;e<w;e++){var O;(M=A[e])._score>-1e3&&I>u&&(O=(I+M._score)/4)>I&&(I=O),M._score>I&&(I=M._score)}}if(A.obj=k,A._score=I,s?.scoreFn){if(!(I=s.scoreFn(A)))continue;I=denormalizeScore(I),A._score=I}I<p||push_result(A)}}}else for(S=0;S<v;++S){var x,M;(x=t[S])&&(isPrepared(x)||(x=getPrepared(x)),(i&x._bitflags)===i&&(M=algorithm(a,x))!==y&&(M._score<p||push_result(M)))}if(0===f)return m;var E=Array(f);for(S=f-1;S>=0;--S)E[S]=F.poll();return E.total=f+g,E},prepare,cleanup:()=>{t.clear(),s.clear()}}},(e=D).exports?e.exports=s():t.fuzzysort=s()),D.exports;var e,t,s}();const C=getDefaultExportFromCjs(k);class CompendiumBrowser extends Application{static documentName="Item";static typeName;static filterClasses=[];static ENTRY_TEMPLATE="systems/ffd20/templates/apps/compendium-browser/entries.hbs";static#e=new Map;filters=new foundry.utils.Collection;handledTypes=new Set;packs=[];expandedFilters=new Set;entries;_query="";_loadingInfo=null;#t=!1;constructor(e={}){super(e),Object.defineProperty(this,"entries",{value:new Collection}),this.initialize(),this._debouncedRender=foundry.utils.debounce(this.render,300)}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{template:"systems/ffd20/templates/apps/compendium-browser/compendium-browser.hbs",classes:["ffd20","app","compendium-browser"],id:"pf1-compendium-browser-"+this.name,width:800,height:window.innerHeight-60,top:30,left:40,resizable:!0,scrollY:[".filter-container"],dragDrop:[{dragSelector:".directory-item",dropSelector:null}]})}static BROWSERS={};static registerDefault(){this.BROWSERS.items=ffd20.applications.compendiumBrowser.ItemBrowser,this.BROWSERS.feats=ffd20.applications.compendiumBrowser.FeatBrowser,this.BROWSERS.spells=ffd20.applications.compendiumBrowser.SpellBrowser,this.BROWSERS.classes=ffd20.applications.compendiumBrowser.ClassBrowser,this.BROWSERS.races=ffd20.applications.compendiumBrowser.RaceBrowser,this.BROWSERS.bestiary=ffd20.applications.compendiumBrowser.CreatureBrowser,this.BROWSERS.buffs=ffd20.applications.compendiumBrowser.BuffBrowser}static initializeBrowsers(){const e=ffd20.applications.compendiums;for(const[t,s]of Object.entries(this.BROWSERS))e[t]=new s}static getIndexes(e=[]){const t=e.map((e=>game.packs.get(e))),s=[];for(const e of t)this.#e.has(e.collection)||this.#e.set(e.collection,e.getIndex()),s.push(this.#e.get(e.collection));return Promise.all(s).finally((()=>{for(const e of t)this.#e.delete(e.collection)}))}static _mapEntry(e,t){const s=foundry.utils.deepClone(e);return s.system=foundry.utils.mergeObject(game.model[this.documentName][e.type],s.system,{inplace:!1}),s.__pack=t.collection,s.__packLabel=t.metadata.label,s.__uuid=t.getUuid(e._id),s.__name=C.prepare(e.name.normalize("NFKD")),s}static async _renderEntries(e){return renderTemplate(this.ENTRY_TEMPLATE,{entries:e})}get title(){return game.i18n.format("FFD20.CompendiumBrowserTitle",{type:game.i18n.localize(this.constructor.typeName)})}initialize(){this.filters?.clear();for(const e of this.constructor.filterClasses){if(!(e.prototype instanceof BaseFilter))throw Error(`Filter class ${e.name} does not extend BaseFilter`);const t=new e(this);this.filters.set(t.id,t),e.handledTypes.forEach((e=>this.handledTypes.add(e)))}this.packs=game.packs.filter((e=>this.isPackIncluded(e))),this._loadingInfo={indexCount:this.packs.length,entryCount:this.packs.reduce(((e,t)=>e+t.index.contents.filter((e=>this.handledTypes.has(e.type))).length),0)}}_activateFilterQueue(){if(!this.#t)return;if(!this.#s)return;for(const e of this.filters)for(const t of e.choices)t.active=!1;const e={type:"ItemTypeFilter",level:"SpellLevelFilter",class:"SpellLearnedByClassFilter",classType:"ClassTypeFilter",buffType:"BuffTypeFilter",featType:"FeatTypeFilter",lootType:"MiscItemTypeFilter",equipmentType:"EquipmentTypeFilter",tags:"TagFilter"};for(const[t,s]of Object.entries(this.#s)){const a=e[t],i=this.filters.find((e=>e.constructor.name===a));if(i)for(const[e,t]of i.choices.entries())t.active=s.includes(e),t.active&&this.expandedFilters.add(i.id);else console.warn(`Filter "${t}" not found.`)}this.#s=null}#s;_queueFilters(e){this.#s=e}isPackIncluded(e){return!e.config.ffd20?.disabled&&(e.documentName===this.constructor.documentName&&(e.metadata.system===game.system.id&&(!!e.visible&&0!==e.index.contents.filter((e=>this.handledTypes.has(e.type))).length)))}async setup(){this.#t=!1,this.entries?.clear(),await CompendiumBrowser.getIndexes(this.packs.map((e=>e.collection)));const e=await Promise.all(this.packs.map((e=>this.loadPackIndex(e))));ffd20.utils.naturalSort(e.flat(),"name").forEach((e=>this.entries.set(""+e.__uuid,e))),await Promise.all(this.filters.map((e=>e.setup()))),this.#t=!0}async loadPackIndex(e){!1===e.indexed&&await CompendiumBrowser.getIndexes(e.collection);return e.index.filter((e=>this.handledTypes.has(e.type))).map((t=>{try{return this.constructor._mapEntry(t,e)}catch(s){return Hooks.onError("CompendiumBrowser#_mapEntry",s,{msg:`${this.constructor.name} failed to map entry ${t.name} [${t._id}] from pack ${e.collection}`,log:"error",entry:t,pack:e}),null}})).filter((e=>null!==e))}getFilteredEntries(){let e=this.entries.contents;const t=this.filters.filter((e=>e.active));if(t.length&&(e=e.filter((e=>t.every((t=>t.applyFilter(e)))))),this._query){const t=new Intl.Collator(game.settings.get("core","language"),{numeric:!0,ignorePunctuation:!0});e=C.go(this._query.normalize("NFKD"),e,{key:"__name",threshold:-1e4}).sort(((e,s)=>e.score!==s.score?s.score-e.score:t.compare(e.obj.name,s.obj.name))).map((e=>e.obj))}return e}async _render(e,t){const s=this.element?.[0]?.querySelector(":focus"),a=s?.selectionStart;if(await super._render(e,t),s&&s.name){const e=this._element[0].querySelector(`[name="${s.name}"]`);e&&e.focus instanceof Function&&(e.focus(),a&&(e.selectionStart=e.selectionEnd=a))}}async getData(){const e=await super.getData();return this._activateFilterQueue(),e.id=this.options.id,e.query=this._query??"",e.filters=this.filters.filter((e=>e.hasChoices())).map((e=>({...e.getData(),collapsed:this.expandedFilters.has(e.id)?"":"collapsed"}))),this.#t?(this._entries=this.getFilteredEntries(),e.entries=this._entries.slice(0,100),e.itemCount=this.entries.size,e.filteredItemCount=this._entries.length):(e.loading=!0,e.loadingInfo=this._loadingInfo),e}_refocus=!0;activateListeners(e){super.activateListeners(e);const t=e[0];if(this._priorState<=this.constructor.RENDER_STATES.NONE&&(this._refocus=!0),this.#t){this._refocus&&(t.querySelector("[autofocus]")?.focus(),this._refocus=!1),this._initLazyScrolling(t),t.querySelectorAll(".filter-content").forEach((e=>{this.filters.get(e.closest(".filter").dataset.filterId).activateListeners(e)})),t.querySelector(".directory-list").addEventListener("click",(e=>{this._onClickEntry(e)})),t.querySelector("button.reload").addEventListener("click",(e=>{this._onReload(e)})),t.querySelector("button.clear-filters").addEventListener("click",(e=>{this._onClearFilters(e)})),t.querySelectorAll(".filter>h3").forEach((e=>{e.addEventListener("click",(e=>{this._onFilterHeaderClick(e)}))})),t.querySelector("input[name=filter]")?.addEventListener("input",(e=>{this._onCustomSearchFilter(e)}));for(const e of t.querySelectorAll("a[data-action]"))e.addEventListener("click",this._onAction.bind(this));ContextMenu.create(this,e,".directory-item",this._getEntryContextOptions())}else this.setup().then((()=>this.render()))}_onAction(e){e.preventDefault(),e.stopPropagation();const t=e.target,s=t.dataset.action;switch(s){case"clear-filter":{const e=t.closest("[data-filter-id]").dataset.filterId;this.filters.get(e).reset(),this.render();break}default:throw Error("Unknown action: "+s)}}_onCustomSearchFilter(e){e.preventDefault(),this._query=e.target.value,this._debouncedRender()}async _onClickEntry(e){const t=e.target.closest(".directory-item");if(!t)return;const{uuid:s}=t.dataset,a=await fromUuid(s),i=game.packs.get(a.pack);return a.sheet.render(!0,{editable:game.user.isGM&&!i.locked,focus:!0})}_getEntryContextOptions(){return[{name:"COMPENDIUM.ImportEntry",icon:'<i class="fa-solid fa-download"></i>',condition:()=>getDocumentClass(this.constructor.documentName).canUserCreate(game.user),callback:async e=>{const t=game.collections.get(this.constructor.documentName),s=e.data("uuid"),a=this.entries.get(s);return t.importFromCompendium(game.packs.get(a.__pack),a._id,{},{renderSheet:!0})}},{name:"FFD20.CopyUuidToClipboard",icon:'<i class="fa-solid fa-id-badge"></i>',callback:e=>{const t=e.data("uuid");game.clipboard.copyPlainText(t);const s=game.i18n.localize(getDocumentClass(this.constructor.documentName).metadata.label);ui.notifications.info(game.i18n.format("DOCUMENT.IdCopiedClipboard",{label:s,type:"uuid",id:t}))}}]}_canDragStart(e){return!0}_onDragStart(e){const{uuid:t}=e.currentTarget.dataset;e.dataTransfer.setData("text/plain",JSON.stringify({type:this.constructor.documentName,uuid:t}));const s=this.element[0];setTimeout((()=>s.classList.add("active-drag")),0),document.body.addEventListener("dragend",(()=>s.classList.remove("active-drag")),{once:!0,passive:!0})}_onClearFilters(e){for(const e of this.filters)e.reset();this._query="",this.expandedFilters.clear(),this.render()}async _onReload(e){this.#t=!1,this.initialize(),this.render()}_onFilterHeaderClick(e){const{filterId:t}=e.target.closest(".filter").dataset,s=e.target.closest(".filter").querySelector(".filter-content");this.expandedFilters.has(t)?(this.expandedFilters.delete(t),s.classList.add("collapsed")):(this.expandedFilters.add(t),s.classList.remove("collapsed"))}_initLazyScrolling(e){const t=e.querySelector(".directory-bottom");t&&new IntersectionObserver((async([s],a)=>{if(s.isIntersecting){const s=e.querySelectorAll(".directory-item").length,i=this._entries.slice(s,s+50);if(0===i.length)a.unobserve(t);else{const s=await this.constructor._renderEntries(i);t.insertAdjacentHTML("beforebegin",s),this._dragDrop[0].bind(e)}}}),{root:e.querySelector(".directory-list"),rootMargin:"300px"}).observe(t)}}const NoAutocomplete=e=>class extends e{async _renderFrame(e){const t=await super._renderFrame(e);return t.autocomplete="off",t}},{DocumentSheetV2:w,HandlebarsApplicationMixin:T}=foundry.applications.api;class ActorTraitSelector extends(T(NoAutocomplete(w))){static DEFAULT_OPTIONS={tag:"form",form:{handler:ActorTraitSelector._updateDocument,submitOnClose:!1,submitOnChange:!1,closeOnSubmit:!1},classes:["pf1-v2","trait-selector","standard-form"],window:{icon:"fa-solid fa-list-check",minimizable:!1,resizable:!1},position:{width:320},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/trait-selector.hbs",scrollable:[".trait-list"]},footer:{template:"templates/generic/form-footer.hbs"}};_searchFilter="";static SEARCH_INCLUDE_ID=!0;_collator=new Intl.Collator(game.i18n.lang,{numeric:!0,ignorePunctuation:!0});constructor(e){e.id??=`trait-selector-${e.document.uuid.replaceAll(".","-")}-${e.subject}`,super(e),this.options.classes.push(e.subject);const t=foundry.utils.getProperty(e.document.toObject(),this.attribute)??[];if(this.attributes={standard:new Set,custom:new Set},Array.isArray(t))for(const e of t)this.options.choices[e]?this.attributes.standard.add(e):this.attributes.custom.add(e);const s=[];for(const[e,t]of Object.entries(this.options.choices))s.push({id:e,_id:C.prepare(e.normalize("NFKD")),_name:C.prepare(t.normalize("NFKD"))});this._searchIndex=s}async _preparePartContext(e){const t=this.isEditable;switch(e){case"form":{const{standard:e,custom:s}=this.attributes,a=foundry.utils.deepClone(this.options.choices);for(const[t,s]of Object.entries(a))a[t]={label:s,chosen:e.has(t)};return{editable:t,cssClass:t?"":"locked",choices:a,hideSearch:Object.keys(a).length<ffd20.config.traitSelector.minChoicesForSearch,custom:Array.from(new Set(s)),search:this._searchFilter,hasCustom:this.options.hasCustom}}case"footer":return t?{buttons:[{type:"submit",label:this.document instanceof Actor?"FFD20.UpdateActor":"FFD20.UpdateItem",icon:"fa-regular fa-floppy-disk"}]}:{}}}get title(){return`${this.options.title}: ${this.document.name}`}get attribute(){return this.options.name}splitCustom(e){return e.split(ffd20.config.re.traitSeparator).map((e=>e.trim())).filter((e=>!!e))}_onRender(e,t){super._onRender(e,t);const s=this.element.querySelector(".window-content"),a=s.querySelector("input[type='search']");a&&(a.addEventListener("input",(e=>this._onSearch(e.currentTarget.value)),{passive:!0}),a.addEventListener("change",(e=>this._onSearch(e.currentTarget.value)),{passive:!0}),this._onSearch(this._searchFilter));const i=this.isEditable;if(!i)for(const e of s.querySelectorAll(":is(input,button)"))e.disabled=!0;const n=s.querySelector("input[name='custom']");n&&i&&(n.addEventListener("input",this._onCustomInput.bind(this),{passive:!0}),n.addEventListener("keydown",this._onActiveCustomInput.bind(this)),this.element.querySelectorAll(".custom-tags .custom-tag > a[data-action='delete']").forEach((e=>{e.addEventListener("click",this._deleteCustomTag.bind(this),{passive:!0})})));const o=foundry.utils.getProperty(this.options.document,this.attribute);if(o?.total){const e=new Set(o.base??[]);for(const t of o.total)if(!e.has(t)){const e=s.querySelector(`input[name="choices.${t}"]`);if(!e)continue;e.checked||(e.indeterminate=!0)}}}_onCustomInput(e){/;/.test(e.currentTarget.value)&&this._onChangeForm()}_onActiveCustomInput(e){if(!e.isComposing)switch(e.key){case"Enter":e.preventDefault(),this._onChangeForm();break;case"Backspace":{if(""!==e.currentTarget.value)return;if(e.repeat)return;const t=this.element.querySelector(".custom-tags .custom-tag:last-of-type");if(!t)return;if(t.classList.contains("pre-delete")){const e=t.dataset.customTag;this.attributes.custom=new Set(this.attributes.custom.filter((t=>t!==e))),this.render()}else t.classList.add("pre-delete");break}default:this.element.querySelector(".custom-tags .custom-tag:last-of-type")?.classList.remove("pre-delete")}}_deleteCustomTag(e){const t=e.currentTarget.dataset.customTag;this.attributes.custom.delete(t),this.render()}_onSearch(e){e=e?.normalize("NFKD"),this._searchFilter=e;const t=["_name"];this.constructor.SEARCH_INCLUDE_ID&&t.push("_id");const s=e?C.go(e,this._searchIndex,{keys:t,threshold:-1e4}).sort(((e,t)=>e.score!==t.score?t.score-e.score:this._collator.compare(e.obj.name,t.obj.name))).map((e=>e.obj.id)):null,a=this.element.querySelectorAll(".trait-list li");for(const t of a)t.classList.toggle("search-mismatch",e&&!s.includes(t.dataset.choice))}_onChangeForm(e,t){const s={};new FormData(this.element).forEach(((e,t)=>s[t]=e));let{choices:a,custom:i,search:n}=foundry.utils.expandObject(s);a??={},this._searchFilter=n,a=Object.entries(a).filter((([e,t])=>t)).map((([e])=>e)),i?.length&&this.attributes.custom.add(...this.splitCustom(i)),this.attributes.standard=new Set(a),this.render()}static async _updateDocument(e,t,s){delete this.document.apps[this.appId];const{standard:a,custom:i}=this.attributes,n={[this.attribute]:[...a.union(i)]};this.document.update(n),this.close({force:!0})}}function DragDropApplicationMixin(e){return class DragDropApplication extends e{static DEFAULT_OPTIONS={dragDrop:[]};constructor(e={}){super(e),this.#a=this.#i()}#i(){return this.options.dragDrop.map((e=>(e.permissions={dragstart:this._canDragStart.bind(this),drop:this._canDragDrop.bind(this)},e.callbacks={dragstart:this._onDragStart.bind(this),dragover:this._onDragOver.bind(this),drop:this._onDrop.bind(this)},new DragDrop(e))))}#a;_onRender(e,t){super._onRender(e,t),this.#a.forEach((e=>e.bind(this.element)))}_canDragStart(e){return!0}_canDragDrop(e){return!0}_onDragStart(e){}_onDragOver(e){}async _onDrop(e){}}}const{DocumentSheetV2:_,HandlebarsApplicationMixin:P}=foundry.applications.api;class AbstractListSelector extends(DragDropApplicationMixin(P(NoAutocomplete(_)))){static DEFAULT_OPTIONS={tag:"form",form:{handler:AbstractListSelector._save,closeOnSubmit:!0,submitOnClose:!1},classes:["pf1-v2","list-selector","no-padding","standard-form"],window:{minimizable:!1,resizable:!0},actions:{addEntry:AbstractListSelector._onAddEntry,deleteEntry:AbstractListSelector._onDeleteEntry},position:{width:600},sheetConfig:!1,dragDrop:[{dragSelector:"[data-drag]",dropSelector:"[data-drop]"}]};constructor(e={}){super(e),this.dragDropHighlightTimeout=null}get dragDropType(){return"pf1Entry-"+this.options.name}_onDragStart(e){const t=e.currentTarget;if("link"in e.target.dataset)return;const s=t.closest("[data-index]"),a=s?.dataset?.index;if(void 0===a)return;const i={type:this.dragDropType,index:Number(a),appId:this.id,entry:this.entries[parseInt(s.dataset.index)]};s.classList.add("is-dragged"),e.dataTransfer.setData("text/plain",JSON.stringify(i)),e.dataTransfer.setDragImage(s,0,0),ffd20._temp.dragDropData=i,e.target.addEventListener("dragend",(()=>delete ffd20._temp.dragDropData))}_onDragOver(e){this.clearDragHighlights(),ffd20._temp?.dragDropData?.type===this.dragDropType&&(e.target.closest("[data-drop]").classList.add("drag-over"),clearTimeout(this.dragDropHighlightTimeout),this.dragDropHighlightTimeout=setTimeout((()=>this.clearDragHighlights()),150))}clearDragHighlights(){this.element.querySelectorAll("[data-drop]").forEach((e=>e.classList.remove("drag-over","is-dragged")))}async _onDrop(e){const t=TextEditor.getDragEventData(e),s=e.target.closest("[data-index]").dataset.index;if(this.clearDragHighlights(),t?.type!==this.dragDropType)return;const a=t?.index;if(!a)return;let i=t?.entry;t?.appId===this.id&&(i=this.entries.splice(t.index,1)[0]),this.entries.splice(s,0,i),this.render()}async _preparePartContext(e){const t=this.isEditable;switch(e){case"form":return{editable:t,cssClass:t?"":"locked",document:this.document,id:this.name,entries:this.entries,fields:this.fields,dtypes:this.dtypes};case"footer":return t?{buttons:[{type:"submit",label:"FFD20.Save",icon:"fa-regular fa-floppy-disk"}]}:{}}return{}}_onRender(e,t){if(super._onRender(e,t),!this.isEditable)for(const e of this.element.querySelectorAll(".window-content :is(input,button,select)"))e.disabled=!0}get attribute(){return this.options.name}get fields(){return this.options.fields.split(";")}get dtypes(){return this.options.dtypes.split(";")}get dataCount(){return this.fields.length}_getNewEntry(e){return{}}static async _onAddEntry(e){return e.preventDefault(),this.entries.push(this._getNewEntry(e)),this.render()}static async _onDeleteEntry(e){e.preventDefault();const t=e.target.closest("tr"),s=parseInt(t.dataset.index);return this.entries.splice(s,1),this.render()}async _onChangeForm(e,t){}_getUpdateData(){return{}}static async _save(e,t,s){this.document.update(this._getUpdateData())}}class DamageResistanceSelector extends AbstractListSelector{static DEFAULT_OPTIONS={classes:["damage-resistance-selector"],window:{icon:"fa-solid fa-shield-halved"}};static PARTS={form:{template:"systems/ffd20/templates/apps/damage-resistance-selector.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};constructor(e){super(e),this.isDR=!0===e.isDR;const t=foundry.utils.deepClone(foundry.utils.getProperty(this.document,this.attribute)??{});this.custom=t.custom,this.originalEntries=t.value,this.entries=t.value;const s=ffd20.utils.naturalSort([...ffd20.registry.damageTypes],"name").filter((e=>!e.isModifier)),a={};Object.values(s).sort().forEach((e=>{("energy"!==e.category&&"misc"!==e.category||!this.isDR)&&("physical"!==e.category&&("misc"!==e.category||"untyped"!==e.id)||this.isDR)&&(a[e.id]=e.name)})),this.isDR&&(Object.keys(ffd20.config.damageResistances).forEach((e=>{a[e]=ffd20.config.damageResistances[e]})),ffd20.utils.naturalSort([...ffd20.registry.materials],"name").forEach((e=>{e.dr&&!e.treatedAs&&(e.allowed.lightBlade||e.allowed.oneHandBlade||e.allowed.twoHandBlade||e.allowed.rangedWeapon)&&(a[e.id]=e.shortName||e.name)}))),this.damages=a,this.operators={true:"FFD20.Application.DamageResistanceSelector.CombinationOr",false:"FFD20.Application.DamageResistanceSelector.CombinationAnd"}}_initializeApplicationOptions(e){const t=(e=super._initializeApplicationOptions(e)).isDR?"DR":"ER";return e.id=`DamageResistanceSelector-${t}-${e.document.uuid.replaceAll(".","-")}`,e}async _preparePartContext(e,t,s){const a=await super._preparePartContext(e,t,s);return"form"===e&&(a.custom=this.custom,a.damages=this.damages,a.operators=this.operators,a.isDR=this.isDR),a}get actor(){return this.document}get title(){return`${game.i18n.localize("FFD20.Application.DamageResistanceSelector."+(this.isDR?"DR":"ER")+"Title")}: ${this.actor.name}`}_getNewEntry(e){return{amount:0,types:[this.isDR?"":"fire",""],operator:!0}}async _onChangeForm(e,t){t.target.matches("[name=custom]")?this._onResistanceCustomChange(t):this._onResistanceChange(t),super._onChangeForm(e,t)}async _onResistanceChange(e){const t=e.target,s=t.closest("tr.resistance"),a=parseInt(s.dataset.index),i=t.dataset.index,n=t.value;let o=null;if("Number"===t.dataset.dtype){let e=parseFloat(n);isNaN(e)&&(e=0),o=Math.floor(100*e)/100}else o="Boolean"===t.dataset.dtype?"true"===n:n;switch(i){case"types0":this.entries[a].types[0]=o;break;case"types1":this.entries[a].types[1]=o;break;default:this.entries[a][i]=o}}async _onResistanceCustomChange(e){const t=e.target;this.custom=t.value}_getUpdateData(){const e={};return e[this.attribute+".value"]=this.entries.map((e=>(e.types[0]??="",e.types[1]??="",""===e.types[0]&&""!==e.types[1]&&(e.types[0]=e.types[1],e.types[1]=""),e.types[0]===e.types[1]&&(e.types[1]=""),e.types=e.types.filter((e=>e)),e.operator="true"===(e.operator+"").toLowerCase(),e))),e[this.attribute+".custom"]=this.custom,e}}const{DocumentSheetV2:A,HandlebarsApplicationMixin:I}=foundry.applications.api;class ActorRestDialog extends(I(NoAutocomplete(A))){static DEFAULT_OPTIONS={tag:"form",form:{handler:ActorRestDialog._rest,submitOnChange:!1,closeOnSubmit:!0},classes:["pf1-v2","actor-rest","standard-form"],window:{icon:"fa-solid fa-bed",minimizable:!1,resizable:!1},position:{width:500},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/actor-rest.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};async _prepareContext(){return{buttons:[{type:"submit",label:"FFD20.Rest",icon:"fa-solid fa-bed"}]}}get actor(){return this.document}get title(){return`${game.i18n.localize("FFD20.Rest")}: ${this.actor.name}`}static async _rest(e,t,s){await this.actor.performRest(s.object)}}const{DocumentSheetV2:O,HandlebarsApplicationMixin:x}=foundry.applications.api;class PointBuyCalculator extends(x(O)){min;max;abilities;static DEFAULT_OPTIONS={tag:"form",form:{handler:PointBuyCalculator._save,submitOnChange:!1,submitOnClose:!1,closeOnSubmit:!0},classes:["pf1-v2","pointbuy-calculator","standard-form"],window:{icon:"fa-solid fa-seedling",minimizable:!1,resizable:!1},actions:{control:PointBuyCalculator._onAbilityControl},position:{width:320},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/point-buy-calculator.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};constructor(e){super(e);const t=Object.keys(ffd20.config.abilityCost).map((e=>Number(e)));this.abilities=Object.entries(ffd20.config.abilities).map((([e,t])=>({key:e,name:t,value:this.actor.system.abilities[e]?.value??10}))),this.min=Math.min(...t),this.max=Math.max(...t)}async _prepareContext(){const e=this.spentPoints,t=ffd20.config.pointBuy,s=Object.entries(t).map((([e,t])=>({...t,key:e})));s.sort(((e,t)=>e.points-t.points));let a=s[0].key;for(const i of s){t[a].points<e&&(a=i.key)}return{min:this.min,max:this.max,abilities:this.abilities,points:e,limits:s,closest:a,invalidPoints:t[a].points!==e,buttons:[{type:"submit",label:"FFD20.Confirm",icon:"fa-regular fa-floppy-disk"}]}}get actor(){return this.document}get title(){return`${game.i18n.localize("FFD20.Application.PointBuy.Title")}: ${this.actor.name}`}get spentPoints(){let e=0;for(const t of this.abilities)e+=ffd20.config.abilityCost[t.value];return e}static async _onAbilityControl(e,t){e.preventDefault();const s=t.closest(".ability").dataset.ability,a=this.abilities.find((e=>e.key===s));t.classList.contains("add")?a.value=Math.min(this.max,a.value+1):t.classList.contains("subtract")&&(a.value=Math.max(this.min,a.value-1)),this.render()}static async _save(){const e={};for(const t of this.abilities)e[`system.abilities.${t.key}.value`]=t.value;await this.actor.update(e)}}class Widget_ItemPicker{constructor(e,{items:t,columns:s=3}={}){this.element=null,this.callback=e,this._items=t,this.columns=s}render(e){const t=$($.parseHTML('<div class="widget item-picker"></div>'));let s;for(let e=0;e<this._items.length;e++){const a=this._items[e];e%this.columns==0&&(s=$($.parseHTML('<div class="row"></div>')),t.append(s));const i=$($.parseHTML(`<div class="item" value="${a.value}">${a.label}</div>`)),n=Math.floor(1e4/this.columns)/100;i.css("flex",`0 0 calc(${n}% - 4px)`),s.append(i)}e instanceof jQuery||(e=$(e)),t.css("position","absolute"),t.css("left",e[0].offsetLeft+"px"),t.css("position",e[0].offsetBottom+"px"),e.parent().append(t),this.element=t,window.setTimeout((()=>{this.activateListeners(t)}),10)}activateListeners(e){e.find(".item").click(this._onClickItem.bind(this)),this._cancelCallback=this._onCancel.bind(this),document.addEventListener("click",this._cancelCallback)}_onCancel(e){e.preventDefault();let t=e.target;if(t!==this.element[0]){for(;t.parentNode;){if(t===this.element[0])return;t=t.parentNode}this.cancel()}}_onClickItem(e){e.preventDefault();const t=e.currentTarget;this.callback($(t).attr("value"))}cancel(){document.removeEventListener("click",this._cancelCallback),this.element.remove()}}const{ApplicationV2:M,HandlebarsApplicationMixin:E}=foundry.applications.api;class AbstractSettingsApplication extends(E(NoAutocomplete(M))){static DEFAULT_OPTIONS={tag:"form",form:{handler:this._save,submitOnChange:!1,closeOnSubmit:!0,submitOnClose:!1},classes:["pf1-v2","settings","standard-form"],window:{minimizable:!1,resizable:!1},actions:{resetForm:this._onFormReset},position:{width:520},sheetConfig:!1};get title(){return game.i18n.localize(this.options.phraseKey+".Title")}_initializeApplicationOptions(e){return(e=super._initializeApplicationOptions(e)).id=e.configKey.replace("Config","").toLowerCase()+"-config",e.classes=e.classes||[],e.classes.push(e.id),e}async _prepareContext(){if(!this.settings){const e=game.settings.get("ffd20",this.options.configKey);this.settings=new this.options.model(e.toObject()),this.fields=this.settings.fields}return{}}async _preparePartContext(e,t){switch(e){case"form":Object.assign(t,{activeTab:this.tabGroups.primary,settings:this.settings,fields:this.settings.schema.fields,model:this.options.model,config:ffd20.config,const:ffd20.const});break;case"footer":t.buttons=[{type:"button",label:"SETTINGS.Reset",icon:"fa-solid fa-arrows-rotate",action:"resetForm"},{type:"submit",label:"SETTINGS.Save",icon:"fa-solid fa-floppy-disk"}]}if(["form","tabs"].includes(e)){t.tabs=this.tabs?.primary||{};for(const[e,s]of Object.entries(t.tabs)){const t=this.tabGroups.primary===e;Object.assign(s,{id:e,group:"primary",active:t,cssClass:t?"active":""})}}return t}_onChangeForm(e,t){const s=t.target.closest("[name]");this.settings.updateSource({[s.name]:"checkbox"===s.type?s.checked:s.value}),this.render({parts:["form"]})}static async _onFormReset(e){this.settings=new this.options.model,ui.notifications.info(game.i18n.localize(this.options.phraseKey+".Reset")),this.render({parts:["form"]})}static async _save(e,t,s){s=foundry.utils.expandObject(s.object),await game.settings.set("ffd20",this.options.configKey,s)}}class RollPF extends Roll{static CHAT_TEMPLATE="systems/ffd20/templates/chat/roll.hbs";get totalHalved(){return foundry.utils.logCompatibilityWarning("RollPF.totalHalved is deprecated with no replacement",{since:"PF1 v11",until:"PF1 v12"}),Math.floor(this.total/2)}static async safeRoll(e,t={},s,{suppressError:a=!1}={},i={}){let n;try{n=await this.create(e,t).evaluate({...i})}catch(e){n=this.create("0",t).evaluateSync({...i}),n.err=e}return n.warning&&(n.err=Error("This formula had a value replaced with null.")),n.err&&(s&&!a?console.error(s,n.err):CONFIG.debug.roll&&console.error(n.err)),n}static safeRollSync(e,t={},s,{suppressError:a=!1}={},i={}){let n;try{n=new this(e,t).evaluateSync({...i})}catch(e){n=new this("0",t).evaluateSync({...i}),n.err=e}return n.warning&&(n.err=Error("This formula had a value replaced with null.")),n.err&&(s&&!a?console.error(s,n.err):CONFIG.debug.roll&&console.error(n.err)),n}static cleanFlavor(e){return e.replace(/\[\];/g,"")}static getTermTooltipData(e){if("number"!=typeof e.total)return null;return e.getTooltipData?.()??{formula:e.expression,total:e.total,flavor:e.flavor,css:e.flavor?"":"placeholder"}}async getTooltip(){const e=this.dice.filter((e=>e.results.some((e=>e.active)))).map(this.constructor.getTermTooltipData),t=this.terms.reduce(((e,t,s,a)=>{if(t instanceof foundry.dice.terms.DiceTerm)return e;if(t instanceof foundry.dice.terms.FunctionTerm&&t.dice.length)return e;const i=this.constructor.getTermTooltipData(t);if(!i)return e;const n=a[s-1];return t instanceof foundry.dice.terms.NumericTerm&&n&&n instanceof foundry.dice.terms.OperatorTerm&&"-"===n.operator&&(i.total=-i.total),e.push(i),e}),[]);return renderTemplate("systems/ffd20/templates/dice/tooltip.hbs",{parts:e,numericParts:t})}async render({flavor:e,template:t=this.constructor.CHAT_TEMPLATE,isPrivate:s=!1}={}){this._evaluated||await this.evaluate({allowInteractive:!s});const a={formula:s?"???":this.formula,flavor:s?null:e??this.options.flavor,user:game.user.id,details:s?"":await this.getTooltip(),get tooltip(){return this.details},total:s?"?":ffd20.utils.limitPrecision(this.total,2),hasDetails:!s};return renderTemplate(t,a)}}class FormulaField extends foundry.data.fields.StringField{constructor(e={},t){if(e.choices)throw Error("choices is not valid option for FormulaField");super(e,t)}_toInput(e){const t=super._toInput(e);t.classList.add("formula");const s=e?.value;if(s)try{RollPF.parse(s)}catch(a){console.warn(a.message,{path:e.name,formula:s}),t.classList.add("error")}return t}}class ExperienceConfigModel extends foundry.abstract.DataModel{static defineSchema(){const e=foundry.data.fields;return{disable:new e.BooleanField({initial:!1}),track:new e.StringField({initial:"medium",choices:["fast","medium","slow","custom"]}),custom:new e.SchemaField({formula:new FormulaField}),openDistributor:new e.BooleanField({initial:!0})}}static migrateData(e){return e.disable??=e.disableExperienceTracking,"customFormula"===e.track&&(e.track="custom"),e.openDistributor??=e.openXpDistributor,super.migrateData(e)}static get progressionOptions(){return{slow:"FFD20.Application.Settings.Experience.Track.Options.Slow",medium:"FFD20.Application.Settings.Experience.Track.Options.Medium",fast:"FFD20.Application.Settings.Experience.Track.Options.Fast",custom:"FFD20.Application.Settings.Experience.Track.Options.Custom"}}}class ExperienceConfig extends AbstractSettingsApplication{static DEFAULT_OPTIONS={configKey:"experienceConfig",phraseKey:"FFD20.Application.Settings.Experience",model:ExperienceConfigModel,window:{icon:"fa-solid fa-book"}};static PARTS={form:{template:"systems/ffd20/templates/settings/experience.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};async _preparePartContext(e,t){return t=await super._preparePartContext(e,t),"form"!==e||Object.assign(t,{enabled:!0!==this.settings.disable,hasCustomFormula:"custom"===this.settings.track}),t}}class HealthConfigModel extends foundry.abstract.DataModel{static defineSchema(){const e=foundry.data.fields,classType=(t=!1)=>new e.SchemaField({auto:new e.BooleanField({initial:!1}),rate:new e.NumberField({positive:!0,initial:.5,max:1,step:.01,min:.01}),maximized:new e.BooleanField({initial:t})}),variantRules=()=>new e.SchemaField({useWoundsAndVigor:new e.BooleanField({initial:!1}),useWoundThresholds:new e.NumberField({initial:0,choices:()=>this.woundThresholdOptions})});return{pc:new e.SchemaField({classes:new e.SchemaField({base:classType(!0),racial:classType(),npc:classType()}),rules:variantRules()}),npc:new e.SchemaField({classes:new e.SchemaField({base:classType(!0),racial:classType(),npc:classType()}),rules:variantRules()}),maximized:new e.NumberField({integer:!0,min:0,initial:1,step:1}),rounding:new e.StringField({blank:!1,nullable:!1,initial:"up",choices:()=>this.healthRoundingOptions}),continuous:new e.BooleanField({initial:!1})}}getClassHD(e,t){t||=e.actor?.type||"character";const s=this.getActorConfig(t);switch(e.system.subType){case"npc":return s.classes.npc;case"racial":return s.classes.racial;default:return s.classes.base}}getActorConfig(e){switch(e?.type||e){case"character":return this.pc;case"npc":return this.npc;default:return{rules:{useWoundThresholds:0,useWoundsAndVigor:!1},get useWoundThresholds(){return foundry.utils.logCompatibilityWarning("useWoundThresholds is in rules.useWoundThresholds",{since:"PF1 v11",until:"PF1 v12"}),0},get useWoundsAndVigor(){return foundry.utils.logCompatibilityWarning("useWoundsAndVigor is in rules.useWoundsAndVigor",{since:"PF1 v11",until:"PF1 v12"}),!1}}}}static migrateData(e){e&&(e.continuity&&(e.continuous??="continuous"===e.continuity,delete e.continuity),e.hitdice&&(e.pc??={},e.pc.classes??={},e.pc.classes.base??=e.hitdice.PC,e.pc.classes.npc??=e.hitdice.NPC,e.pc.classes.racial??=e.hitdice.Racial,e.npc??={},e.npc.classes??={},e.npc.classes.base??=e.hitdice.PC,e.npc.classes.npc??=e.hitdice.NPC,e.npc.classes.racial??=e.hitdice.Racial,delete e.hitdice),e.variants&&(e.pc??={},e.pc.rules??={},e.pc.rules.useWoundsAndVigor??=e.variants.pc?.useWoundsAndVigor,e.pc.rules.useWoundThresholds??=e.variants.pc?.useWoundThresholds,e.npc??={},e.npc.rules??={},e.npc.rules.useWoundsAndVigor??=e.variants.npc?.useWoundsAndVigor,e.npc.rules.useWoundThresholds??=e.variants.npc?.useWoundThresholds,delete e.variants))}get hitdice(){return foundry.utils.logCompatibilityWarning("HealthConfigModel.hitdice is deprecated with no direct replacement.",{since:"PF1 v11",until:"PF1 v12"}),{PC:this.pc.classes.base,Racial:this.pc.classes.racial,NPC:this.pc.classes.npc}}get variants(){return foundry.utils.logCompatibilityWarning("HealthConfigModel.variants is deprecated with no direct replacement.",{since:"PF1 v11",until:"PF1 v12"}),{pc:{useWoundsAndVigor:this.pc.rules.useWoundsAndVigor,useWoundThresholds:this.pc.rules.useWoundThresholds},npc:{useWoundsAndVigor:this.npc.rules.useWoundsAndVigor,useWoundThresholds:this.npc.rules.useWoundThresholds}}}static get woundThresholdOptions(){return{0:game.i18n.localize("FFD20.Application.Settings.Health.WoundThresholds.Disabled"),1:game.i18n.localize("FFD20.Application.Settings.Health.WoundThresholds.Normal"),2:game.i18n.localize("FFD20.Application.Settings.Health.WoundThresholds.Gritty")}}static get healthRoundingOptions(){return{up:"FFD20.Application.Settings.Health.RoundingUp",nearest:"FFD20.Application.Settings.Health.RoundingNearest",down:"FFD20.Application.Settings.Health.RoundingDown"}}static get healthContinuityOptions(){return{true:"FFD20.Application.Settings.Health.Continuous",false:"FFD20.Application.Settings.Health.Discrete"}}prepareDerivedData(){for(const e of[this.pc,this.npc])Object.defineProperties(e,{useWoundsAndVigor:{get(){return foundry.utils.logCompatibilityWarning("useWoundsAndVigor is in rules.useWoundsAndVigor",{since:"PF1 v11",until:"PF1 v12"}),this.rules.useWoundsAndVigor}},useWoundThresholds:{get(){return foundry.utils.logCompatibilityWarning("useWoundThresholds is in rules.useWoundThresholds",{since:"PF1 v11",until:"PF1 v12"}),this.rules.useWoundThresholds}}})}}class HealthConfig extends AbstractSettingsApplication{static DEFAULT_OPTIONS={configKey:"healthConfig",phraseKey:"FFD20.Application.Settings.Health",model:HealthConfigModel,window:{icon:"fa-solid fa-heartbeat"}};static PARTS={form:{template:"systems/ffd20/templates/settings/health.hbs",templates:["systems/ffd20/templates/settings/health.hbs","templates/generic/tab-navigation.hbs"]},footer:{template:"templates/generic/form-footer.hbs"}};tabGroups={actor:"pc"};tabs={actor:{pc:{icon:"fa-solid fa-heartbeat",label:"FFD20.PCs"},npc:{icon:"fa-solid fa-prescription-bottle-alt",label:"FFD20.NPCs"}}};async _preparePartContext(e,t){if(t=await super._preparePartContext(e,t),"form"!==e)return t;Object.assign(t,{showWoundsVigorWarning:{pc:this.settings.pc.rules.useWoundsAndVigor&&0!==this.settings.pc.rules.useWoundThresholds,npc:this.settings.npc.rules.useWoundsAndVigor&&0!==this.settings.npc.rules.useWoundThresholds}});for(const e of["pc","npc"])for(const[s,a]of Object.entries(t.settings[e].classes))a.label="FFD20.Application.Settings.Health.Class."+s,a.fields=t.fields[e].fields.classes.fields[s].fields;t.settings.pc.label="PC",t.settings.npc.label="NPC",t.activeTab=this.tabGroups.actor,t.tabs=this.tabs?.actor||{};for(const[e,s]of Object.entries(t.tabs)){const t=this.tabGroups.actor===e;Object.assign(s,{id:e,group:"actor",active:t,cssClass:t?"active":""})}return t}}class IntegrationConfigModel extends foundry.abstract.DataModel{static defineSchema(){const e=foundry.data.fields;return{diceSoNice:new e.BooleanField({initial:!0}),dragRuler:new e.BooleanField({initial:!0}),babele:new e.BooleanField({initial:!0})}}}class IntegrationConfig extends AbstractSettingsApplication{static DEFAULT_OPTIONS={configKey:"integration",phraseKey:"FFD20.Application.Settings.Integration",model:IntegrationConfigModel,window:{icon:"fa-solid fa-check-to-slot"}};static PARTS={form:{template:"systems/ffd20/templates/settings/integration.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};async _preparePartContext(e,t){return t=await super._preparePartContext(e,t),"form"!==e||(Object.assign(t,{dsnFound:game.modules.get("dice-so-nice")?.active,drFound:game.modules.get("drag-ruler")?.active,bFound:game.modules.get("babele")?.active}),t.appId=this.id),t}}class PerformanceConfigModel extends foundry.abstract.DataModel{static defineSchema(){return{reachLimit:new foundry.data.fields.NumberField({integer:!0,min:0,initial:60,max:300,step:1})}}}class PerformanceConfig extends AbstractSettingsApplication{static DEFAULT_OPTIONS={configKey:"performance",phraseKey:"FFD20.Application.Settings.Performance",model:PerformanceConfigModel,window:{icon:"fa-solid fa-gauge"}};static PARTS={form:{template:"systems/ffd20/templates/settings/performance.hbs"},footer:{template:"templates/generic/form-footer.hbs"}}}const R=Object.freeze(Object.defineProperty({__proto__:null,ExperienceConfig,ExperienceConfigModel,HealthConfig,HealthConfigModel,IntegrationConfig,IntegrationConfigModel,PerformanceConfig,PerformanceConfigModel},Symbol.toStringTag,{value:"Module"}));function registerSystemSettings(){game.settings.register("ffd20","systemMigrationVersion",{scope:"world",config:!1,type:String,default:"0.0.0.0"}),game.settings.register("ffd20","migrating",{scope:"world",config:!1,type:Boolean,default:!1,onChange:e=>ffd20.migrations.isMigrating=e}),game.settings.register("ffd20","changelogVersion",{scope:"client",config:!1,type:String,default:"0.74.9"}),game.settings.register("ffd20","dontShowChangelog",{scope:"client",config:!1,type:Boolean,default:!1}),game.settings.registerMenu("ffd20","healthConfig",{name:"FFD20.Application.Settings.Health.Title",label:"FFD20.Application.Settings.Health.Label",hint:"FFD20.Application.Settings.Health.Hint",icon:"fa-solid fa-heartbeat",type:HealthConfig,restricted:!0}),game.settings.register("ffd20","healthConfig",{scope:"world",default:new HealthConfigModel,type:HealthConfigModel,config:!1,requiresReload:!0}),game.settings.registerMenu("ffd20","experienceConfig",{name:"FFD20.Application.Settings.Experience.Title",label:"FFD20.Application.Settings.Experience.Label",hint:"FFD20.Application.Settings.Experience.Hint",icon:"fa-solid fa-book",type:ExperienceConfig,restricted:!0}),game.settings.register("ffd20","experienceConfig",{scope:"world",default:new ExperienceConfigModel,type:ExperienceConfigModel,config:!1,onChange:()=>ffd20.utils.refreshActors({renderOnly:!0})}),game.settings.register("ffd20","integration",{type:IntegrationConfigModel,default:new IntegrationConfigModel,scope:"world",config:!1,requiresReload:!0}),game.settings.registerMenu("ffd20","integration",{name:"FFD20.Application.Settings.Integration.Title",label:"FFD20.Application.Settings.Integration.Label",hint:"FFD20.Application.Settings.Integration.Hint",restricted:!0,icon:"fa-solid fa-check-to-slot",type:IntegrationConfig}),game.settings.register("ffd20","performance",{scope:"client",default:new PerformanceConfigModel,type:PerformanceConfigModel,config:!1}),game.settings.registerMenu("ffd20","performance",{name:"FFD20.Application.Settings.Performance.Title",label:"FFD20.Application.Settings.Performance.Button",hint:"FFD20.Application.Settings.Performance.Hint",restricted:!1,icon:"fa-solid fa-gauge",type:PerformanceConfig}),game.settings.register("ffd20","measureStyle",{name:"FFD20.SETTINGS.Canvas.MeasureStyle",hint:"FFD20.SETTINGS.Canvas.MeasureStyleHint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("ffd20","units",{name:"FFD20.SETTINGS.Units.System",hint:"FFD20.SETTINGS.Units.SystemHint",scope:"world",config:!0,default:"imperial",type:String,choices:{imperial:"FFD20.SETTINGS.Units.Imperial",metric:"FFD20.SETTINGS.Units.Metric"},requiresReload:!0}),game.settings.register("ffd20","distanceUnits",{name:"FFD20.SETTINGS.Units.Distance",hint:"FFD20.SETTINGS.Units.DistanceHint",scope:"world",config:!0,default:"default",type:String,choices:{default:"FFD20.Default",imperial:"FFD20.SETTINGS.Units.ImperialDistance",metric:"FFD20.SETTINGS.Units.MetricDistance"},requiresReload:!0}),game.settings.register("ffd20","weightUnits",{name:"FFD20.SETTINGS.Units.Weight",hint:"FFD20.SETTINGS.Units.WeightHint",scope:"world",config:!0,default:"default",type:String,choices:{default:"FFD20.Default",imperial:"FFD20.SETTINGS.Units.ImperialWeight",metric:"FFD20.SETTINGS.Units.MetricWeight"},requiresReload:!0}),game.settings.register("ffd20","overlandMetricVariant",{name:"FFD20.SETTINGS.OverlandVariantN",hint:"FFD20.SETTINGS.OverlandVariantL",scope:"world",config:!0,default:"rounded",choices:{rounded:"FFD20.SETTINGS.OverlandMetricRounded",exact:"FFD20.SETTINGS.OverlandMetricExact"}}),game.settings.register("ffd20","allowBackgroundSkills",{name:"FFD20.SETTINGS.VariantRules.BackgroundSkills",hint:"FFD20.SETTINGS.VariantRules.BackgroundSkillsHint",scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>ffd20.utils.refreshActors({renderOnly:!0})}),game.settings.register("ffd20","useFractionalBaseBonuses",{name:"FFD20.SETTINGS.VariantRules.FractionalBaseBonuses",hint:"FFD20.SETTINGS.VariantRules.FractionalBaseBonusesHint",scope:"world",config:!0,default:!1,type:Boolean,requiresReload:!0}),game.settings.register("ffd20","unchainedActionEconomy",{name:"FFD20.SETTINGS.UnchainedActionEconomyN",hint:"FFD20.SETTINGS.UnchainedActionEconomyH",scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>ffd20.utils.refreshActors({renderOnly:!0})}),game.settings.register("ffd20","cybertech",{name:"FFD20.SETTINGS.Cybertech",hint:"FFD20.SETTINGS.CybertechHint",scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>ffd20.utils.refreshActors({renderOnly:!0})}),game.settings.register("ffd20","critConfirm",{name:"FFD20.SETTINGS.CriticalConfirm",hint:"FFD20.SETTINGS.CriticalConfirmHint",scope:"world",type:Boolean,default:!0,config:!0}),game.settings.register("ffd20","healthPermission",{name:"FFD20.SETTINGS.HealthDisplay.Label",hint:"FFD20.SETTINGS.HealthDisplay.Hint",scope:"world",config:!0,default:"OBSERVER",type:String,choices:{NONE:"FFD20.SETTINGS.HealthDisplay.AnyPermission",LIMITED:"OWNERSHIP.LIMITED",OBSERVER:"OWNERSHIP.OBSERVER",OWNER:"OWNERSHIP.OWNER"}}),game.settings.register("ffd20","lowLightVisionMode",{name:"FFD20.SETTINGS.Vision.RequiresSelection",hint:"FFD20.SETTINGS.Vision.RequiresSelectionHint",scope:"world",config:!0,default:!0,type:Boolean,onChange:()=>{canvas.perception.update({initializeLighting:!0,initializeVision:!0,refreshLighting:!0,refreshVision:!0},!0)}}),game.settings.register("ffd20","sharedVisionMode",{name:"FFD20.SETTINGS.Vision.Sharing",hint:"FFD20.SETTINGS.Vision.SharingHint",scope:"world",config:!1,default:0,type:Number,choices:{0:"FFD20.SETTINGS.Vision.SharingWithoutSelection",1:"FFD20.SETTINGS.Vision.SharingWithSelection"},onChange:()=>canvas.perception.update({refreshLighting:!0,refreshVision:!0},!0)}),game.settings.register("ffd20","guaranteedVision",{name:"FFD20.SETTINGS.Vision.Guaranteed",hint:"FFD20.SETTINGS.Vision.GuaranteedHint",scope:"world",config:!0,default:"OBSERVER",type:String,choices:{OBSERVER:"OWNERSHIP.OBSERVER",OWNER:"OWNERSHIP.OWNER"},onChange:()=>canvas.perception.update({refreshLighting:!0,refreshVision:!0},!0)}),game.settings.register("ffd20","characterVision",{name:"FFD20.SETTINGS.Vision.PCDefault",hint:"FFD20.SETTINGS.Vision.PCDefaultHint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("ffd20","pcDisposition",{name:"FFD20.SETTINGS.Token.PCDisposition",hint:"FFD20.SETTINGS.Token.PCDispositionHint",type:String,choices:{NONE:"FFD20.NoOverride",FRIENDLY:"TOKEN.DISPOSITION.FRIENDLY",NEUTRAL:"TOKEN.DISPOSITION.NEUTRAL"},default:"FRIENDLY",scope:"world",config:!0}),game.settings.register("ffd20","npcDisposition",{name:"FFD20.SETTINGS.Token.NPCDisposition",hint:"FFD20.SETTINGS.Token.NPCDispositionHint",type:String,choices:{NONE:"FFD20.NoOverride",NEUTRAL:"TOKEN.DISPOSITION.NEUTRAL",HOSTILE:"TOKEN.DISPOSITION.HOSTILE"},default:"NONE",scope:"world",config:!0}),game.settings.register("ffd20","systemVision",{name:"FFD20.SETTINGS.Vision.SystemControl",hint:"FFD20.SETTINGS.Vision.SystemControlHint",scope:"world",config:!0,default:!0,type:Boolean,onChange:()=>{Object.values(ui.windows).filter((e=>e instanceof TokenConfig)).forEach((e=>e.render())),canvas.perception.update({initializeLighting:!0,refreshLighting:!0,refreshVision:!0},!0)}}),game.settings.register("ffd20","autoCollapseItemCards",{name:"FFD20.SETTINGS.Chat.AutoCollapse",hint:"FFD20.SETTINGS.Chat.AutoCollapseHint",scope:"client",config:!0,default:!1,type:Boolean,onChange:()=>ui.chat.render()}),game.settings.register("ffd20","hideChatButtons",{name:"FFD20.SETTINGS.Chat.HideButtons",hint:"FFD20.SETTINGS.Chat.HideButtonsHint",scope:"client",config:!0,default:!1,type:Boolean,onChange:()=>ui.chat.render()}),game.settings.register("ffd20","coinWeight",{name:"FFD20.SETTINGS.Houserules.CoinDivisor",hint:"FFD20.SETTINGS.Houserules.CoinDivisorHint",scope:"world",config:!0,default:50,type:Number,requiresReload:!0}),game.settings.register("ffd20","spellPointCost",{name:"FFD20.SETTINGS.Houserules.SpellPointCost",hint:"FFD20.SETTINGS.Houserules.SpellPointCostHint",scope:"world",config:!0,default:"@sl",type:String,onChange:()=>ffd20.utils.refreshSheets({reset:!1})}),game.settings.register("ffd20","dualHeal",{name:"FFD20.SETTINGS.DualHealDefault",hint:"FFD20.SETTINGS.DualHealDefaultHint",scope:"client",config:!0,default:!1,type:Boolean}),game.settings.register("ffd20","alternativeReachCornerRule",{name:"FFD20.SETTINGS.Houserules.AltReach",hint:"FFD20.SETTINGS.Houserules.AltReachHint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("ffd20","npcProficiencies",{name:"FFD20.SETTINGS.Houserules.NPCProficiencies",hint:"FFD20.SETTINGS.Houserules.NPCProficienciesHint",scope:"world",config:!0,default:!1,onChange:()=>ffd20.utils.refreshSheets({reset:!1}),type:Boolean}),game.settings.register("ffd20","coreEffects",{name:"FFD20.SETTINGS.CoreEffectsN",hint:"FFD20.SETTINGS.CoreEffectsH",scope:"world",config:!0,default:!1,type:Boolean,requiresReload:!0}),game.settings.register("ffd20","hideTokenConditions",{name:"FFD20.SETTINGS.HideTokenConditionsN",hint:"FFD20.SETTINGS.HideTokenConditionsH",scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>canvas.tokens?.placeables?.forEach((e=>e._applyRenderFlags({redrawEffects:!0})))}),game.settings.register("ffd20","obscureInlineRolls",{name:"FFD20.SETTINGS.Chat.ObscureInlineRolls",hint:"FFD20.SETTINGS.Chat.ObscureInlineRollsHint",scope:"world",config:!0,default:!1,type:Boolean,requiresReload:!0}),game.settings.register("ffd20","obscureSaveDCs",{name:"FFD20.SETTINGS.Chat.ObscureSaveDCs",hint:"FFD20.SETTINGS.Chat.ObscureSaveDCsHint",scope:"world",config:!0,default:!0,type:Boolean,requiresReload:!0}),game.settings.register("ffd20","initiativeTiebreaker",{name:"FFD20.SETTINGS.InitTiebreaker.Label",hint:"FFD20.SETTINGS.InitTiebreaker.Hint",scope:"world",config:!0,default:!0,type:Boolean,requiresReload:!0}),game.settings.register("ffd20","skipActionDialogs",{name:"FFD20.SETTINGS.SkipActionDialogsN",hint:"FFD20.SETTINGS.SkipActionDialogsH",scope:"client",config:!0,default:!1,type:Boolean}),game.settings.register("ffd20","placeMeasureTemplateOnQuickRolls",{name:"FFD20.SETTINGS.MeasureOnQuickUse",hint:"FFD20.SETTINGS.MeasureOnQuickUseHint",scope:"client",config:!0,default:!0,type:Boolean}),game.settings.register("ffd20","invertSectionFilterShiftBehaviour",{name:"FFD20.SETTINGS.Sheet.InvertFilters",hint:"FFD20.SETTINGS.Sheet.InvertFiltersHint",scope:"client",config:!0,default:!1,type:Boolean}),game.settings.register("ffd20","disableAttackCardTargets",{name:"FFD20.SETTINGS.Chat.NoTargets",hint:"FFD20.SETTINGS.Chat.NoTargetsHint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("ffd20","clearTargetsAfterAttack",{name:"FFD20.SETTINGS.Chat.ClearTargets",hint:"FFD20.SETTINGS.Chat.ClearTargetsHint",scope:"client",config:!0,default:!1,type:Boolean})}function migrateSystemSettings(){game.settings.storage.get("client").removeItem("ffd20.compendiumItems"),game.user.isGM}const getSkipActionPrompt=()=>game.settings.get("ffd20","skipActionDialogs")&&!ffd20.skipConfirmPrompt||!game.settings.get("ffd20","skipActionDialogs")&&ffd20.skipConfirmPrompt,N=Object.freeze(Object.defineProperty({__proto__:null,getSkipActionPrompt,migrateSystemSettings,registerSystemSettings},Symbol.toStringTag,{value:"Module"}));class LevelUpForm extends FormApplication{actor;token;simulacra;mold;config={health:{manual:null,type:null,value:0},fcb:{choice:"none",unavailable:!1,available:!0},visibility:null,feats:0,abilityScore:{new:0,used:0,get available(){return this.new-this.used}}};static ICONS={fcb:{none:"",hp:"systems/ffd20/icons/skills/green_19.jpg",skill:"systems/ffd20/icons/items/inventory/dice.jpg",alt:"systems/ffd20/icons/skills/affliction_22.jpg"},health:{auto:"",manual:"systems/ffd20/icons/skills/green_19.jpg",roll:"systems/ffd20/icons/items/inventory/dice.jpg"}};useBackgroundSkills=game.settings.get("ffd20","allowBackgroundSkills");constructor(e,t=null,s={}){if(super(t,s),"class"!==t?.type)throw Error("Can not level-up non-class items.");if(this.actor=e??t?.actor??s.actor,!this.actor)throw Error("LevelUpForm needs an actor");this.token=this.actor?.token??s.token,delete this.options.actor,delete this.options.token,this.config.isMythic="mythic"===t.subType,this.config.level={old:t.system.level,new:t.system.level+1,levelUp:t.system.level>0,hd:{old:this.actor.system.attributes.hd.total,new:null}};const a=this.config;this.config.abilityScore.upgrades=Object.fromEntries(Object.entries(ffd20.config.abilities).map((([e,t])=>[e,{...this.actor.system.abilities[e],key:e,label:t,added:0,bonus:0,get isEnhanced(){return this.total!==this.base},get isNull(){return null===this.base},get isValid(){return!this.isNull},get isAvailable(){return this.isValid&&a.abilityScore.available>0},get isModified(){return 0!=this.added}}]))),this.actor.hasPlayerOwner||(this.config.visibility=CONST.DICE_ROLL_MODES.PRIVATE),this._initData(),this._initChoices()}get item(){return this.object}set item(e){this.object=e}get id(){return`level-up-${this.actor.uuid.replaceAll(".","-")}-class-${this.item.system.tag||ffd20.utils.createTag(this.item.name)}`}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["ffd20","level-up"],template:"systems/ffd20/templates/apps/level-up.hbs",scrollY:["section"],width:820,height:"auto",submitOnChange:!0,submitOnClose:!1,closeOnSubmit:!1,resizable:!0})}get title(){return this.isLevelUp?game.i18n.format("FFD20.LevelUp.Increase",{class:this.item.name})+" – "+this.actor.name:game.i18n.format("FFD20.LevelUp.Add",{class:this.item.name})+" – "+this.actor.name}get isLevelUp(){return this.item.system.level>0}get isNewClass(){return!this.isLevelUp}static async increaseLevel(e,t,{token:s}={}){const a=Object.values(e.apps).find((e=>e instanceof LevelUpForm&&e._element&&e.item===t));if(!a)return new Promise((a=>new this(e,t,{token:s,resolve:a}).render(!0,{focus:!0})));a.render(!0,{focus:!0})}static async addClassWizard(e,t,{token:s}={}){const a=new Item.implementation(t,{parent:e});return a.updateSource({system:{hp:0,level:0}}),a.reset(),new Promise((t=>new this(e,a,{token:s,resolve:t}).render(!0,{focus:!0})))}_prepareAssociations(){if(this.config.associations)return;const e=this.config.level.new,t=this.item.system.links?.classAssociations?.filter((t=>t.level===e))?.map((e=>({...fromUuidSync(e.uuid||""),uuid:e.uuid})))??[];this.config.associations=t}async getData(){const e=game.settings.get("ffd20","healthConfig").getClassHD(this.item),t=this.item.toObject(),s=this.config.fcb;s.hp=t.system.fc?.hp?.value||0,s.skill=t.system.fc?.skill?.value||0,s.alt=t.system.fc?.alt?.value||0;const a={...this.config,item:t,document:this.item,actor:this.actor,config:ffd20.config,labels:{fcb:{skill:"FFD20.LevelUp.FC.Skill.Label",hp:"FFD20.LevelUp.FC.HP.Label",none:"FFD20.LevelUp.FC.None.Label",alt:"FFD20.LevelUp.FC.Alt.Label"}},fcb:s,abilityScore:this.config.abilityScore,icons:this.constructor.ICONS,visibilityOptions:ffd20.const.messageVisibility,useBackgroundSkills:this.useBackgroundSkills};game.user.isGM||delete a.visibilityOptions.selfroll,a.health.rate=Math.round(100*e.rate);const i=this.config.level.hd.total,n=this.config.level.tier.total;switch(a.abilityScore.new=0,this.config.isMythic?a.abilityScore.new=ffd20.config.tierAbilityScores[n]??0:a.abilityScore.new=ffd20.config.levelAbilityScores[i]??0,a.health.value=a.health.delta,a.health.type){case"manual":a.health.value+=a.health.raw;break;case"auto":case"roll":a.health.value=a.health.raw}switch(a.skills.delta.ranks=a.skills.delta.adv,a.health.bonus=0,a.fcb.choice){case"hp":a.health.value+=1,a.health.bonus+=1;break;case"skill":a.skills.delta.ranks+=1}return a.abilityScore.next=this._getNextAbilityScoreLandmark(),a.ready=this.isReady(),a}isReady(){return!!this.config.health.type&&0==this.config.abilityScore.available}_getNextAbilityScoreLandmark(){const e=this.config.isMythic?ffd20.config.tierAbilityScores:ffd20.config.levelAbilityScores,t=this.config.isMythic?this.config.level.tier.total:this.config.level.hd.total;if((e[t]??0)>0)return null;return Object.entries(e).map((([e,t])=>Number(e))).filter((e=>e>t))[0]??null}_getDefaultHealthOption(){return"mythic"===this.item.subType?"static":this.config.health.auto?"auto":this.config.health.maximized?"max":"roll"}_getDefaultHitPoints(){return Math.ceil(1+(this.item.system.hd-1)/2)}_prepareHealthData(){const e=game.settings.get("ffd20","healthConfig"),t=e.getClassHD(this.item),{auto:s,rate:a}=t;this.config.health.auto=s,this.config.health.manual??=this._getDefaultHitPoints(),this.config.health.hitDie=this.item.system.hd||8;let i=0;if(this.config.isMythic)i=this.item.system.hd;else if(s){const t={up:Math.ceil,nearest:Math.round,down:Math.floor}[e.rounding],s=1+(this.item.system.hd-1)*a;if(e.continuous){const{new:e,old:a}=this.config.level.hd;i=e+t(e*s)-(a+t(a*s))}else i=t(s)}else i+=this.config.health.manual;this.config.health.delta=i;const n=this.simulacra.system.attributes?.hpAbility,o=this.simulacra.system.abilities[n]?.mod??0;this.config.health.ability={key:n,mod:o}}_initData(){this._prepareAssociations();const e=this.config;if(e.fcb.available=this.isFavouredClass(),e.fcb.unavailable=!e.fcb.available,!this.simulacra){const e=this.actor.toObject(),t=this.item.id??"MOLD000000000000";if(!this.item.id){const s=this.item.toObject();s._id=t,e.items.push(s)}this.simulacra=new Actor.implementation(e),this.mold=this.simulacra.items.get(t)}this.oldLevel??=this.getLevelData(e.level.old);const t=this.getLevelData(e.level.new);this.newLevel=t,e.level.hd={new:t.hd,old:this.oldLevel.hd,total:t.totalHD},e.level.tier={new:t.mythicTier,old:this.oldLevel.mythicTier,total:t.totalMythicTier},e.level.feats=t.feats-this.oldLevel.feats;const s=this.actor.system.attributes?.savingThrows;if(s){const t=this.simulacra.system.attributes?.savingThrows;e.level.fort=t.fort.total-s.fort.total,e.level.ref=t.ref.total-s.ref.total,e.level.will=t.will.total-s.will.total}e.level.bab=this.simulacra.system.attributes?.bab?.total-this.actor.system.attributes?.bab?.total,e.health.raw=t.hp-this.oldLevel.hp,e.skills={new:t.skills,old:this.oldLevel.skills},e.skills.delta={adv:e.skills.new.value-e.skills.old.value,bg:e.skills.new.bg-e.skills.old.bg},e.level.skills=e.skills.delta.adv+e.skills.delta.bg,this._prepareHealthData()}getLevelData(e){const t=this.simulacra,s=this.mold;s.updateSource({"system.level":e}),t.reset();let a={};const i=null===t.system.abilities?.int?.value;let n=0,o=0;const r=i?0:t.system.abilities?.int?.mod??0;if(t.itemTypes.class.filter((e=>"mythic"!==e.subType)).forEach((e=>{const t=e.hitDice;if(0===t)return;const s=e.system.skillsPerLevel||0;if(s>0&&(n+=Math.max(1,s+r)*t),this.useBackgroundSkills&&ffd20.config.backgroundSkillClasses.includes(e.subType)){const e=t*ffd20.config.backgroundSkillsPerLevel;e>0&&(o+=e)}})),t.system.details?.bonusSkillRankFormula){a=t.getRollData();const e=Roll.defaultImplementation.safeRollSync(t.system.details.bonusSkillRankFormula,a);e.err&&console.error(`An error occurred in the Bonus Skill Rank formula of actor ${t.name}.`),n+=e.total||0}n+=t.system.details?.skills?.bonus||0;const l=t.getFeatCount().max;return{skills:{value:n,bg:o},feats:l,hd:s.hitDice,totalHD:t.system.attributes.hd.total,mythicTier:s.mythicTier,totalMythicTier:t.system.details.mythicTier,hp:t.system.attributes.hp.max,bab:s.system.babBase,fort:s.system.savingThrows?.fort?.base||0,ref:s.system.savingThrows?.ref?.base||0,will:s.system.savingThrows?.will?.base||0}}isFavouredClass(){return ffd20.config.favoredClassTypes.includes(this.item.subType)}async _updateObject(e,t){const s=this.config.health.manual;return foundry.utils.mergeObject(this.config,foundry.utils.expandObject(t)),s!==this.config.health.manual&&(this._prepareHealthData(),this.config.health.type="manual"),this.render()}activateListeners(e){super.activateListeners(e),e.find(".ability-scores .ability-score .operator").on("click",this._onClickAbilityScoreOperator.bind(this)),e.find(".item-list .item").on("click",this._openItemSheet.bind(this)),e.find('button[data-action="commit"]').on("click",this._onCommit.bind(this)),e.find('button[data-action="skip"]').on("click",this._onSkip.bind(this))}async _openItemSheet(e){const t=e.currentTarget.dataset.itemUuid;(await fromUuid(t)).sheet.render(!0,{focus:!0})}_onClickAbilityScoreOperator(e){e.preventDefault();const t=e.currentTarget,s=t.dataset.operator,a=t.closest(".ability-score").dataset.key,i=this._adjustAbilityScore(a,s),n=this._adjustAbilityScoreValue(a,i),o=this.config.abilityScore,r=o.upgrades[a],l=this._adjustAbilityScoreCost(a,n);r.value+=n,r.added+=l,o.used+=l,this.simulacra.updateSource({system:{abilities:{[a]:{value:r.value}}}}),foundry.utils.mergeObject(r,this.simulacra.system.abilities[a]),this._initData(),this.render()}_adjustAbilityScore(e,t=null){switch(t){case"add":return 1;default:return 0;case"subtract":return-1}}_adjustAbilityScoreValue(e,t){return t*(this.config.isMythic?ffd20.config.tierAbilityScoreMult:ffd20.config.levelAbilityScoreMult)}_adjustAbilityScoreCost(e,t){return t}_initChoices(){this._initFCBChoices(),this._initHPChoices()}_initFCBChoices(){if(!this.config.fcb.available)return;const{hp:e,skill:t,alt:s}=this.item.system.fc,a=[{id:"hp",value:e?.value||0},{id:"skill",value:t?.value||0},{id:"alt",value:s?.value||0}].sort(((e,t)=>t.value-e.value))[0];a.value>0&&(this.config.fcb.choice=a.id)}_initHPChoices(){if(this.config.health.type=this._getDefaultHealthOption(),this.config.isMythic)return;const e=game.settings.get("ffd20","healthConfig");if(e.getClassHD(this.item).maximized){e.maximized;const t=this.actor.itemTypes.class.reduce(((t,s)=>e.getClassHD(this.item).maximized?t+s.hitDice:t),0),s=e.maximized-t;this.config.health.maximized=Math.max(0,s),s>0&&(this.config.health.delta=this.config.health.hitDie,this.config.health.type="max")}}async close(e){return this.resolve?.(null),super.close(e)}_getHealthFormula(e){const t=this.item.system.hd;return"static"===e?""+t:"1d"+t}_spoofHealthRoll(e,t){const s=e.toJSON();return s.total=t,s.terms[0].results[0].result=t,Roll.defaultImplementation.fromData(s)}async _getHealthRoll(e,t){const s=await Roll.defaultImplementation.safeRoll(t);switch(e){case"auto":case"max":return this._spoofHealthRoll(s,this.config.health.delta);case"manual":return this._spoofHealthRoll(s,this.config.health.manual);default:return s}}async _onCommit(e){this._disableSheet();const t=this.config,s=this.item.toObject().system,a={},i=s.level+1,n={isMythic:this.config.isMythic,level:{previous:s.level,new:i},newFeatures:this.config.associations,hp:{}},o=this._getHealthFormula(t.health.type),r=await this._getHealthRoll(t.health.type,o);n.hp={label:{manual:"FFD20.LevelUp.Chat.Health.Manual",roll:"FFD20.LevelUp.Chat.Health.Roll",max:"FFD20.LevelUp.Chat.Health.Auto",auto:"FFD20.LevelUp.Chat.Health.Auto",static:"FFD20.LevelUp.Chat.Health.Static"}[t.health.type],roll:r,add:r.toAnchor({classes:["inline-dsn-hidden"]}).outerHTML};const l=r.total||0;if(a.hp=(s.hp||0)+l,t.fcb.choice in s.fc){const e=t.fcb.choice,i=s.fc?.[e]?.value??0;foundry.utils.setProperty(a,`fc.${e}.value`,i+1);const o={hp:"HP",skill:"Skill",alt:"Alt"}[e];n.fc={type:e,label:"FFD20.FavouredClassBonus."+o}}const c=this.actor.getFeatCount(),d=[],u=[],m=this._updateAbilityScore();m&&(m.update?d.push(m.itemData):u.push(m.itemData),n.ability=Object.entries(this.config.abilityScore.upgrades).reduce(((e,[t,{added:s}])=>(0==s||(e[t]=s),e)),{})),a.level=i;let p=this.item;if(p.actor&&p.id?d.unshift({system:a,_id:p.id}):(p.updateSource({system:a}),u.unshift(p.toObject())),u.length&&await this.actor.createEmbeddedDocuments("Item",u,{render:0==d.length}),d.length){p=(await this.actor.updateEmbeddedDocuments("Item",d)).find((e=>"class"===e.type)),p&&(this.item=p)}const h={};n.extra=h;const f=this.actor.getFeatCount();f.new=Math.max(0,f.max-c.max),h.feats=f,h.enabled=f.new>0,await this.createChatMessage(n),this.resolve?.(p),this.close()}async _onSkip(e){e.preventDefault(),this._disableSheet();const t={system:{level:this.config.level.new}};let s=this.item;s.id&&s.actor===this.actor?await s.update(t):(s.updateSource(t),s=await Item.implementation.create(s.toObject(),{parent:this.actor})),s.sheet.render(!0,{focus:!0}),this.resolve?.(null),this.close()}_disableSheet(){const e=this.element[0].querySelector("form");e.style.cursor="progress",e.querySelectorAll("button,input,select").forEach((e=>{e.disabled=!0,e.style.cursor="progress"}))}_updateAbilityScore(){if(!this.config.abilityScore.upgrades)return;const e=Object.entries(this.config.abilityScore.upgrades).reduce(((e,[t,{added:s}])=>(0==s||(e[t]=s),e)),{});if(0===Object.keys(e).length)return;const t=this.actor.itemTypes.feat.find((e=>!0===e.getFlag("ffd20","levelUp")));if(t){const s=t.toObject().system.changes??[];for(const[t,a]of Object.entries(e)){const e=s.find((e=>e.target===t));if(e){const t=parseInt(e.formula);if(!Number.isNaN(t)){const s=t+a;e.formula=""+s;continue}}s.push(new ffd20.components.ItemChange({target:t,formula:""+a,type:"untypedPerm"}).toObject())}return{itemData:{"system.changes":s,_id:t.id},update:!0}}{let t=ffd20.config.levelAbilityScoreFeature;return t=foundry.utils.mergeObject(t,{system:{changes:Object.entries(e).reduce(((e,[t,s])=>{const a=new ffd20.components.ItemChange({target:t,formula:""+s,type:"untypedPerm"}).toObject();return e.push(a),e}),[])},flags:{ffd20:{levelUp:!0}}},{inplace:!1}),{itemData:t,update:!1}}}async createChatMessage(e){const t={...e,config:ffd20.config,item:this.item,actor:this.actor},s=e.hp?.roll?[e.hp.roll]:[],a={content:await renderTemplate("systems/ffd20/templates/chat/level-up.hbs",t),style:CONST.CHAT_MESSAGE_STYLES.OOC,speaker:ChatMessage.implementation.getSpeaker({actor:this.actor,token:this.token}),rolls:s,system:{subject:{class:"levelUp"}}};let i=this.config.visibility||game.settings.get("core","rollMode");return game.user.isGM||i!==CONST.DICE_ROLL_MODES.SELF||(i=CONST.DICE_ROLL_MODES.PRIVATE),ChatMessage.implementation.applyRollMode(a,i),ChatMessage.create(a,{rollMode:i})}}class CurrencyTransfer extends FormApplication{constructor(e={actor:null,container:null,amount:{},alt:!1},t={actor:null,container:null,amount:{},alt:!1},s={}){if(super(s),e.actor&&("string"==typeof e.actor&&(e.actor=game.actors.get(e.actor)),"npc"==e.actor.type&&(e.alt=!1)),e.container&&(e.alt=!1,"string"==typeof e.container&&(e.container=e.actor?e.actor.items.get(e.container):game.items.get(e.container))),t.actor&&("string"==typeof t.actor&&(t.actor=game.actors.get(t.actor)),"npc"==t.actor.type?t.alt=!1:t.actor!==e.actor||e.container||t.container||(t.alt=!e.alt)),t.container&&"string"==typeof t.container&&(t.container=t.actor?t.actor.items.get(t.container):game.items.get(t.container)),e.container)e.amount=foundry.utils.mergeObject(e.container.system.currency,e.amount??{});else if(e.actor)e.amount=foundry.utils.mergeObject(e.alt?e.actor.system.altCurrency:e.actor.system.currency,e.amount??{});else{if(!game.user.isGM)return void ui.notification.warning("Cannot use Infinite currency transfer as non-gm.");e.amount=foundry.utils.mergeObject({pp:"∞",gp:"∞",sp:"∞",cp:"∞"},e.amount??{})}(t.actor||t.container)&&(this.source=e,this.dest=t)}get title(){let e;return this.source.actor?(e=this.source.actor.name+" ",this.source.container&&(e+=`(${this.source.container.name}) `)):e=this.source.container?this.source.container.name+" ":"∞ ",e+="➤ ",this.source.actor==this.dest.actor&&(this.source.alt||this.dest.alt)?e+=this.dest.alt?game.i18n.localize("FFD20.Currency.Weightless"):game.i18n.localize("FFD20.Currency.Label"):this.dest.actor?(e+=this.dest.actor.name,this.dest.container&&(e+=` (${this.dest.container.name})`)):e+=this.dest.container.name,e}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["ffd20","currency-transfer"],template:"systems/ffd20/templates/apps/currency-transfer.hbs",width:380,height:235})}static get order(){return["pp","gp","sp","cp"]}activateListeners(e){e.find("button.cur-range").click(this._curRange.bind(this)),e.find("input").on("input",this._calcTotal.bind(this)),$(e.find("input")[0]).trigger("input")}_updateObject(e,t){this.dest.amount={pp:t.pp??0,gp:t.gp??0,sp:t.sp??0,cp:t.cp??0},this.constructor.transfer(this.source.container?this.source.container:this.source.actor,this.dest.container?this.dest.container:this.dest.actor,this.dest.amount,this.source.alt,this.dest.alt,2)}getData(e={}){return{source:this.source,dest:this.dest,options:this.options,title:this.title,total:"∞"===this.source.amount.gp?"∞":this.constructor.order.reduce(((e,t,s)=>e+this.source.amount[t]*10**(1-s)),0)}}_curRange(e){e.preventDefault();const t=e.target.closest("button"),s=t.closest(".form-fields"),a=t.classList.contains("down"),i=s.querySelector("input");i.value=a?"":s.querySelector("span").textContent,$(i).trigger("input")}_calcTotal(e){const t=e.target.closest(".currency-transfer"),s=Object.fromEntries([...t.querySelectorAll("input")].map((e=>[e.name,parseInt(e.value||0)]))),a=this.constructor.order.reduce(((e,t,a)=>e+s[t]*10**(1-a)),0);t.querySelector(".currency-total .form-fields label").textContent=Math.round(100*a)/100+" gp"}static _failed(e){ui.notifications.error(game.i18n.localize("FFD20.Application.CurrencyTransfer.Failed")+game.i18n.localize(e))}static async _directoryDrop(e,t){t.preventDefault();const s=TextEditor.getDragEventData(t);if("Currency"!==s.type)return;const a=t.currentTarget.closest("[data-tab]").dataset.tab;let i;if("items"===a?i=game.items.get(e):"actors"===a&&(i=game.actors.get(e)),!i)throw Error("Could not find target actor or item!");const n=await fromUuid(s.actorUuid||"");return s.currency&&n?new CurrencyTransfer({actor:n,container:s.containerId,alt:s.alt},{actor:i?.actor??i,container:"container"===i.system.type?i.id:null,amount:Object.fromEntries([[s.currency,parseInt(s.amount)]])}).render(!0):void 0}static async transfer(e,t,s,a=!1,i=!1,n=!1){if(!e&&!game.user.isGM||!t||!s)return!1;if("object"!=typeof s&&(s={gp:parseInt(s)}),this.order.forEach((e=>s[e]=s[e]??0)),!Object.values(s).find((e=>e>0)))return this._failed("FFD20.Application.CurrencyTransfer.Insufficient"),!1;let o=foundry.utils.deepClone(a?e?.system.altCurrency:e?.system.currency);const r=foundry.utils.deepClone(i?t.system.altCurrency:t.system.currency);if(!o&&!game.user.isGM||!r)return!1;const l=Object.assign(Object.fromEntries(this.order.map((e=>[e,1/0]))),o),c=this.order.reduce(((e,t,a)=>e+s[t]*10**(1-a)),0),d=this.order.reduce(((e,t,s)=>e+o[t]*10**(1-s)),0);return c>d?(this._failed("FFD20.Application.CurrencyTransfer.Insufficient"),!1):(o&&this.order.some((e=>{const t=o[e]-s[e];if(t<0&&n)return s=this.convert(l,c,n),o=Object.fromEntries(this.order.map((e=>[e,l[e]-s[e]]))),!0;o[e]=t})),!(!s||Object.values(o).find((e=>e<0)))&&(e.isOwner&&t.isOwner?(this.order.forEach((e=>r[e]+=s[e])),e===t?e.update({"system.altCurrency":a?o:r,"system.currency":i?o:r}):(a?e.update({"system.altCurrency":o}):e.update({"system.currency":o}),i?t.update({"system.altCurrency":r}):t.update({"system.currency":r}),s)):game.users.find((e=>e.active&&e.isGM))?(game.socket.emit("system.ffd20",{eventType:"currencyTransfer",data:{sourceActor:e.actor?.uuid??e.uuid,destActor:t.actor?.uuid??t.uuid,sourceContainer:"container"===e.type?e.id:"",destContainer:"container"===t.type?t.id:"",sourceAlt:a,destAlt:i,amount:s}}),s):(this._failed("FFD20.Application.CurrencyTransfer.GMRequired"),!1)))}static convert(e,t){if(e=e?Object.assign({},e):Object.fromEntries(this.order.map((e=>[e,1/0]))),"number"!=typeof t&&(t=this.order.reduce(((e,s,a)=>e+t?.[s]*10**(1-a)))),!t)return!1;const s={};return!((t=this.order.reduce(((t,a,i)=>{const n=Math.min(e[a],Math.floor(t%1e4/10**(3-i))),o=n*10**(3-i);return s[a]=n,e[a]-=n,t-o}),100*t)/100)<0)&&s}}const L=["systems/ffd20/templates/actors/parts/actor-summary.hbs","systems/ffd20/templates/actors/parts/actor-level.hbs","systems/ffd20/templates/actors/parts/actor-traits.hbs","systems/ffd20/templates/actors/parts/actor-inventory.hbs","systems/ffd20/templates/actors/parts/actor-item-nav-filters.hbs","systems/ffd20/templates/actors/parts/actor-features.hbs","systems/ffd20/templates/actors/parts/actor-spellbook-front.hbs","systems/ffd20/templates/actors/parts/actor-spellbook.hbs","systems/ffd20/templates/actors/parts/actor-skills-front.hbs","systems/ffd20/templates/actors/parts/actor-skills.hbs","systems/ffd20/templates/actors/parts/actor-combat.hbs","systems/ffd20/templates/actors/parts/actor-defenses_tables.hbs","systems/ffd20/templates/actors/parts/actor-buffs.hbs","systems/ffd20/templates/actors/parts/actor-attributes.hbs","systems/ffd20/templates/actors/parts/actor-settings.hbs","systems/ffd20/templates/actors/parts/actor-settings-ability-scores.hbs","systems/ffd20/templates/actors/parts/actor-item-summary.hbs","systems/ffd20/templates/internal/item-search.hbs","systems/ffd20/templates/internal/table_magic-items.hbs","systems/ffd20/templates/items/parts/item-actions.hbs","systems/ffd20/templates/items/parts/item-advanced.hbs","systems/ffd20/templates/items/parts/item-alignments.hbs","systems/ffd20/templates/items/parts/item-ammo.hbs","systems/ffd20/templates/items/parts/item-aura.hbs","systems/ffd20/templates/items/parts/item-base-types.hbs","systems/ffd20/templates/items/parts/item-changes.hbs","systems/ffd20/templates/items/parts/item-class-link.hbs","systems/ffd20/templates/items/parts/item-contents.hbs","systems/ffd20/templates/items/parts/item-description.hbs","systems/ffd20/templates/items/parts/item-instructions.hbs","systems/ffd20/templates/items/parts/item-sidebar-inputs.hbs","systems/ffd20/templates/items/parts/item-sidebar-tags.hbs","systems/ffd20/templates/items/parts/item-sidebar-conditions.hbs","systems/ffd20/templates/items/parts/item-sidebar-aura.hbs","systems/ffd20/templates/items/parts/item-links.hbs","systems/ffd20/templates/items/parts/item-materials-addon.hbs","systems/ffd20/templates/items/parts/item-materials.hbs","systems/ffd20/templates/items/parts/item-name.hbs","systems/ffd20/templates/items/parts/item-notes.hbs","systems/ffd20/templates/items/parts/item-proficiencies.hbs","systems/ffd20/templates/items/parts/item-class-skills.hbs","systems/ffd20/templates/items/parts/item-creature-type.hbs","systems/ffd20/templates/items/parts/item-conditions.hbs","systems/ffd20/templates/items/parts/item-size.hbs","systems/ffd20/templates/items/parts/item-tag.hbs","systems/ffd20/templates/items/parts/item-tags.hbs","systems/ffd20/templates/items/parts/item-weapon-groups.hbs","systems/ffd20/templates/items/parts/spell-descriptors.hbs","systems/ffd20/templates/items/parts/spell-multischool.hbs","systems/ffd20/templates/items/parts/spell-subschool.hbs","systems/ffd20/templates/items/parts/item-action-summary.hbs","systems/ffd20/templates/internal/content-source-view.hbs","systems/ffd20/templates/apps/attack-roll-dialog.hbs","systems/ffd20/templates/apps/vision-sharing.hbs","systems/ffd20/templates/apps/help-browser.hbs","systems/ffd20/templates/apps/action-select.hbs","systems/ffd20/templates/apps/item-action/action.hbs","systems/ffd20/templates/apps/item-action/activation.hbs","systems/ffd20/templates/apps/item-action/template.hbs","systems/ffd20/templates/apps/item-action/conditionals.hbs","systems/ffd20/templates/apps/compendium-browser/entries.hbs","systems/ffd20/templates/apps/compendium-browser/checkbox-filter.hbs","systems/ffd20/templates/apps/compendium-browser/text-filter.hbs","systems/ffd20/templates/chat/roll-ext.hbs","systems/ffd20/templates/chat/defenses.hbs","systems/ffd20/templates/chat/defenses-vehicle.hbs","systems/ffd20/templates/chat/parts/gm-description.hbs","systems/ffd20/templates/chat/parts/attack-roll-header.hbs","systems/ffd20/templates/chat/parts/attack-roll-footer.hbs","systems/ffd20/templates/chat/parts/attack-roll-targets.hbs","systems/ffd20/templates/chat/parts/item-notes.hbs","systems/ffd20/templates/items/headers/spell-header.hbs","systems/ffd20/templates/internal/token-config_vision.hbs","systems/ffd20/templates/internal/damage-type-visual.hbs","systems/ffd20/templates/hud/quick-actions.hbs","systems/ffd20/templates/apps/level-up/health.hbs","systems/ffd20/templates/apps/level-up/ability-score.hbs","systems/ffd20/templates/apps/level-up/fcb.hbs","systems/ffd20/templates/apps/level-up/summary.hbs","systems/ffd20/templates/extended-tooltip.hbs"],preload=async()=>{loadTemplates(L)},renderCachedTemplate=(e,t={})=>{const s=Handlebars.partials[e];if(!s)throw Error(`Template ${e} not found in cache`);return s(t,{allowProtoMethodsByDefault:!0,allowProtoPropertiesByDefault:!0,preventIndent:!0})};class ActorSheetPF extends ActorSheet{_filters={sections:{},search:{}};searchCompositioning=!1;searchRefresh=!0;searchDelay=250;searchDelayEvent=null;effectiveSearch={};_itemUpdates=[];_hiddenElems={};_skillsLocked=!0;_expandedItems=new Set;_activeEdits={};static EDIT_TRACKING=["system.details.biography.value","system.details.notes.value"];static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"ffd20","actor"],scrollY:[".combat-attacks",".item-groups-list",".skills-list",".traits",".actor-notes",".editor-content[data-edit='system.details.biography.value']"],dragDrop:[{dragSelector:".item[data-item-id]"},{dragSelector:".currency .denomination"},{dragSelector:"li.skill[data-skill]"},{dragSelector:".saving-throw[data-savingthrow]"},{dragSelector:".attribute[data-attribute]"},{dragSelector:".attribute[data-attack]"},{dragSelector:"li.generic-defenses[data-drag]"},{dragSelector:".ability-scores .ability[data-ability]"},{dragSelector:".spellcasting-concentration[data-drag]"},{dragSelector:".spellcasting-cl"}],tabs:[{navSelector:"nav.tabs[data-group='primary']",contentSelector:"section.primary-body",initial:"summary",group:"primary"},{navSelector:"nav.tabs[data-group='skillset']",contentSelector:"section.skillset-body",initial:"adventure",group:"skills"},{navSelector:"nav.tabs[data-group='spellbooks']",contentSelector:"section.spellbooks-body",initial:"primary",group:"spellbooks"}]}}get currentPrimaryTab(){return this._tabs.find((e=>"primary"===e.group))?.active||null}get currentSpellbookKey(){return this._tabs.find((e=>"spellbooks"===e.group))?.active||"primary"}async getData(){const e=this.actor.isOwner,t="metric"===ffd20.utils.getDistanceSystem(),s={actor:this.actor,document:this.actor,effects:this.actor.effects,options:this.options,owner:e,itemTypes:this.actor.itemTypes,limited:this.actor.limited,editable:this.isEditable,cssClass:e?"editable":"locked",isCharacter:"character"===this.actor.type,hasHD:!0,config:ffd20.config,isGM:game.user.isGM,race:null!=this.actor.race?this.actor.race.toObject():null,usesAnySpellbook:Object.values(this.actor.system.attributes.spells.spellbooks).some((e=>e.inUse)),sourceData:{},skillsLocked:this._skillsLocked,units:{weight:"metric"===ffd20.utils.getWeightSystem()?ffd20.config.weightUnitsShort.kg:ffd20.config.weightUnitsShort.lbs,distance:{tactical:t?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft,overland:t?ffd20.config.measureUnitsShort.km:ffd20.config.measureUnitsShort.mi}},unchainedActions:game.settings.get("ffd20","unchainedActionEconomy"),choices:{}};s.usesAnySpellbook&&(s.choices.casterProgression=Object.fromEntries(Object.entries(ffd20.config.caster.progression).map((([e,t])=>[e,t.label]))),s.choices.casterPreparation=Object.fromEntries(Object.entries(ffd20.config.caster.type).map((([e,t])=>[e,t.label])))),Object.values(s.itemTypes).forEach((e=>e.sort(((e,t)=>(e.sort??0)-(t.sort??0)))));const a=this.actor.getRollData();if(s.rollData=a,s.system=foundry.utils.deepClone(this.actor.system),s.inCharacterGeneration=this.inCharacterGeneration,s.hasProficiencies=s.isCharacter||game.settings.get("ffd20","npcProficiencies"),!s.unchainedActions){const e=s.rollData.attributes?.bab?.total;if(e>0){const t=1+RollPF.safeRollSync(ffd20.config.iterativeExtraAttacks,{bab:e}).total||0,a=Array.fromRange(t).map((t=>e+RollPF.safeRollSync(ffd20.config.iterativeAttackModifier,{attackCount:t}).total));s.iteratives="+"+a.join(" / +")}}s.hasCurrency=Object.values(this.actor.system.currency).some((e=>e>0)),s.hasAltCurrency=Object.values(this.actor.system.altCurrency).some((e=>e>0));const i={secrets:e,rollData:s.rollData,relativeTo:this.actor},n=s.system.details?.biography?.value,o=n?ffd20.utils.enrichHTMLUnrolled(n,i):Promise.resolve();o.then((e=>s.biographyHTML=e));const r=s.system.details?.notes?.value,l=r?ffd20.utils.enrichHTMLUnrolled(r,i):Promise.resolve();l.then((e=>s.notesHTML=e)),await Promise.all([o,l]),s.token=this.token,s.items=this.actor.items.map((e=>this._prepareItem(e))),s.items.sort(((e,t)=>(e.sort||0)-(t.sort||0))),s.labels=this.actor.getLabels(),s.filters=this._filters,s.labels.currency="FFD20.Currency.Inline."+ffd20.config.currency.standard;{const e=s.system.attributes,t=s.system.abilities,a=Object.values(ffd20.config.sizeMods)[s.system.traits.size.value],i=e.attack.shared+e.attack.general+a,n=t[e.attack.meleeAbility]?.mod??0,o=t[e.attack.rangedAbility]?.mod??0;s.genericAttacks={melee:{ability:e.attack.meleeAbility,abilityMod:n,modifier:i+e.attack.melee+n},ranged:{ability:e.attack.rangedAbility,abilityMod:o,modifier:i+e.attack.ranged+o}}}{const e=this.calculateTotalItemValue({inLowestDenomination:!0,recursive:!0}),t=ffd20.utils.currency.split(e,{pad:!0});s.labels.totalValue=game.i18n.format("FFD20.TotalItemValue",t)}for(const[e,t]of Object.entries(s.system.abilities))t.label=ffd20.config.abilities[e],t.enabled=null!==t.value,t.totalLabel=t.enabled?t.total:"—";for(const[e,t]of Object.entries(s.system.attributes.ac))t.label=ffd20.config.ac[e];for(const[e,t]of Object.entries(s.system.attributes.savingThrows))t.label=ffd20.config.savingThrows[e];for(const[e,t]of Object.entries(s.system.skills??{}))if(t.key=e,t.path=e,t.skillId=e,t.label=ffd20.config.skills[e]||t.name,t.arbitrary=ffd20.config.arbitrarySkills.includes(e),t.compendiumEntry=ffd20.config.skillCompendiumEntries[e]||t.journal||null,t.untrained=!0===t.rt&&!(t.rank>0),null!=t.subSkills)for(const[s,a]of Object.entries(t.subSkills))a.key=`${e}.${s}`,a.path=`${e}.subSkills.${s}`,a.skillId=e,a.subSkillId=s,a.label||=a.name,a.compendiumEntry=a.journal||null,a.untrained=!0===a.rt&&!(a.rank>0),a.custom=!0;{const e=this.actor.getFeatCount();e.bonus=e.formula+e.changes,e.issues=0,(e.missing>0||e.excess)&&(e.issues+=1),e.disabled>0&&(e.issues+=1),s.featCount=e}this._prepareTraits(s.system.traits),s.labels.senses=this._prepareSenseLabels(),s.dr=this.actor.parseResistances("dr"),s.eres=this.actor.parseResistances("eres"),this._prepareItems(s),s.encumbrance=this._computeEncumbrance(),this._prepareSkillsets(s),this._prepareSkills(s);const c=game.settings.get("ffd20","healthConfig");if(s.healthConfig=c.getActorConfig(this.actor),s.useWoundsAndVigor=s.healthConfig.rules.useWoundsAndVigor,this._prepareHiddenElements(),s.hiddenElems=this._hiddenElems,game.user.isGM&&(s.magicItems={identified:[],unidentified:[]},this.actor.items.filter((e=>{if(!e.isPhysical)return!1;if(!e.system.carried)return!1;if(0===e.system.quantity)return!1;const t=e.system.aura?.school,s=e.system.cl;return t?.length>0&&s>0})).forEach((e=>{const t={name:e.name,unidentifiedName:e.system.unidentified?.name,img:e.img,id:e.id,cl:e.system.cl,aura:{strength:ffd20.config.auraStrengths[e.auraStrength],school:ffd20.config.spellSchools[e.system.aura?.school]||e.system.aura?.school},identifyDC:15+e.system.cl,identified:!0===e.system.identified,quantity:e.system.quantity||0};t.identified?s.magicItems.identified.push(t):s.magicItems.unidentified.push(t)}))),0===this.actor.itemTypes.class.length){const e="classType=base"+("npc"===this.actor.type?",npc,racial":"");s.labels.firstClass=game.i18n.format("FFD20.Info_FirstClass",{browser:`<a data-action="browse" data-category="classes" data-filters="${e}" data-tooltip="FFD20.BrowseClasses"><i class="fa-solid fa-folder-plus"></i> ${game.i18n.localize("FFD20.Info_FirstClass_Compendium")}</a>`,create:'<i class="fa-solid fa-plus"></i>'})}const d=this.actor.system.conditions,u=this.actor.appliedEffects.filter((e=>e.parent instanceof Item&&e.statuses.size)),m=this.actor.getConditionImmunities(),p={};return this.actor.statuses.has("incorporeal")&&this.actor.system.traits.creatureSubtypes.standard.has("incorporeal")&&(p.incorporeal=game.i18n.localize("FFD20.Race")),s.conditions=ffd20.utils.naturalSort(ffd20.registry.conditions.filter((e=>e.showInBuffsTab)).map((e=>({id:e.id,img:e.texture,immune:m.has(e.id),active:d[e.id]??!1,items:new Set(u.filter((t=>t.statuses.has(e.id))).map((e=>e.parent))),get inherited(){return this.items.size>0},racial:p[e.id],label:e.name,compendium:e.journal}))),"label"),s._editorState=ffd20.applications.utils.restoreEditState(this,s),s}_prepareItem(e){const t=e.type,s=e.subType,a=foundry.utils.deepClone(e.system);a.document=e,a.type=t,a.id=e.id,a.img=e.img,a.isActive=e.isActive,a.isPhysical=e.isPhysical??!1,a.isPhysicalLike=e.isQuasiPhysical??!1,a.isSingleUse=e.isSingleUse,a.isCharged=e.isCharged,a.isCharged&&(a.hasResource=a.isCharged&&!a.isSingleUse,a.charges=e.charges,a.maxCharges=e.maxCharges,a.noMaxCharges=!Number.isFinite(a.maxCharges),a.hasUses=a.maxCharges>0);const i=e.defaultAction,n=i?.getRollData()??e.getRollData();if(a.labels=e.getLabels({actionId:i?.id,rollData:n}),a.hasAction=e.hasAction||e.getScriptCalls("use").length>0||e.getScriptCalls("postUse").length>0,i){if(a.hasAttack=i.hasAttack,a.hasMultiAttack=i.hasMultiAttack,a.hasDamage=i.hasDamage,a.hasRange=i.hasRange,a.hasEffect=i.hasEffect,this._canShowRange(e)&&(a.range=foundry.utils.mergeObject(i?.range??{},{min:i?.getRange({type:"min",rollData:n}),max:i?.getRange({type:"max",rollData:n})},{inplace:!1})),a.hasAttack){const e=i.getAttacks({full:!0,resolve:!0,conditionals:!0,bonuses:!0,rollData:n}),t=e.map((e=>e.bonus));a.attackArray=t;const s=Math.max(...t);a.attackSummary=`${t.length} (${s<0?s:"+"+s}${e.length>1?"/…":""})`}a.usesAmmo=!!i.ammo?.type,a.usesAmmo&&i.ammo?.cost>0&&(a.ammoRemaining=this.actor.items.get(i.item.system.ammo?.default)?.system.quantity??0)}return a.sort=e.sort,a.showUnidentifiedData=e.showUnidentifiedData,a.name=e.name,a.isEmpty=!1,a.isPhysical&&(a.quantity||=0,a.isStack=a.quantity>1,a.destroyed=a.hp?.value<=0,a.isEmpty=0==a.quantity,a.disabled||=a.destroyed),a.isBroken=e.isBroken??!1,a.uncharged=!1,a.isActive&&a.isCharged&&a.isSingleUse,a.disabled=a.destroyed||a.uncharged||!a.isActive&&!a.isEmpty,a.isPhysical&&(!1===e.system.equipped||!1===e.system.implanted)&&(a.disabled=!1),a.typeLabel=s?game.i18n.localize(`FFD20.Subtypes.Item.${t}.${s}.Single`):void 0,"class"===e.type&&["mythic","racial"].includes(e.subType)&&(a.xpUnbound=!0),a}_prepareSection(e){e.items??=[]}_prepareItemForSection(e,t,s){t.interface.value&&(e.price={value:e.document.getValue({single:!0,recursive:!1,sellValue:1}),stack:e.document.getValue({single:!1,recursive:!0,sellValue:1})})}_canShowRange(e){return"attack"===e.type}get inCharacterGeneration(){return this.actor.system.attributes.hd.total<=1||Object.values(this.actor.system.abilities).every((e=>10===e.value))}_prepareHiddenElements(){const e=this.actor.system.attributes?.spells?.spellbooks??{};for(const t of Object.keys(e)){const e="spellbook-info_"+t;null==this._hiddenElems[e]&&(this._hiddenElems[e]=!0)}}_prepareTraits(e){const t=ffd20.registry.damageTypes.getLabels(),s={di:t,dv:t,ci:ffd20.config.conditionTypes,languages:ffd20.config.languages,armorProf:ffd20.config.armorProficiencies,weaponProf:ffd20.config.weaponProficiencies,creatureTypes:ffd20.config.creatureTypes,creatureSubtypes:ffd20.config.creatureSubtypes};for(const[t,a]of Object.entries(s)){const s=e[t];if(!s)continue;const i=s.total;s.selected=i.reduce(((e,t)=>(e[t]=a[t]||t,e)),{}),s.cssClass=foundry.utils.isEmpty(s.selected)?"inactive":""}}_prepareSenseLabels(){const e={},t=this.actor.system.traits.senses??{};for(const[s,a]of Object.entries(t))switch(s){case"ll":t[s].enabled&&(e[s]=ffd20.config.senses[s]);break;case"si":case"sid":t[s]&&(e[s]=ffd20.config.senses[s]);break;case"custom":a.length&&a.split(ffd20.config.re.traitSeparator).map((e=>e.trim())).filter((e=>e)).forEach(((t,s)=>e["custom"+(s+1)]=t));break;default:if(a.total>0){const t=ffd20.utils.convertDistance(a.total);e[s]=`${ffd20.config.senses[s]} ${t[0]} ${t[1]}`}}return e}_prepareSpellbook(e,t,s){const a=this.actor.system.attributes?.spells?.spellbooks?.[s];if(!a)return;const i=a.hasCantrips?0:1;let n=9;if(a.autoSpellLevelCalculation){const e=a.cl.autoSpellLevelTotal,t=ffd20.config.casterProgression.castsPerDay[a.spellPreparationMode]?.[a.casterType]?.[e-1];n=void 0!==t?t.length-1:0}else"low"===a.casterType?n=4:"med"===a.casterType&&(n=6);const o=[];for(let t=0;t<10;t++){const i=a.spells?.["spell"+t];if(!i){console.error(`Bad data for spell level ${t} in spellbook "${s}" for actor "${this.actor.name}"`);continue}const n=!isNaN(i.max);o[t]={...ffd20.config.sheetSections.spells.spell,id:"level-"+t,level:t,valid:n,usesSlots:!0,spontaneous:a.spontaneous,prepared:a.prepared,canPrepare:"character"===e.actor.type,label:ffd20.config.spellLevels[t],items:[],uses:i.value||0,slots:i.slots,hasIssues:n&&i.hasIssues,lowAbilityScore:i.lowAbilityScore,lowLevel:i.lowLevel,known:i.known,preparation:i.preparation,invalidSlots:i.invalidSlots,mismatchSlots:i.mismatchSlots,invalidKnown:i.invalidKnown,mismatchKnown:i.mismatchKnown,domain:i.domain,data:i,isSchool:a.isSchool}}const r={id:"level-invalid",level:99,label:game.i18n.localize("FFD20.Unknown"),valid:!1,items:[]};for(const e of t){(o[e.level??i]??r).items.push(e)}return a.hasCantrips||(o[0].valid=!1),r.items.length&&o.push(r),o.filter((e=>{if(!e)return!1;if(e.items.length>0)return!0;const{level:t}=e;return t<=n&&t>=i}))}_prepareSkillsets(e){const t=e.system.skills,s={all:{skills:{}},adventure:{skills:{}},background:{skills:{}}};Object.keys(t).sort((function(e,s){return t[e].custom&&!t[s].custom?1:!t[e].custom&&t[s].custom?-1:(""+t[e].label).localeCompare(t[s].label)})).forEach((e=>{const a=t[e];ffd20.config.backgroundOnlySkills.includes(e)||(s.all.skills[e]=a),a.background?s.background.skills[e]=a:s.adventure.skills[e]=a})),e.skillsets=s}_prepareSkills(e){e.useBGSkills=game.settings.get("ffd20","allowBackgroundSkills");const t=e.system.abilities,s=null===t?.int?.value,a=s?0:t?.int?.mod??0,i={allowed:0,used:0,bgAllowed:0,bgUsed:0,sentToBG:0};for(const t of Object.values(e.rollData.skills))if(null!=t.subSkills)for(const s of Object.values(t.subSkills))e.useBGSkills&&t.background?i.bgUsed+=s.rank:i.used+=s.rank;else e.useBGSkills&&t.background?i.bgUsed+=t.rank:i.used+=t.rank;this.actor.itemTypes.class.filter((e=>"mythic"!==e.system.subType)).forEach((t=>{if(ffd20.config.favoredClassTypes.includes(t.subType)&&(i.allowed+=t.system.fc?.skill?.value||0),s)return;const n=t.hitDice;if(0===n)return;const o=t.system.skillsPerLevel||0;if(i.allowed+=Math.max(1,o+a)*n,e.useBGSkills&&ffd20.config.backgroundSkillClasses.includes(t.subType)){const e=n*ffd20.config.backgroundSkillsPerLevel;e>0&&(i.bgAllowed+=e)}})),i.allowed+=this.actor.system.details?.skills?.bonus||0,e.useBGSkills&&i.bgUsed>i.bgAllowed&&(i.sentToBG=i.bgUsed-i.bgAllowed,i.allowed-=i.sentToBG,i.bgAllowed+=i.sentToBG),e.skillRanks=i}_computeEncumbrance(){const e=this.actor.system,t=e.attributes.encumbrance.carriedWeight,s=e.attributes.encumbrance.levels.light,a=e.attributes.encumbrance.levels.medium,i=e.attributes.encumbrance.levels.heavy,n="metric"===ffd20.utils.getWeightSystem()?game.i18n.format("FFD20.CarryLabelKg",{kg:t}):game.i18n.format("FFD20.CarryLabel",{lbs:t});return{pct:{light:Math.clamp(100*t/s,0,99.5),medium:Math.clamp(100*(t-s)/(a-s),0,99.5),heavy:Math.clamp(100*(t-a)/(i-a),0,99.5)},encumbered:{light:e.attributes.encumbrance.level>=ffd20.config.encumbranceLevels.medium,medium:e.attributes.encumbrance.level>=ffd20.config.encumbranceLevels.heavy,heavy:e.attributes.encumbrance.carriedWeight>=e.attributes.encumbrance.levels.heavy},light:e.attributes.encumbrance.levels.light,medium:e.attributes.encumbrance.levels.medium,heavy:e.attributes.encumbrance.levels.heavy,aboveHead:e.attributes.encumbrance.levels.overhead,offGround:e.attributes.encumbrance.levels.carry,dragPush:e.attributes.encumbrance.levels.drag,value:e.attributes.encumbrance.carriedWeight,carryLabel:n}}activateListeners(e){super.activateListeners(e);const t=e.find(".filter-list");t.each(this._initializeFilterItemList.bind(this)),t.on("click",".filter-rule",this._onToggleFilter.bind(this));{const t=e.find(".search-input");t.on("change input",this._searchFilterChange.bind(this)),t.on("compositionstart compositionend",this._searchFilterCompositioning.bind(this)),this.searchRefresh=!0,t.each((function(){this.value.length>0&&$(this).change()}))}e.find(".item .item-name").click((e=>this._onItemSummary(e))),e.find(".item-edit").on("click",this._onItemEdit.bind(this)),e.find(".item .item-name").contextmenu(this._onItemEdit.bind(this)),e.find(".quick-actions li").contextmenu(this._onItemEdit.bind(this)),e.find(".race.item").contextmenu(this._onItemEdit.bind(this)),e.find("a.hide-show").click(this._hideShowElement.bind(this)),e.find("a.compendium-entry").click(this._onOpenCompendiumEntry.bind(this)),e.find('a[data-action="browse"]').click(this._onOpenCompendiumBrowser.bind(this)),e.on("pointerover","[data-tooltip-extended]",this._activateExtendedTooltip.bind(this)).on("pointerleave","[data-tooltip-extended]",(()=>game.tooltip.deactivate())),this.isEditable?(e.find("span.text-box.direct").on("click",(e=>{this._onSpanTextInput(e,this._adjustActorPropertyBySpan.bind(this))})),e.find('*[data-action="input-text"]').click((e=>this._onInputText(e))),e.find('*[data-action="input-text"].wheel-change').on("wheel",(e=>this._onInputText(e.originalEvent))),e.find(".select-on-click").click(this._selectOnClick.bind(this)),e.find(".ability-name").click(this._onRollAbilityTest.bind(this)),e.find(".attribute.bab .rollable").click(this._onRollBAB.bind(this)),e.find(".attribute.attack .rollable").click(this._onRollAttack.bind(this)),e.find(".attribute.initiative .rollable").click(this._onRollInitiative.bind(this)),e.find(".saving-throw .rollable").click(this._onRollSavingThrow.bind(this)),e.find("span.text-box.skill-rank").on("click",(e=>{this._onSpanTextInput(e,this._adjustActorPropertyBySpan.bind(this))})),e.find(".skills .skill.arbitrary .skill-create").click((e=>this._onArbitrarySkillCreate(e))),e.find(".skills .controls > .skill-create").click((e=>this._onSkillCreate(e))),e.find(".skills .skill > .controls > .skill-edit").on("click",(e=>this._onSkillEdit(e))),e.find(".skills .skill > .controls > .skill-delete").click((e=>this._onSkillDelete(e))),e.find(".item-actions a.item-action").click(this._itemActivationControl.bind(this)),e.find(".tab.skills .skill > .action.roll").click(this._onRollSkillCheck.bind(this)),e.find(".trait-selector").click(this._onTraitSelector.bind(this)),e.find(".resistance-selector").click(this._onResistanceSelector.bind(this)),e.find(".generic-defenses .rollable").click((e=>{e.preventDefault(),this.actor.displayDefenseCard({token:this.token})})),e.find(".rest").click(this._onRest.bind(this)),e.find("button.pointbuy-calculator").click(this._onPointBuyCalculator.bind(this)),e.find(".control.alignment").click(this._onControlAlignment.bind(this)),e.find(".senses-selector").on("click",this._onSensesSelector.bind(this)),e.find(".item-create").on("click",(e=>this._onItemCreate(e))),e.find(".item-delete").on("click",this._onItemDelete.bind(this)),e.find(".item-give").on("click",this._onItemGive.bind(this)),e.find(".item-split:not(.disabled)").on("click",this._onItemSplit.bind(this)),e.find(".item .item-image").on("click",(e=>this._onItemCard(e))),e.find("a.item-control.item-quantity-add").click((e=>{this._quickChangeItemQuantity(e,1)})),e.find("a.item-control.item-quantity-subtract").click((e=>{this._quickChangeItemQuantity(e,-1)})),e.find("a.item-control.item-equip").click((e=>{this._quickEquipItem(e)})),e.find("a.item-control.item-carry").click((e=>{this._quickCarryItem(e)})),e.find("a.item-control.item-identify").click((e=>{this._quickIdentifyItem(e)})),e.find("a.item-control.item-toggle-prepared").click(this._itemPreparedToggle.bind(this)),e.find("a.item-control.item-duplicate").click(this._duplicateItem.bind(this)),e.find(".quick-actions li").click(this._quickAction.bind(this)),e.find("a.convert-currency").click(this._convertCurrency.bind(this)),e.find(".item-detail.item-uses span.text-box.value").on("wheel",this._setItemUses.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._setItemUses.bind(this))})),e[0].querySelectorAll(".item-list .item[data-item-id] .item-detail.item-weight").forEach((e=>{e.addEventListener("pointerenter",(e=>{const t=e.currentTarget,s=this.actor.items.get(t.closest("[data-item-id]").dataset.itemId),a=s?.system.weight?.converted;if(a&&a.total>0){const e=[],i=s.system.quantity||0;e.push(game.i18n.format("FFD20.StackDetails.Base",{value:a.value})),i>1&&e.push(game.i18n.format("FFD20.StackDetails.Stack",{value:Math.floor(100*a.value*i)/100})),a.contents>0&&(e.push(game.i18n.format("FFD20.StackDetails.Contents",{value:a.contents})),e.push(game.i18n.format("FFD20.StackDetails.Total",{value:a.total})));const n=document.createElement("template");n.innerHTML=e.join("<br>"),game.tooltip.activate(t,{content:n.content,direction:TooltipManager.TOOLTIP_DIRECTIONS.LEFT,cssClass:"ffd20"})}}),{passive:!0}),e.addEventListener("pointerleave",(()=>game.tooltip.deactivate()),{passive:!0})})),e.find(".level-up").click(this._onLevelUp.bind(this)),e.find(".item-list .spell-uses span.text-box[data-type='amount']").on("wheel",this._setSpellUses.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._setSpellUses.bind(this))})),e.find(".item-list .spell-uses span.text-box[data-type='max']").on("wheel",this._setMaxSpellUses.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._setMaxSpellUses.bind(this))})),e.find(".spell-uses .spell-slots.spontaneous span.text-box").on("wheel",this._adjustActorPropertyBySpan.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._adjustActorPropertyBySpan.bind(this))})),e.find(".spell-uses .spell-max span.text-box").on("click",(e=>{this._onSpanTextInput(e,this._adjustActorPropertyBySpan.bind(this))})),e.find(".spell-points-current .value span.text-box").on("wheel",this._adjustActorPropertyBySpan.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._adjustActorPropertyBySpan.bind(this))})),e.find(".spellcasting-concentration.rollable").click(this._onRollConcentration.bind(this)),e.find(".spellcasting-cl.rollable").click(this._onRollCL.bind(this)),e.find(".item-detail.item-active input[type='checkbox']").off("change").on("change",this._setItemActive.bind(this)),e.find(".item-detail.item-level span.text-box").on("wheel",this._setBuffLevel.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._setBuffLevel.bind(this))})),e.find(".condition .checkbox").click(this._onToggleCondition.bind(this)),e.find(".condition .checkbox").on("contextmenu",this._onEditCondition.bind(this)),e.find(".skill-lock-button").on("click",this._onToggleSkillLock.bind(this))):e.find("span.text-box").addClass("readonly")}async _activateExtendedTooltip(e){const t=e.currentTarget,s=t.dataset.tooltipExtended;if(!s)return;const a={actor:this.actor,bonusTypes:ffd20.config.bonusTypes,config:ffd20.config};if(await this._getTooltipContext(s,a),a.sources=a.sources?.filter((e=>e.sources?.length>0)),!(a.header||a?.paths?.length>0||a?.sources?.length>0||a?.details?.length>0||a?.notes?.length>0))return;for(const e of a.sources)e.sources=e.sources.map((e=>({...e,type:e.type||ffd20.config.bonusTypes[e.modifier||"untyped"]||e.modifier})));const i=document.createElement("template");i.innerHTML=renderCachedTemplate("systems/ffd20/templates/extended-tooltip.hbs",a),Hooks.callAll("renderPF1ExtendedTooltip",this,s,i),game.tooltip.activate(t,{content:i.content,cssClass:"ffd20 extended",direction:t.dataset.tooltipDirection||void 0})}async _getTooltipContext(e,t){const s=this.actor,a=s.system,i={get rollData(){return this._cache??=s.getRollData(),this._cache}},getNotes=async(e,t=!0)=>(await s.getContextNotesParsed(e,{all:t,rollData:i.rollData,roll:!1})).map((e=>e.text));let n,o;const r=[],l=[],c=[];let d;const u=/^(?<id>[\w-]+)(?:\.(?<detail>.*))?$/.exec(e),{id:m,detail:p}=u?.groups??{};switch(m){case"level":{const e=i.rollData.attributes?.hd?.total??NaN;if(e>0){l.push({path:"@attributes.hd.total",value:e});const t=i.rollData.details?.mythicTier??NaN;t>0&&l.push({path:"@details.mythicTier",value:t})}(i.rollData.details?.level?.value??NaN)&&l.push({path:"@details.level.value",value:i.rollData.details?.level?.value??NaN});const t=i.rollData.details?.cr?.total??NaN;t>0&&l.push({path:"@details.cr.total",value:ffd20.utils.CR.fromNumber(t)});break}case"hit-points":{const e=a.attributes.hp;l.push({path:"@attributes.hp.value",value:e.value},{path:"@attributes.hp.offset",value:e.offset},{path:"@attributes.hp.max",value:e.max},{path:"@attributes.hp.temp",value:e.temp},{path:"@attributes.hp.nonlethal",value:e.nonlethal}),e.base>0&&l.push({path:"@attributes.hp.base",value:e.base}),c.push({sources:s.getSourceDetails("system.attributes.hp.max"),untyped:!0});break}case"vigor":{const e=a.attributes.vigor;l.push({path:"@attributes.vigor.value",value:e.value},{path:"@attributes.vigor.offset",value:e.offset},{path:"@attributes.vigor.temp",value:e.temp},{path:"@attributes.vigor.max",value:e.max}),e.base&&l.push({path:"@attributes.vigor.base",value:e.base}),c.push({sources:s.getSourceDetails("system.attributes.vigor.max"),untyped:!0});break}case"wounds":{const e=a.attributes.wounds;l.push({path:"@attributes.wounds.value",value:e.value},{path:"@attributes.wounds.offset",value:e.offset},{path:"@attributes.wounds.max",value:e.max},{path:"@attributes.wounds.threshold",value:e.threshold}),e.base&&l.push({path:"@attributes.wounds.base",value:e.base}),c.push({sources:s.getSourceDetails("system.attributes.wounds.max"),untyped:!0});break}case"mana-points":{const e=a.attributes.mp;l.push({path:"@attributes.mp.value",value:e.value},{path:"@attributes.mp.offset",value:e.offset},{path:"@attributes.mp.max",value:e.max},{path:"@attributes.mp.temp",value:e.temp},{path:"@attributes.mp.recover",value:e.recover}),c.push({sources:s.getSourceDetails("system.attributes.mp.max"),untyped:!0}),c.push({sources:s.getSourceDetails("system.attributes.mp.recover"),untyped:!0});break}case"speed":{const e=p;c.push({sources:s.getSourceDetails(`system.attributes.speed.${e}.base`)},{sources:s.getSourceDetails(`system.attributes.speed.${e}.total`)});const t=a.attributes.speed[e],[i]=ffd20.utils.convertDistance(t.total),[n]=ffd20.utils.convertDistance(t.base),[o]=ffd20.utils.convertDistance(t.unhindered),r="metric"===ffd20.utils.getDistanceSystem(),u=r?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft;l.push({path:`@attributes.speed.${e}.total`,value:i,unit:u},{path:`@attributes.speed.${e}.base`,value:n,unit:u},{path:`@attributes.speed.${e}.unhindered`,value:o,unit:u});const[m]=ffd20.utils.convertDistance(t.overland),h=r?ffd20.config.measureUnitsShort.km:ffd20.config.measureUnitsShort.mi;l.push({path:`@attributes.speed.${e}.overland`,value:m,unit:h}),d=[...await getNotes(e+"Speed"),...await getNotes("allSpeeds")];break}case"flyManeuverability":l.push({path:"@attributes.speed.fly.maneuverability",value:a.attributes.speed.fly.maneuverability});break;case"ac":{const e=a.attributes.ac[p];if(!e)return;l.push({path:`@attributes.ac.${p}.total`,value:e.total}),e.value&&l.push({path:`@attributes.ac.${p}.value`,value:e.value}),l.push({path:"@armor.type",value:i.rollData.armor?.type},{path:"@shield.type",value:i.rollData.shield?.type}),c.push({sources:s.getSourceDetails(`system.attributes.ac.${p}.total`)}),d=await getNotes("ac");break}case"cmd":l.push({path:"@attributes.cmd."+p,value:a.attributes.cmd[p]}),c.push({sources:s.getSourceDetails("system.attributes.cmd."+p)}),d=await getNotes("cmd");break;case"save":{const e=a.attributes.savingThrows[p];if(!e)return;l.push({path:`@attributes.savingThrows.${p}.total`,value:e.total}),e.base&&l.push({path:`@attributes.savingThrows.${p}.base`,value:e.base}),c.push({sources:s.getSourceDetails(`system.attributes.savingThrows.${p}.total`)}),d=await getNotes("savingThrow."+p);break}case"sr":l.push({path:"@attributes.sr.total",value:a.attributes.sr.total}),c.push({sources:s.getSourceDetails("system.attributes.sr.total"),untyped:!0}),d=await getNotes("sr");break;case"bab":{const e=a.attributes.bab;l.push({path:"@attributes.bab.total",value:e.total}),e.value&&l.push({path:"@attributes.bab.value",value:e.value}),c.push({sources:s.getSourceDetails("system.attributes.bab.total"),untyped:!0});break}case"cmb":l.push({path:"@attributes.cmb.total",value:a.attributes.cmb.total}),c.push({sources:[{name:game.i18n.localize("FFD20.Size"),value:Object.values(ffd20.config.sizeSpecialMods)[a.traits.size.value]}]}),a.attributes.cmbAbility&&c.push({sources:[{name:ffd20.config.abilities[a.attributes.cmbAbility],value:a.abilities?.[a.attributes.cmbAbility]?.mod}]}),c.push({sources:s.getSourceDetails("system.attributes.attack.general")},{sources:s.getSourceDetails("system.attributes.cmb.bonus")},{sources:s.getSourceDetails("system.attributes.attack.shared")}),d=[...await getNotes("attack"),...await getNotes("melee"),...await getNotes("cmb")];break;case"init":{const e=a.attributes.init;l.push({path:"@attributes.init.total",value:e.total}),e.value&&l.push({path:"@attributes.init.value",value:e.value}),c.push({sources:s.getSourceDetails("system.attributes.init.total")}),d=await getNotes("init");break}case"abilityScore":{const e=p,t=a.abilities[p]??{},i=null!==t.base;l.push({path:`@abilities.${e}.total`,value:t.total,sign:!1},{path:`@abilities.${e}.value`,value:t.value,sign:!1},{path:`@abilities.${e}.mod`,value:t.mod,sign:!0}),i&&l.push({path:`@abilities.${e}.damage`,value:t.damage,sign:!1},{path:`@abilities.${e}.drain`,value:t.drain,sign:!1},{path:`@abilities.${e}.undrained`,value:t.undrained,sign:!1},{path:`@abilities.${e}.penalty`,value:t.penalty,sign:!1},{path:`@abilities.${e}.base`,value:t.base,sign:!1},{path:`@abilities.${e}.baseMod`,value:t.baseMod,sign:!0},{path:`@abilities.${e}.unmod`,value:t.unmod,sign:!0}),i&&c.push({sources:s.getSourceDetails(`system.abilities.${e}.total`)},{sources:s.getSourceDetails(`system.abilities.${e}.penalty`)},{label:game.i18n.localize("FFD20.ModifierOnly"),sources:s.getSourceDetails(`system.abilities.${e}.mod`)},{label:game.i18n.localize("FFD20.CheckOnly"),sources:s.getSourceDetails(`system.abilities.${e}.checkMod`)}),d=await getNotes("abilityChecks."+e);break}case"acp":l.push({path:"@attributes.acp.total",value:a.attributes.acp.total},{path:"@attributes.acp.skill",value:a.attributes.acp.skill},{path:"@attributes.acp.encumbrance",value:a.attributes.acp.encumbrance},{path:"@attributes.acp.gear",value:a.attributes.acp.gear}),c.push({sources:s.getSourceDetails("system.attributes.acp.total"),untyped:!0},{label:game.i18n.localize("FFD20.EquipSlots.armor"),sources:s.getSourceDetails("system.attributes.acp.armorBonus"),untyped:!0},{label:game.i18n.localize("FFD20.EquipSlots.shield"),sources:s.getSourceDetails("system.attributes.acp.shieldBonus"),untyped:!0});break;case"max-dex":{const e=a.attributes.maxDexBonus;l.push({path:"@attributes.maxDexBonus",value:Number.isFinite(e)?e:"null"}),c.push({sources:s.getSourceDetails("system.attributes.maxDexBonus"),untyped:!0},{label:game.i18n.localize("FFD20.EquipSlots.armor"),sources:s.getSourceDetails("system.attributes.mDex.armorBonus"),untyped:!0},{label:game.i18n.localize("FFD20.EquipSlots.shield"),sources:s.getSourceDetails("system.attributes.mDex.shieldBonus"),untyped:!0});break}case"asf":{const e=[];this.actor.itemTypes.equipment.filter((e=>e.isActive)).reduce(((t,s)=>{const a=s.system.spellFailure||0;return a>0&&e.push({name:s.name,value:a+"%"}),t+a}),0),e.length&&c.push({sources:e,untyped:!0});break}case"implants":{const e=this.actor.itemTypes.implant.filter((e=>"cybertech"===e.subType&&e.system.implanted));l.push({path:"@abilities.int.total",value:i.rollData.abilities.int.total},{path:"@abilities.con.total",value:i.rollData.abilities.con.total}),c.push({untyped:!0,sources:e.map((e=>({name:e.name,value:e.system.implant})))});break}case"size":l.push({path:"@traits.size.base",value:a.traits.size.base},{path:"@size",value:i.rollData.size}),c.push({sources:s.getSourceDetails("system.traits.size.value")});break;case"age-category":l.push({path:"@traits.ageCategory.base",value:a.traits.ageCategory.base},{path:"@ageCategory.value",value:i.rollData.ageCategory.value},{path:"@ageCategory.physical",value:i.rollData.ageCategory.physical},{path:"@ageCategory.mental",value:i.rollData.ageCategory.mental});break;case"stature":l.push({path:"@traits.stature",value:i.rollData.traits.stature});break;case"reach":l.push({path:"@traits.reach.total.melee",value:i.rollData.traits.reach.total.melee},{path:"@traits.reach.total.reach",value:i.rollData.traits.reach.total.reach},{path:"@traits.reach.natural.melee",value:i.rollData.traits.reach.natural.melee},{path:"@traits.reach.natural.reach",value:i.rollData.traits.reach.natural.reach}),c.push({sources:s.getSourceDetails("system.traits.reach.total.melee")});break;case"senses":for(const e of["dv","ts","ls","bse","bs","sc","tr"]){const t="metric"===ffd20.utils.getDistanceSystem();l.push({path:`@traits.senses.${e}.total`,value:ffd20.utils.convertDistance(a.traits.senses[e]?.total)[0],unit:t?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft,signed:!1}),c.push({label:ffd20.config.senses[e],sources:s.getSourceDetails(`system.traits.senses.${e}.total`),left:!0,untyped:!0})}break;case"aura":l.push({path:"@traits.aura.custom",empty:!0});break;case"fastHeal":l.push({path:"@traits.fastHealing",empty:!0});break;case"regen":l.push({path:"@traits.regen",empty:!0});break;case"conditionResistance":l.push({path:"@traits.cres",empty:!0});break;case"conditionImmunity":l.push({path:"@traits.ci.total",empty:!0});break;case"energyResistance":l.push({path:"@traits.eres.total",empty:!0});break;case"hardness":l.push({path:"@traits.hardness",empty:!0});break;case"damageReduction":l.push({path:"@traits.dr.total",empty:!0});break;case"damageImmunity":l.push({path:"@traits.di.total",empty:!0});break;case"damageVulnerability":l.push({path:"@traits.dv.total",empty:!0});break;case"proficiency":switch(p){case"language":l.push({path:"@traits.languages.total",empty:!0}),c.push({sources:s.getSourceDetails("system.traits.languages"),left:!0,untyped:!0});break;case"weapon":l.push({path:"@traits.weaponProf.total",empty:!0}),c.push({sources:s.getSourceDetails("system.traits.weaponProf"),left:!0,untyped:!0});break;case"armor":l.push({path:"@traits.armorProf.total",empty:!0}),c.push({sources:s.getSourceDetails("system.traits.armorProf"),left:!0,untyped:!0})}break;case"quadruped":{l.push({path:"@attributes.quadruped",value:a.attributes.quadruped+""});const e=this.actor.race;e&&c.push({untyped:!0,sources:[{name:e.name,value:e.system.quadruped??!1,isBoolean:!0}]});break}case"negativeLevels":l.push({path:"@attributes.energyDrain",value:a.attributes.energyDrain,signed:!1});break;case"item":{const[t,s]=p.split("."),a=this.actor.items.get(t);if(!a)return;switch(s){case"level":l.push({path:`@classes.${a.system.tag}.level`,value:i.rollData.classes[a.system.tag].level}),"mythic"===a.subType?l.push({path:`@classes.${a.system.tag}.mythicTier`,value:i.rollData.classes[a.system.tag].mythicTier}):l.push({path:`@classes.${a.system.tag}.unlevel`,value:i.rollData.classes[a.system.tag].unlevel});break;case"resources":if(!a.isCharged||a.isSingleUse)return;l.push({path:`@resources.${a.system.tag}.value`,value:a.system.uses?.value}),a.system.uses?.max>0&&l.push({path:`@resources.${a.system.tag}.max`,value:a.system.uses?.max});break;case"attacks":{const e=a.defaultAction;if(!e?.hasAttack)return;const t=e?.getAttacks({full:!0,resolve:!0,conditionals:!0,bonuses:!0})?.map((e=>e.bonus)).sort(((e,t)=>t-e))??[];if(0==t.length)return;const s=new Intl.NumberFormat(void 0,{signDisplay:"always"});n=t.map((e=>s.format(e))).join("/"),c.push({sources:a.attackSources});break}case"damage":{const e=a.defaultAction;if(!e?.hasDamage)return;const t=e.getRollData(),s=[];o=game.i18n.localize("FFD20.Details");const i=e.damage;for(const e of i.parts??[])s.push({name:e.formula,value:ffd20.utils.formula.simplify(e.formula||"0",t,{strict:!1}),type:ffd20.utils.i18n.join(e.names)});for(const e of i.nonCritParts??[])s.push({name:e.formula,value:ffd20.utils.formula.simplify(e.formula||"0",t,{strict:!1}),type:ffd20.utils.i18n.join(e.names)});const n=e.ability?.damage;if(n){const i="natural"===e.item.subType,o=t.abilities?.[n],r=e.ability?.max??1/0,l=Math.min(o?.mod??0,r),c=e.held||a?.system.held||"1h";let d=e.ability.damageMult??(i?null:ffd20.config.abilityDamageHeldMultipliers[c])??1;i&&!(e.naturalAttack?.primary??1)&&(d=e.naturalAttack?.secondary?.damageMult??.5);const u=l>=0?Math.floor(l*d):l;s.push({value:u,type:ffd20.config.abilities[n]})}c.push({sources:s}),c.push({sources:e.allDamageSources.map((e=>({name:e.flavor,...e,type:ffd20.config.bonusTypes[e.type]||e.type})))});break}case"range":{const e=a.defaultAction;if(!e?.hasRange)return;if((e.range?.maxIncrements??1)<=1)return;r.push({key:game.i18n.localize("FFD20.MaximumRangeIncrements"),value:e.range.maxIncrements,left:!0});const t=e.getRollData(),s={...e.range??{},min:e.getRange({type:"min",rollData:t}),max:e.getRange({type:"max",rollData:t})},i=ffd20.utils.convertDistance(0,"ft")[1],n=ffd20.utils.convertDistance(0,s.units)[1];r.push({key:game.i18n.localize("FFD20.Range"),value:`${s.min} ${i} – ${s.max} ${n}`,left:!0});break}default:throw Error(`Invalid extended tooltip identifier "${e}"`)}break}case"carryCapacity":{l.push({path:"@attributes.encumbrance.level",value:a.attributes.encumbrance.level},{path:"@details.carryCapacity.bonus.total",value:a.details.carryCapacity.bonus.total},{path:"@details.carryCapacity.multiplier.total",value:ffd20.utils.limitPrecision(a.details.carryCapacity.multiplier.total,2)});const e=[],t=this.actor.system.traits?.size?.base||"med";if(t){const s=this.actor.system.attributes?.quadruped||!1,a=(s?ffd20.config.encumbranceMultipliers.quadruped:ffd20.config.encumbranceMultipliers.normal)[t];e.push({name:game.i18n.localize("FFD20.Size")+(s?` (${game.i18n.localize("FFD20.Quadruped")})`:""),value:"×"+a})}c.push({label:game.i18n.localize("FFD20.CarryStrength"),sources:s.getSourceDetails("system.details.carryCapacity.bonus.total"),untyped:!0}),c.push({label:game.i18n.localize("FFD20.CarryMultiplier"),sources:[...s.getSourceDetails("system.details.carryCapacity.multiplier.total"),...e],decimals:1,untyped:!0});break}case"feats":{const e=this.actor.getFeatCount();e.levels>0&&c.push({sources:[{name:game.i18n.localize("FFD20.FromLevels"),value:e.levels}],untyped:!0}),e.mythic>0&&c.push({sources:[{name:game.i18n.localize("FFD20.FromMythic"),value:e.mythic}],untyped:!0});const t=[];this.actor.changes.filter((e=>"bonusFeats"===e.target)).forEach((e=>{(e.parent||e.flavor)&&t.push({name:e.parent?.name??e.flavor,value:e.value})})),0!==e.formula&&t.push({name:game.i18n.localize("FFD20.BonusFeatFormula"),value:e.formula}),c.push({sources:t,untyped:!0});break}case"skills":{const e=game.settings.get("ffd20","allowBackgroundSkills"),t=null===a.abilities?.int?.value,n=[],o="background"===p;let r=0;if(this.actor.itemTypes.class.filter((e=>"mythic"!==e.system.subType)).forEach((s=>{if(ffd20.config.favoredClassTypes.includes(s.subType)){const e=s.system.fc?.skill?.value||0;e>0&&!o&&n.push({name:game.i18n.format("FFD20.SourceInfoSkillRank_ClassFC",{className:s.name}),value:e,untyped:!0})}if(t)return;const a=s.hitDice;if(0!==a){if(e&&ffd20.config.backgroundSkillClasses.includes(s.subType)){const e=a*ffd20.config.backgroundSkillsPerLevel;r+=e,e>0&&o&&n.push({name:game.i18n.format("FFD20.SourceInfoSkillRank_ClassBase",{className:s.name}),value:e,untyped:!0})}if(!o){const e=s.system.skillsPerLevel||0;n.push({name:game.i18n.format("FFD20.SourceInfoSkillRank_ClassBase",{className:s.name}),value:e*a,untyped:!0})}}})),!o&&!t){const e=a.abilities?.int?.mod;0!==e&&n.push({name:game.i18n.localize("FFD20.AbilityInt"),value:e*a.attributes?.hd?.total})}if(e){let e=0;for(const t of Object.values(i.rollData.skills))if(t.subSkills)for(const s of Object.values(t.subSkills))t.background&&(e+=s.rank);else t.background&&(e+=t.rank);const t=e-r;t>0&&n.push({name:game.i18n.localize("FFD20.Transferred"),value:o?t:-t})}c.push({sources:s.getSourceDetails("system.details.skills.bonus"),untyped:!0},{sources:n,untyped:!0});break}case"skill":{const e=p,t=e.split("."),a=t.shift(),o=t.pop(),r=this.actor.getSkillInfo(e,{rollData:i.rollData});n=`<code>${r.id}</code>`;const u=o?`${a}.subSkills.${o}`:a;l.push({path:`@skills.${u}.mod`,value:r.mod},{path:`@skills.${u}.rank`,value:r.rank}),c.push({sources:s.getSourceDetails(`system.skills.${u}.mod`)}),d=await getNotes("skill."+e),o&&d.push(...await getNotes("skill."+a,!1));break}case"spellbook":{const[e,t,n]=p.split("."),o=a.attributes?.spells?.spellbooks?.[e];switch(t){case"class":{let t;l.push({path:"@cl",value:o.cl.total},{path:`@spells.${e}.cl.total`,value:o.cl.total}),"_hd"===o.class&&(t={level:i.rollData.attributes?.hd?.total}),t=i.rollData.classes?.[o.class],t&&l.push({path:"@class.level",value:t.level}),c.push({sources:s.getSourceDetails(`system.attributes.spells.spellbooks.${e}.cl.total`)});break}case"ability":{const t=i.rollData.abilities[o.ability]?.mod;l.push({path:`@spells.${e}.abilityMod`,value:t},{path:"@ablMod",value:t});break}case"level":l.push({path:`@spells.${e}.cl.total`,value:o.cl?.total}),c.push({sources:s.getSourceDetails(`system.attributes.spells.spellbooks.${e}.cl.total`),untyped:!0}),d=await getNotes("spell.cl."+e);break;case"concentration":l.push({path:`@spells.${e}.concentration.total`,value:o.concentration?.total}),c.push({sources:s.getSourceDetails(`system.attributes.spells.spellbooks.${e}.concentration.total`),untyped:!0}),d=await getNotes("spell.concentration."+e);break;case"range":{const t=n;l.push({path:`@spells.${e}.range.${t}`,value:o.range?.[t],unit:"metric"===ffd20.utils.getDistanceSystem()?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft});break}case"spellPoints":l.push({path:`@spells.${e}.spellPoints.value`,value:o.spellPoints.value},{path:`@spells.${e}.spellPoints.max`,value:o.spellPoints.max})}break}case"spell":{const[e,t]=p.split("."),s=this.actor.items.get(e);switch(t){case"material":{const e=s.system.materials??{};e.focus&&r.push({key:game.i18n.localize("FFD20.SpellComponents.Type.focus.Label"),value:e.focus}),e.value&&r.push({key:game.i18n.localize("FFD20.SpellComponents.Type.material.Label"),value:e.value});break}case"school":{s.system.multischool&&r.push({key:game.i18n.localize("FFD20.SpellMultischool"),value:ffd20.utils.i18n.join([...s.system.multischool.names??[]])}),s.system.subschool&&r.push({key:game.i18n.localize("FFD20.Subschool"),value:ffd20.utils.i18n.join([...s.system.subschool.names??[]])}),s.system.descriptors?.total?.size&&r.push({key:game.i18n.localize("FFD20.DescriptorPlural"),value:ffd20.utils.i18n.join([...s.system.descriptors.names??[]],"conjunction",!1)});const e=s.defaultAction;if(e?.hasDamage){const t=e.damage?.parts?.map((e=>e.names)).flat()??[];t.length&&r.push({key:game.i18n.localize("FFD20.Damage"),value:ffd20.utils.i18n.join(t)})}break}}break}case"generic":{const[e,t]=p.split(".");switch(e){case"attack":{l.push({path:"@attributes.attack.shared",value:a.attributes.attack.shared},{path:"@attributes.attack.general",value:a.attributes.attack.general},{path:"@attributes.attack."+t,value:a.attributes.attack[t]});const e=a.attributes.attack[t+"Ability"];c.push({sources:s.getSourceDetails("system.attributes.attack.shared")},{sources:[{name:ffd20.config.abilities[e]||e,value:i.rollData.abilities?.[e]?.mod??0}]}),c.push({sources:[{name:game.i18n.localize("FFD20.Size"),value:Object.values(ffd20.config.sizeMods)[a.traits.size.value]}]}),c.push({sources:s.getSourceDetails("system.attributes.attack.general")}),c.push({sources:s.getSourceDetails("system.attributes.attack."+t)}),d=[...await getNotes("attack"),...await getNotes(t)];break}}break}default:throw Error(`Invalid extended tooltip identifier "${e}"`)}t.header=n,t.subHeader=o,t.details=r,t.paths=l,t.sources=c,t.notes=d??[]}_onSpanTextInput(e,t){const s=e.target,a=s.parentElement,i="Number"===s.dataset.dtype||"number"===s.type,n=document.createElement("INPUT");n.type="text",s.dataset?.dtype&&(n.dataset.dtype=s.dataset.dtype,i&&(n.size=12));const o=s.classList.contains("no-value-cap"),r=s.getAttribute("name");let l,c=0;if(r){if(n.setAttribute("name",r),c=foundry.utils.getProperty(this.actor,r)||0,r.endsWith(".value")&&!o&&i){const e=r.replace(/\.value$/,".max");l=foundry.utils.getProperty(this.actor,e)}}else s.classList.contains("placeholder")||(c=i?parseFloat(s.innerText||"0"):s.innerText||"");s.dataset.min&&(n.min=s.dataset.min),s.dataset.step&&(n.step=s.dataset.step),s.dataset.max&&(n.max=s.dataset.max),n.value=""+(c||0);const d=["placeholder","direct","allow-relative"];for(const e of s.classList)d.includes(e)||n.classList.add(e);const u=s.classList.contains("allow-relative"),m=i?parseFloat(s.dataset.clearValue||"0"):"";let p;a.replaceChild(n,s),n.addEventListener("change",(e=>{let i;e.preventDefault(),e.stopPropagation(),p=!0,u?(i=ffd20.utils.internal.adjustNumberByStringCommand(c,n.value,l,m),n.value=i):i=parseFloat(n.value||"0"),i===c?a.replaceChild(s,n):(n.readOnly=!0,t(e,s))}),{once:!0}),n.addEventListener("focusout",(e=>{if(p)return;parseFloat(n.value||"0")===c&&a.replaceChild(s,n)}),{passive:!0,once:!0}),n.focus(),n.select()}_onDragSkillStart(e){const t=e.currentTarget.closest(".skill"),s=t.dataset.skill,a=t.dataset.subSkill,i={type:"skill",uuid:this.actor.uuid,skill:a?`${s}.${a}`:s};e.dataTransfer.setData("text/plain",JSON.stringify(i))}_onDragMiscStart(e,t,s){const a={type:t,uuid:this.actor.uuid};switch(t){case"bab":case"cmb":case"initiative":case"defenses":break;case"concentration":case"cl":{const t=e.currentTarget.closest(".tab.spellbook-group");a.bookId=t.dataset.tab;break}case"abilityScore":a.ability=s;break;case"attack":a.attack=s;break;default:throw Error("Unrecognized drag source: "+t)}e.dataTransfer.setData("text/plain",JSON.stringify(a))}_onDragSaveStart(e,t){const s={type:"save",save:t,uuid:this.actor.uuid};e.dataTransfer.setData("text/plain",JSON.stringify(s))}_initializeFilterItemList(e,t){const s=t.querySelectorAll(".filter-rule");for(const e of s){(this._filters.sections[e.dataset.category]??=new Set).has(e.dataset.filter)&&e.classList.add("active")}}async _onRest(e){e.preventDefault();if(ffd20.documents.settings.getSkipActionPrompt()){const t=e.currentTarget;t.disabled=!0;try{await this.actor.performRest({verbose:!0})}finally{t.disabled=!1}}else{const e=Object.values(this.actor.apps).find((e=>e instanceof ActorRestDialog));e?(e.render(!0),e.bringToFront()):new ActorRestDialog({document:this.actor}).render({force:!0})}}_onItemCard(e){e.preventDefault(),e.stopPropagation();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t);if(null!=s)return s.displayCard(void 0,{token:this.token})}_mouseWheelAdd(e,t){const s="INPUT"===t.tagName,{originalEvent:a}=e;if(a&&a instanceof WheelEvent&&a.ctrlKey){e.preventDefault();const i=parseFloat(s?t.value:t.innerText)||0;if(Number.isNaN(i))return;const n=-Math.sign(a.deltaY),o=parseFloat(t.dataset.wheelStep)||1;s?t.value=i+o*n:t.innerText=""+(i+o*n)}}_setItemUses(e){e.originalEvent instanceof MouseEvent||e.preventDefault();const t=e.currentTarget;this._mouseWheelAdd(e,t),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",this._commitItemUsesBound,{passive:!0,once:!0}):this._commitItemUses(e)}async _commitItemUses(e){const t=e.currentTarget,s=t.closest(".item").dataset.itemId,a=this.actor.items.get(s),i="INPUT"===t.tagName?Number(t.value):Number(t.innerText);return a.addCharges(i-a.charges)}_commitItemUsesBound=this._commitItemUses.bind(this);_setSpellUses(e){e.originalEvent instanceof MouseEvent||e.preventDefault();const t=e.currentTarget,s=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(s);this._mouseWheelAdd(e,t);const i=a.system.preparation?.value??0,n="INPUT"===t.tagName?Number(t.value):Number(t.innerText);if(this.setItemUpdate(a.id,"system.preparation.value",n),i<n){const e=a.system.preparation.max??0;this.setItemUpdate(a.id,"system.preparation.max",Math.max(e,n))}e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(()=>this._updateItems()),{passive:!0,once:!0}):this._updateItems()}_setMaxSpellUses(e){e.originalEvent instanceof MouseEvent||e.preventDefault();const t=e.currentTarget,s=t.closest(".item").dataset.itemId,a=this.actor.items.get(s);this._mouseWheelAdd(e,t);const i=a.system.preparation?.max??0,n="INPUT"===t.tagName?Number(t.value):Number(t.innerText);if(this.setItemUpdate(a.id,"system.preparation.max",Math.max(0,n)),i>n){const e=a.system.preparation.value??0;this.setItemUpdate(a.id,"system.preparation.value",Math.min(e,n))}n<0&&("INPUT"===t.tagName?t.value=0:t.innerText=0),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(()=>this._updateItems()),{passive:!0,once:!0}):this._updateItems()}async _adjustActorPropertyBySpan(e,t){e.originalEvent instanceof MouseEvent||e.preventDefault();const s=e.currentTarget;this._mouseWheelAdd(e,s);const a="INPUT"===s.tagName?s.value:s.innerText;let i="String"===s.dataset.dtype?a:Number(a);const n=s.getAttribute("name");let o;if(n.match(/^system\.abilities\.([a-zA-Z0-9]+)\.value$/)&&(i=Number.isNaN(parseInt(i))?null:parseInt(i)),s.min&&(i=Math.max(Number(s.min),i)),s.max&&(i=Math.min(Number(s.max),i)),s.step&&(i=i.toNearest(Number(s.step))),n){if(i===foundry.utils.getProperty(this.actor,n))return void(t&&s.parentElement.replaceChild(t,s));o={[n]:i}}e.originalEvent instanceof MouseEvent?s.addEventListener("pointerleave",(async e=>this._updateObject(e,this._getSubmitData(o))),{once:!0}):this._updateObject(e,this._getSubmitData(o))}_setBuffLevel(e){e.originalEvent instanceof MouseEvent||e.preventDefault();const t=e.currentTarget,s=t.closest(".item").dataset.itemId,a=this.actor.items.get(s);this._mouseWheelAdd(e,t);const i="INPUT"===t.tagName?Number(t.value):Number(t.innerText);this.setItemUpdate(a.id,"system.level",i),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(()=>this._updateItems()),{passive:!0,once:!0}):this._updateItems()}_hideShowElement(e){e.preventDefault();const t=e.currentTarget,s=this.element.find("."+t.dataset.for);s.hasClass("hidden")?($(t).find("i").removeClass("fa-arrow-circle-down").addClass("fa-arrow-circle-up"),s.removeClass("hidden"),s.hide(),s.slideDown(200),this._hiddenElems[t.dataset.for]=!1):($(t).find("i").removeClass("fa-arrow-circle-up").addClass("fa-arrow-circle-down"),s.slideUp(200,(()=>s.addClass("hidden"))),this._hiddenElems[t.dataset.for]=!0)}_onToggleCondition(e){e.preventDefault();const t=e.currentTarget.dataset.conditionId;!this.actor.getConditionImmunities().has(t)||this.actor.statuses.has(t)?this.actor.toggleCondition(t):ui.notifications.warn(game.i18n.format("FFD20.Warning.ImmuneToCondition",{name:this.actor.name,condition:ffd20.registry.conditions.get(t)?.name||t}))}async _onEditCondition(e){e.preventDefault();const t=e.currentTarget,s=t.dataset.conditionId,a=ffd20.registry.conditions.get(s);if(!a)throw Error("Invalid condition ID: "+s);if(this.actor.getConditionImmunities().has(s)&&!this.actor.statuses.has(s))return void ui.notifications.warn(game.i18n.format("FFD20.Warning.ImmuneToCondition",{name:this.actor.name,condition:ffd20.registry.conditions.get(s)?.name||s}));let i;if(this.actor.statuses.has(s)){const e=[];for(const t of this.actor.allApplicableEffects())t.active&&t.statuses.has(s)&&e.push(t);if(e.length>1)return void ui.notifications.warn("FFD20.Error.TooManyConditionSources",{localize:!0});i=e[0]}const{bottom:n,left:o}=t.getBoundingClientRect(),r=await ffd20.utils.dialog.getNumber({title:a.name+" – "+game.i18n.localize("FFD20.Duration"),initial:Math.floor((i?.duration?.seconds??0)/CONFIG.time.roundTime),hint:game.i18n.localize("FFD20.Time.Period.round.Label"),min:0,step:1,dialog:{position:{top:n+20,left:o-20}}});if(!Number.isFinite(r))return;const l={"duration.seconds":r*CONFIG.time.roundTime};i?i.update(l):this.actor.setCondition(s,l)}_onToggleSkillLock(e){e.preventDefault(),this._skillsLocked=!this._skillsLocked;const t=e.currentTarget;t.classList.toggle("unlocked",!this._skillsLocked);const s=t.closest(".tab");s.classList.toggle("locked",this._skillsLocked),s.querySelectorAll(".lockable").forEach((e=>{["INPUT","SELECT"].includes(e.tagName)?e.disabled=this._skillsLocked:e.classList.toggle("hide-contents",this._skillsLocked)}))}_onOpenCompendiumBrowser(e){e.preventDefault();const t=e.currentTarget,[s,a]=t.dataset.source?.split(".")??[],i=ffd20.config.sheetSections[s]?.[a]?.browse??{category:t.dataset.category||s,type:t.dataset.type},n=ffd20.applications.compendiums[i.category];if(!n)throw Error(`Could not find "${i.category}" browser`);const o={};for(const[e,t]of Object.entries(i))["level","category"].includes(e)||(o[e]=(Array.isArray(t)?t:[t]).filter((e=>e)),"classType"===e&&"npc"===this.actor.type&&(o[e]=[...o[e],"npc","racial"]));const r=t.dataset.filters;if(r){const e=r.split(";");for(const t of e){const[e,s]=t.split("=");o[e]=s.split(",")}}if(i.level&&t.dataset.level){o.level=t.dataset.level;const e=t.closest("[data-group][data-tab]")?.dataset.tab;if(e){const t=this.actor.system.attributes?.spells?.spellbooks?.[e]?.class;t&&"_hd"!==t&&(o.class=t)}}n._queueFilters(o),n._render(!0,{focus:!0})}async _onOpenCompendiumEntry(e){const t=e.currentTarget.dataset.compendiumEntry;ffd20.utils.openJournal(t)}_onRollConcentration(e){e.preventDefault();const t=$(e.currentTarget).closest(".spellbook-group").data("tab");this.actor.rollConcentration(t,{token:this.token})}_onRollCL(e){e.preventDefault();const t=$(e.currentTarget).closest(".spellbook-group").data("tab");this.actor.rollCL(t,{token:this.token})}_setItemActive(e){e.preventDefault();const t=e.currentTarget,s=t.checked,a=t.closest(".item").dataset.itemId;this.actor.items.get(a).setActive(s)}_onLevelUp(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t);return LevelUpForm.increaseLevel(this.actor,s,{token:this.token})}_onItemSummary(e){e.preventDefault();const t=e.target.closest(".item[data-item-id]");this.openItemSummary(t)}async openItemSummary(e,{instant:t=!1,rollData:s}={}){const a=e.dataset.itemId,i=this.actor.items.get(a),n=e.closest(".item-list[data-list]"),o=n?.dataset.list,r=n?.closest(".tab[data-tab]").dataset.tab,l=`${r}.${o}.${a}`;if(s??=i.defaultAction?.getRollData()??i.getRollData(),e.classList.contains("expanded")){this._expandedItems.delete(l);const s=e.querySelector(".item-summary");s.inert=!0,t?s.remove():$(s).slideUp(200,(()=>s.remove()))}else{const a=await i.getChatData({chatcard:!1,rollData:s}),n=await renderTemplate("systems/ffd20/templates/actors/parts/actor-item-summary.hbs",a);let o=document.createElement("div");o.innerHTML=await ffd20.utils.enrichHTMLUnrolled(n,{rollData:s,secrets:this.actor.isOwner}),o=o.firstElementChild,t||$(o).hide(),e.append(o),t||$(o).slideDown(200),this._expandedItems.add(l)}e.classList.toggle("expanded")}_onInputText(e){e.preventDefault();const t=e.target;if(!t||t?.disabled)return;t.readOnly=!1;const s=foundry.utils.getProperty(this.actor,t.name),a=t.value;t.value=s;let i=!1;const n=e instanceof WheelEvent;n?this._mouseWheelAdd(e,t):t.select();const handler=e=>{const o=document.getSelection();o.anchorNode!==t&&o.anchorNode!==t.parentElement||o.removeAllRanges(),n?t.removeEventListener("pointerout",handler):(t.removeEventListener("focusout",handler),t.removeEventListener("keydown",keyHandler)),t.removeEventListener("click",handler),i||=""+s!==t.value,i?this._onSubmit(e):(t.readOnly=!0,t.value=a)},keyHandler=e=>{"Enter"===e.key&&(i=!0,handler(e))};n?(t.addEventListener("pointerout",handler,{passive:!0}),i=!0):(t.addEventListener("focusout",handler,{passive:!0}),t.addEventListener("keydown",keyHandler,{passive:!0})),t.addEventListener("click",handler,{passive:!0})}async _onArbitrarySkillCreate(e){e.preventDefault();const t=$(e.currentTarget).parents(".skill").attr("data-skill"),s=this.actor.system.skills[t],a={name:game.i18n.format("DOCUMENT.New",{type:game.i18n.localize("FFD20.Skill")}),ability:s.ability,rank:0,rt:s.rt,cs:s.cs,acp:s.acp};let i=1,n=`${t}${i}`;for(;null!=s.subSkills[n];)i++,n=`${t}${i}`;const o={};return o[`system.skills.${t}.subSkills.${n}`]=a,await this.actor.update(o),this._editSkill(t,n)}async _onSkillCreate(e){e.preventDefault();const t="true"===$(e.currentTarget).parents(".skills-list").attr("data-background"),s={name:game.i18n.format("DOCUMENT.New",{type:game.i18n.localize("FFD20.Skill")}),ability:"int",rank:0,mod:0,rt:!1,cs:!1,acp:!1,background:t,custom:!0},a=s.name||"skill",i=ffd20.utils.createTag(a,{allowUnderScore:!1});let n=i,o=1;for(;null!=this.actor.system.skills[n];)o++,n=i+o.toString();const r={};return r["system.skills."+n]=s,await this.actor.update(r),this._editSkill(n)}_editSkill(e,t){return new Promise((s=>{const a=new ffd20.applications.SkillEditor(this.actor,e,t);a.addCallback(s),a.render(!0)}))}_onSkillEdit(e){e.preventDefault();const t=e.target.closest(".skill"),s=t.dataset.skill,a=t.dataset.subSkill;return this._editSkill(s,a)}async _onSkillDelete(e){e.preventDefault();const t=e.target.closest(".skill"),s=t.dataset.skill,a=t.dataset.subSkill,i=a?`${s}.${a}`:s,n=this.actor.getSkillInfo(i);let o=!0;getSkipActionPrompt()||(o=await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.format("FFD20.DeleteSkillTitle",{name:n.fullName}),icon:"fa-solid fa-trash"},content:`<p>${game.i18n.localize("FFD20.DeleteSkillConfirmation")}</p>`,rejectClose:!1,modal:!0})),o&&(()=>{const e={};a?e[`system.skills.${s}.subSkills.-=${a}`]=null:e["system.skills.-="+s]=null,this.actor.update(e)})()}async _onPointBuyCalculator(e){e.preventDefault();const t=Object.values(this.actor.apps).find((e=>e instanceof PointBuyCalculator));t?(t.render(!0),t.bringToFront()):new PointBuyCalculator({document:this.actor}).render({force:!0})}async _onSensesSelector(e){e.preventDefault();const t=Object.values(this.actor.apps).find((e=>e instanceof ffd20.applications.SensesSelector));t?(t.render(!0),t.bringToFront()):new ffd20.applications.SensesSelector({document:this.actor}).render({force:!0})}async _onControlAlignment(e){e.preventDefault();const t=e.currentTarget,s=Object.entries(ffd20.config.alignmentsShort).map((([e,t])=>({value:e,label:t})));new Widget_ItemPicker((e=>{this.actor.update({"system.details.alignment":e})}),{items:s,columns:3}).render($(t))}_itemActivationControl(e){e.preventDefault();const t=e.currentTarget.closest(".item[data-item-id]").dataset.itemId;this.actor.items.get(t).use({ev:e,token:this.token})}async _quickChangeItemQuantity(e,t=1){e.preventDefault(),e.shiftKey&&(t*=5),e.ctrlKey&&(t*=10);const s=e.currentTarget.closest(".item").dataset.itemId,a=this.actor.items.get(s),i=a.system.quantity||0;let n=Math.max(0,i+t);"container"===a.type&&(n=Math.min(n,1)),a.update({"system.quantity":n})}async _quickEquipItem(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t);s.setActive(!s.activeState)}async _quickCarryItem(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t);s.isPhysical&&s.update({"system.carried":!s.system.carried})}async _quickIdentifyItem(e){if(e.preventDefault(),!game.user.isGM)return void ui.notifications.error(game.i18n.localize("FFD20.Error.CantIdentify"));const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t);s.isPhysical&&s.update({"system.identified":!s.system.identified})}async _itemPreparedToggle(e){e.preventDefault();const t=e.currentTarget,s=t.closest(".item").dataset.itemId,a=this.actor.items.get(s),i=t.dataset.name,n={system:{}};foundry.utils.setProperty(n.system,i,foundry.utils.getProperty(a.system,i)?0:1),a.update(n)}_prepareDuplicateItem(e,{rename:t=!0,original:s}={}){if(delete e._id,delete e.system.links?.children,delete e.system.links?.charges,e.sort=e.sort+1e3,s&&(e._stats??={},e._stats.duplicateSource||=s.uuid),t){const t=e.system?.subType,s=this.actor.items.filter((s=>!(s.type!==e.type||t&&t!==s.system?.subType||"spell"===e.type&&e.system.level!==s.system.level))),searchUnusedName=(e,t)=>{e=e.replace(/\s+\(\d+\)$/,"");let s,a=1;do{a+=1,s=`${e} (${a})`}while(t.has(s));return s},a=new Set(s.map((e=>e.name)));e.name=searchUnusedName(e.name,a);const i=e.system.unidentified;if(i?.name&&CONFIG.Item.documentClasses[e.type]?.isPhysical){const e=new Set(s.map((e=>e.getName(!0))));i.name=searchUnusedName(i.name,e)}}}async _duplicateItem(e){e.preventDefault();const t=e.currentTarget.closest(".item[data-item-id]").dataset.itemId,s=this.actor.items.get(t),a=s.toObject();this._prepareDuplicateItem(a,{original:s}),await Item.implementation.create(a,{parent:this.actor,renderSheet:!0})}_quickAction(e){e.preventDefault();const t=e.currentTarget.dataset.itemId,s=this.actor.items.get(t);if(s)return s.use({token:this.token})}_convertCurrency(e){e.preventDefault();const t=e.currentTarget,s=t.dataset.type,a=t.dataset.category;this.actor.convertCurrency(a,s)}_onItemCreate(e){e.preventDefault();const t=e.currentTarget,[s,a]=t.dataset.create?.split(".")??[],i=foundry.utils.deepClone(ffd20.config.sheetSections[s]?.[a]?.create);if(!i)throw Error(`No creation data found for "${s}.${a}"`);const n=i.type||t.dataset.type,o=i.system?.subType;i.name=Item.implementation.defaultName({type:n,subType:o,parent:this.actor});const r=new Item.implementation(i);switch(n){case"spell":r.updateSource({system:{level:parseInt(t.dataset.level),spellbook:t.dataset.book}});break;case"feat":if("classFeat"===r.subType&&!r.system.class){const e=[...this.actor.itemTypes.class].sort(((e,t)=>(t.system.level||0)-(e.system.level||0)));e.length>0&&r.updateSource({system:{class:e[0].system.tag}})}}this._sortNewItem(r);const l=this.actor.itemTypes[n].filter((e=>ffd20.utils.isItemSameSubGroup(r,e))).sort(((e,t)=>t.sort-e.sort));if(l.length){const e=r.name;let t=e,s=2;const a=new Set(l.map((e=>e.name)));for(;a.has(t);)t=`${e} (${s++})`;t!==r.name&&r.updateSource({name:t})}return Item.implementation.create(r.toObject(),{parent:this.actor,renderSheet:!0})}_onItemEdit(e){e.preventDefault();const t=e.currentTarget.closest(".item");this.actor.items.get(t.dataset.itemId).sheet.render(!0,{focus:!0})}async _onItemDelete(e){e.preventDefault();const t=e.currentTarget;if(t.disabled)return;const s=e.currentTarget.closest(".item"),a=this.actor.items.get(s.dataset.itemId);if(t.disabled=!0,getSkipActionPrompt())return a.delete();const i=new Set,findAllLinks=e=>{i.add(e);const t=e.getLinkedItemsSync("children");for(const e of t)i.has(e)||findAllLinks(e)};if(findAllLinks(a),"class"===a.type){const e=a.getFlag("ffd20","links.classAssociations")??{};for(const t of Object.keys(e)){const e=this.actor.items.get(t);e&&i.add(e)}}i.delete(a);const n={linked:[...i].map((e=>({name:e.name,uuid:e.uuid,type:game.i18n.localize(CONFIG.Item.typeLabels[e.type])})))},o=await renderTemplate("systems/ffd20/templates/internal/delete-item.hbs",n);await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.format("FFD20.DeleteItemTitle",{name:a.name}),icon:"fa-solid fa-trash"},classes:["pf1-v2","delete-item"],content:o,rejectClose:!1,modal:!0})&&a.delete(),t.disabled=!1}async _onItemGive(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t),a=game.actors.filter((e=>e!==this.actor&&e.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)));0===a.length&&ui.notifications.warn("FFD20.Error.NoGiftTargets",{localize:!0});const i=await ffd20.utils.dialog.getActor({window:{title:game.i18n.localize("FFD20.GiveItemToActor")},actors:a}),n=game.actors.get(i);if(!n)throw Error(`Invalid actor ID as gift target: "${i}"`);if(n.isOwner){const e=s.toObject();delete e.system?.links?.children;await Item.implementation.create(e,{parent:n})&&await s.delete()}else game.socket.emit("system.ffd20",{eventType:"giveItem",targetActor:n.uuid,item:s.uuid})}async _onItemSplit(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.actor.items.get(t),a=s.system.quantity;if(a<2)throw Error("Can't split stack with less than 2 items");const i={total:a,title:game.i18n.format("FFD20.Dialog.SplitItem.Title",{name:s.name})},n=e.target.getBoundingClientRect(),o={position:{width:320,left:n.left-350,top:n.top-80}},r=await ffd20.applications.SplitStack.wait(i,o);if(!r)return;const[l,c]=r,d=s.toObject();d.system.quantity=c,this._prepareDuplicateItem(d,{rename:!1,original:s}),await Item.implementation.createDocuments([d],{parent:this.actor}),await s.update({"system.quantity":l})}_onRollAbilityTest(e){e.preventDefault();const t=e.currentTarget.closest(".ability").dataset.ability;this.actor.rollAbilityTest(t,{token:this.token})}_onRollBAB(e){e.preventDefault(),this.actor.rollBAB({token:this.token})}_onRollAttack(e){e.preventDefault();let t=e.target;t.classList.contains("rollable")||(t=t.closest(".rollable"));const s="weapon"!==t.dataset.type,a="true"===t.dataset.ranged;this.actor.rollAttack({maneuver:s,ranged:a,token:this.token})}_onRollInitiative(e){e.preventDefault(),this.actor.rollInitiative({createCombatants:!0,rerollInitiative:game.user.isGM,token:this.token})}_onRollSavingThrow(e){e.preventDefault();const t=e.currentTarget.closest(".saving-throw").dataset.savingthrow;this.actor.rollSavingThrow(t,{token:this.token})}_applySectionFilter(e,t){return!!t.filters&&t.filters.some((t=>t.type===e.type&&(t.subTypes?.includes(e.subType)??!0)))}_prepareItems(e){const t=Object.values(ffd20.config.sheetSections.inventory).map((e=>foundry.utils.deepClone(e))).sort(((e,t)=>e.sort-t.sort));for(const e of t)this._prepareSection(e);const[s,a,i]=e.items.reduce(((e,t)=>("spell"===t.type?e[1].push(t):t.isPhysical?e[0].push(t):e[2].push(t),e)),[[],[],[]]);let n=!1,o=!1;const r={},l=e.system.attributes.spells.spellbooks;for(const[t,s]of Object.entries(l)){if(r[t]={...s},!s.inUse)continue;o=!0;const i=r[t],l=a.filter((e=>e.spellbook===t));i.sections=this._prepareSpellbook(e,l,t),i.prepared=l.filter((e=>"prepared"===e.preparation.mode&&e.preparation.prepared)).length,i.rollData=e.rollData.spells[t],i.classId=s.class,i.class=e.rollData.classes[s.class],s.arcaneSpellFailure&&(n=!0)}if(n){const t=this.actor.itemTypes.equipment.filter((e=>e.isActive)).reduce(((e,t)=>e+(t.system.spellFailure||0)),0);e.asf={total:t}}if(o){const t=game.settings.get("core","language"),s=this.actor.itemTypes.class.map((e=>[e.system.tag,e.name])).sort((([e,s],[a,i])=>s.localeCompare(i,t)));s.unshift(["_hd",game.i18n.localize("FFD20.HitDie")]),e.classList=Object.fromEntries(s)}const c=game.settings.get("ffd20","cybertech"),d=this.actor.itemTypes.implant.filter((e=>"cybertech"===e.subType&&e.system.implanted));if(c||d.length){const t=d.reduce(((e,t)=>e+(t.system.implant||0)),0),s=this.actor.system.abilities??{};e.implants={load:t,max:Math.min(s.int?.total,s.con?.total)}}for(const a of s){const s=t.find((e=>this._applySectionFilter(a,e)));s&&(this._prepareItemForSection(a,s,e),s.items??=[],s.items.push(a))}c||0!==this.actor.itemTypes.implant.length||t.findSplice((e=>"implants"===e.id));const u=Object.values(ffd20.config.sheetSections.features).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of i){const t=e.abilityType;e.typelabel=ffd20.config.abilityTypes[t]?.short||ffd20.config.abilityTypes.na.short;const s=u.find((t=>this._applySectionFilter(e,t)));s&&(s.items??=[],s.items.push(e))}if(this.actor.itemTypes.feat.length){u.find((e=>"features.feat"===e.path)).issues={found:e.featCount?.issues>0,missing:e.featCount?.missing||0,excess:e.featCount?.excess||0,get discrepancy(){return ffd20.config.featCount?Math.abs(this.missing-this.excess):0}}}const m=Object.values(ffd20.config.sheetSections.buffs).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of i){const t=m.find((t=>this._applySectionFilter(e,t)));t&&(t.items??=[],t.items.push(e))}let p=Object.values(ffd20.config.sheetSections.combat).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of i){const t=p.find((t=>this._applySectionFilter(e,t)));t&&(t.items??=[],t.items.push(e))}const h=p.find((e=>"weapon"===e.id));h&&(h.items=s.filter((e=>"weapon"===e.type&&e.document.system.showInCombat)));const f=p.find((e=>"spell"===e.id));f&&(f.items=a.filter((e=>e.document.system.showInCombat)));const g=i.filter((e=>"feat"===e.type&&e.document.system.showInCombat)),y=p.find((e=>"feat"===e.id));y&&(y.items=g.filter((e=>"feat"===e.subType)));const b=p.find((e=>"classFeat"===e.id));b&&(b.items=g.filter((e=>"classFeat"===e.subType)));const F=p.find((e=>"racial"===e.id));F&&(F.items=g.filter((e=>"racial"===e.subType)));const v=p.find((e=>"miscFeat"===e.id));v&&(v.items=g.filter((e=>"misc"===e.subType)));const D=p.find((e=>"equipment"===e.id));D&&(D.items=s.filter((e=>"equipment"===e.type&&e.document.system.showInCombat)));const S=p.find((e=>"consumable"===e.id));S&&(S.items=s.filter((e=>"consumable"===e.type&&e.document.system.showInCombat))),p=p.filter((e=>!(e.hideEmpty&&!(e.items?.length>0))));const k=Object.values(ffd20.config.sheetSections.classes).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of i){const t=k.find((t=>this._applySectionFilter(e,t)));t&&(t.items??=[],t.items.push(e))}const C=[{key:"inventory",sections:t},{key:"features",sections:u},{key:"buffs",sections:m},{key:"attacks",sections:p}];for(const[e,t]of Object.entries(r))t.inUse&&(t.sections||console.warn(e,t),C.push({key:"spellbook-"+e,sections:t.sections}));for(const e of C){const t=this._filters.sections[e.key];if(t)for(const s of e.sections)s&&this._filterSection(e,s,t)}e.inventory=t,e.spellbookData=r,e.features=u,e.buffs=m,e.attacks=p,e.classes=k,e.quickActions=this.actor.getQuickActions()}_filterSection(e,t,s){let a=0;t._preparedOnly=s.has("prepared"),t._hideEmpty=s.has("empty"),t._preparedOnly&&(a+=1),t._hideEmpty&&(a+=1);const i=s.has(t.id);t._hidden=s.size>a&&!i,t._preparedOnly&&(t.items=t.items.filter((e=>e.maxCharges>0))),!t._hideEmpty||i||t.items?.length>0||(t._hidden=!0)}_onRollSkillCheck(e){e.preventDefault();const t=e.target,s=t.dataset.skill,a=t.dataset.subSkill,i=a?`${s}.${a}`:s;this.actor.rollSkill(i,{token:this.token})}_onToggleFilter(e){e.preventDefault();const t=e.currentTarget,{category:s,filter:a}=t.dataset,i=this._filters.sections[s]??=new Set;if(game.settings.get("ffd20","invertSectionFilterShiftBehaviour")?!e.shiftKey:e.shiftKey)for(const e of Array.from(i))e!==a&&i.delete(e);i.has(a)?i.delete(a):i.add(a),this.render()}_searchFilterCommit(e){const t=this.actor,s=this._filters.search[e.target.dataset.category].toLowerCase(),a=e.target.dataset.category;if(this.effectiveSearch[a]===s&&!this.searchRefresh)return;this.effectiveSearch[a]=s,this.searchRefresh=!1;$(e.target).closest(".tab").find(".item-list .item").each((function(){const e=$(this);if(s?.length>0){const a=t.items.get(this.dataset.itemId);a.name.toLowerCase().includes(s)?e.show():e.hide()}else e.show()}))}_searchFilterCompositioning(e){this.searchCompositioning="compositionstart"===e.type}_searchFilterChange(e){e.preventDefault(),e.stopPropagation();const t=e.target.value,s=e.target.dataset.category,a=this._filters.search[s]!==t;(this.searchCompositioning||a)&&clearTimeout(this.searchDelayEvent),this.searchCompositioning||(this._filters.search[s]=t,"input"===e.type?a&&(this.searchDelayEvent=setTimeout((()=>this._searchFilterCommit(e)),this.searchDelay)):this._searchFilterCommit(e))}_onTraitSelector(e){e.preventDefault();const t=e.currentTarget,s=t.parentElement.querySelector("label");let a;if(t.dataset.options in ffd20.registry){let e=ffd20.registry[t.dataset.options];t.dataset.resist&&(e=e.filter((e=>e.resist))),a=Object.fromEntries(e.map((e=>[e.id,e.name])))}else a=ffd20.config[t.dataset.options];const i={name:t.dataset.for,title:s.innerText,subject:t.dataset.options,hasCustom:"false"!==t.dataset.hasCustom,choices:a},n=Object.values(this.actor.apps).find((e=>e instanceof ActorTraitSelector&&e.options.name===i.name));n?(n.render(!0),n.bringToFront()):new ActorTraitSelector({...i,document:this.actor}).render({force:!0})}_onResistanceSelector(e){e.preventDefault();const t=e.currentTarget,s={name:t.dataset.for,title:t.innerText,fields:t.dataset.fields,dtypes:t.dataset.dtypes,width:"dr"===t.dataset.options?575:450,isDR:"dr"===t.dataset.options},a=Object.values(this.actor.apps).find((e=>e instanceof DamageResistanceSelector&&e.options.name===s.name));a?(a.render(!0),a.bringToFront()):new DamageResistanceSelector({document:this.actor,...s}).render(!0)}setItemUpdate(e,t,s){let a=this._itemUpdates.find((t=>t._id===e));a||(a={_id:e},this._itemUpdates.push(a)),a[t]=s}_render(e,t={}){return ffd20.applications.utils.saveEditState(this,t),super._render(e,t)}async _renderInner(...e){const t=await super._renderInner(...e),s=t[0];for(const e of this._expandedItems){const[t,a,i]=e.split(".");let n;if(this.actor.items.has(i)){let e=s.querySelector(`.tab[data-tab='${t}']`);a&&(e=e.querySelector(`.item-list[data-list='${a}']`)),n=e?.querySelector(`.item[data-item-id="${i}"]`)}n?this.openItemSummary(n,{instant:!0}):this._expandedItems.delete(e)}return t}async _onSubmit(e,{updateData:t=null,preventClose:s=!1,preventRender:a=!1}={}){e.preventDefault(),this._itemUpdates?.length&&(a=!0),await super._onSubmit(e,{updateData:t,preventClose:s,preventRender:a}),await this._updateItems()}async _updateItems(){const e=this._itemUpdates;this._itemUpdates=[];for(const t of e){const e=this.actor.items.get(t._id);e?(delete t._id,await e.update(t)):console.error("Item update for non-existing item:",t._id,t)}}async _onDropCurrency(e,t){const s=await fromUuid(t.actorUuid||""),{currency:a,amount:i,containerId:n,alt:o}=t;return new CurrencyTransfer({actor:s,container:n,alt:o},{actor:this.actor,amount:Object.fromEntries([[a,parseInt(i)]])}).render(!0)}async _onDropItem(e,t){if(!this.actor.isOwner)return void ui.notifications.warn("FFD20.Error.NoActorPermission",{localize:!0});const s=await Item.implementation.fromDropData(t),a=await fromUuid(t.actorUuid||""),i=s.actor===this.actor&&!t.containerId,n=game.items.fromCompendium(s,{clearFolder:!0,keepId:i,clearSort:!i});if(i)return this._onSortItem(e,n);s.isPhysical&&game.user.isGM&&e.altKey&&!1!==n.system.identified&&(console.debug("FFD20 | User Input: Alt | Force unidentifying added item:",n.name),n.system.identified=!1),this._alterDropItemData(n,s);const o=await this._onDropItemCreate(n);if(t.containerId&&o?.length&&a===this.actor){const e=this.actor.allItems.find((e=>e.id===t.containerId));e&&e.deleteContainerContent(t.itemId)}return o}_alterDropItemData(e,t){const s=!!t.pack,a=!!t.parent,i=!s&&!a&&!!t.id;game.user.isGM&&!this.actor.hasPlayerOwner&&"character"!==this.actor.type&&t.isPhysical&&s&&!1!==e.system.identified&&(t.system?.cl>0||["drug","poison"].includes(t.system.subType))&&(console.debug("FFD20 | Force unidentifying magical/drug/poison item:",e.name),e.system.identified=!1),"spell"===e.type&&(e.system.spellbook=this.currentSpellbookKey),t.isPhysical&&(s||i)&&(e.system.size=this.actor.system.traits?.size?.base||"med")}_sortNewItem(e){const t=e.type,s="class"===t,a=this.actor.itemTypes[t].filter((t=>!!s||ffd20.utils.isItemSameSubGroup(e,t))).sort(((e,t)=>t.sort-e.sort));a.length&&(e._source.sort=a[0].sort+CONST.SORT_INTEGER_DENSITY)}_adjustNewItem(e,t){e.constructor._adjustNewItem?.(e,t,!0)}async _onDropItemCreate(e){const t=e instanceof Array?e:[e],s=[];for(const e of t){if(delete e._id,"feat"===e.type&&"classFeat"===e.system?.subType){const t=[...this.actor.itemTypes.class].sort(((e,t)=>(t.system.level||0)-(e.system.level||0)));if(0===t.length);else if(1===t.length)e.system.class=t[0].system.tag;else{const s={window:{title:`${game.i18n.format("FFD20.SelectSpecific",{specifier:game.i18n.localize("TYPES.Item.class")})} - ${e.name} - ${this.actor.name}`},actor:this.actor,empty:!0,items:t,selected:t[0]?.id};if(t.length>1){const a=t.find((t=>e.system?.associations?.classes?.includes(t.name)));a&&(s.selected=a.id)}const a=await ffd20.utils.dialog.getItem(s);a&&(e.system.class=a.system.tag)}}if("spell"===e.type&&"spellbook"!==this.currentPrimaryTab){const t=this.actor.system.attributes?.spells?.spellbooks??{},a=t[this.currentSpellbookKey]?.kind||"arcane",i=await ffd20.documents.item.ItemSpellPF.toConsumablePrompt(e,{spellType:a,actor:this.actor,allowSpell:Object.values(t).some((e=>e.inUse))});if(i){s.push(i);continue}if(null===i)continue}const a=new Item.implementation(e,{parent:this.actor});if(this._sortNewItem(a),this._adjustNewItem(a,e),"class"!==e.type||event&&event.shiftKey)s.push(a.toObject());else{a.updateSource({system:{level:1}});const e=await LevelUpForm.addClassWizard(this.actor,a.toObject(),{token:this.token});e&&1===t.length&&this._focusTabByItem(e)}}return 1===s.length&&this._focusTabByItem(s[0]),this.actor.createEmbeddedDocuments("Item",s)}_focusTabByItem(e){let t;switch(e.type){case"race":case"class":t="summary";break;case"spell":this.activateTab(e.system.spellbook||"primary",{group:"spellbooks"}),t="spellbook";break;case"buff":t="buffs";break;case"feat":t="feats";break;case"weapon":case"equipment":case"consumable":case"loot":case"container":t="inventory";break;case"attack":t="combat"}t&&this.activateTab(t,{group:"primary"})}_canDragStart(e){return!e.includes(".denomination")||this.isEditable}_onDragStart(e){const t=e.target;if(t.classList.contains("denomination")){const s=t.classList.contains("alt-currency"),a=t.dataset.denomination,i=s?this.actor.system.altCurrency:this.actor.system.currency,n={actorUuid:this.actor.uuid,type:"Currency",alt:s,currency:a,amount:i[a]};e.dataTransfer.setData("text/plain",JSON.stringify(n))}else t.dataset?.skill?this._onDragSkillStart(e):t.dataset?.attribute?this._onDragMiscStart(e,t.dataset.attribute):t.dataset?.drag?this._onDragMiscStart(e,t.dataset.drag):t.dataset?.savingthrow?this._onDragSaveStart(e,t.dataset.savingthrow):t.dataset?.ability?this._onDragMiscStart(e,"abilityScore",t.dataset.ability):t.dataset?.attack?this._onDragMiscStart(e,"attack",t.dataset.attack):super._onDragStart(e)}_selectOnClick(e){e.preventDefault();e.currentTarget.select()}_updateObject(e,t){return this.searchRefresh=!0,super._updateObject(e,t)}calculateTotalItemValue({inLowestDenomination:e=!1,recursive:t=!1}={}){const s=this.actor.items.filter((e=>e.isPhysical&&null!=e.system.price)).reduce(((e,s)=>e+s.getValue({recursive:t,sellValue:1,inLowestDenomination:!0})),0);return e?s:s/100}calculateSellItemValue({inLowestDenomination:e=!1,recursive:t=!1}={}){const s=this.actor.items.filter((e=>null!=e.system.price)),a=this.actor.getFlag("ffd20","sellMultiplier")||.5,i=s.reduce(((e,s)=>e+s.getValue({recursive:t,sellValue:a,inLowestDenomination:!0})),0);return e?i:i/100}_disableFields(e){super._disableFields(e);for(const t of e.getElementsByTagName("INPUT"))"search"===t.type&&(t.disabled=!1)}}class ActorSheetPFCharacter extends ActorSheetPF{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"character"],width:800,height:840}}get template(){return!game.user.isGM&&this.actor.limited?"systems/ffd20/templates/actors/limited-sheet.hbs":"systems/ffd20/templates/actors/character-sheet.hbs"}async getData(){const e=await super.getData(),t=game.settings.get("ffd20","experienceConfig");if(e.disableExperience=t.disable,e.showXpBar=!t.disable,t.disable||(e.minimumExperience=this.actor.getLevelExp(Math.max(0,(this.actor.system.details.level.value??0)-1),{rollData:e.rollData})),e.hasClasses=this.actor.itemTypes.class.length>0,!0!==t.disable&&e.hasClasses){const s=this.actor.system.details?.xp;if(s&&s.value>=s.max){e.levelUp=!0;const s=t.track;if(["fast","medium","slow"].includes(s)){this.actor.system.details.level.value>=ffd20.config.CHARACTER_EXP_LEVELS[s].length&&(e.levelUp=!1)}}}else e.levelUp=!0;return e}}class ActorSheetPFNPC extends ActorSheetPF{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"npc"],width:800,height:840}}get template(){return!game.user.isGM&&this.actor.limited?"systems/ffd20/templates/actors/limited-sheet.hbs":"systems/ffd20/templates/actors/npc-sheet.hbs"}async getData(){const e=await super.getData();return e.labels.cr=ffd20.utils.CR.fromNumber(this.actor.system.details?.cr?.total??0),e.levelUp=!0,e}activateListeners(e){super.activateListeners(e),e.find("span.text-box.cr-input").on("click",(e=>{this._onSpanTextInput(e,this._adjustCR.bind(this))}))}async _adjustCR(e){e.preventDefault();const t=e.currentTarget,s=ffd20.utils.CR.fromString("INPUT"===t.tagName?t.value:t.innerText),a=t.getAttribute("name");let i;a&&(i={[a]:s}),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(async t=>this._updateObject(e,this._getSubmitData(i))),{once:!0}):this._updateObject(e,this._getSubmitData(i))}}class ActorSheetPFNPCLite extends ActorSheetPFNPC{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"lite"],width:440,height:640,tabs:[{navSelector:"nav.tabs",contentSelector:"section.primary-body",initial:"summary",group:"primary"}]}}get template(){return!game.user.isGM&&this.actor.limited?"systems/ffd20/templates/actors/limited-sheet.hbs":"systems/ffd20/templates/actors/npc-sheet-lite.hbs"}async getData(){const e=await super.getData();return e.hasHD=!1,e}_prepareItems(e){const t=Object.values(ffd20.config.sheetSections.combatlite).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const s of e.items){const e=t.find((e=>this._applySectionFilter(s,e)));e?(e.items??=[],e.items.push(s)):console.warn("Could not find a sheet section for",s.name)}e.attacks=t}}class ActorSheetPFNPCLoot extends ActorSheetPFNPC{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"loot"],tabs:[{navSelector:"nav.tabs",contentSelector:"section.primary-body",initial:"inventory",group:"primary"}],width:620,height:420}}get template(){return"systems/ffd20/templates/actors/npc-sheet-loot.hbs"}get currentPrimaryTab(){return"inventory"}get itemValueDenomination(){return"gp"}async getData(){const e=await super.getData();e.isLootSheet=!0,e.sellMultiplier=this.actor.getFlag("ffd20","sellMultiplier");const t=this.actor.getTotalCurrency({inLowestDenomination:!0}),s=this.calculateTotalItemValue({inLowestDenomination:!0,recursive:!0})+t,a=this.calculateSellItemValue({inLowestDenomination:!0,recursive:!0})+t;return e.totalValue=ffd20.utils.currency.split(s,{pad:!0}),e.sellValue=ffd20.utils.currency.split(a,{pad:!0}),e.labels??={},e.labels.totalValue=game.i18n.format("FFD20.Containers.TotalValue",e.totalValue),e.labels.sellValue=game.i18n.format("FFD20.Containers.SellValue",e.sellValue),e.labels.currency="FFD20.Currency.Inline."+this.itemValueDenomination,e}_prepareSection(e){super._prepareSection(e),e.interface={...e.interface,value:!0,actions:!1,noEquip:!0}}}class ActorSheetPFHaunt extends ActorSheetPFNPC{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"haunt"],width:880,height:700,tabs:[{navSelector:"nav.tabs",contentSelector:"section.primary-body",initial:"summary"}],scrollY:[".tab.summary"]}}get template(){return this.actor.limited?"systems/ffd20/templates/actors/limited-sheet.hbs":"systems/ffd20/templates/actors/haunt-sheet.hbs"}static EDIT_TRACKING=["system.details.notes","system.details.effect","system.details.destruction"];async getData(){const e=this.document.isOwner,t={owner:e,limited:this.document.limited,editable:this.isEditable,cssClass:e?"editable":"locked",config:ffd20.config,isGM:game.user.isGM,system:this.actor.system,measureTemplateTypes:ffd20.utils.internal.getTemplateTypes(),hasHD:!1,fields:this.actor.system.schema.fields,units:game.i18n.localize("imperial"===ffd20.utils.getDistanceSystem()?"FFD20.Distance.ftShort":"FFD20.Distance.mShort")},s=this.actor.getRollData();t.rollData=s,t.labels={cr:ffd20.utils.CR.fromNumber(t.system.details.cr.total),alignment:t.config.alignments[t.system.details.alignment]};const a=t.rollData.auraStrength;a&&(t.labels.auraStrength=ffd20.config.auraStrengths[a]);const i={secrets:e,rollData:t.rollData,relativeTo:this.actor},n="<p class='placeholder'>"+game.i18n.localize("FFD20.NoDescription")+"</p>",o=t.system.details?.destruction,r=o?ffd20.utils.enrichHTMLUnrolled(o,i):Promise.resolve();r.then((e=>t.destructionHTML=e||n));const l=t.system.details?.effect,c=l?ffd20.utils.enrichHTMLUnrolled(l,i):Promise.resolve();c.then((e=>t.effectHTML=e||n));const d=t.system.details?.notes,u=d?ffd20.utils.enrichHTMLUnrolled(d,i):Promise.resolve();u.then((e=>t.notesHTML=e)),await Promise.all([r,c,u]),t.actor=this.actor,t.token=this.token,t.items=this.document.items.map((e=>this._prepareItem(e))).sort(((e,t)=>(e.sort||0)-(t.sort||0))),this._prepareItems(t);const m=t.system.templates,p=m.total,h=p.reduce(((e,s)=>(e.push(t.config.hauntTemplates[s]?TextEditor.enrichHTML(`@UUID[${t.config.hauntTemplates[s].uuid}]`):TextEditor.enrichHTML(`@UUID[${s}]{${s}}`)),e)),[]),f=await Promise.all(h);return m.selected=await p.reduce(((e,s,a)=>{const i=f[a];return e[s]={name:t.config.hauntTemplateLabels[s]||s,link:i,broken:i===s},e}),{}),t._editorState=ffd20.applications.utils.restoreEditState(this,t),t}async _getTooltipContext(e,t){const s=this.actor,a={get rollData(){return this._cache??=s.getRollData(),this._cache}};const i=[],n=/^(?<id>[\w-]+)(?:\.(?<detail>.*))?$/.exec(e),{id:o}=n?.groups??{};switch(o){case"cl":i.push({path:"@details.cl",value:a.rollData.details.cl},{path:"@cl",value:a.rollData.cl});break;case"health":i.push({path:"@attributes.hp.value",value:a.rollData.attributes.hp.value},{path:"@attributes.hp.max",value:a.rollData.attributes.hp.max});break;default:return super._getTooltipContext(e,t)}t.header=undefined,t.subHeader=undefined,t.details=[],t.paths=i,t.sources=[],t.notes=[]}_prepareItems(e){const t=e.items.filter((e=>"attack"===e.type)),s=Object.values(ffd20.config.sheetSections.combatlite).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of t){const t=s.find((t=>this._applySectionFilter(e,t)));t?(t.items??=[],t.items.push(e)):console.warn("Could not find a sheet section for",e.name)}e.attacks=s}_updateObject(e,t){t=foundry.utils.expandObject(t);const s=t.system.details.area?.size;return Number.isFinite(s)&&(t.system.details.area.size=ffd20.utils.convertDistanceBack(s)[0]),super._updateObject(e,t)}}class ActorSheetPFTrap extends ActorSheetPF{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"trap"],width:600,height:700,tabs:[{navSelector:"nav.tabs",contentSelector:"section.primary-body",initial:"summary"}],scrollY:[".tab.summary"]}}get template(){return this.actor.limited?"systems/ffd20/templates/actors/limited-sheet.hbs":"systems/ffd20/templates/actors/trap-sheet.hbs"}static EDIT_TRACKING=["system.notes","system.effect"];async getData(){const e=this.document.isOwner,t={owner:e,system:this.actor.system,limited:this.document.limited,editable:this.isEditable,cssClass:e?"editable":"locked",config:ffd20.config,isGM:game.user.isGM,hasHD:!1,fields:this.actor.system.schema.fields,rollData:this.actor.getRollData(),perception:this.actor.getPerceptionModifier()};t.system.type in ffd20.config.traps.types?t.trapTypes=ffd20.config.traps.types:t.trapTypes=foundry.utils.mergeObject({[""+t.system.type]:t.system.type},ffd20.config.traps.types),t.labels={cr:ffd20.utils.CR.fromNumber(t.system.cr.total)},["proximity","visual","timed"].includes(t.system.trigger.type)&&(t.hasTriggerRange=!0,"timed"===t.system.trigger.type&&(t.hasTriggerTime=!0)),t.hasPerceptionTrigger=["electricEyes","genetic","sound","visual"].includes(t.system.trigger.type);const s={secrets:e,rollData:t.rollData,relativeTo:this.actor},a="<p class='placeholder'>"+game.i18n.localize("FFD20.NoDescription")+"</p>",i=t.system.effect,n=i?ffd20.utils.enrichHTMLUnrolled(i,s):Promise.resolve();n.then((e=>t.effectHTML=e||a));const o=t.system.notes,r=o?ffd20.utils.enrichHTMLUnrolled(o,s):Promise.resolve();return r.then((e=>t.notesHTML=e)),await Promise.all([n,r]),t.actor=this.actor,t.token=this.token,t.items=this.document.items.map((e=>this._prepareItem(e))).sort(((e,t)=>(e.sort||0)-(t.sort||0))),this._prepareItems(t),t._editorState=ffd20.applications.utils.restoreEditState(this,t),t}async _getTooltipContext(e,t){const s=this.actor,a={get rollData(){return this._cache??=s.getRollData(),this._cache}};const i=[],n=/^(?<id>[\w-]+)(?:\.(?<detail>.*))?$/.exec(e),{id:o}=n?.groups??{};switch(o){case"detect":i.push({path:"@perception",value:a.rollData.perception});break;case"disarm":i.push({path:"@disarm",value:a.rollData.disarm});break;default:return super._getTooltipContext(e,t)}t.header=undefined,t.subHeader=undefined,t.details=[],t.paths=i,t.sources=[],t.notes=[]}activateListeners(e){super.activateListeners(e);const t=e[0];t.querySelector("span.cr-input")?.addEventListener("click",(e=>{this._onSpanTextInput(e,this._adjustCR.bind(this))})),t.querySelector(".trigger .rollable[data-dtype='per']")?.addEventListener("click",(e=>{e.preventDefault(),this.actor.rollPerception({token:this.token})})),t.querySelectorAll("input[name='system.trigger.value'], input[name='system.reset.value']").forEach((e=>{e.addEventListener("click",(e=>{e.target.select()}))}))}async _adjustCR(e){e.preventDefault();const t=e.currentTarget,s=ffd20.utils.CR.fromString("INPUT"===t.tagName?t.value:t.innerText),a=t.getAttribute("name");let i;a&&(i={[a]:s}),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(async t=>this._updateObject(e,this._getSubmitData(i))),{once:!0}):this._updateObject(e,this._getSubmitData(i))}_prepareItems(e){const t=e.items.filter((e=>"attack"===e.type)),s=Object.values(ffd20.config.sheetSections.combatlite).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of t){const t=s.find((t=>this._applySectionFilter(e,t)));t?(t.items??=[],t.items.push(e)):console.warn("Could not find a sheet section for",e.name)}e.attacks=s}_updateObject(e,t){if((t=foundry.utils.expandObject(t)).system.trigger.value&&["proximity","visual"].includes(this.actor.system.trigger.type)){const e=t.system.trigger.value;Number.isFinite(e)&&(t.system.trigger.value=ffd20.utils.convertDistanceBack(e)[0])}return super._updateObject(e,t)}}class ActorSheetPFVehicle extends ActorSheetPF{static get defaultOptions(){const e=super.defaultOptions;return{...e,classes:[...e.classes,"vehicle"],width:800,height:680,tabs:[{navSelector:"nav.tabs",contentSelector:"section.primary-body",initial:"summary"}],scrollY:[".tab.summary"]}}get template(){return this.actor.limited?"systems/ffd20/templates/actors/limited-sheet.hbs":"systems/ffd20/templates/actors/vehicle-sheet.hbs"}static EDIT_TRACKING=["system.details.description","system.details.notes"];async getData(){const e=this.document.isOwner,t={owner:e,appId:this.appId,system:this.actor.system,limited:this.document.limited,editable:this.isEditable,cssClass:e?"editable":"locked",config:ffd20.config,isGM:game.user.isGM,labels:{currency:game.i18n.localize("FFD20.Currency.Abbr."+this.itemValueDenomination)},isLootSheet:!0,fields:this.actor.system.schema.fields};t.vehicleSizes=Object.fromEntries(Object.entries(ffd20.config.vehicles.size).map((([e,t])=>[e,t.label])));const s={secrets:e,rollData:t.rollData,relativeTo:this.actor},a="<p>"+game.i18n.localize("FFD20.NoDescription")+"</p>",i=t.system.details?.description,n=i?ffd20.utils.enrichHTMLUnrolled(i,s):Promise.resolve();n.then((e=>t.descriptionHTML=e||a));const o=t.system.details?.notes,r=o?ffd20.utils.enrichHTMLUnrolled(o,s):Promise.resolve();r.then((e=>t.notesHTML=e)),await Promise.all([n,r]),t.actor=this.actor,t.token=this.token,t.items=this.document.items.map((e=>this._prepareItem(e))).sort(((e,t)=>(e.sort||0)-(t.sort||0))),this._prepareItems(t);const l=this.actor.getTotalCurrency({inLowestDenomination:!0});t.hasCurrency=!0;const c=this.calculateTotalItemValue({inLowestDenomination:!0,recursive:!0})+l,d=this.calculateSellItemValue({inLowestDenomination:!0,recursive:!0})+l;return t.totalValue=ffd20.utils.currency.split(c,{pad:!0}),t.sellValue=ffd20.utils.currency.split(d,{pad:!0}),t.labels.totalValue=game.i18n.format("FFD20.Containers.TotalValue",t.totalValue),t.labels.sellValue=game.i18n.format("FFD20.Containers.SellValue",t.sellValue),t.encumbrance=this._computeEncumbrance(),t.driver=this._computeDriverData(t.system.driver.uuid,t.system.driver.skill),t.driver.driverSkill=t.system.driver.skill,t.driver.uuid||(t.driver.skills=ffd20.utils.deepClone(t.config.skills),t.driver.driverSkill&&!t.driver.skills[t.driver.driverSkill]&&(t.driver.skills[t.driver.driverSkill]=t.driver.driverSkill),t.driver.skillBonus=0),t._editorState=ffd20.applications.utils.restoreEditState(this,t),t}async _getTooltipContext(e,t){const s=this.actor,a=s.system,i={get rollData(){return this._cache??=s.getRollData(),this._cache}},getNotes=async(e,t=!0)=>(await s.getContextNotesParsed(e,{all:t,rollData:i.rollData,roll:!1})).map((e=>e.text));const n=[],o=[];let r;const l=/^(?<id>[\w-]+)(?:\.(?<detail>.*))?$/.exec(e),{id:c,detail:d}=l?.groups??{};switch(c){case"hp":n.push({path:"@attributes.hp.max",value:i.rollData.attributes.hp.max},{path:"@attributes.hp.base",value:i.rollData.attributes.hp.base||0},{path:"@attributes.hp.value",value:i.rollData.attributes.hp.value},{path:"@attributes.hp.bonus",value:i.rollData.attributes.hp.bonus}),o.push({sources:s.getSourceDetails("system.attributes.hp.max"),untyped:!0});break;case"ac":if(!a.attributes.ac[d])return;n.push({path:"@attributes.ac.normal.total",value:i.rollData.attributes.ac.normal.total},{path:"@attributes.ac.touch.total",value:i.rollData.attributes.ac.touch.total}),"sea"===i.rollData.traits.type&&n.push({path:"@attributes.ac.stopped.total",value:i.rollData.attributes.ac.stopped.total}),o.push({sources:s.getSourceDetails(`system.attributes.ac.${d}.total`),untyped:!0}),r=await getNotes("ac");break;case"cmb":n.push({path:"@attributes.cmb.total",value:a.attributes.cmb.total}),o.push({sources:[{name:game.i18n.localize("FFD20.Size"),value:Object.values(ffd20.config.sizeSpecialMods)[a.traits.size.value]}]}),o.push({sources:s.getSourceDetails("system.attributes.attack.general")},{sources:s.getSourceDetails("system.attributes.cmb.bonus")},{sources:s.getSourceDetails("system.attributes.attack.shared")}),r=[...await getNotes("attack"),...await getNotes("melee"),...await getNotes("cmb")];break;case"material":n.push({path:"@material.base",value:a.material.base});break;case"hardness":n.push({path:"@attributes.hardness.total",value:i.rollData.attributes.hardness.total},{path:"@attributes.hardness.base",value:a.attributes.hardness.base},{path:"@attributes.hardness.bonus",value:i.rollData.attributes.hardness.bonus}),o.push({sources:s.getSourceDetails("system.attributes.hardness.total"),untyped:!0});break;case"save":if(!a.attributes.savingThrows.save)return;n.push({path:"@attributes.savingThrows.save.total",value:i.rollData.attributes.savingThrows.save.total},{path:"@attributes.savingThrows.save.base",value:i.rollData.attributes.savingThrows.save.base}),o.push({sources:s.getSourceDetails("system.attributes.savingThrows.save.total"),untyped:!0}),r=await getNotes("savingThrows");break;case"acceleration":{o.push({sources:s.getSourceDetails("system.details.acceleration")});const e=a.details.acceleration,[t]=ffd20.utils.convertDistance(e),i="metric"===ffd20.utils.getDistanceSystem()?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft;n.push({path:"@details.acceleration",value:t,unit:i});break}case"currentSpeed":{o.push({sources:s.getSourceDetails("system.details.currentSpeed")});const e=a.details.currentSpeed,t=a.details.currentSpeedOverland,[i]=ffd20.utils.convertDistance(e),r="metric"===ffd20.utils.getDistanceSystem(),l=r?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft;n.push({path:"@details.currentSpeed",value:i,unit:l});const[c]=ffd20.utils.convertDistance(t.speed),d=r?ffd20.config.measureUnitsShort.km:ffd20.config.measureUnitsShort.mi;n.push({path:"@details.currentSpeedOverland",value:c,unit:d});break}case"maxSpeed":{o.push({sources:s.getSourceDetails("system.details.maxSpeed")});const e=a.details.maxSpeed,t=a.details.maxSpeedOverland,[i]=ffd20.utils.convertDistance(e),r="metric"===ffd20.utils.getDistanceSystem(),l=r?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft;n.push({path:"@details.maxSpeed",value:i,unit:l});const[c]=ffd20.utils.convertDistance(t.speed),d=r?ffd20.config.measureUnitsShort.km:ffd20.config.measureUnitsShort.mi;n.push({path:"@details.maxSpeedOverland",value:c,unit:d});break}default:return super._getTooltipContext(e,t)}t.header=undefined,t.subHeader=undefined,t.details=[],t.paths=n,t.sources=o,t.notes=r??[]}activateListeners(e){super.activateListeners(e);const t=e[0];t.querySelector(".defenses .rollable[data-dtype='saving-throws']").addEventListener("click",this._onRollSavingThrow.bind(this)),t.querySelector(".defenses .rollable[data-dtype='defenses']").addEventListener("click",(e=>{e.preventDefault(),this.actor.displayDefenseCard({token:this.token})})),t.querySelector(".driver-skill .rollable[data-dtype='driverSkill']").addEventListener("click",(e=>{e.preventDefault();const t=fromUuidSync(this.actor.system.driver.uuid),s=this.actor.system.driver.skill;s?t.rollSkill(s,{token:this.token}):t.rollAbilityTest("wis",{token:this.token})})),t.querySelector(".select-driver")?.addEventListener("click",(async e=>{const t=await ffd20.utils.dialog.getActor({actors:game.actors.filter((e=>["character","npc"].includes(e.type)&&e.testUserPermission(game.user,CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)))}),s=game.actors.get(t);s&&await this.actor.update({"system.driver.uuid":s.uuid})})),t.querySelector(".driver-info .edit")?.addEventListener("click",(async e=>{fromUuidSync(this.actor.system.driver.uuid).sheet.render(!0)})),t.querySelector(".driver-info .delete")?.addEventListener("click",(async e=>{await this.actor.update({"system.driver.uuid":""})}))}_prepareItems(e){const t=e.items.filter((e=>"attack"===e.type)),s=Object.values(ffd20.config.sheetSections.combatlite).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of t){const t=s.find((t=>this._applySectionFilter(e,t)));t?(t.items??=[],t.items.push(e)):console.warn("Could not find a sheet section for",e.name)}e.attacks=s;const a=Object.values(ffd20.config.sheetSections.inventory).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));for(const e of a)e.interface={...e.interface,value:!0,actions:!1,noEquip:!0};const i=e.items.filter((e=>e.isPhysical));for(const e of i){const t=a.find((t=>this._applySectionFilter(e,t)));t&&(t.items??=[],t.items.push(e))}const n={key:"inventory",sections:a},o=this._filters.sections.inventory??new Set;for(const e of a)this._filterSection(n,e,o);e.inventory=a}get itemValueDenomination(){return ffd20.config.currency.standard}_updateObject(e,t){t=foundry.utils.expandObject(t);const s=["currentSpeed","maxSpeed","acceleration"];for(const e of s){const s=t.system.details[e];Number.isFinite(s)&&(t.system.details[e]=ffd20.utils.convertDistanceBack(s)[0])}return super._updateObject(e,t)}_computeDriverData(e,t){if(!e||this.actor.pack)return{};const s=fromUuidSync(e);if(!s)return{};let a=s.getRollData().abilities.wis.mod;try{a=s.getSkillInfo(t).mod}catch{}const i={};for(const e of s.allSkills){const t=s.getSkillInfo(e);i[e]=t.fullName}return{name:s.name,img:s.img,uuid:s.uuid,skills:i,skillBonus:a}}async _onRollSavingThrow(e){e.preventDefault();const t=await foundry.applications.api.DialogV2.wait({window:{title:game.i18n.localize("FFD20.Dialog.VehicleSave.Title")},content:`<p>${game.i18n.localize("FFD20.Dialog.VehicleSave.Message")}</p>`,buttons:[{label:game.i18n.localize("FFD20.SavingThrowFort"),action:"fort"},{label:game.i18n.localize("FFD20.SavingThrowRef"),action:"ref"}]});this.actor.rollSavingThrow(t,{token:this.token})}}const z=Object.freeze(Object.defineProperty({__proto__:null,ActorRestDialog,ActorSheetPF,ActorSheetPFCharacter,ActorSheetPFHaunt,ActorSheetPFNPC,ActorSheetPFNPCLite,ActorSheetPFNPCLoot,ActorSheetPFTrap,ActorSheetPFVehicle},Symbol.toStringTag,{value:"Module"})),{DocumentSheetV2:j,HandlebarsApplicationMixin:B}=foundry.applications.api;class SpeedEditor extends(B(NoAutocomplete(j))){static DEFAULT_OPTIONS={tag:"form",form:{handler:SpeedEditor._save,submitOnChange:!1,submitOnClose:!1,closeOnSubmit:!0},classes:["pf1-v2","speed-editor","standard-form"],window:{icon:"fa-solid fa-person-walking",minimizable:!1,resizable:!1},position:{width:400},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/speed-editor.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};async _prepareContext(){const e=this.document.system,t={};for(const s of ffd20.const.movementKeys){let a=e.speeds?.[s];a>0&&(a=ffd20.utils.convertDistance(a)[0]),t[s]=a}t.flyManeuverability=e.speeds.flyManeuverability||"average";const s="metric"===ffd20.utils.getDistanceSystem();return{speeds:t,item:this.document,system:e,units:game.i18n.localize(s?"FFD20.Distance.mShort":"FFD20.Distance.ftShort"),step:s?1.5:5,flyManeuverability:{clumsy:"FFD20.Movement.FlyManeuverability.Quality.clumsy",poor:"FFD20.Movement.FlyManeuverability.Quality.poor",average:"FFD20.Movement.FlyManeuverability.Quality.average",good:"FFD20.Movement.FlyManeuverability.Quality.good",perfect:"FFD20.Movement.FlyManeuverability.Quality.perfect"},buttons:[{type:"submit",label:"FFD20.Save",icon:"fa-solid fa-floppy-disk"}]}}get title(){const e=this.document.actor;let t=`${game.i18n.localize("FFD20.Movement.Label")}: ${this.document.name}`;return e&&(t+=" — "+e.name),t}static async _save(e,t,s){s=s.object;for(const[e,t]of Object.entries(s))Number.isNumeric(t)&&(s[e]=ffd20.utils.convertDistanceBack(t)[0]);this.document.update(s)}}const{ApplicationV2:H,HandlebarsApplicationMixin:U}=foundry.applications.api;class Widget_CategorizedItemPicker extends(U(H)){static DEFAULT_OPTIONS={tag:"form",classes:["pf1-v2","widget","categorized-item-picker"],window:{minimizable:!1,resizable:!0},position:{width:480,height:480},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/widgets/categorized-item-picker.hbs"}};constructor(e,t,s,a){super(e),this.categories=t,this.selected=a,this.callback=s,this._hiddenElems={}}async _prepareContext(){const e=[];for(const t of this.categories){if(t.hidden=!1===t.validity.item,t.hidden)continue;t.active=t.key===this.selected?.category;const s=[];for(const e of t.items)!1!==e.validity.item&&(t.validity.valid||(e.validity.category=!1,e.validity.valid=!1),s.push({category:t.key,active:this.selected?.item===e.key,...e}));t.hasChoices=s.some((e=>e.validity.valid)),t.hasVisibleChoices=s.some((e=>!1!==e.validity.item)),t.hasVisibleChoices&&t.hasChoices&&(t.items=s,e.push(t))}return{categories:e}}_onRender(e,t){super._onRender(e,t),this.element.querySelectorAll(".item").forEach((e=>e.addEventListener("click",this._onClickItem.bind(this)))),window.setTimeout((()=>{this._cancelCallback&&document.removeEventListener("click",this._cancelCallback),this._cancelCallback=this._onCancel.bind(this),document.addEventListener("click",this._cancelCallback)}),10)}async _onFirstRender(e,t){super._onFirstRender(e,t),await new Promise((e=>setTimeout(e,0))),this.element.querySelector(".window-content .pre-selected")?.scrollIntoView({block:"center",behaviour:"instant"})}_onClickItem(e){e.preventDefault();const t=e.currentTarget.dataset.value;this.callback(t),this.close()}_onCancel(e){e.preventDefault();let t=e.target;if(t!==this.element){for(;t.parentNode;){if(t===this.element)return;t=t.parentNode}this.close()}}async close(...e){return document.removeEventListener("click",this._cancelCallback),super.close(...e)}}class FlagSelector extends ActorTraitSelector{static DEFAULT_OPTIONS={form:{handler:FlagSelector._updateDocument}};constructor(e){e.hasCustom=!1,super(e);const t=foundry.utils.getProperty(e.document.toObject(),this.attribute)??{};Object.entries(t).forEach((([e,t])=>{t&&this.attributes.standard.add(e)}))}static async _updateDocument(e,t,s){delete this.document.apps[this.appId];const a=Object.keys(this.options.choices),i={};a.forEach((e=>{i[e]=this.attributes.standard.has(e)}));const n={[this.attribute]:i};this.document.update(n),this.close({force:!0})}}const decimalPlaces=e=>{let t=0;for(;(e/=10)>=1;)t++;return t};class ItemSheetPF extends ItemSheet{constructor(...e){super(...e),this.options.classes.push("type-"+this.item.type),this._actionUpdates=[];const t=this._tabs.find((e=>"links"===e.group));"class"===this.item.type?t.active="classAssociations":["feat","consumable","attack","equipment"].includes(this.item.type)&&(t.active="charges")}_activeEdits={};static EDIT_TRACKING=["system.description.value","system.description.unidentified"];static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{width:800,classes:["ffd20","sheet","item"],scrollY:[".tab",".buff-flags",".editor-content"],dragDrop:[{dragSelector:"li.action-part",dropSelector:".tab.details"},{dragSelector:".tab.changes li.change",dropSelector:null},{dragSelector:".tab.links .item-name",dropSelector:".tab.links .tab[data-group='links']"}],tabs:[{navSelector:"nav.tabs[data-group='primary']",contentSelector:"section.primary-body",initial:"description",group:"primary"},{navSelector:"nav.tabs[data-group='links']",contentSelector:"section.links-body",initial:"children",group:"links"},{navSelector:"nav.tabs[data-group='description']",contentSelector:"section.description-body",initial:"identified",group:"description"}]})}get template(){return`systems/ffd20/templates/items/${this.item.type}.hbs`}get title(){const e=this.actor;return e?`${super.title} – ${e.name}`:super.title}async _render(e,t){return ffd20.applications.utils.saveEditState(this,t),super._render(e,t)}async getData(){const e=game.settings.get("core","language"),t=this.item,s=t.system,a=t.actor,i=a?.system,n=!a,o=t.defaultAction,r=o?.getRollData()??t.getRollData(),l={cssClass:this.isEditable?"editable":"locked",item:t,document:t,name:t.name,system:s,itemType:game.i18n.localize(CONFIG.Item.typeLabels[t.type]),rollData:r,config:ffd20.config,owned:!!a,owner:t.isOwner,editable:this.isEditable,isGM:game.user.isGM,labels:t.getLabels({rollData:r,isolated:n}),canClassLink:ffd20.config.classAssociations.includes(t.type)&&!!r.classes,inContainer:t.inContainer??!1,tag:this.item._source.system.tag},c=t.isPhysical,d="weapon"===t.type,u="attack"===t.type,m=u&&"weapon"===t.subType,p=u&&"natural"===s.subType,h="class"===t.type,f="spell"===t.type,g="materia"===s.subType,y="implant"===t.type,b="equipment"===t.type;if(l.isPhysical=c,l.isWeapon=d,l.isAttack=u,l.isWeaponLike=m,l.isNaturalAttack=p,l.isClass=h,l.isSpell=f,l.isMateria=g,l.isImplant=y,l.isEquipment=b,l.canClassLink){l.hasClassLink=!!t.system.class,l.classes={};for(const[e,t]of Object.entries(r.classes))l.classes[e]=t.name}if(l.items=t.items?.map((e=>e.toObject()))??[],h&&(l.hitDieSizes=l.config.hitDieSizes.reduce(((e,t)=>(e[t]=game.i18n.format("FFD20.DieSize",{size:t}),e)),{}),l.isMythic="mythic"===this.item.subType,t.system.wealth)){const e={formula:t.system.wealth,item:this.item},s=Roll.defaultImplementation.safeRollSync(t.system.wealth,void 0,e,void 0,{maximize:!0})?.total,a=Roll.defaultImplementation.safeRollSync(t.system.wealth,void 0,e,void 0,{minimize:!0})?.total;s>0&&(e.wealth??={},e.wealth.average=(s+a)/2)}t.links.charges&&(l.inheritCharges=t.links.charges),l.isCharged=!["single","",void 0].includes(s.uses?.per),l.defaultChargeFormula=t.getDefaultChargeFormula(),l.limitedUsePeriods={...ffd20.config.limitedUsePeriods},t.isPhysical||delete l.limitedUsePeriods.single,l.isRechargeable=ffd20.config.limitedUsePeriodOrder.includes(s.uses?.per),l.isActivatable=!["race","class","container","loot"].includes(t.type),l.hasAction=t.hasAction,l.hasAttack=t.hasAttack,l.hasDamage=t.hasDamage,l.showBothDescriptions=l.isGM&&l.isPhysical,l.showUnidentifiedData=t.showUnidentifiedData,l.showIdentified=!t.showUnidentifiedData,l.isIdentified=!1!==t.system.identified,l.showIdentifiedData=l.showIdentified,l.showIdentified&&l.isPhysical&&(l.showBothDescriptions=!0),l.unchainedActionEconomy=game.settings.get("ffd20","unchainedActionEconomy"),l.showInCombat=["weapon","spell","equipment","consumable"].includes(t.type),"feat"===t.type&&["feat","classFeat","racial"].includes(t.subType)&&(l.showInCombat=!0),l.identify??={},l.identify.dc=0;const F=r.item.auraStrength;if(F&&(l.aura={strength:F,strengthLabel:ffd20.config.auraStrengths[F],school:ffd20.config.spellSchools[s.aura.school]||s.aura.school||game.i18n.localize("FFD20.Unknown")},l.identify.dc=15+r.item.cl,l.identify.curse=l.identify.dc+10),h&&(l.casting={types:ffd20.config.spellcasting.type,spells:ffd20.config.spellcasting.spells,progression:{high:"FFD20.High",med:"FFD20.Medium",low:"FFD20.Low"}},t.actor?l.hasSpellbook=Object.values(r.spells??{}).find((e=>!!e.class&&e.class===s.tag&&e.inUse)):l.hasSpellbook=!0),l.descriptionAttributes=[],l.isPhysical){l.descriptionAttributes.push({isNumber:!0,isRelative:!0,name:"system.quantity",label:game.i18n.localize("FFD20.Quantity"),value:s.quantity||0,decimals:0,id:"data-quantity",constraints:{min:0,step:1}}),l.descriptionAttributes.push({isNumber:!0,isRelative:!0,name:"system.weight.value",label:game.i18n.localize("FFD20.Weight"),value:s.weight.converted.total,fakeValue:!0,inputValue:s.weight.converted.value,decimals:2,tooltip:"weight",id:"data-weight-value",constraints:{min:0,step:.01}});const e=decimalPlaces(ffd20.config.currency.standardRate);l.isGM?l.descriptionAttributes.push({isNumber:!0,isRelative:!0,name:"system.price",label:game.i18n.localize("FFD20.Price"),value:t.getValue({sellValue:1}),decimals:e,tooltip:"price",id:"data-price",constraints:{min:0,step:.01}},{isNumber:!0,isRelative:!0,name:"system.unidentified.price",label:game.i18n.localize("FFD20.UnidentifiedPriceShort"),value:t.getValue({sellValue:1,forceUnidentified:!0}),decimals:e,tooltip:"unidprice",id:"data-unidentifiedPrice",constraints:{min:0,step:.01}}):l.showUnidentifiedData?l.descriptionAttributes.push({isNumber:!0,isRelative:!0,name:"system.unidentified.price",fakeName:!0,label:game.i18n.localize("FFD20.Price"),value:t.getValue({sellValue:1}),decimals:e,tooltip:"price",id:"data-price",constraints:{min:0,step:.01}}):l.descriptionAttributes.push({isNumber:!0,isRelative:!0,name:"system.price",label:game.i18n.localize("FFD20.Price"),value:t.getValue({sellValue:1}),decimals:e,tooltip:"price",id:"data-price",constraints:{min:0,step:.01}}),l.isImplant||(l.descriptionAttributes.push({isRange:!0,label:game.i18n.localize("FFD20.HPShort"),current:{isNumber:!0,isRelative:!0,name:"system.hp.value",value:s.hp?.value||0,constraints:{step:1,max:s.hp?.max||0}},max:{isNumber:!0,isRelative:!0,name:"system.hp.base",fakeValue:!0,inputValue:s.hp.base,value:s.hp?.max||0,constraints:{min:0,step:1}}}),l.descriptionAttributes.push({isNumber:!0,isRelative:!0,label:game.i18n.localize("FFD20.Hardness"),name:"system.hardness",decimals:0,value:s.hardness.total||0,fakeValue:!0,inputValue:this.item._source.system.hardness||0,constraints:{min:0,step:1}}));let a=!1;t.inContainer&&(!1===t.canEquip||l.isImplant)&&(a=!0),l.isImplant?l.descriptionAttributes.push({isBoolean:!0,name:"system.implanted",label:game.i18n.localize("FFD20.Implanted"),value:s.implanted,disabled:a}):("loot"===t.type&&ffd20.config.unequippableLoot.includes(this.item.subType)&&(a=!0),l.descriptionAttributes.push({isBoolean:!0,name:"system.equipped",label:game.i18n.localize("FFD20.Equipped"),value:s.equipped,disabled:a})),l.descriptionAttributes.push({isBoolean:!0,name:"system.carried",label:game.i18n.localize("FFD20.Carried"),value:s.carried||t.system.implanted||!1,disabled:t.inContainer||t.system.implanted||!1})}if((l.isPhysical||t.isQuasiPhysical)&&(l.isImplant||l.descriptionAttributes.push({isBoolean:!0,name:"system.broken",label:game.i18n.localize("FFD20.Broken"),value:s.broken,disabled:l.isNaturalAttack}),l.isImplant||l.descriptionAttributes.push({isBoolean:!0,name:"system.masterwork",label:game.i18n.localize("FFD20.Masterwork"),value:s.masterwork,disabled:l.isNaturalAttack})),l.isPhysical&&game.user.isGM&&l.descriptionAttributes.push({isBoolean:!0,name:"system.identified",label:game.i18n.localize("FFD20.Identified"),value:s.identified??!0,disabled:!game.user.isGM}),"feat"===t.type&&(l.isClassFeature="classFeat"===s.subType,l.isTemplate="template"===s.subType,l.abilityTypes=Object.fromEntries(Object.entries(ffd20.config.abilityTypes).map((([e,{short:t,long:s}])=>[e,`${s} (${t})`])))),s.classSkills||["class","feat","race"].includes(t.type)){const e=s.classSkills??{},t=foundry.utils.mergeObject(ffd20.config.skills,i?.skills??{},{inplace:!1});l.skills=Object.entries(t).map((([t,s])=>({...s,key:t,name:ffd20.config.skills[t]||s.name,isCS:!0===e[t]}))).sort(((e,t)=>e.name.localeCompare(t.name)))}u&&(l.materialCategories=this._prepareMaterialsAndAddons(t),l.alignmentTypes=this._prepareAlignments(s.alignments));const v=b?this.item.system.armor?.material:this.item.system.material;if(v?.addon?.length&&(l.materialAddons=v.addon.reduce(((e,t)=>(e[t]=!0,e)),{})??{}),m&&(s.weapon??={},s.weapon.category||="simple",s.weapon.type||="1h"),d||m){const e=d?s.subType:s.weapon.category,t=d?s.weaponSubtype:s.weapon.type;switch(e){case"siege":l.isRanged=["direct","indirect"].includes(t);break;case"heavy":case"firearm":l.isRanged=!0;break;default:l.isRanged="ranged"===t||!0===s.properties?.thr}}if(d||m){l.weaponCategories={types:{},subTypes:{}};for(const[e,t]of Object.entries(ffd20.config.weaponTypes))l.weaponCategories.types[e]=t._label;let e;if(d?e=s.subType:m&&(e=s.weapon?.category),e in ffd20.config.weaponTypes)for(const[t,s]of Object.entries(ffd20.config.weaponTypes[e]))t.startsWith("_")||(l.weaponCategories.subTypes[t]=s)}if(d&&(l.materialCategories=this._prepareMaterialsAndAddons(t),l.alignmentTypes=this._prepareAlignments(s.alignments)),b){l.equipmentCategories={types:{},subTypes:{}};for(const[e,t]of Object.entries(ffd20.config.equipmentTypes))l.equipmentCategories.types[e]=t._label;const e=s.subType;if(e in ffd20.config.equipmentTypes)for(const[t,s]of Object.entries(ffd20.config.equipmentTypes[e]))t.startsWith("_")||(l.equipmentCategories.subTypes[t]=s);g?(l.equipmentSlots=ffd20.config.equipmentSlots.materia,l.equipmentSlotted=ffd20.config.materia.Slot,l.materiaRarity=ffd20.config.materia.Rarity):l.equipmentSlots=ffd20.config.equipmentSlots.wondrous,l.hasMultipleSlots=t.hasSlots,l.hasSubCategory=["armor","shield","materia"].includes(e),["armor","shield"].includes(t.subType)&&(l.materialCategories=this._prepareMaterialsAndAddons(t)),l.variableHands=["wondrous","other"].includes(t.subType)}let D;if(y&&(l.subTypes=ffd20.config.implantTypes,l.isCybertech="cybertech"===t.subType,l.isCybertech&&(l.slots=ffd20.config.implantSlots.cybertech)),l.isSpell){let o=null;if(a){const e=s.spellbook;o=i?.attributes.spells?.spellbooks[e]}l.isSpontaneousLike=o?.spontaneous||o?.spellPoints?.useSystem||!1,l.isPreparedSpell=!l.isSpontaneousLike,l.usesSpellpoints=null!=o&&(o.spellPoints?.useSystem??!1),l.isAtWill=s.atWill,l.spellbooks=i?.attributes.spells.spellbooks??{},l.spellbookChoices=Object.fromEntries(Object.entries(l.spellbooks).filter((([e,{inUse:t}])=>t)).map((([e,{label:t}])=>[e,t])).sort((([t,s],[a,i])=>s.localeCompare(i,e)))),D=renderCachedTemplate("systems/ffd20/templates/items/headers/spell-header.hbs",await t.getDescriptionData({rollData:r,isolated:n}));const c={MDF:2,FDF:3};s.components??={};const d=s.components.divineFocus;d===c.MDF&&(s.components.material=!0),d===c.FDF&&(s.components.focus=!0);const u={...s.components};if(l.components=u,o){"divine"===o.kind?(d===c.FDF&&(u.focus=!1),d===c.MDF&&(u.material=!1)):u.divineFocus=!1}l.materialCategories=this._prepareMaterialsAndAddons(t),l.alignmentTypes=this._prepareAlignments(s.alignments)}if("buff"===this.item.type&&(l.noDurationTiming=!s.duration.units||"turn"===s.duration.units),h){l.isMythicPath="mythic"===s.subType;for(const[e,t]of Object.entries(s.savingThrows))t.label=ffd20.config.savingThrows[e];for(const[e,t]of Object.entries(s.fc))t.label=ffd20.config.favouredClassBonuses[e];l.isBaselikeClass=ffd20.config.favoredClassTypes.includes(s.subType),l.isRacialHD="racial"===s.subType,l.isNPCClass="npc"===s.subType,l.isPCClass=!l.isNPCClass&&!l.isRacialHD;const e=game.settings.get("ffd20","healthConfig");l.healthConfig=a?e.getClassHD(this.item,a.type):null}"consumable"===t.type&&(l.hasSpellType=["potion","scroll","wand","staff"].includes(t.subType)),l.canUseAmmo=!l.isNaturalAttack&&"spell"!==t.type,l.canUseAmmo&&t.system.ammo?.type&&(l.defaultAmmo=t.defaultAmmo,l.defaultAmmo&&(l.invalidDefaultAmmo=l.defaultAmmo.system.extraType!==t.system.ammo.type));const S={armorProf:ffd20.config.armorProficiencies,descriptors:ffd20.config.spellDescriptors,languages:ffd20.config.languages,multischool:ffd20.config.spellMultischools,subschool:ffd20.config.spellSubschools,weaponGroups:ffd20.config.weaponGroups,weaponProf:ffd20.config.weaponProficiencies,creatureTypes:ffd20.config.creatureTypes,creatureSubtypes:ffd20.config.creatureSubtypes};for(const[e,t]of Object.entries(S)){if(!s[e])continue;const a=foundry.utils.deepClone(s[e]);l[e]=a,a.selected={};for(const e of a.standard)a.selected[e]=t[e]||e;let i=1;for(const e of a.custom)a.selected["custom"+i++]=e;a.active=!foundry.utils.isEmpty(a.selected)}if(t.changes?.size){const e=ffd20.utils.internal.getBuffTargets("buffs",{actor:a,item:t});let s=!1;l.changes=t.changes?.map((t=>{const a=e[t.target],i=ffd20.config.bonusTypes[t.type],n={change:t,isValid:!!a,label:a?.label??t.target,isDeferred:t.isDeferred,isCustom:["skill","cl","sl","concn"].includes(t.target?.split(".")?.[0]),isSimple:t.isSimple,cssClass:t.cssClass,isAdd:"add"===t.operator,isSet:"set"===t.operator,...t,isValidType:!!i,typeLabel:i||t.type,id:t.id};return n.priority||=0,0!=n.priority&&(s=!0),n}))??[],l.changePriority=s}if(s.contextNotes){l.contextNotes=s.contextNotes;const e=ffd20.utils.internal.getBuffTargets("contextNotes",{actor:a,item:t});for(const t of l.contextNotes){const s=e[t.target];t.isValid=!!s,t.label=s?.label??t.target}}if(l.conditions=t.effects.filter((e=>!e.disabled&&e.statuses.size)).map((e=>Array.from(e.statuses))).flat().map((e=>ffd20.registry.conditions.get(e)?.name||e)),t.system.conditions?.length&&(l.causedConditions=t.system.conditions.map((e=>ffd20.registry.conditions.get(e)?.name||e)),l.conditions.push(...l.causedConditions)),l.conditions=new Set(l.conditions.sort(((e,t)=>e.localeCompare(t)))),l.distanceUnits=foundry.utils.deepClone(ffd20.config.distanceUnits),"spell"!==t.type)for(const e of["close","medium","long"])delete l.distanceUnits[e];if(s.attackNotes){const e=s.attackNotes;foundry.utils.setProperty(l,"notes.attack",e)}if(this._prepareItemFlags(l),l.actions=this.item.actions,l.distanceUnit=game.i18n.localize("imperial"===ffd20.utils.getDistanceSystem()?"FFD20.Distance.ftShort":"FFD20.Distance.mShort"),"race"===t.type){l.raceCreatureTypes=ffd20.utils.naturalSort(s.creatureTypes?.names??[]),l.raceCreatureSubtypes=ffd20.utils.naturalSort(s.creatureSubtypes?.names??[]),l.speeds=[];for(const e of["land","fly","swim","climb","burrow"]){const s=t.system.speeds?.[e]??0;if(0==s)continue;let a;if("fly"===e){a="FFD20.Movement.FlyManeuverability.Quality."+(t.system.speeds.flyManeuverability||"average")}l.speeds.push({value:ffd20.utils.convertDistance(s)[0],mode:e,label:"FFD20.Movement.Mode."+e,descriptor:a})}}l.showIdentifiedData&&this._prepareContentSource(l);const k=l.showIdentified?await this.item.getDescription({rollData:r,header:!1,isolated:n}):null;l.descriptionHTML={identified:null,unidentified:null};const C={secrets:l.owner,rollData:r,relativeTo:this.actor},w="<p class='placeholder'>"+game.i18n.localize("FFD20.NoDescription")+"</p>",T=k?ffd20.utils.enrichHTMLUnrolled(k,C):Promise.resolve();T.then((e=>l.descriptionHTML.identified=e||w));const _=s.description?.unidentified,P=_?ffd20.utils.enrichHTMLUnrolled(_,C):Promise.resolve();P.then((e=>l.descriptionHTML.unidentified=e||w));const A=D?TextEditor.enrichHTML(D,C):Promise.resolve();A.then((e=>l.topDescription=e));const I=s.description?.instructions,O=I?ffd20.utils.enrichHTMLUnrolled(I,C):Promise.resolve();O.then((e=>l.descriptionHTML.instructions=e));const x=this._prepareScriptCalls(l),M=await this._prepareLinks(l);return await Promise.all([T,P,A,O,x,M]),this.constructor.EDIT_TRACKING?.length&&(l._editorState=ffd20.applications.utils.restoreEditState(this,l)),l}_prepareContentSource(e){const t=this._getContentSources();if(0==t.length)return;const s=this._selectContentSource(t);e.bookSources={all:t,main:s},t.length>1&&(e.bookSources.extras=t.filter((e=>e!==s)))}_selectContentSource(e){return 0===e?.length?null:(e.sort(((e,t)=>t.datestamp-e.datestamp)),e[0])}_getContentSources(){return(this.item.system.sources??[]).map((e=>{const t=ffd20.registry.sources.get(e?.id)??{},{publisher:s,date:a,abbr:i,name:n,edition:o,url:r}=t;return{publisher:s,date:a,abbr:i,name:n,edition:o,url:r,...e,title:e.title||t.name,registry:t,datestamp:Date.parse(e.date||t.date)}}))}_prepareMaterialsAndAddons(e){const t={},s=[],a={};for(const i of ffd20.utils.naturalSort([...ffd20.registry.materials],"name"))if(i.basic)a[i.id]=i.name;else{if(!i.isAllowed(e))continue;i.addon?s.push({key:i.id,name:i.name}):t[i.id]=i.name}return{materials:t,addons:s,basics:a}}_prepareAlignments(e){const t={};return Object.keys(ffd20.config.damageResistances).forEach((e=>{["magic","epic"].includes(e)||(t[e]=ffd20.config.damageResistances[e])})),{choices:t,values:foundry.utils.deepClone(e)}}async _prepareLinks(e){e.links={list:[]},["feat","consumable","attack","equipment"].includes(this.item.type)&&e.links.list.push({id:"charges",label:game.i18n.localize("FFD20.LinkTypeCharges"),help:game.i18n.localize("FFD20.LinkHelpCharges"),items:[]}),e.isClass&&e.links.list.push({id:"classAssociations",label:game.i18n.localize("FFD20.LinkTypeClassAssociations"),help:game.i18n.localize("FFD20.LinkHelpClassAssociations"),fields:{level:{type:"Number",label:game.i18n.localize("FFD20.Level")}},items:[]}),e.links.list.push({id:"children",label:game.i18n.localize("FFD20.LinkTypeChildren"),help:game.i18n.localize("FFD20.LinkHelpChildren"),items:[]}),e.links.list.push({id:"supplements",label:game.i18n.localize("FFD20.LinkTypeSupplements"),help:game.i18n.localize("FFD20.LinkHelpSupplements"),fields:{},items:[]});const t=this.item,s=t.actor;for(const a of e.links.list){const e=t.system.links?.[a.id]||[];for(let t=0;t<e.length;t++){const i=foundry.utils.deepClone(e[t]);i.index=t;const n=ffd20.utils.internal.fromUuid(i.uuid,s);n||(i.broken=!0),i.img=n?.img||Item.implementation.getDefaultArtwork(n),i.name||=n?.name,a.items.push(i)}}}_prepareItemFlags(e){const t=e.system.flags??{};e.flags??={},e.flags.boolean=t.boolean??{},e.flags.dictionary=t.dictionary??{}}async _prepareScriptCalls(e){e.scriptCalls=null;const t=ffd20.registry.scriptCalls.filter((e=>!!e.itemTypes.includes(this.item.type)&&!(!0===e.hidden&&!game.user.isGM)));if(!t.length)return;e.scriptCalls={};const s=this.item.scriptCalls??[];for(const{id:a,name:i,info:n}of t)e.scriptCalls[a]={name:i,tooltip:n,items:s.filter((e=>e.category===a&&!e.hide)),dataset:{category:a}}}async _updateObject(e,t){t=foundry.utils.expandObject(t);const s=this.item.toObject(),a=t.system,i=a.links;if(i){const e=s.system?.links??{};for(const[t,s]of Object.entries(i))if(!Array.isArray(s)){i[t]=foundry.utils.deepClone(e[t]??[]);for(const[e,a]of Object.entries(s))i[t][e]=foundry.utils.mergeObject(i[t][e]??{},a)}}const n=e.target?.name;function relativeInput(t,{min:i=-1/0,max:o=1/0,current:r,quantity:l=!1,decimals:c=0}={}){let d,u=foundry.utils.getProperty(a,t);if(void 0===u)return null;if(u=u.normalize("NFKD"),n!=="system."+t)return foundry.utils.setProperty(a,t,void 0),null;if(u.match(/^(\+|-)([.\d]+)/)){const e=RegExp.$1;let a=parseFloat(RegExp.$2);"-"===e&&(a=-a),r??=foundry.utils.getProperty(s.system,t),d=r+a}else u.match(/^=?-?\d*(\.\d+)?$/)?d=parseFloat(u.replace(/^=/,"")):""===u?d=0:(d=0,e.target.setCustomValidity(game.i18n.localize("FFD20.Warning.InvalidInput")));return foundry.utils.setProperty(a,t,ffd20.utils.limitPrecision(Math.clamp(d,i,o),c)),d}if(this.item.isPhysical){if(a.weight){if(void 0!==a.weight?.value){const e=relativeInput("weight.value",{current:ffd20.utils.convertWeight(s.system.weight?.value??0),decimals:2,quantity:!0});a.weight.value=null===e?void 0:ffd20.utils.convertWeightBack(a.weight.value/this.item.getWeightMultiplier())}if(void 0!==a.weight?.reduction?.value){const e=relativeInput("weight.reduction.value",{min:0,decimals:2,current:ffd20.utils.convertWeight(s.system.weight?.reduction?.value??0)});a.weight.reduction.value=null===e?void 0:ffd20.utils.convertWeightBack(a.weight.reduction.value)}}const e=["currency.pp","currency.gp","currency.sp","currency.cp","quantity"];for(const t of e)relativeInput(t,{min:0});const t=decimalPlaces(ffd20.config.currency.standardRate);relativeInput("price",{min:0,quantity:!0,decimals:t}),relativeInput("unidentified.price",{min:0,quantity:!0,decimals:t}),relativeInput("hp.value",{min:0,current:this.item.system.hp?.value}),relativeInput("hp.base",{min:1}),relativeInput("hardness",{min:0}),relativeInput("weight.reduction.percent",{min:0,max:100,decimals:0});const i=a.hp?.value,o=i??s.system.hp?.value??0,r=a.hp?.base,l=Math.max(1,r??s.system.hp?.base??1);if("system.hp.value"===n){const e=this.item.system.hp?.max||0;Number.isFinite(i)&&o>e&&foundry.utils.setProperty(a,"hp.base",l+(o-e))}}const o="equipment"===this.item.type?a.armor?.material:a.material;if(o?.addon&&(o.addon=Object.entries(o.addon).filter((([e,t])=>t)).map((([e])=>e))),t.system.uses?.maxFormula&&t.system.uses?.maxFormula!==(this.item.system.uses?.maxFormula||""))try{const e=new ffd20.dice.RollPF(t.system.uses.maxFormula,this.item.getRollData()).evaluateSync();t.system.uses.value??=e.total}catch(e){console.error("Max charges formula is invalid:",t.system.uses?.maxFormula,"\n",e)}return super._updateObject(e,t)}_onHoverTooltip(e){const t=[];switch(e.target.dataset.tooltipType){case"weight":this._onHoverWeightTooltip(e,t);break;case"price":this._onHoverPriceTooltip(e,t);break;case"unidprice":this._onHoverPriceTooltip(e,t,!1)}return t.join("<br>")}_onHoverWeightTooltip(e,t){const s="metric"===ffd20.utils.getWeightSystem()?ffd20.config.weightUnitsShort.kg:ffd20.config.weightUnitsShort.lbs,a=`${ffd20.utils.limitPrecision(this.item.system.weight.converted.value,3)} ${s}`;t.push(game.i18n.format("FFD20.StackDetails.Base",{value:a}))}_onHoverPriceTooltip(e,t,s=!0){let a=this.item.getValue({sellValue:1,single:!0,inLowestDenomination:!0,forceUnidentified:!s});a=Math.floor(a);const i=ffd20.utils.currency.split(a),n=[];for(const[e,t]of Object.entries(i))if(t>0){const s=ffd20.utils.limitPrecision(t,2);n.push(game.i18n.format("FFD20.Currency.Inline."+e,{value:s}))}0==n.length&&n.push(game.i18n.format("FFD20.Currency.Inline."+ffd20.config.currency.standard,{value:0})),t.push(game.i18n.format("FFD20.StackDetails.Base",{value:ffd20.utils.i18n.join(n)}))}async _validateFormula(e){const t=e.value;if(!t)return;let s;try{s=Roll.create(t||"0"),await s.evaluate({allowInteractive:!1})}catch(t){return e.dataset.tooltip=t.message,e.classList.add("invalid"),void e.setCustomValidity(t.message)}e.classList.contains("simple")?s.isDeterministic&&!t.includes("@")||(e.dataset.tooltip="FFD20.Warning.FormulaMustBeSimple",e.classList.add("invalid"),e.setCustomValidity(game.i18n.localize("FFD20.Warning.FormulaMustBeSimple"))):e.classList.contains("roll")||s.isDeterministic||(e.dataset.tooltip="FFD20.Warning.FormulaMustBeDeterministic",e.classList.add("invalid"),e.setCustomValidity(game.i18n.localize("FFD20.Warning.FormulaMustBeDeterministic")))}activateListeners(e){super.activateListeners(e);const t=!!this.actor,s=e[0];if(this.item.isPhysical)for(const e of s.querySelectorAll(".details-tooltip"))e.addEventListener("pointermove",(t=>{const s=this._onHoverTooltip(t);if(!s)return;const a=document.createElement("template");a.innerHTML=s,game.tooltip.activate(e,{content:a.content,direction:TooltipManager.TOOLTIP_DIRECTIONS.RIGHT,cssClass:"ffd20"})}),{passive:!0}),e.addEventListener("pointerleave",(e=>game.tooltip.deactivate()),{passive:!0});if(e.find(".actions .item-list .item .item-name").on("contextmenu",this._onActionEdit.bind(this)).on("click",this._onActionSummary.bind(this)),e.find(".actions .action-controls a").on("click",this._onActionControl.bind(this)),e.find(".tab.description .instructions .controls a.html-editor").on("click",this._onOpenTextEditor.bind(this)),e.find("a.help-browser[data-url]").click(this._openHelpBrowser.bind(this)),e.find(".entry-selector").on("click",this._onEntrySelector.bind(this)),e.find(".trait-selector").on("click",this._onTraitSelector.bind(this)),e.find(".flag-selector").on("click",this._onFlagSelector.bind(this)),e.find(".content-source .control a.edit").click((()=>ffd20.applications.ContentSourceEditor.open(this.item,{editable:this.isEditable}))),t&&!0!==this.item.system.proficient&&["weapon","equipment","attack"].includes(this.item.type)&&this.item.isProficient){const t=e.find("input[name='system.proficient']")[0];t&&(t.indeterminate=!0)}if(this.item.isPhysical&&this.item.isBroken&&!0!==this.item.system.broken){const t=e.find("input[name='system.broken']")[0];t&&(t.indeterminate=!0,t.dataset.tooltip="FFD20.AutoBroken")}e.find(".script-calls .item-list .item").contextmenu(this._onScriptCallEdit.bind(this)),e.find(".script-calls .item-control").click(this._onScriptCallControl.bind(this)),e.find("input.formula").each((async(e,t)=>this._validateFormula(t))),e.find(".tab[data-tab='links'] .links-item .item-name .source-item").on("click",this._openLinkedItem.bind(this)),e.find('a[data-action="browse"]').click(this._onOpenCompendiumBrowser.bind(this)),e.find(".context-note-control").click(this._onNoteControl.bind(this)),e.find(".context-note .context-note-target").click(this._onNoteTargetControl.bind(this)),e.find(".tab.changes .controls a.add-change").click(this._onCreateChange.bind(this)),e.find(".card-notes .controls a").click(this._onCardNoteControl.bind(this)),e.find(".link-control").click(this._onLinkControl.bind(this)),this.isEditable?(e.find("textarea, input[type='text']").on("drop",this._onTextAreaDrop.bind(this)),s.querySelectorAll(".tab.changes .changes .change[data-change-id]").forEach((e=>{e.querySelector(".controls a.menu").addEventListener("pointerenter",this._onOpenChangeMenu.bind(this),{passive:!0}),e.addEventListener("contextmenu",this._onEditChange.bind(this))})),["weapon"].includes(this.item.type)&&e.find("button[name='create-attack']").click(this._createAttack.bind(this)),"class"===this.item.type&&e.find("button[name='create-spellbook']").click(this._createSpellbook.bind(this)),e.find(".item-selector").click(this._onItemSelector.bind(this)),e.find('*[data-action="input-text"]').click((e=>this._onInputText(e))),e.find(".select-on-click").click(this._selectOnClick.bind(this)),e.find(".speed-editor").click(this._onSpeedEdit.bind(this)),e.find(".action-parts .item-uses span.text-box.value").on("wheel",this._setActionUses.bind(this)).on("click",(e=>{this._onSpanTextInput(e,this._setActionUses.bind(this))})),e.find(".item-link[data-item-id]").on("contextmenu",(e=>{e.preventDefault();const t=e.currentTarget.dataset.itemId,s=this.actor.items.get(t);s?.sheet.render(!0,{focus:!0})})),e.find(".script-calls .item-list[data-category]").on("drop",this._onScriptCallDrop.bind(this))):e.find("span.text-box").addClass("readonly")}_onSpanTextInput(e,t=null){const s=e.currentTarget,a=s.parentElement,i=document.createElement("INPUT");i.type="text",s.dataset?.dtype&&(i.dataset.dtype=s.dataset.dtype);let n=s.innerText;s.classList.contains("placeholder")&&(n="");const o=s.classList.contains("no-value-cap"),r=s.getAttribute("name");let l;if(r&&(i.setAttribute("name",r),n=foundry.utils.getProperty(this.item,r)??"","string"!=typeof n&&(n=n.toString()),r.endsWith(".value")&&!o)){const e=r.replace(/\.value$/,".max");l=foundry.utils.getProperty(this.item,e)}i.value=n;const c=["placeholder","direct","allow-relative"];for(const e of s.classList)c.includes(e)||i.classList.add(e);const d=s.classList.contains("allow-relative"),u=parseFloat(s.dataset.clearValue||"0");a.replaceChild(i,s);let m=!1;i.addEventListener("keypress",(e=>{if("Enter"===e.key){if(m=!0,d){const e=ffd20.utils.internal.adjustNumberByStringCommand(parseFloat(n),i.value,l,u);i.value=e}i.value.toString()===n.toString()?this.render():"function"==typeof t&&t(e)}})),i.addEventListener("focusout",(e=>{if(!m){if(m=!0,d&&parseFloat(n)!==parseFloat(i.value)){const e=ffd20.utils.internal.adjustNumberByStringCommand(parseFloat(n),i.value,l,u);i.value=e}i.value.toString()===n.toString()?this.render():"function"==typeof t&&t(e)}})),i.focus(),i.select()}_mouseWheelAdd(e,t){const s="INPUT"===t.tagName,{originalEvent:a}=e;if(a&&a instanceof WheelEvent&&a.ctrlKey){e.preventDefault();const i=parseFloat(s?t.value:t.innerText)||0;if(Number.isNaN(i))return;const n=-Math.sign(a.deltaY),o=parseFloat(t.dataset.wheelStep)||1;s?t.value=i+o*n:t.innerText=""+(i+o*n)}}_setActionUses(e){e.originalEvent instanceof MouseEvent||e.preventDefault();const t=e.currentTarget,s=t.closest(".item[data-action-id]").dataset.actionId,a=this.item.actions.get(s);this._mouseWheelAdd(e,t);const i="INPUT"===t.tagName?Number(t.value):Number(t.innerText);this.setActionUpdate(a.id,"uses.self.value",i),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(()=>this._updateActions()),{passive:!0,once:!0}):this._updateActions()}setActionUpdate(e,t,s){let a=this._actionUpdates.find((t=>t._id===e));a||(a={_id:e},this._actionUpdates.push(a)),a[t]=s}async _updateActions(){const e=this._actionUpdates;this._actionUpdates=[];for(const t of e){const e=this.item.actions.get(t._id);e?await e.update(t):console.error("Item update for non-existing item:",t._id,t)}}_onOpenCompendiumBrowser(e){e.preventDefault();const t=e.currentTarget.dataset.category;ffd20.applications.compendiums[t].render(!0,{focus:!0})}async _onScriptCallControl(e){e.preventDefault();const t=e.currentTarget,s=this.item.scriptCalls?this.item.scriptCalls.get(t.closest(".item")?.dataset.itemId):null,a=t.closest(".item-list").dataset.category;if(t.classList.contains("item-create")){await this._onSubmit(e,{preventRender:!0});const t=await ffd20.components.ItemScriptCall.create([{category:a,type:"script"}],{parent:this.item});t?.forEach((e=>e.edit()))}else{if(s&&t.classList.contains("item-delete")){const t={"system.scriptCalls":(this.item.system.scriptCalls||[]).filter((e=>e._id!==s.id))};return this._updateObject(e,this._getSubmitData(t))}s&&t.classList.contains("item-edit")?s.edit():s&&t.classList.contains("item-hide")&&(await this._onSubmit(e,{preventRender:!0}),s.update({hidden:!s.hidden}))}}_onScriptCallEdit(e){e.preventDefault();const t=e.currentTarget,s=this.item.scriptCalls?.get(t.dataset.itemId);s?.edit({editable:this.isEditable})}async _onTextAreaDrop(e){const t=TextEditor.getDragEventData(e.originalEvent);if(!t)return;const s=e.currentTarget;if(s.disabled||s.readOnly)return;e.preventDefault(),e.stopPropagation();const a=await TextEditor.getContentLink(t,{relativeTo:this.actor});if(a)return s.value=s.value?s.value+"\n"+a:a,this._onSubmit(e);ui.notifications.warn("FFD20.Error.InvalidContentLinkDrop",{localize:!0})}async _onScriptCallDrop(e){e.preventDefault();const t=TextEditor.getDragEventData(e.originalEvent);if(!t)return;const{uuid:s,type:a}=t;if("Macro"===a&&s){await this._onSubmit(e,{preventRender:!0});const t=e.currentTarget.dataset.category;return ffd20.components.ItemScriptCall.create([{type:"macro",value:s,category:t,name:"",img:""}],{parent:this.item})}}_openHelpBrowser(e){e.preventDefault();const t=e.currentTarget;ffd20.applications.helpBrowser.openUrl(t.dataset.url)}_canDragStart(e){return!0}_onDragStart(e){const t=e.target,s=t.dataset.actionId;if(s){const t=this.item.actions.get(s),a={type:"pf1Action",uuid:t.uuid,actionId:t.id,data:t.toObject()};return void e.dataTransfer.setData("text/plain",JSON.stringify(a))}const a=t.dataset.changeId;if(a){const t=this.item.changes.get(a),s={type:"pf1Change",data:t.toObject(),changeId:a,uuid:t.uuid};e.dataTransfer.setData("text/plain",JSON.stringify(s))}else if(t.matches(".links-item .item-name")){const s=t.closest("[data-uuid]"),a=s.closest("[data-tab]")?.dataset.tab,i=ffd20.utils.internal.uniformUuid(s.dataset.uuid,this.actor),n=Number(s.dataset.index),o=this.item.system.links?.[a]?.[n],r={type:"Item",uuid:i,pf1Link:{}};return o&&(r.pf1Link.level=o.level),void e.dataTransfer.setData("text/plain",JSON.stringify(r))}}_canDragDrop(){return this.isEditable}async _onDrop(e){if(!this.isEditable)return;e.preventDefault(),e.stopPropagation();const t=TextEditor.getDragEventData(e),{type:s,uuid:a}=t;if(!s)return;const i=this.item,n=a?await fromUuid(a):null;switch(s){case"pf1Action":{let s,o;n instanceof Item?(foundry.utils.logCompatibilityWarning("ItemSheetPF drop handler accepting Actions with UUID pointing to the Item is deprecated, please provide UUID to the Action itself",{since:"PF1 v11",until:"PF1 v12"}),s=t.data,o=n):(s=n.toObject(),o=n.item);const r=s._id||t.actionId;if(this.activateTab("details",{group:"primary"}),o!==i)return delete s._id,ffd20.components.ItemAction.create([s],{parent:this.item});{const t=e.target.closest(".item[data-action-id]")?.dataset.actionId;if(!t)return void console.debug("Action dropped at an indeterminate location; ignoring");if(t===r)return void console.debug(`Action [${a}] dropped onto itself; ignoring`);const s=i.toObject().system.actions??[];let n;n=t?s.indexOf(s.find((e=>e._id===t))):s.length-1;const o=s.indexOf(s.find((e=>e._id===r))),[l]=s.splice(o,1);s.splice(n,0,l),await this.item.update({"system.actions":s})}break}case"pf1Change":return this._onChangeDrop(e,t);case"Item":e.target.closest(".tab.links .tab[data-group='links']")&&this._onLinksDrop(e,t);break;case"pf1ContentSourceEntry":{const s=t.data,a=await fromUuid(t.uuid);if(!a)return;if(a===this.item)return;const i=this.item.toObject().system.sources??[];if(s.id&&i.some((e=>s.id?e.id===s.id:e.title===s.title)))return void ui.notifications.warn("FFD20.ContentSource.Errors.DuplicateID",{localize:!0});i.push(s),await this.item.update({"system.sources":i}),e.shiftKey||ffd20.applications.ContentSourceEditor.open(this.item);break}default:ui.notifications.warn(game.i18n.format("FFD20.Warning.InvalidItemSheetDrop",{type:s}))}}async _onLinksDrop(e,t){const s=e.target.closest("[data-tab]").dataset.tab;if(!t.type)throw Error("Invalid drop data received");const a=await fromUuid(t.uuid);if(!(a&&a instanceof Item))throw Error("UUID did not resolve to valid item: "+t.uuid);const i={};switch(s){case"classAssociations":{const e=t.pf1Link?.level;Number.isNumeric(e)&&(i.level=e);break}}await this.item.createItemLink(s,a,i)}async _onChangeDrop(e,t){const s=this.item,a=t.uuid?await fromUuid(t.uuid):null;let i,n;a instanceof Item?(foundry.utils.logCompatibilityWarning("ItemSheetPF drop handler accepting Changes with UUID pointing to the Item is deprecated, please provide UUID to the Change itself",{since:"PF1 v11",until:"PF1 v12"}),i=t.data,n=a):(i=a.toObject(),n=a.parent);const o=i._id||t.changeId;if(this.activateTab("changes",{group:"primary"}),n!==s)return delete i._id,ffd20.components.ItemChange.create([i],{parent:s});{const a=e.target.closest(".change[data-change-id]")?.dataset.changeId;if(!a)return void console.debug("Change dropped at an indeterminate location; ignoring");if(o===a)return void console.debug(`Change [${t.uuid}] dropped onto itself; ignoring`);const i=s.toObject().system.changes??[],n=i.findSplice((e=>e._id===o));if(!n)return;const r=i.findIndex((e=>e._id===a));if(r>=0)return i.splice(r,0,n),s.update({"system.changes":i})}}_onTraitSelector(e){if(e.preventDefault(),!this.isEditable)return;const t=e.currentTarget,s={name:t.dataset.for,title:game.i18n.localize(t.dataset.title),subject:t.dataset.options,choices:ffd20.config[t.dataset.options],hasCustom:"false"!==t.dataset.hasCustom};switch(t.dataset.options){case"conditions":s.choices=ffd20.registry.conditions.getLabels();break;case"multischool":{const e=t.dataset.school,a=new Set([...ffd20.config.spellMultischoolsMap[e],...this.item.system.multischool.value]).reduce(((e,t)=>({...e,[t]:ffd20.config.spellMultischools[t]})),{});s.choices=a;break}case"subschool":{const e=t.dataset.school,a=new Set([...ffd20.config.spellSubschoolsMap[e],...this.item.system.subschool.base]).reduce(((e,t)=>({...e,[t]:ffd20.config.spellSubschools[t]})),{});s.choices=a;break}}new ActorTraitSelector({...s,document:this.item}).render(!0)}_onFlagSelector(e){if(e.preventDefault(),!this.isEditable)return;const t=e.currentTarget,s={name:t.dataset.for,title:game.i18n.localize(t.dataset.title),subject:t.dataset.options,choices:ffd20.config[t.dataset.options]};new FlagSelector({...s,document:this.item}).render(!0)}_onSpeedEdit(e){e.preventDefault();const t=Object.values(ui.windows).find((e=>e instanceof SpeedEditor&&e.document===this.item));t?(t.render(!0),t.bringToFront()):new SpeedEditor({document:this.item}).render({force:!0})}async _onActionSummary(e){e.preventDefault();const t=e.target.closest(".item[data-action-id]"),s=this.item.actions.get(t.dataset.actionId),a=s.getRollData(),{actionDescription:i,properties:n}=await s.getChatData({chatcard:!1,rollData:a});if(t.classList.contains("expanded")){const e=t.querySelector(".action-summary");$(e).slideUp(200,(()=>e.remove()))}else{const e={description:i,properties:n};let s=await renderTemplate("systems/ffd20/templates/items/parts/item-action-summary.hbs",e);s=await ffd20.utils.enrichHTMLUnrolled(s,{rollData:a,secrets:this.item.isOwner});const o=$(s);o.hide(),t.append(...o),o.slideDown(200)}t.classList.toggle("expanded")}async _openLinkedItem(e){e.preventDefault();const t=e.target.closest(".links-item[data-uuid],.links-item[data-item-id]"),{uuid:s}=t.dataset;(await fromUuid(s,{relative:this.actor})).sheet.render(!0,{focus:!0})}async _onActionControl(e){e.preventDefault(),e.stopPropagation();const t=e.currentTarget,getUniqueActionName=e=>{let t=e=e.replace(/\s*\(\d+\)$/,"");const s=new Set(this.item.actions?.map((e=>e.name))??[]);let a=1;for(;s.has(t);)t=`${e} (${a++})`;return t};if(t.classList.contains("edit-action"))return this._onActionEdit(e);if(t.classList.contains("add-action")){await this._onSubmit(e,{preventRender:!0});const t={name:getUniqueActionName(["weapon","attack"].includes(this.item.type)?game.i18n.localize("FFD20.Attack"):game.i18n.localize("FFD20.Use"))};(await ffd20.components.ItemAction.create([t],{parent:this.item})).forEach((e=>e.sheet.render(!0)))}else if(t.classList.contains("delete-action")){const s=t.closest(".item[data-action-id]"),a=this.item.actions.get(s.dataset.actionId);!0===(!!getSkipActionPrompt()||await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.format("FFD20.DeleteActionTitle",{name:a.name})},classes:["pf1-v2","delete-action"],content:`<p>${game.i18n.format("FFD20.DeleteActionConfirmation",{name:this.item.name})}</p>`,rejectClose:!1,modal:!0}))&&(await this._onSubmit(e,{preventRender:!0}),a.delete())}else if(t.classList.contains("duplicate-action")){const s=t.closest(".item[data-action-id]"),a=this.item.toObject().system.actions??[],i=foundry.utils.deepClone(a.find((e=>e._id===s.dataset.actionId))??{});i.name=getUniqueActionName(i.name),i._id=foundry.utils.randomID(16),a.push(i);const n={"system.actions":a};await this._updateObject(e,this._getSubmitData(n)),this.item.actions.get(i._id)?.sheet.render(!0)}}async _onActionEdit(e){e.preventDefault(),e.stopPropagation();const t=e.target.closest(".item[data-action-id]");this.item.actions.get(t.dataset.actionId).sheet.render(!0)}async _onOpenTextEditor(e){if(e.preventDefault(),!this.isEditable)throw Error("Document is not editable!");new ffd20.applications.HTMLEditor({document:this.item,path:e.target.dataset.path,window:{title:`${game.i18n.localize("FFD20.Instructions")} – ${this.item.name}`}}).render(!0)}async _onOpenChangeMenu(e){const t=e.target,s=t.dataset.changeId;if(!s)return;const a=document.createElement("div");a.innerHTML=await renderTemplate("systems/ffd20/templates/items/parts/item-change-tooltip.hbs",{changeId:s}),a.querySelector(".duplicate").addEventListener("click",(e=>this._onDuplicateChange(e,t))),a.querySelector(".delete").addEventListener("click",(e=>this._onDeleteChange(e,t))),a.querySelector(".edit").addEventListener("click",(e=>this._onEditChange(e,t,!0))),document.querySelector(".locked-tooltip.ffd20.change-"+s)||await game.tooltip.activate(t,{content:a,locked:!0,direction:TooltipManager.TOOLTIP_DIRECTIONS.LEFT,cssClass:"ffd20 change-menu change-"+s})}_onEditChange(e,t=!1){e.preventDefault();const s=e.target,a=s.closest("[data-change-id]").dataset.changeId,i=this.item.changes.get(a);if(i)return t&&game.tooltip.dismissLockedTooltip(s.closest(".locked-tooltip")),void ffd20.applications.ChangeEditor.wait({change:i,document:this.item})}_onDuplicateChange(e){e.preventDefault();const t=e.target,s=t.dataset.changeId;if(!s)return;const a=(this.item.toObject().system.changes??[]).find((e=>e._id===s));return a?(game.tooltip.dismissLockedTooltip(t.closest(".locked-tooltip")),delete a._id,ffd20.components.ItemChange.create([a],{parent:this.item})):void 0}_onDeleteChange(e){e.preventDefault();const t=e.target,s=t.dataset.changeId;game.tooltip.dismissLockedTooltip(t.closest(".locked-tooltip")),this.item.changes.get(s)?.delete()}async _onCreateChange(e){e.preventDefault();const[t]=await ffd20.components.ItemChange.create([{modifier:"untyped"}],{parent:this.item});t&&ffd20.applications.ChangeEditor.wait({change:t,document:this.item})}async _onNoteControl(e){e.preventDefault();const t=e.currentTarget;if(t.classList.contains("add-note")){const t=this.item.toObject().system.contextNotes||[];t.push((new ffd20.components.ContextNote).toObject());const s={"system.contextNotes":t};return this._updateObject(e,this._getSubmitData(s))}if(t.classList.contains("delete-note")){const s=t.closest(".context-note"),a=this.item.toObject().system.contextNotes||[];a.splice(Number(s.dataset.note),1);const i={"system.contextNotes":a};return this._updateObject(e,this._getSubmitData(i))}}_onNoteTargetControl(e){e.preventDefault();const t=e.currentTarget.closest(".context-note"),s=Number(t.dataset.note),a=this.item.system.contextNotes[s],i=ffd20.utils.internal.getBuffTargetDictionary("contextNotes",{actor:this.item.actor,item:this.item}),n=new Set(["skill"]),o=game.settings.get("core","language");for(const e of i)n.has(e.key)&&e.items.sort(((e,t)=>e.label.localeCompare(t.label,o)));const r=a?.target?.split(".")[0],l=ffd20.config.contextNoteTargets[r]?.category??r;new Widget_CategorizedItemPicker({window:{title:"FFD20.Application.ContextNoteTargetSelector.Title"}},i,(e=>{if(e){const t={};t[`system.contextNotes.${s}.target`]=e,this.item.update(t)}}),{category:l,item:a?.target}).render(!0)}async _onLinkControl(e){e.preventDefault();const t=e.currentTarget;if(t.classList.contains("delete-link")){const{type:s,uuid:a,index:i}=t.dataset,n=this.item.toObject().system.links?.[s]??[],o=n.splice(Number(i),1);if(o.uuid&&o.uuid!==a)throw Error("Link deletion UUID mismatch");Hooks.callAll("pf1DeleteItemLink",this.item,o,s);const r={"system.links":{[s]:n}};return this._updateObject(e,this._getSubmitData(r))}}_onInputText(e){e.preventDefault();const t=e.target;t.readOnly=!1;const{inputValue:s}=t.dataset;let a=s??foundry.utils.getProperty(this.item,t.name);const i=t.value;t.value=a,t.select(),t.addEventListener("blur",(()=>{"number"==typeof a&&(a=a.toString()),a===t.value&&(t.readOnly=!0,t.value=i);const e=document.getSelection();e.anchorNode!==t&&e.anchorNode!==t.parentElement||e.removeAllRanges()}),{once:!0,passive:!0})}async _createAttack(e){if(!this.actor)throw Error(game.i18n.localize("FFD20.Error.ItemNoOwner"));await this._onSubmit(e,{preventRender:!0});const t=this.item,s=ffd20.documents.item.ItemAttackPF.fromItem(t);s.system.showInQuickbar=t.system.showInQuickbar;const a=await Item.implementation.create(s,{parent:this.actor});if(!a)throw Error("Failed to create attack from weapon");await t.update({"system.showInQuickbar":!1}),await t.createItemLink("children",a),ui.notifications.info(game.i18n.format("FFD20.NotificationCreatedAttack",{item:t.name}))}async _createSpellbook(e){if(e.preventDefault(),null==this.item.actor)throw Error(game.i18n.localize("FFD20.Error.ItemNoOwner"));await this._onSubmit(e,{preventRender:!0}),await this.item.actor.createSpellbook({...this.item.system.casting,class:this.item.system.tag}),this.render()}_onEntrySelector(e){e.preventDefault();const t=e.currentTarget,s={name:t.dataset.for,title:t.dataset.title,flag:"true"===t.dataset.flag,boolean:"true"===t.dataset.boolean,flat:"true"===t.dataset.flat,fields:t.dataset.fields,dtypes:t.dataset.dtypes},a=Object.values(foundry.applications.instances).find((e=>e instanceof ffd20.applications.EntrySelector&&e.name===s.name&&e.document.id===this.id));a?(a.render(!0),a.bringToFront()):new ffd20.applications.EntrySelector({...s,document:this.item}).render({force:!0})}async _onItemSelector(e){if(e.preventDefault(),!this.item.isOwner)return void ui.notifications.warn("FFD20.Error.NoItemPermission",{localize:!0});if(!this.actor)throw Error("No actor to find items from.");const{type:t,subType:s,kind:a,empty:i,selected:n,label:o,name:r}=e.currentTarget.dataset,l={window:{title:`${game.i18n.format("FFD20.SelectSpecific",{specifier:game.i18n.localize(o)})} - ${this.actor.name}`},id:this.item.uuid+"-item-selector",actor:this.actor,empty:"true"===i||"false"!==i,filterFunc:e=>(!t||e.type===t)&&((!s||e.subType===s)&&("ammo"!==s||!a||e.system.extraType===a)),selected:n},c=await ffd20.utils.dialog.getItem(l);c&&this.item.update({[r]:c.id})}async _onCardNoteControl(e){e.preventDefault();const t=e.currentTarget,s=t.dataset.name,a=t.dataset.action,i=foundry.utils.getProperty(this.item.toObject(),s)??[];switch(a){case"add":{i.push("");const t={[s]:i};return this._updateObject(e,this._getSubmitData(t))}case"delete":{i.splice(Number(t.dataset.index),1);const a={[s]:i};return this._updateObject(e,this._getSubmitData(a))}}}_selectOnClick(e){e.preventDefault();e.currentTarget.select()}}class ItemSheetPF_Container extends ItemSheetPF{constructor(...e){super(...e),this._expandedItems=[],this._filters={search:{container:""}},this.searchCompositioning=!1,this.searchRefresh=!0,this.searchDelay=250,this.searchDelayEvent=null,this.effectiveSearch="",this._itemUpdates=[],this.options.tabs[0].initial="contents",this._tabs[0].active="contents"}static get defaultOptions(){const e=super.defaultOptions;return foundry.utils.mergeObject(e,{width:800,classes:["ffd20","sheet","item"],scrollY:[...e.scrollY,".inventory-body"],dragDrop:[{dragSelector:"li.item[data-item-id]",dropSelector:'.tab[data-tab="contents"]'},{dragSelector:".tab.changes li.change"},{dragSelector:"label.denomination"}]})}get template(){return"systems/ffd20/templates/items/container.hbs"}async getData(){const e=await super.getData();e.units={weight:"metric"===ffd20.utils.getWeightSystem()?ffd20.config.weightUnitsShort.kg:ffd20.config.weightUnitsShort.lbs},e.filters=this._filters,e.hasCurrency=Object.values(this.item.system.currency).some((e=>e>0)),this._prepareContents(e);const t=ffd20.utils.getWeightSystem();e.weight={contents:this.item.system.weight.converted.contents,units:"metric"===t?ffd20.config.weightUnitsShort.kg:ffd20.config.weightUnitsShort.lbs};const s=ffd20.utils.currency.merge(this.item.system.currency),a=this.item.getValue({recursive:!0,sellValue:1,inLowestDenomination:!0})-this.item.getValue({recursive:!1,sellValue:1,inLowestDenomination:!0})-s,i=this.item.getValue({recursive:!0,inLowestDenomination:!0})-this.item.getValue({recursive:!1,inLowestDenomination:!0})-s;return e.totalValue=ffd20.utils.currency.split(a,{pad:!0}),e.sellValue=ffd20.utils.currency.split(i,{pad:!0}),e.currency=ffd20.utils.currency.split(s,{pad:!0}),e.labels??={},e.labels.totalValue=game.i18n.format("FFD20.SplitValue",e.totalValue),e.labels.sellValue=game.i18n.format("FFD20.SplitValue",e.sellValue),e.labels.currency=game.i18n.format("FFD20.SplitValue",e.currency),e.labels.itemValue="FFD20.Currency.Inline."+ffd20.config.currency.standard,e}_applySectionFilter(e,t){if(!t.filters)throw Error(`Section "${t.path}" lacks filters`);return t.filters.some((t=>t.type===e.type&&(t.subTypes?.includes(e.subType)??!0)))}_prepareItemForSection(e,t,s){t.interface.value&&(e.price={value:e.document.getValue({single:!0,recursive:!1,sellValue:1}),stack:e.document.getValue({single:!1,recursive:!0,sellValue:1})})}_prepareItem(e,t){const s=e.system,a={...e};return a.id=e.id,a.name=e.name,a.img||=e.getDefaultArtwork(),a.subType=e.subType,a.document=e,a.labels=e.getLabels(),a.isCharged=!e.isSingleUse&&e.isCharged,a.charges=a.isCharged?e.charges:1/0,a.hasAttack=e.hasAttack,a.hasDamage=e.hasDamage,a.hasAction=e.hasAction||e.isCharged,a.showUnidentifiedData=e.showUnidentifiedData,a.hasUses=e.system.uses?.max>0,a.quantity=s.quantity||0,a.isStack=a.quantity>1,a.destroyed=s.hp?.value<=0,a.isEmpty=a.quantity<=0,a.isBroken=e.isBroken,a.price=null,!a.isEmpty&&a.isCharged&&a.charges<=0&&(a.isEmpty=!0),a.isCharged&&(a.maxCharges=e.maxCharges,a.noMaxCharges=!Number.isFinite(a.maxCharges)),a.disabled=a.isEmpty||a.destroyed||!1,a}_prepareContents(e){const t=Object.values(ffd20.config.sheetSections.inventory).map((e=>({...e}))).sort(((e,t)=>e.sort-t.sort));e.items=this.item.items.map((e=>this._prepareItem(e))),e.items.sort(((e,t)=>(e.sort||0)-(t.sort||0)));for(const s of e.items){const e=t.find((e=>this._applySectionFilter(s,e)));e?(this._prepareItemForSection(s,e),e.items??=[],e.items.push(s)):console.warn(`Could not find section for item "${s.name}"`,s)}e.inventory=t}async _renderInner(...e){const t=await super._renderInner(...e);for(const e of this._expandedItems)if(this.document.items.has(e)){const s=t.find(`.item-list>.item[data-item-id="${e}"]`)[0];s&&this._openItemSummary(s,{animation:!1})}else this._expandedItems.findSplice((t=>t===e));return t}activateListeners(e){super.activateListeners(e),e.find('.tab[data-tab="contents"] .item-create').click((e=>this._onItemCreate(e))),e.find('.tab[data-tab="contents"] .item-edit').click(this._onItemEdit.bind(this)),e.find('.tab[data-tab="contents"] .item-delete').click(this._onItemDelete.bind(this)),e.find('.tab[data-tab="contents"] .item-take').click(this._onItemTake.bind(this)),e.find(".item .item-name").contextmenu(this._onItemEdit.bind(this)).click(this._onItemSummary.bind(this)),e.find("a.item-control.item-identify").click((e=>{this._quickIdentifyItem(e)})),e.find("a.item-control.item-duplicate").click(this._duplicateItem.bind(this)),e.find("a.item-control.item-quantity-add").click((e=>{this._quickChangeItemQuantity(e,1)})),e.find("a.item-control.item-quantity-subtract").click((e=>{this._quickChangeItemQuantity(e,-1)})),e.find(".item-actions a").click((e=>this._quickItemActionControl(e))),e.find(".item-detail.item-uses input[type='text']:not(:disabled)").off("change").change(this._setItemUses.bind(this)).on("wheel",this._setItemUses.bind(this)),e.find("a.convert-currency").click(this._convertCurrency.bind(this)),e.find(".item .item-image").on("click",(e=>this._onItemCard(e)));const t=e.find(".search-input");t.on("keyup change",this._searchFilterChange.bind(this)),t.on("compositionstart compositionend",this._searchFilterCompositioning.bind(this)),this.searchRefresh=!0,t.each((function(){this.value.length>0&&$(this).change()}))}_onItemCreate(e){e.preventDefault();const t=e.currentTarget,[s,a]=t.dataset.create?.split(".")??[],i=foundry.utils.deepClone(ffd20.config.sheetSections[s]?.[a]?.create);if(!i)throw Error(`No creation data found for "${s}.${a}"`);const n=i.type||t.dataset.type,o=i.system?.subType;i.name=Item.implementation.defaultName({type:n,subType:o});const r=new Item.implementation(i),l=this.item.items.filter((e=>ffd20.utils.isItemSameSubGroup(r,e))).sort(((e,t)=>(t.sort||0)-(e.sort||0)));if(l.length){const e=r.name;let t=e,s=2;const a=new Set(l.map((e=>e.name)));for(;a.has(t);)t=`${e} (${s++})`;t!==r.name&&r.updateSource({name:t})}const c=l.reduce(((e,t)=>Math.max(e,t.sort||0)),0)+CONST.SORT_INTEGER_DENSITY;return r.updateSource({sort:c}),this.item.createContainerContent(r.toObject(),{renderSheet:!0})}_onItemEdit(e){e.preventDefault();const t=e.currentTarget.closest(".item");this.item.items.get(t.dataset.itemId).sheet.render(!0,{focus:!0,editable:this.isEditable})}_onItemSummary(e){e.preventDefault();const t=e.target.closest(".item[data-item-id]");this._openItemSummary(t)}async _openItemSummary(e,{animation:t=!0,rollData:s}={}){const a=e.dataset.itemId,i=this.document.items.get(a);if(s??=i.defaultAction?.getRollData()??i.getRollData(),this._expandedItems=this._expandedItems.filter((e=>e!==a)),e.classList.contains("expanded")){const s=e.querySelector(".item-summary");t?$(s).slideUp(200,(()=>s.remove())):s.remove()}else{const n=await i.getChatData({chatcard:!1,rollData:s}),o=await renderTemplate("systems/ffd20/templates/actors/parts/actor-item-summary.hbs",n);let r=document.createElement("div");r.innerHTML=await ffd20.utils.enrichHTMLUnrolled(o,{rollData:s,secrets:this.actor.isOwner}),r=r.firstElementChild,t&&$(r).hide(),e.append(r),t&&$(r).slideDown(200),this._expandedItems.push(a)}e.classList.toggle("expanded")}async _onItemDelete(e){e.preventDefault();const t=e.currentTarget;if(t.disabled)return;const s=e.currentTarget.closest(".item");if(getSkipActionPrompt())this.item.deleteContainerContent(s.dataset.itemId);else{t.disabled=!0;const e=this.document.items.get(s.dataset.itemId);await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.format("FFD20.DeleteItemTitle",{name:e.name})},classes:["pf1-v2","delete-item"],content:`<p>${game.i18n.localize("FFD20.DeleteItemConfirmation")}</p>`,rejectClose:!1,modal:!0})&&this.item.deleteContainerContent(s.dataset.itemId),t.disabled=!1}}async _onItemTake(e){e.preventDefault();const t=e.currentTarget.closest(".item"),s=this.item.items.get(t.dataset.itemId);if(this.actor){await Item.implementation.create(s.toObject(),{parent:this.actor})&&await this.item.deleteContainerContent(s._id)}}_onDragStart(e){const t=e.currentTarget;let s;if(t.classList.contains("denomination")){if(!this.item.testUserPermission(game.user,3))return;s={type:"Currency",alt:t.classList.contains("alt-currency"),currency:[...t.classList].find((e=>/[pgsc]p/.test(e))),containerId:this.item.id,amount:parseInt(t.nextElementSibling.textContent||t.nextElementSibling.value)}}else{if(!t.dataset.itemId)return super._onDragStart(e);{const e=this.item.items.get(t.dataset.itemId);s={type:"Item",data:e.toObject(),containerId:this.item.id},s.itemId=e.id}}s.actorUuid=this.item.actor?.uuid,e.dataTransfer.setData("text/plain",JSON.stringify(s))}_onDrop(e){e.preventDefault(),e.stopPropagation();const t=TextEditor.getDragEventData(e),s=this.item;if(!1!==Hooks.call("pf1DropContainerSheetData",s,this,t))switch(t.type){case"Item":return this._onDropItem(e,t);case"Currency":return this._onDropCurrency(e,t);case"pf1Change":return this._onChangeDrop(e,t)}}async _onDropCurrency(e,t){const s=await fromUuid(t.actorUuid||"");return new CurrencyTransfer({actor:s,container:t.containerId,alt:t.alt},{actor:this.actor,container:this.item.id,amount:Object.fromEntries([[t.currency,parseInt(t.amount)]])}).render(!0)}async _onDropItem(e,t){if(!this.item.isOwner)return void ui.notifications.warn("FFD20.Error.NoItemPermission",{localize:!0});const{actorUuid:s,containerId:a}=t,i=await Item.implementation.fromDropData(t);let n=s?await fromUuid(s):null;if(n??=i.actor,i===this.item||i===this.item.rootItem)throw Error("Can not place item into itself");const o=n&&n===this.item.actor,r=game.items.fromCompendium(i,{clearFolder:!0,keepId:o,clearSort:!o});if(o&&a===this.item.id)return this._onSortItem(e,r);if("spell"===r.type){const e=await ffd20.documents.item.ItemSpellPF.toConsumablePrompt(r,{allowSpell:!1,actor:this.item.actor});return!!e&&this.item.createContainerContent(e)}i.isPhysical&&(await this.item.createContainerContent(r),o&&(a?n.containerItems.find((e=>e.id===t.itemId&&e.parentItem?.id===a))?.parentItem.deleteContainerContent(t.itemId):n.items.get(i.id)?.delete()))}async _quickIdentifyItem(e){if(e.preventDefault(),!game.user.isGM)return void ui.notifications.error(game.i18n.localize("FFD20.Error.CantIdentify"));const t=$(e.currentTarget).parents(".item").attr("data-item-id"),s=this.item.items.get(t),a=s.system.identified;return void 0!==a?s.update({"system.identified":!a}):void 0}async _duplicateItem(e){e.preventDefault();const t=e.currentTarget,s=$(t).parents(".item").attr("data-item-id"),a=this.item.items.get(s),i=a.toObject();return delete i.system?.links?.children,delete i.system?.links?.charges,i._stats??={},i._stats.duplicateSource||=a.uuid,delete i._id,i.name=`${i.name} (${game.i18n.localize("FFD20.Copy")})`,a.isPhysical&&!a.system.identified&&(i.system.unidentified.name=`${a.system.unidentified.name} (${game.i18n.localize("FFD20.Copy")})`),i.system.links?.children&&delete i.system.links.children,this.item.createContainerContent(i)}async _quickChangeItemQuantity(e,t=1){e.preventDefault(),e.shiftKey&&(t*=5),e.ctrlKey&&(t*=10);const s=$(e.currentTarget).parents(".item").attr("data-item-id"),a=this.item.items.get(s),i=a.system.quantity||0;let n=Math.max(0,i+t);return"container"===a.type&&n>1&&(n=1),a.update({"system.quantity":n})}_quickItemActionControl(e){e.preventDefault();const t=$(e.currentTarget).closest(".item").attr("data-item-id");this.item.items.get(t).use({ev:e})}async _setItemUses(e){e.preventDefault();const t=e.currentTarget,s=t.closest(".item").dataset.itemId,a=this.item.items.get(s);this._mouseWheelAdd(e.originalEvent,t);const i=Number(t.value);this.setItemUpdate(a._id,"system.uses.value",i),e.originalEvent instanceof MouseEvent?t.addEventListener("pointerleave",(()=>this._updateItems()),{passive:!0,once:!0}):this._updateItems()}async _updateItems(){const e=[],t=this._itemUpdates;this._itemUpdates=[];for(const s of t){const t=this.item.items.get(s._id);t&&(delete s._id,t.testUserPermission(game.user,"OWNER")&&e.push(t.update(s)))}return Promise.all(e)}setItemUpdate(e,t,s){let a=this._itemUpdates.find((t=>t._id===e));a||(a={_id:e},this._itemUpdates.push(a)),a[t]=s}_mouseWheelAdd(e,t){if(e&&e instanceof WheelEvent){const s=parseFloat(t.value);if(Number.isNaN(s))return;const a=-Math.sign(e.deltaY),i=parseFloat(t.dataset.wheelStep)||1;t.value=s+i*a}}_convertCurrency(e){e.preventDefault();const t=e.currentTarget.dataset.type;this.item.convertCurrency(t)}_onSortItem(e,t){const s=this.document.items,a=s.get(t._id),i=e.target.closest(".item"),n=i?i.dataset.itemId:null,o=s.get(n);if(n===a.id)return;const r=[];for(const e of i.parentElement.children){const t=e.dataset.itemId;if(t&&t!==a.id){const t=s.get(e.dataset.itemId);if(t.type!==a.type)continue;r.push(t)}}if(0==r.length)return;const l=SortingHelpers.performIntegerSort(a,{target:o,siblings:r}).map((e=>{const t=e.update;return t._id=e.target._id,t}));return this.item.updateContainerContents(l)}_onItemCard(e){e.preventDefault();const t=e.currentTarget.closest(".item").dataset.itemId,s=this.item.items.get(t);if(null!=s)return s.displayCard()}_searchFilterCommit(e){const t=this.item,s=this._filters.search.container.toLowerCase();if(this.effectiveSearch===s&&!this.searchRefresh)return;this.effectiveSearch=s,this.searchRefresh=!1;$(e.target).closest(".tab").find(".item-list .item").each((function(){const e=$(this);if(s?.length>0){const a=t.items.get(this.dataset.itemId);a.name.toLowerCase().includes(s)?e.show():e.hide()}else e.show()}))}_searchFilterCompositioning(e){this.searchCompositioning="compositionstart"===e.type}_searchFilterChange(e){e.preventDefault(),e.stopPropagation();const t=e.target.value,s=this._filters.search.container!==t;(this.searchCompositioning||s)&&clearTimeout(this.searchDelayEvent),this.searchCompositioning||(this._filters.search.container=t,"keyup"===e.type?s&&(this.searchDelayEvent=setTimeout((()=>this._searchFilterCommit(e)),this.searchDelay)):this._searchFilterCommit(e))}}const{ApplicationV2:q,HandlebarsApplicationMixin:W}=foundry.applications.api;class ItemCreateDialog extends(W(NoAutocomplete(q))){object;constructor({creationData:e={},resolve:t,...s}={}){s.createOptions??={},s.data&&(console.warn("data is invalid parameter for ItemCreateDialog"),foundry.utils.mergeObject(e,s.data),delete s.data);const a=["pack","parent"];for(const e of a)e in s&&(foundry.utils.logCompatibilityWarning("ItemCreateDialog parent and pack are now in options.createOptions instead of options directly.",{since:"PF1 v11.5",until:"PF1 v12",once:!0}),s.createOptions[e]=s[e]);s.types&&(s.types=new Set(s.types)),super(s),this.resolve=t,this.object=e,this._updateCreationData(e)}get title(){return game.i18n.format("DOCUMENT.Create",{type:game.i18n.localize("DOCUMENT.Item")})}getDefaultName(e=!0){const t=e&&this.form?foundry.utils.expandObject(new FormDataExtended(this.form).object):this.createData,s=t.type,a=t.system?.subType,{parent:i,pack:n}=this.options.createOptions;return Item.implementation.defaultName({type:s,subType:a,pack:n,parent:i})}static DEFAULT_OPTIONS={tag:"form",form:{handler:this._onSubmit},position:{height:"auto"},classes:["pf1-v2","create-document","create-item","standard-form"]};static PARTS={form:{template:"systems/ffd20/templates/widgets/item-create.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};get initialData(){return this.object}createData={};getSubtypes(e){switch(e){case"class":return ffd20.config.classTypes;case"race":case"spell":case"container":default:return null;case"attack":return ffd20.config.attackTypes;case"feat":return ffd20.config.featTypes;case"weapon":return Object.entries(ffd20.config.weaponTypes).reduce(((e,[t,s])=>(e[t]=s._label,e)),{});case"equipment":return Object.entries(ffd20.config.equipmentTypes).reduce(((e,[t,s])=>(e[t]=s._label,e)),{});case"consumable":return ffd20.config.consumableTypes;case"loot":return ffd20.config.lootTypes;case"buff":return ffd20.config.buffTypes;case"implant":return ffd20.config.implantTypes}}_prepareFormContext(e,t){const s=game.i18n.lang,{parent:a,pack:i}=this.options.createOptions??{};let n;a||(n=i?game.packs.get(i):game.items);const o=Object.fromEntries((n?._formatFolderSelectOptions()??[]).map((({id:e,name:t})=>[e,t]))),r=this.createData;let l=this.getSubtypes(r.type);l||void 0===r.system?.subType||delete r.system.subType,l?(l=Object.fromEntries(Object.entries(l).sort((([e,t],[a,i])=>t.localeCompare(i,s)))),l[this.createData.system.subType]||(this.createData.system.subType=Object.keys(l)[0])):this.createData.system.subType=void 0;const c=Object.fromEntries(Object.entries(CONFIG.Item.typeLabels).sort((([e,t],[a,i])=>t.localeCompare(i,s))));if(delete c.base,this.options.types)for(const e of Object.keys(c))this.options.types.has(e)||delete c[e];return e.name=r.name,e.defaultName=this.getDefaultName(!1),e.folder=r.folder,e.type=r.type,e.subtype=r.system?.subType||null,e.choices={folders:o,types:c,subtypes:l},0==Object.keys(o).length&&delete e.choices.folders,e}_preparePartContext(e,t,s){switch(e){case"footer":t.buttons=[{action:"create",type:"submit",icon:"fa-solid fa-check",label:game.i18n.format("DOCUMENT.Create",{type:game.i18n.localize("DOCUMENT.Item")})}];break;case"form":return this._prepareFormContext(t,s)}return t}_onChangeForm(e,t){this._updateCreationData(new FormDataExtended(t.currentTarget).object),super._onChangeForm(e,t),"INPUT"!==t.target.tagName&&this.render({parts:["form"]})}_updateCreationData(e={}){e.type||=CONFIG.Item.defaultType||game.documentTypes.Item[1],this.options.types&&!this.options.types.has(e.type)&&(e.type=this.options.types.first()),this.createData=foundry.utils.mergeObject(this.initialData,e,{inplace:!1}),this.createData.system??={},e.folder||this.initialData.folder||delete this.createData.folder;return this.getSubtypes(this.createData.type)||delete this.createData.system.subType,this.createData}static async _onSubmit(e,t,s){const a=this._updateCreationData(foundry.utils.expandObject(s.object));if(a.name||=this.getDefaultName(!1),a.folder||delete a.folder,!a.name?.trim()){const{pack:e,parent:t}=this.options.createOptions??{};a.name=this.defaultName({type:a.type,parent:t,pack:e})}const i=Item.implementation.create(a,{renderSheet:!0,...this.options.createOptions});this.resolve?.(i),this.close()}_onClose(e){super._onClose(e),this.resolve?.(null)}static waitPrompt(e={},t={}){return new Promise((s=>{e.resolve=s,new this(e).render({...t,force:!0})}))}}const G=Object.freeze(Object.defineProperty({__proto__:null,CreateDialog:ItemCreateDialog,ItemSheetPF,ItemSheetPF_Container},Symbol.toStringTag,{value:"Module"}));class ItemActionSheet extends FormApplication{static get defaultOptions(){const e=super.defaultOptions;return{...e,template:"systems/ffd20/templates/apps/item-action.hbs",classes:[...e.classes,"ffd20","sheet","action","item-action"],width:580,height:720,closeOnSubmit:!1,submitOnClose:!0,submitOnChange:!0,resizable:!0,scrollY:[".tab"],tabs:[{navSelector:"nav.tabs[data-group='primary']",contentSelector:"section.primary-body",initial:"description",group:"primary"}],dragDrop:[{dragSelector:"li.conditional",dropSelector:'div[data-tab="conditionals"]'}]}}get title(){return`${this.item.name}: ${this.action.name}`}get id(){return"action-sheet-"+this.action.uuid.replaceAll(".","-")}get action(){return this.object}get item(){return this.action.item}get actor(){return this.item.actor}_activeEdits={};static EDIT_TRACKING=["description"];render(...e){return super.render(...e),void 0!==this.appId&&(this.item.apps[this.appId]=this,this.action.apps[this.appId]=this),this}async getData(){const e=this.action,t=this.item,s=this.actor,a=this.isEditable,i={config:ffd20.config,editable:a,cssClass:a?"editable":"locked",user:game.user,action:e,data:e.toObject(!0,!1),fields:e.schema.fields,item:t,actor:s,img:e.img,tag:e._source.tag,damageTypes:ffd20.registry.damageTypes.toObject(),rollData:e.getRollData(),choices:{measureTemplateTypes:ffd20.utils.internal.getTemplateTypes()}};i.hasAttack=e.hasAttack,i.actionType=e.actionType,i.isHealing="heal"===i.actionType,i.hasDamage=e.hasDamage,i.isCombatManeuver=e.isCombatManeuver,i.canCrit=e.hasAttack&&e.ability?.critRange>0&&e.ability?.critMult>1,i.hasCritDamage=i.canCrit||e.damage?.critParts?.length>0,i.hasNonCritDamage=i.canCrit||e.damage?.nonCritParts?.length>0,i.isCharged=e.isCharged,i.isSelfCharged=e.isSelfCharged;const n=new Set([...Object.keys(ffd20.config.limitedUsePeriods),"charges"]);n.delete("single"),i.choices.limitedUsePeriods={...ffd20.config.limitedUsePeriods},t.isPhysical||delete i.choices.limitedUsePeriods.single,i.showMaxChargeFormula=n.has(e.uses.self.per),e.hasRange&&(i.canInputRange=["ft","mi","spec"].includes(e.range.units),i.canInputMinRange=["ft","mi","spec"].includes(e.range.minUnits)),i.canInputDuration=!["","turn","inst","perm","seeText"].includes(e.duration?.units||""),i.itemName=t.name,i.itemEnh=t.system.enh||0,i.isSpell="spell"===t.type,i.usesSpellPoints=t.spellbook?.spellPoints.useSystem,i.defaultChargeFormula=t.getDefaultChargeFormula(),i.owned=null!=s,i.parentOwned=null!=s,i.owner=t.isOwner,i.isGM=game.user.isGM,i.unchainedActionEconomy=game.settings.get("ffd20","unchainedActionEconomy"),i.activation=e.activation,i.hasActivationType=i.activation.type,i.choices.abilityActivationTypes=i.unchainedActionEconomy?ffd20.config.abilityActivationTypes_unchained:ffd20.config.abilityActivationTypes,i.costlessActivation=!i.activation.type||ffd20.config.costlessActivation.has(i.activation.type);const o="<p>"+game.i18n.localize("FFD20.NoDescription")+"</p>",r=e.description;if(i.descriptionHTML=r?await ffd20.utils.enrichHTMLUnrolled(r,{secrets:i.owner,rollData:i.rollData,relativeTo:this.actor}):o,i.showMaxRangeIncrements="ft"===e.range.units,"attack"===t.type&&(i.isWeaponAttack="weapon"===t.system.subType,i.isNaturalAttack="natural"===t.system.subType),i.canUseAmmo=!0!==i.isNaturalAttack,i.usesAmmo=!!e.ammo.type,i.inheritedAmmoType=t?.system.ammo?.type,i.usesAmmo&&(i.inheritedMisfire=t?.system.ammo?.misfire??null),i.canUseAmmo&&(i.choices.ammoTypes={none:game.i18n.localize("FFD20.None"),"":game.i18n.format("FFD20.InheritAs",{inherited:ffd20.config.ammoTypes[i.inheritedAmmoType]}),...ffd20.config.ammoTypes},i.inheritedAmmoType||delete i.choices.ammoTypes[""]),i.choices.distanceUnits=foundry.utils.deepClone(ffd20.config.distanceUnits),delete i.choices.distanceUnits.none,i.minRangeAvailable=["reach","ft","mi","seeText"].includes(e.range.units),i.data.conditionals){i.conditionals=[...e.conditionals].map((e=>({...e,_id:e.id})));const t=e.getConditionalTargets();i.conditionalTargets=t,i.hasConditionalTargets=!foundry.utils.isEmpty(t);for(const s of i.conditionals)if(s.modifiers?.size){s.modifiers=[...s.modifiers].map((e=>({...e,_id:e.id})));for(const a of s.modifiers)a.targets=t,a.targetEntry=t[a.target],a.subTargets=a.targetEntry?.choices,a.conditionalModifierTypes=e.getConditionalModifierTypes(a.target),a.conditionalCritical=e.getConditionalCritical(a.target),a.damage=new ffd20.models.action.DamagePartModel({types:a.damageType})}}if(i.materialCategories=this._prepareMaterialsAndAddons(),i.materialAddons=this.action.addonMaterial.reduce(((e,t)=>(e[t]=!0,e)),{})??{},i.isRanged=e.isRanged,i.isPureRanged=i.isRanged&&"twak"!==e.actionType,i.canHold=e.hasAttack&&!0!==i.isNaturalAttack&&!i.isPureRanged,i.canHold){i.inheritedHeld=["attack","weapon"].includes(t.type)?ffd20.config.weaponHoldTypes[i.item.system.held]:null;const e=i.action.held||i.item.system.held||"1h";i.heldAbilityMultiplier=ffd20.config.abilityDamageHeldMultipliers[e]??1}i.alignmentTypes=this._prepareAlignments(this.action.alignments),this.alignments=i.alignmentTypes?.values,i.choices??={},i.hasKeyAbility="spell"===this.item?.type;const l=this.item?.spellbook?.ability,c=ffd20.config.abilities[l];return i.choices.ability={_key:game.i18n.format(l?"FFD20.KeyAbilityRef":"FFD20.KeyAbility",{ability:c}),...ffd20.config.abilities},i.choices.attackAbility={_key:game.i18n.format(l?"FFD20.KeyAbilityRef":"FFD20.KeyAbility",{ability:c}),_default:game.i18n.format("FFD20.DefaultRef",{value:ffd20.config.abilities[e._defaultAttackAbility]||game.i18n.localize("FFD20.None")}),...ffd20.config.abilities},i.choices.damageAbility={_key:game.i18n.format(l?"FFD20.KeyAbilityRef":"FFD20.KeyAbility",{ability:c}),_default:game.i18n.format("FFD20.DefaultRef",{value:ffd20.config.abilities[e._defaultDamageAbility]||game.i18n.localize("FFD20.None")}),...ffd20.config.abilities},i.hasKeyAbility||(delete i.choices.ability._key,delete i.choices.attackAbility._key,delete i.choices.damageAbility._key),i.paMultiplier=e.getPowerAttackMult({rollData:i.rollData}),i.extraAttacksTypes=Object.fromEntries([...Object.entries(ffd20.config.extraAttacks).map((([e,{label:t}])=>[e,t]))]),i.extraAttacksConfig={...ffd20.config.extraAttacks[e.extraAttacks?.type]},i.extraAttacksConfig.allowCustom=i.extraAttacksConfig.manual||i.extraAttacksConfig.formula,this.constructor.EDIT_TRACKING?.length&&(i._editorState=ffd20.applications.utils.restoreEditState(this,i.data)),i}_prepareMaterialsAndAddons(){const e={},t=[];return ffd20.utils.naturalSort([...ffd20.registry.materials],"name").forEach((s=>{(s.allowed.lightBlade||s.allowed.oneHandBlade||s.allowed.twoHandBlade||s.allowed.rangedWeapon)&&(s.addon||s.basic?s.addon&&s.isValidAddon(this.action.normalMaterial)&&t.push({key:s.id,name:s.name}):e[s.id]=s.name)})),{materials:e,addons:t}}_prepareAlignments(e={}){const t={};return Object.keys(ffd20.config.damageResistances).forEach((e=>{["magic","epic"].includes(e)||(t[e]=ffd20.config.damageResistances[e])})),{choices:t,values:e}}get isEditable(){const e=this.item;let t=this.options.editable&&e.isOwner;if(e.pack){game.packs.get(e.pack).locked&&(t=!1)}return t}activateListeners(e){super.activateListeners(e),this.isEditable&&(ffd20.applications.utils.trackStaleEditors(this,e[0]),e.find("img[data-edit]").click((e=>this._onEditImage(e))),e.find("textarea, .card-notes input[type='text']").on("drop",this._onTextAreaDrop.bind(this)),e.find(".attack-control").click(this._onAttackControl.bind(this)),e.find(".damage-control").click(this._onDamageControl.bind(this)),e.find(".damage-type-visual").on("click",this._onClickDamageType.bind(this)),e.find(".card-notes .controls a").click(this._onNoteEntryControl.bind(this)),e.find(".conditional-control").click(this._onConditionalControl.bind(this)),e.find(".alignmentCheckbox").on("change",(e=>{this._onAlignmentChecked(e)})),e.find(".alignmentCheckbox.actionCheckbox").each(((e,t)=>{const s=t.dataset.type;this.alignments[s]||!1===this.alignments[s]||(t.indeterminate=!0)})))}_onDragStart(e){const t=e.currentTarget;if(t.dataset?.conditional){const s={type:"pf1Conditional",data:this.action.conditionals.get(t.dataset?.conditional).toObject()};e.dataTransfer.setData("text/plain",JSON.stringify(s))}}_canDragStart(e){return this.isEditable}_canDragDrop(e){return this.isEditable}async _onDrop(e){e.preventDefault(),e.stopPropagation();const t=TextEditor.getDragEventData(e),{type:s}=t,a=this.action;if("pf1Conditional"===s){const e=t.data;for(const t of e.modifiers){if(Object.keys(a.getConditionalTargets()).includes(t.target)||delete t.target,t.subTarget){const e=a.getConditionalTargets(),s=e?.[t.target]?.choices;s&&Object.keys(s).includes(t.subTarget)||delete t.subTarget}if(t.type){Object.keys(a.getConditionalModifierTypes(t.target)).includes(t.type)||delete t.type}if(t.critical){Object.keys(a.getConditionalCritical(t.target)).includes(t.critical)||delete t.critical}}delete e._id,await ffd20.components.ItemConditional.create(e,{parent:this.action})}}async _onNoteEntryControl(e){e.preventDefault();const t=e.currentTarget,s=t.dataset.name;switch(t.dataset.action){case"add":{const t=foundry.utils.getProperty(this.action.toObject(),s)??[];t.push("");const a={[s]:t};return this._updateObject(e,this._getSubmitData(a))}case"delete":{const a=Number(t.dataset.index),i=foundry.utils.getProperty(this.action.toObject(),s)??[];i.splice(a,1);const n={[s]:i};return this._updateObject(e,this._getSubmitData(n))}}}async _onConditionalControl(e){e.preventDefault();const t=e.currentTarget;if(await this._onSubmit(e,{preventRender:!0}),t.classList.contains("add-conditional"))return ffd20.components.ItemConditional.create([{}],{parent:this.action});if(t.classList.contains("delete-conditional")){const e=t.closest(".conditional");return this.action.conditionals.get(e.dataset.conditional).delete()}if(t.classList.contains("add-conditional-modifier")){const e=t.closest(".conditional"),s=this.action.conditionals.get(e.dataset.conditional);return ffd20.components.ItemConditionalModifier.create([{}],{parent:s})}if(t.classList.contains("delete-conditional-modifier")){const e=t.closest(".conditional-modifier");return this.action.conditionals.get(e.dataset.conditional).modifiers.get(e.dataset.modifier).delete()}}async _onDamageControl(e){e.preventDefault();const t=e.currentTarget,s=t.closest(".damage").dataset.key||"damage.parts",a=s.split(".").slice(0,-1).join("."),i=s.split(".").slice(-1).join(".");if(t.classList.contains("add-damage")){const t=foundry.utils.getProperty(this.action.toObject(),a),n=foundry.utils.getProperty(t,i)??[];n.push({});const o={[s]:n};return this._updateObject(e,this._getSubmitData(o))}if(t.classList.contains("delete-damage")){const n=t.closest(".damage-part"),o=foundry.utils.getProperty(this.action.toObject(),a),r=foundry.utils.getProperty(o,i)??[];if(r.length){r.splice(Number(n.dataset.damagePart),1);const t={[s]:r};return this._updateObject(e,this._getSubmitData(t))}}}async _onClickDamageType(e){e.preventDefault();const t=e.currentTarget,s=Number(t.closest(".damage-part")?.dataset.damagePart),a=t.closest(".damage")?.dataset.key;if(s>=0&&a){return new ffd20.applications.DamageTypeSelector(this.action,`${a}.${s}.types`,foundry.utils.getProperty(this.action,a)[s].types,{updateCallback:e=>{const t=foundry.utils.getProperty(this.action.toObject(),a)??[];t[s].types=e,this.action.update({[a]:t})}}).render(!0)}const i=t.closest(".conditional"),n=t.closest(".conditional-modifier"),o=this.action.conditionals.get(i?.dataset.conditional),r=o?.modifiers.get(n?.dataset.modifier);if(!r)return void console.warn("Conditional modifier not found!");return new ffd20.applications.DamageTypeSelector(r,"damageType",r.damageType,{updateCallback:e=>{r.update({damageType:e})}}).render(!0)}async _onAttackControl(e){e.preventDefault();const t=e.currentTarget,s=this.action.toObject().extraAttacks?.manual??[];if(t.classList.contains("add-attack")){s.push({formula:"",name:""});const t={extraAttacks:{manual:s}};return this._updateObject(e,this._getSubmitData(t))}if(t.classList.contains("delete-attack")){const a=t.closest(".attack-part");s.splice(Number(a.dataset.attackPart),1);const i={extraAttacks:{manual:s}};return this._updateObject(e,this._getSubmitData(i))}}_onEditImage(e){const t=e.currentTarget.dataset.edit,s=foundry.utils.getProperty(this.action,t);new FilePicker({type:"image",current:s,callback:e=>this.action.update({img:e}),top:this.position.top+40,left:this.position.left+10}).browse()}async _onTextAreaDrop(e){e.preventDefault();const t=TextEditor.getDragEventData(e.originalEvent);if(!t)return;const s=e.currentTarget,a=await TextEditor.getContentLink(t,{relativeTo:this.actor});return a?(s.value=s.value?s.value+"\n"+a:a,this._onSubmit(e)):void 0}async _onAlignmentChecked(e){const t=e.target,s=this.alignments[t.dataset.type];t.checked=!1===s,t.indeterminate=!0===s,t.checked?this.alignments[t.dataset.type]=!0:t.indeterminate?this.alignments[t.dataset.type]=null:this.alignments[t.dataset.type]=!1}async _updateObject(e,t){const s=this.action.toObject(!0,!1);if((t=foundry.utils.expandObject(t)).conditionals){const preserveArray=e=>Object.entries(e??{}).sort((([e],[t])=>e-t)).map((([e,t])=>t)),e=s.conditionals??[],a=preserveArray(t.conditionals);for(let t=0;t<a.length;t++){const s=a[t];s.modifiers=preserveArray(s.modifiers);const i=e[t];for(let e=0;e<s.modifiers.length;e++){const t=s.modifiers[e],a=i.modifiers[e];s.modifiers[e]=foundry.utils.mergeObject(a,t)}a[t]=foundry.utils.mergeObject(i,s)}t.conditionals=a}if(t.damage)for(const[e,a]of Object.entries(t.damage)){if(Array.isArray(a))continue;const i=s.damage[e]??[];for(const[e,t]of Object.entries(a))i[e]=foundry.utils.mergeObject(i[Number(e)]??{},t);t.damage[e]=i}const a=t.material;if(a?.addon&&(a.addon=Object.entries(a.addon).filter((([e,t])=>t)).map((([e])=>e))),t.alignments)for(const[e,s]of Object.entries(this.alignments))t.alignments[e]=s;return t.img===this.item?.img&&delete t.img,this.action.update(t)}async close(e={}){if(delete this.item.apps[this.appId],delete this.action.apps[this.appId],this.action._sheet===this&&(this.action._sheet=null),!(e.force&&this._state<=Application.RENDER_STATES.NONE))return super.close(e)}_createDocumentIdLink(e){if(!this.object.id)return;const t=e.find(".window-title"),s=game.i18n.localize(this.object.constructor.metadata.label),a=document.createElement("a");a.classList.add("document-id-link"),a.ariaLabel=game.i18n.localize("SHEETS.CopyUuid"),a.dataset.tooltip="SHEETS.CopyUuid",a.dataset.tooltipDirection="UP",a.innerHTML='<i class="fa-solid fa-passport"></i>',a.addEventListener("click",(e=>{e.preventDefault(),game.clipboard.copyPlainText(this.object.uuid),ui.notifications.info(game.i18n.format("DOCUMENT.IdCopiedClipboard",{label:s,type:"uuid",id:this.object.uuid}))})),a.addEventListener("contextmenu",(e=>{e.preventDefault(),game.clipboard.copyPlainText(this.object.id),ui.notifications.info(game.i18n.format("DOCUMENT.IdCopiedClipboard",{label:s,type:"id",id:this.object.id}))})),t.append(a)}async _renderOuter(){const e=await super._renderOuter();return this._createDocumentIdLink(e),e}async _render(e,t={}){return ffd20.applications.utils.saveEditState(this,t),super._render(e,t)}}const V=Object.freeze(Object.defineProperty({__proto__:null,ItemActionSheet},Symbol.toStringTag,{value:"Module"})),Z="AND",J="OR",K=!1;class CheckboxFilter extends BaseFilter{static TEMPLATE="systems/ffd20/templates/apps/compendium-browser/checkbox-filter.hbs";static autoSort=!0;static MIN_SEARCH_CHOICES=10;booleanOperator=K;static defaultBooleanOperator=Z;static booleanOperator=!0;_choiceQuery="";constructor(...e){super(...e),this._debouncedFilterChoices=foundry.utils.debounce(this._onCustomSearchFilter,100)}static getChoicesFromConfig(e,{labelKey:t="_label",innerSet:s=!1}={}){const a=new foundry.utils.Collection;for(const[i,n]of Object.entries(e))if(s)for(const[e,s]of Object.entries(n))e!==t&&a.set(e,{key:e,label:s});else"object"==typeof n&&n[t]?a.set(i,{key:i,label:n[t]}):"string"==typeof n&&a.set(i,{key:i,label:n});if(this.autoSort){const e=new Intl.Collator(game.i18n.lang,{numeric:!0,ignorePunctuation:!1}),t=[...a.entries()].sort((([t,s],[a,i])=>e.compare(s.label,i.label)));return new foundry.utils.Collection(t)}return a}get hasControls(){return this.booleanOperator!==K||this.choices.size>=this.constructor.MIN_SEARCH_CHOICES}get hasSearch(){return this.choices.size>=this.constructor.MIN_SEARCH_CHOICES||(this.constructor.MIN_SEARCH_CHOICES??!1)}async setup(){await super.setup(),this.prepareBooleanOperator()}prepareBooleanOperator(){const e=this.compendiumBrowser?.entries.contents;let t;e.find((e=>t=foundry.utils.getProperty(e,this.constructor.indexField))),["Array","Object"].includes(foundry.utils.getType(t))&&(this.booleanOperator=this.constructor.defaultBooleanOperator)}prepareChoices(){const e=this.compendiumBrowser?.entries.contents,t=new Set(e.flatMap((e=>{const t=foundry.utils.getProperty(e,this.constructor.indexField);if(Array.isArray(t))return 0===t.length?[]:t;if("object"==typeof t&&null!==t){const e=Object.keys(t);return 0===e.length?[]:e}return null==t||"string"==typeof t&&""===t.trim()?[]:[t]}))),s=this.constructor.localizeChoices,a=this.constructor.localizePrefix||"",localize2=e=>{if(s){const t=`${a}${e}`;if(game.i18n.has(t))return game.i18n.localize(t)}return e};this.choices=new foundry.utils.Collection(ffd20.utils.naturalSort([...t].map((e=>({key:e,label:localize2(e)}))),"label").map((e=>[""+e.key,e])))}toggleChoice(e,t=null){const s=this.choices?.get(e);if(!s)throw Error(`Choice ${e} does not exist in this filter.`);return s.active=null===t?!s.active:t,s.active}reset(){super.reset(),this.prepareBooleanOperator(),this._choiceQuery="",this.choices?.forEach((e=>e.active=!1))}applyFilter(e){const t=this.choices.filter((e=>e.active));if(0===t.length)return!0;const s=this.constructor.handledTypes;if(s.size&&!s.has(e.type))return!1;const a=foundry.utils.getProperty(e,this.constructor.indexField),i=this.booleanOperator===J?"some":"every";return Array.isArray(a)?t[i]((e=>a.includes(e.key))):"object"==typeof a&&null!==a?t[i]((e=>e.key in a&&!1!==a[e.key])):t.some((e=>a==e.key))}getData(){return{...super.getData(),hasControls:this.hasControls,boolean:!!this.constructor.booleanOperator&&this.booleanOperator,hasSearch:this.choices.size>this.constructor.MIN_SEARCH_CHOICES,choiceQuery:this._choiceQuery}}activateListeners(e){super.activateListeners(e),this._onCustomSearchFilter(null,e),e.querySelector("button.boolean")?.addEventListener("click",(e=>{e.preventDefault(),this.booleanOperator===J?this.booleanOperator=Z:this.booleanOperator=J,this.compendiumBrowser.render()})),e.querySelector("input[name=choice-query]")?.addEventListener("input",(t=>this._debouncedFilterChoices(t,e))),e.addEventListener("change",(e=>{if("checkbox"===e.target.type){const t=e.target,s=/filter.\w*.choice.(?<choice>.*)/.exec(t.name)?.groups?.choice;s&&(this.toggleChoice(s,t.checked),this.compendiumBrowser.render())}}))}_onCustomSearchFilter(e,t){e&&(e.preventDefault(),this._choiceQuery=SearchFilter.cleanQuery(e.target.value));const s=C.go(this._choiceQuery,this.choices.contents,{key:"label",threshold:-1e4}).map((e=>""+e.obj.key)),a=new Set(s);for(const e of t.querySelectorAll("li.filter-choice")){const t=e.dataset.choice;t&&(a.has(t)||!this._choiceQuery?e.classList.remove("hidden"):e.classList.add("hidden"))}this._choiceQuery&&0===s.length?t.querySelector("span.no-choices")?.classList.remove("hidden"):t.querySelector("span.no-choices")?.classList.add("hidden")}}class TextFilter extends BaseFilter{static TEMPLATE="systems/ffd20/templates/apps/compendium-browser/text-filter.hbs";static inputs=[];hasChoices(e=1){return 1==this.choices?.size||super.hasChoices(e)}prepareChoices(){this.choices=new foundry.utils.Collection(this.constructor.inputs.map((e=>[e.key,{...e,label:e.label?game.i18n.localize(e.label):void 0,placeholder:e.placeholder?game.i18n.localize(e.placeholder):void 0,type:e.type??"text"}])))}reset(){for(const e of this.choices)e.value=null,e.active=!1}activateListeners(e){e.addEventListener("change",(e=>{const t=e.target,s=t.value,a=t.name.split("choice.").pop(),i=this.choices.get(a);i&&(i.value=this._parseInput(s,i),i.active=!!s),this.compendiumBrowser.render()}))}_parseInput(e,t){return e}}class NumberRangeFilter extends TextFilter{static inputs=[{key:"min",label:"FFD20.Minimum",placeholder:"0",type:"number"},{key:"max",label:"FFD20.Maximum",placeholder:"∞",type:"number"}];_parseInput(e,t){let s=super._parseInput(e,t);if("min"===t.key)s=Number(s)||null;else{if("max"!==t.key)throw Error("Invalid choice key for NumberRangeFilter");s=Number(s)||null}return s}applyFilter(e){const t=foundry.utils.getProperty(e,this.constructor.indexField)??0,s=this.choices.get("min").value??0,a=this.choices.get("max").value??1/0;return!(t<s||t>a)}}class ItemTypeFilter extends CheckboxFilter{static label="FFD20.Type";static indexField="type";static types=["weapon","equipment","consumable","container","loot","implant"];prepareChoices(){this.choices=new foundry.utils.Collection([{key:"weapon",label:game.i18n.localize("TYPES.Item.weapon")},{key:"equipment",label:game.i18n.localize("TYPES.Item.equipment")},{key:"consumable",label:game.i18n.localize("TYPES.Item.consumable")},{key:"container",label:game.i18n.localize("TYPES.Item.container")},{key:"loot",label:game.i18n.localize("FFD20.Misc")},{key:"implant",label:game.i18n.localize("TYPES.Item.implant")}].map((e=>[e.key,e])))}}class WeaponTypeFilter extends CheckboxFilter{static label="FFD20.WeaponType";static indexField="system.subType";static type="weapon";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.weaponTypes)}}class WeaponSubtypeFilter extends CheckboxFilter{static label="FFD20.WeaponSubtype";static indexField="system.weaponSubtype";static type="weapon";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.weaponTypes,{innerSet:!0})}}class WeaponPropertyFilter extends CheckboxFilter{static label="FFD20.WeaponProperties";static indexField="system.properties";static type="weapon";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.weaponProperties)}}class WeaponGroupFilter extends CheckboxFilter{static label="FFD20.WeaponGroups";static indexField="system.weaponGroups";static type="weapon";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.weaponGroups)}}class EquipmentTypeFilter extends CheckboxFilter{static label="FFD20.EquipmentType";static indexField="system.subType";static type="equipment";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.equipmentTypes)}}class EquipmentSubtypeFilter extends CheckboxFilter{static label="FFD20.EquipmentSubtype";static indexField="system.equipmentSubtype";static type="equipment";static autoSort=!1;prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.equipmentTypes,{innerSet:!0})}}class ItemSlotFilter extends CheckboxFilter{static label="FFD20.Slot";static indexField="system.slot";static type="equipment";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.equipmentSlots,{innerSet:!0})}}class ConsumableTypeFilter extends CheckboxFilter{static label="FFD20.ConsumableType";static indexField="system.subType";static type="consumable";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.consumableTypes)}}class MiscItemTypeFilter extends CheckboxFilter{static label="FFD20.Misc";static indexField="system.subType";static type="loot";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.lootTypes)}}class ItemPriceFilter extends NumberRangeFilter{static label="FFD20.Price";static indexField="system.price"}class ItemCasterLevelFilter extends NumberRangeFilter{static label="FFD20.CasterLevel";static indexField="system.cl"}const X=Object.freeze(Object.defineProperty({__proto__:null,ConsumableTypeFilter,EquipmentSubtypeFilter,EquipmentTypeFilter,ItemCasterLevelFilter,ItemPriceFilter,ItemSlotFilter,ItemTypeFilter,MiscItemTypeFilter,WeaponGroupFilter,WeaponPropertyFilter,WeaponSubtypeFilter,WeaponTypeFilter},Symbol.toStringTag,{value:"Module"}));class PackFilter extends CheckboxFilter{static label="FFD20.Compendium";static indexField="__pack";prepareChoices(){const e=this.compendiumBrowser?.entries.contents,t=this.compendiumBrowser?.packs?.filter((t=>e.some((e=>e.__pack===t.collection)))).map((e=>{const t=e.metadata.label;return{key:e.collection,label:game.i18n.has(t)?game.i18n.localize(t):t}})),s=ffd20.utils.naturalSort(t,"label").map((e=>[e.key,e]));this.choices=new foundry.utils.Collection(s)}}class TagFilter extends CheckboxFilter{static label="FFD20.Tags";static indexField="system.tags"}class SourceFilter extends CheckboxFilter{static label="FFD20.Source";static indexField="system.sources";static defaultBooleanOperator=J;static booleanOperator=!1;prepareChoices(){class SourceEntry{id;get key(){return this.id}label;count=0;get hidden(){return 0===this.count}constructor(e,t){this.id=e,this.label=t}}const e=ffd20.registry.sources.map((e=>new SourceEntry(e.id,e.name))),t=new foundry.utils.Collection(e.map((e=>[e.key,e])));for(const e of this.compendiumBrowser.entries){e.__source??=e.system?.sources??[];const s=e.__source.filter((e=>e.id||e.title)).map((e=>{return{...e,id:e.id||(t=e.title,"__unknown_"+ffd20.utils.createTag(t,{allowUpperCase:!0,allowInitialNumbers:!0}))};var t}));for(const e of s){const s=t.get(e.id);s?s.count+=1:t.set(e.id,new SourceEntry(e.id,e.title))}}this.choices=t}applyFilter(e){const t=(foundry.utils.getProperty(e,this.constructor.indexField)??[]).map((e=>e.id)),s=this.booleanOperator===J?"some":"every";return this.choices.filter((e=>e.active)).map((e=>e.key))[s]((e=>t.includes(e)))}}const Q=Object.freeze(Object.defineProperty({__proto__:null,PackFilter,SourceFilter,TagFilter},Symbol.toStringTag,{value:"Module"}));class SpellSchoolFilter extends CheckboxFilter{static label="FFD20.SpellSchool";static indexField="system.school";static type="spell";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.spellSchools)}}class SpellMultischoolFilter extends CheckboxFilter{static label="FFD20.SpellMultischool";static indexField="system.multischool";static type="spell";prepareChoices(){super.prepareChoices();const e=this.choices,t=this.constructor.getChoicesFromConfig(ffd20.config.spellMultischools);for(const s of t)e.set(s.key,s);this.choices=e}}class SpellSubschoolFilter extends CheckboxFilter{static label="FFD20.Subschool";static indexField="system.subschool";static type="spell";static defaultBooleanOperator=J;prepareChoices(){super.prepareChoices();const e=this.choices,t=this.constructor.getChoicesFromConfig(ffd20.config.spellSubschools);for(const s of t)e.set(s.key,s);this.choices=e}}class SpellDescriptorFilter extends CheckboxFilter{static label="FFD20.Descriptor";static indexField="system.descriptors";static type="spell";async prepareChoices(){await super.prepareChoices();const e=this.choices,t=this.constructor.getChoicesFromConfig(ffd20.config.spellDescriptors);for(const s of t)e.set(s.key,s);this.choices=e}}class SpellLearnedByClassFilter extends CheckboxFilter{static label="FFD20.Classes";static indexField="system.learnedAt.class";static type="spell";static defaultBooleanOperator=J;async prepareChoices(){await super.prepareChoices();const e=this.choices,t=await ffd20.utils.packs.getClassIDMap(),s=this.constructor.getChoicesFromConfig(t);for(const t of s)e.has(t.key)&&e.set(t.key,t);this.choices=e}}class SpellLearnedByDomainFilter extends CheckboxFilter{static label="FFD20.Domain";static indexField="system.learnedAt.domain";static type="spell"}class SpellLevelFilter extends CheckboxFilter{static label="FFD20.SpellLevel";static indexField="system.level";static type="spell";static autoSort=!1;static defaultBooleanOperator=J;static booleanOperator=!1;prepareChoices(){const e=this.constructor.getChoicesFromConfig(ffd20.config.spellLevels);for(const t of e)t.key=Number(t.key);this.choices=e}applyFilter(e){const t=this.compendiumBrowser.filters.filter((e=>e.active&&e.constructor.indexField.startsWith("system.learnedAt.")));if(0===t.length)return super.applyFilter(e);const s=this.booleanOperator===J?"some":"every",a=this.choices.filter((e=>e.active));return t[s]((t=>{const i=foundry.utils.getProperty(e,t.constructor.indexField)??{};return t.choices.filter((e=>e.active))[s]((e=>{const t=i[e.key];return a[s]((e=>e.key===t))}))}))}}const Y=Object.freeze(Object.defineProperty({__proto__:null,SpellDescriptorFilter,SpellLearnedByClassFilter,SpellLearnedByDomainFilter,SpellLevelFilter,SpellMultischoolFilter,SpellSchoolFilter,SpellSubschoolFilter},Symbol.toStringTag,{value:"Module"}));class FeatTypeFilter extends CheckboxFilter{static label="FFD20.Type";static type="feat";static indexField="system.subType";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.featTypes)}}class FeatClassFilter extends CheckboxFilter{static label="FFD20.Classes";static type="feat";static indexField="system.associations.classes";static defaultBooleanOperator=J}const ee=Object.freeze(Object.defineProperty({__proto__:null,FeatClassFilter,FeatTypeFilter},Symbol.toStringTag,{value:"Module"}));class ClassTypeFilter extends CheckboxFilter{static label="FFD20.ClassType";static type="class";static indexField="system.subType";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.classTypes)}}class ClassHitDieFilter extends CheckboxFilter{static label="FFD20.HitDie";static type="class";static indexField="system.hd"}class ClassBaseAttackBonusFilter extends CheckboxFilter{static label="FFD20.BAB";static type="class";static indexField="system.bab";static autoSort=!1;prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.classBAB)}}class ClassSkillPointsFilter extends CheckboxFilter{static label="FFD20.SkillsPerLevel";static type="class";static indexField="system.skillsPerLevel"}class ClassSavingThrowFilter extends CheckboxFilter{static type="class";static savingThrow="";static localizeLabel=!1;static autoSort=!1;static get label(){return ffd20.config.savingThrows[this.savingThrow]??""}static get indexField(){return`system.savingThrows.${this.savingThrow}.value`}prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.classSavingThrows),this.choices.set("none",{label:game.i18n.localize("FFD20.None"),key:"none"})}applyFilter(e){const t=super.applyFilter(e),s=foundry.utils.getProperty(e,this.constructor.indexField),a=this.choices.get("none").active&&""===s;return t||a}}class ClassFortitudeFilter extends ClassSavingThrowFilter{static savingThrow="fort"}class ClassReflexFilter extends ClassSavingThrowFilter{static savingThrow="ref"}class ClassWillFilter extends ClassSavingThrowFilter{static savingThrow="will"}class ClassSubTypeFilter extends CheckboxFilter{static label="FFD20.ClassSubType.Label";static type="class";static indexField="system.classSubType";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.classSubTypes)}}class ClassParentFilter extends CheckboxFilter{static label="FFD20.ParentClass.Label";static type="class";static indexField="system.parentClass"}class ClassMPFilter extends CheckboxFilter{static label="FFD20.ClassMPType.Label";static type="class";static indexField="system.classBaseMPTypes";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.classBaseMPTypes)}}class ClassCastingStatFilter extends CheckboxFilter{static label="FFD20.SpellcastingAbility";static type="class";static indexField="system.classCastingStat";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.classCastingStats)}}const te=Object.freeze(Object.defineProperty({__proto__:null,ClassBaseAttackBonusFilter,ClassCastingStatFilter,ClassFortitudeFilter,ClassHitDieFilter,ClassMPFilter,ClassParentFilter,ClassReflexFilter,ClassSkillPointsFilter,ClassSubTypeFilter,ClassTypeFilter,ClassWillFilter},Symbol.toStringTag,{value:"Module"}));class CreatureTypeFilter extends CheckboxFilter{static label="FFD20.CreatureType";static type="race";static indexField="system.creatureTypes";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.creatureTypes)}}class CreatureSubTypeFilter extends CheckboxFilter{static label="FFD20.RaceSubtypePlural";static type="race";static indexField="system.creatureSubtypes";static defaultBooleanOperator=J;prepareChoices(){super.prepareChoices();const e=this.choices,t=this.constructor.getChoicesFromConfig(ffd20.config.creatureSubtypes);for(const s of t)e.set(s.key,s);this.choices=e}}const se=Object.freeze(Object.defineProperty({__proto__:null,CreatureSubTypeFilter,CreatureTypeFilter},Symbol.toStringTag,{value:"Module"}));class BuffTypeFilter extends CheckboxFilter{static label="FFD20.Type";static type="buff";static indexField="system.subType";prepareChoices(){this.choices=this.constructor.getChoicesFromConfig(ffd20.config.buffTypes)}}class CreatureCRFilter extends CheckboxFilter{static label="FFD20.ChallengeRatingShort";static indexField="system.details.cr.base";static types=["character","npc"];async prepareChoices(){await super.prepareChoices();const e=this.choices.contents.map((e=>Number(e.key))).sort(((e,t)=>e-t)).map((e=>{const t=ffd20.utils.CR.fromNumber(e);return[e.toString(),{key:e,label:t}]}));this.choices=new foundry.utils.Collection(e)}}const ae=Object.freeze(Object.defineProperty({__proto__:null,BaseFilter,CheckboxFilter,NumberRangeFilter,TextFilter,class:te,common:Q,feat:ee,item:X,race:se,spell:Y},Symbol.toStringTag,{value:"Module"})),ie=Object.freeze(Object.defineProperty({__proto__:null,BuffBrowser:class BuffBrowser extends CompendiumBrowser{static documentName="Item";static typeName="FFD20.Buffs";static filterClasses=[PackFilter,BuffTypeFilter,SourceFilter,TagFilter]},ClassBrowser:class ClassBrowser extends CompendiumBrowser{static typeName="FFD20.Classes";static filterClasses=[PackFilter,ClassTypeFilter,ClassSubTypeFilter,ClassParentFilter,ClassHitDieFilter,ClassMPFilter,ClassCastingStatFilter,ClassBaseAttackBonusFilter,ClassSkillPointsFilter,ClassFortitudeFilter,ClassReflexFilter,ClassWillFilter,SourceFilter,TagFilter]},CompendiumBrowser,CreatureBrowser:class CreatureBrowser extends CompendiumBrowser{static documentName="Actor";static typeName="FFD20.Creatures";static filterClasses=[PackFilter,CreatureCRFilter]},FeatBrowser:class FeatBrowser extends CompendiumBrowser{static typeName="FFD20.Feats";static filterClasses=[PackFilter,FeatTypeFilter,FeatClassFilter,SourceFilter,TagFilter]},ItemBrowser:class ItemBrowser extends CompendiumBrowser{static typeName="FFD20.Items";static filterClasses=[PackFilter,ItemTypeFilter,WeaponTypeFilter,WeaponSubtypeFilter,WeaponPropertyFilter,WeaponGroupFilter,EquipmentTypeFilter,EquipmentSubtypeFilter,ItemSlotFilter,ConsumableTypeFilter,MiscItemTypeFilter,ItemPriceFilter,ItemCasterLevelFilter,SourceFilter,TagFilter];static _mapEntry(e,t){const s=super._mapEntry(e,t),{subType:a,equipmentSubtype:i}=s.system;if(a){const e=Object.keys(ffd20.config.equipmentTypes[a]??{}).filter((e=>!e.startsWith("_")));0===e.length?s.system.equipmentSubtype="":e.includes(i)||(s.system.equipmentSubtype=e.at(0))}return s}},RaceBrowser:class RaceBrowser extends CompendiumBrowser{static typeName="FFD20.Races";static filterClasses=[PackFilter,CreatureTypeFilter,CreatureSubTypeFilter,SourceFilter,TagFilter]},SpellBrowser:class SpellBrowser extends CompendiumBrowser{static typeName="FFD20.Spells";static types=["spell"];static filterClasses=[PackFilter,SpellSchoolFilter,SpellMultischoolFilter,SpellSubschoolFilter,SpellDescriptorFilter,SpellLearnedByClassFilter,SpellLearnedByDomainFilter,SpellLevelFilter,SourceFilter,TagFilter];static _mapEntry(e,t){const s=super._mapEntry(e,t),a=Object.values(e.system.learnedAt??{}).map((e=>Object.values(e))).flat();return"number"==typeof e.system.level&&a.push(e.system.level),s.system.level=[...new Set(a)],s}},filters:ae},Symbol.toStringTag,{value:"Module"}));function addHeaders(e,t){let s=e.title.level-1;if(s<=0)return;const a=e.parent;if(!(a instanceof JournalEntry))return;const i=a.pages.contents.sort(((e,t)=>e.sort-t.sort)),n=i.indexOf(e);if(n<=0)return;const o=[];for(let e=n-1;e>=0;e--){const t=i[e],a=t.title.level;if(a<=s&&(s=a-1,o[s]=t,s<1))break}t.ffd20={headers:o}}class JournalTextPageSheetPF1 extends JournalTextPageSheet{get template(){return"text"!==this.document.type||this.isEditable?super.template:"systems/ffd20/templates/journals/text-view.hbs"}async getData(){const e=await super.getData();return addHeaders(this.document,e),e.text??={enriched:e.editor?.content},e}}function registerV13PageSheet(){game.release.generation>=13&&(!function unregisterV1Sheet(){DocumentSheetConfig.unregisterSheet(JournalEntryPage,"ffd20",JournalTextPageSheetPF1)}(),function registerV2Sheet(){class JournalTextPageSheetPF12 extends foundry.applications.sheets.journal.JournalEntryPageProseMirrorSheet{static VIEW_PARTS={content:{template:"systems/ffd20/templates/journals/text-view.hbs"}};async _prepareContext(e){const t=await super._prepareContext(e);return addHeaders(this.document,t),t.data??={},t.data.title=t.title,t}}DocumentSheetConfig.registerSheet(JournalEntryPage,"ffd20",JournalTextPageSheetPF12,{types:["text"],makeDefault:!1,label:"FFD20.Sheet.TextPage"})}())}const ne=Object.freeze(Object.defineProperty({__proto__:null,JournalTextPageSheetPF1,registerV13PageSheet},Symbol.toStringTag,{value:"Module"})),oe=Object.freeze(Object.defineProperty({__proto__:null,DragDropApplicationMixin,NoAutocomplete},Symbol.toStringTag,{value:"Module"}));const re=Object.freeze(Object.defineProperty({__proto__:null,restoreEditState:function restoreEditState(e,t){const s={};for(const t of e.constructor.EDIT_TRACKING)foundry.utils.setProperty(s,t,!0);for(const[a,i]of Object.entries(e._activeEdits))if(i){if(i!==foundry.utils.getProperty(t,a)){foundry.utils.setProperty(t,a,i),foundry.utils.setProperty(s,a,!1),console.debug("FFD20 | Restored interrupted edit state to",a);const n=e.editors[a];n&&(n.changed=!0)}delete e._activeEdits[a]}return e._activeEdits={},s},saveEditState:function saveEditState(e,t={}){if(e.form&&e.rendered){e.constructor.EDIT_TRACKING,t.renderContext,e._activeEdits={};for(const[t,s]of Object.entries(e.editors))s.active?e._activeEdits[t]=ProseMirror.dom.serializeString(s.instance.view.state.doc.content):delete e._activeEdits[t]}},trackStaleEditors:function trackStaleEditors(e,t){const s=t.querySelectorAll("prose-mirror.active");for(const t of s)e.constructor.EDIT_TRACKING?.includes(t.name)&&(t.classList.add("stale-editor"),t.addEventListener("change",(e=>t.classList.remove("stale-editor")),{once:!0}))}},Symbol.toStringTag,{value:"Module"})),{DocumentSheetV2:le,HandlebarsApplicationMixin:ce}=foundry.applications.api;class ActionSelector extends(ce(le)){static DEFAULT_OPTIONS={classes:["pf1-v2","action-selector"],window:{icon:"fa-solid fa-screwdriver-wrench",minimizable:!1,resizable:!1},actions:{click:ActionSelector._onClickAction},position:{width:390},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/action-select.hbs"}};get item(){return this.document}get title(){return game.i18n.format("FFD20.Application.ActionSelector.Title",{actor:this.item.actor.name,item:this.item.name})}async _prepareContext(){return{actions:this.item.actions}}static _onClickAction(e){e.preventDefault();const t=e.target.closest("[data-action]");this.resolve(t.dataset?.id),this.close()}close(...e){this.resolve(null),super.close(...e)}static async open(e){return new Promise((t=>{const s=new this(e);s.resolve=t,s.render(!0)}))}}class ChatAttack{action;actionUse;attack=null;hasRange=!1;critConfirm=null;hasAttack=!1;hasCritConfirm=!1;hasDamage=!1;damage=new AttackDamage;damageRows=[];nonlethal=!1;manadamage=!1;critDamage=new AttackDamage;ammo=null;hasCards=!1;cards={};effectNotes=[];effectNotesHTML="";notesOnly=!0;targets=null;constructor(e,{label:t="",rollData:s={},targets:a=null,actionUse:i=null}={}){this.actionUse=i,this.rollData=s,this.setAction(e),this.label=t,this.hasRange=e.item.hasRange,this.targets=a}get actor(){return this.action?.actor}setAmmo(e){const t=this.actor.items.get(e);this.ammo=t?{id:e,img:t.img,name:t.name,misfire:!1}:null}setAction(e){if(null==e)return this.rollData=null,void(this.action=null);this.action=e,this.isHealing=e.isHealing,this.setRollData()}setRollData(){const e=this.rollData;e.critMult=1,e.critCount=0;const t=e.action?.held||e.item?.held||"1h";e.ablMult=e.action.ability.damageMult??ffd20.config.abilityDamageHeldMultipliers[t]??1}async setEffectNotesHTML(){if(0===this.effectNotes.length)return void(this.effectNotesHTML="");const e=await renderTemplate("systems/ffd20/templates/chat/parts/item-notes.hbs",{notes:this.effectNotes,css:"effect-notes",header:game.i18n.localize("FFD20.EffectNotes")}),t={rollData:this.rollData,relativeTo:this.action.actor};this.effectNotesHTML=await TextEditor.enrichHTML(e,t)}async addAttack({noAttack:e=!1,bonus:t=null,extraParts:s=[],critical:a=!1,conditionalParts:i={}}={}){if(!this.action.item)return;const n=this.action.actor;this.hasAttack=!0,this.notesOnly=!1;const o=[];if(!0===a){if(this.action.critConfirmBonus){const e=this.action.critConfirmBonus,t=RollPF.parse(e);t.length>1?s.push(`(${e})[${game.i18n.localize("FFD20.CriticalConfirmation")}]`):t[0].flavor?s.push(e):s.push(`${e}[${game.i18n.localize("FFD20.CriticalConfirmation")}]`)}o.push(...n.changes.filter((e=>"critConfirm"===e.target))),i["attack.crit"]?.length&&s.push(...i["attack.crit"])}else i["attack.normal"]?.length&&s.push(...i["attack.normal"]);const r=this.rollData.item.broken;if(r&&!a){const e=game.i18n.localize("FFD20.Broken");s.push(`-2[${e}]`)}if(e||a&&!game.settings.get("ffd20","critConfirm")&&(this.critConfirm=this.actionUse?.getDefenseDC(this.attack)??RollPF.safeRollSync("0"),this.critConfirm.armorAsDR=!0,this.critConfirm.options.flavor=game.i18n.localize("FFD20.Critical"),e=!0),s=s.filter((e=>e&&0!=e)),!e){const e=await this.action.rollAttack({data:this.rollData,bonus:t,extraParts:s,extraChanges:o});!0===a?this.critConfirm=e:(this.attack=e,this.method=CONFIG.Dice.fulfillment.methods[e.d20.method]);const n=this.rollData.action.ability.critMult??1;!a&&!this.action.isCombatManeuver&&e.isCrit&&n>1&&(this.hasCritConfirm=!0,this.rollData.critMult=Math.max(1,n+(this.rollData.critMultBonus??0)),r&&(this.rollData.critMult=1),await this.addAttack({bonus:t,extraParts:s,critical:!0,conditionalParts:i})),e.options.flavor=a?game.i18n.localize("FFD20.CriticalConfirmation"):this.label}}async addDamage({flavor:e=null,extraParts:t=[],critical:s=!1,conditionalParts:a={}}={}){if(!this.action.item)return;this.hasDamage=!0,this.notesOnly=!1;let i=this.damage;!0===s&&(i=this.critDamage);const n=foundry.utils.deepClone(this.rollData);n.critCount=0;const o=s?Math.max(1,n.critMult-1):1;for(let e=0;e<o;++e)s&&n.critCount++,i.rolls.push(...await this.action.rollDamage({data:n,extraParts:t,critical:s,conditionalParts:a}));e||(e=s?game.i18n.localize("FFD20.DamageCritical"):this.isHealing?game.i18n.localize("FFD20.Healing"):game.i18n.localize("FFD20.Damage"));let r=i.rolls.reduce(((e,t)=>e+t.total),0);s&&(r=this.damage.rolls.reduce(((e,t)=>e+t.total),r)),r<1&&(r=1,e=game.i18n.localize("FFD20.Nonlethal"),this.nonlethal=!0),(this.rollData.action.nonlethal||this.action.item.system.properties?.nnl)&&(this.nonlethal=!0,e=game.i18n.localize("FFD20.Nonlethal")),this.rollData.action.manadamage&&(this.manadamage=!0,e=this.isHealing?game.i18n.localize("FFD20.ManaHealing"):game.i18n.localize("FFD20.ManaDamage")),i.flavor=e,i.total=r}async addEffectNotes({rollData:e}={}){this.effectNotes=[];const t=this.action.item;if(!t)return;const s=t.actor;if(s){const a=["attacks.effect"];"spell"===t.type&&a.push("spellEffect");for(const t of a)this.effectNotes.push(...await s.getContextNotesParsed(t,{rollData:e}))}if(t.system.effectNotes?.length&&this.effectNotes.push(...t.system.effectNotes.map((e=>({text:e})))),this.action.notes.effect.length&&this.effectNotes.push(...this.action.notes.effect.map((e=>({text:e})))),this.ammo?.misfire){let e=game.i18n.localize("FFD20.Misfire");const t=this.action.item?.system.ammo?.explode??0;if(t){e+=` (${ffd20.utils.convertDistance(t,"ft")[0]} ${"metric"===ffd20.utils.getDistanceSystem()?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft})`}this.effectNotes.push({text:e})}await this.setEffectNotesHTML()}_createInlineRoll(e,t=!1,s=!1){const a=["inline-dsn-hidden"];return t&&(s&&e.armorAsDR&&a.push("defense-dc"),e.isNat20&&a.push("natural-20","success"),e.isNat1&&a.push("natural-1","failure"),!s&&e.isCrit&&a.push("critical-threat")),e.toAnchor({classes:a})}_createInlineRolls(){this.attack&&(this.attack.inlineRoll=this._createInlineRoll(this.attack,!0)),this.critConfirm&&(this.critConfirm.inlineRoll=this._createInlineRoll(this.critConfirm,!0,!0));for(const e of this.damageRows)e.normal&&(e.normal.inlineRoll=this._createInlineRoll(e.normal)),e.crit&&(e.crit.inlineRoll=this._createInlineRoll(e.crit))}finalize(){this.hasCards=Object.keys(this.cards).length>0;for(let e=0;e<Math.max(this.damage.rolls.length,this.critDamage.rolls.length);e++)this.damageRows.push({normal:null,crit:null});for(let e=0;e<this.damage.rolls.length;e++)this.damageRows[e].normal=this.damage.rolls[e];for(let e=0;e<this.critDamage.rolls.length;e++)this.damageRows[e].crit=this.critDamage.rolls[e];return this._createInlineRolls(),this}}class AttackDamage{flavor="";total=0;rolls=[];get isActive(){return this.rolls.length>0}get half(){return Math.floor(this.total/2)}}const de=Object.freeze({NO_ACTOR_PERM:1,DISABLED:2,INSUFFICIENT_QUANTITY:3,INSUFFICIENT_CHARGES:4,MISSING_AMMO:5,INSUFFICIENT_AMMO:6,DISALLOWED_ACTION_TYPE:7});class ActionUse{actor;token;item;action;shared;constructor(e={}){Object.defineProperties(this,{shared:{value:e},item:{value:e.item},action:{value:e.action},actor:{value:e.item.actor},token:{value:e.token}}),this.shared.templateData={action:this.shared.action,item:this.shared.item}}checkRequirements(){if(this.action.isCombatManeuver&&this.actor.system.config?.noManeuvers)return ui.notifications.warn(game.i18n.format("FFD20.Error.DisallowedActionType",{name:e.name})),de.DISALLOWED_ACTION_TYPE;const e=this.item.actor;if(e&&!e.isOwner)return ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:e.name})),de.NO_ACTOR_PERM;if("feat"===this.item.type&&this.item.system.disabled)return ui.notifications.warn(game.i18n.localize("FFD20.Error.FeatDisabled")),de.DISABLED;if(null!==this.shared.cost&&this.shared.cost<=0)return 0;if(this.item.isPhysical){if((this.item.system.quantity||0)<=0)return ui.notifications.warn(game.i18n.localize("FFD20.Error.NoQuantity")),de.INSUFFICIENT_QUANTITY}return this.action.isSelfCharged&&this.action.uses.self?.value<1?(ui.notifications.warn(game.i18n.format("FFD20.Error.InsufficientCharges",{name:`${this.item.name}: ${this.action.name}`})),de.INSUFFICIENT_CHARGES):0}getRollData(){const e=this.shared.action.getRollData({cache:!1}),t=this.shared.dice;e.d20=t===ffd20.dice.D20RollPF.standardRoll?"":t,e.dcBonus||=0,e.chargeCost||=0,e.chargeCostBonus||=0,e.critMultBonus||=0,this.shared.rollData=e}createAttackDialog(){return new ffd20.applications.AttackDialog(this).show()}alterRollData(e={}){const t=this.shared.rollData,s=this.shared.useOptions;e["power-attack"]??=s.powerAttack,e["primary-attack"]??=s.primaryAttack,e["cl-check"]??=s.clCheck??!0===this.item?.system.clCheck,e["measure-template"]??=s.measureTemplate,e["haste-attack"]??=s.haste,e.manyshot??=s.manyshot,e["rapid-shot"]??=s.rapidShot,e["point-blank-shot"]??=s.pointBlankShot,e["damage-ability-multiplier"]??=s.abilityMult,e.flanking??=s.flanking,e.highGround??=s.highGround,e.charge??=s.charge,e.fullAttack??=!0,e.d20&&(t.d20=e.d20);const a=e["attack-bonus"];a&&this.shared.attackBonus.push(a);const i=e["damage-bonus"];i&&this.shared.damageBonus.push(i),e.rollMode&&(this.shared.rollMode=e.rollMode),e["point-blank-shot"]&&(this.shared.attackBonus.push(`1[${game.i18n.localize("FFD20.PointBlankShot")}]`),this.shared.damageBonus.push(`1[${game.i18n.localize("FFD20.PointBlankShot")}]`),this.shared.pointBlankShot=!0),e.flanking&&(this.shared.attackBonus.push(`2[${game.i18n.localize("FFD20.Flanking")}]`),this.shared.flanking=!0),e.highGround&&(this.shared.attackBonus.push(`1[${game.i18n.localize("FFD20.HighGround")}]`),this.shared.highGround=!0),e.charge&&(this.shared.attackBonus.push(`2[${game.i18n.localize("FFD20.Charge")}]`),this.shared.charge=!0),this.shared.fullAttack=e.fullAttack,t.fullAttack=this.shared.fullAttack?1:0,this.shared.fullAttack&&e.manyshot&&(this.shared.manyShot=!0),this.shared.fullAttack&&e["rapid-shot"]&&this.shared.attackBonus.push(`-2[${game.i18n.localize("FFD20.RapidShot")}]`),null!=e["primary-attack"]&&foundry.utils.setProperty(t,"action.naturalAttack.primary",e["primary-attack"]),null!=e["measure-template"]&&(this.shared.useMeasureTemplate=e["measure-template"]);const n=e.held||t.action.held||t.item.held||"1h";t.action.held=n;const o=e["damage-ability-multiplier"];if(null!=o&&(t.action.ability.damageMult=o),e["power-attack"]){const e=t.action?.powerAttack?.damageBonus??2;let s=(1+Math.floor(t.attributes.bab.total/4))*e;const a=this.shared.action.getPowerAttackMult({rollData:t});s=Math.floor(s*a);const i=["rwak","twak","rsak"].includes(this.action.actionType)?game.i18n.localize("FFD20.DeadlyAim"):game.i18n.localize("FFD20.PowerAttack"),n=-(1+Math.floor(t.bab/4));t.powerAttackPenalty=n,this.shared.attackBonus.push(`${n}[${i}]`),this.shared.powerAttack=!0,t.powerAttackBonus=s,t.powerAttackPenalty=n}else t.powerAttackBonus=0,t.powerAttackPenalty=0;const{conditionals:r}=foundry.utils.expandObject(e);if(r&&(this.shared.conditionals=[],Object.entries(r).forEach((([e,t])=>{t&&this.shared.conditionals.push(e)}))),this.shared.conditionals||(this.shared.conditionals=this.shared.action.conditionals?.reduce(((e,t)=>(t.default&&e.push(t.id),e)),[])),"natural"===t.item.subType&&!1===t.action?.naturalAttack.primary){const e=t.action.naturalAttack?.secondary?.attackBonus||ffd20.config.naturalAttacks.secondary.penalty;let s=t.action.naturalAttack?.secondary?.damageMult??.5;o&&(s=o),this.shared.attackBonus.push(`(${e})[${game.i18n.localize("FFD20.SecondaryAttack")}]`),t.action.ability.damageMult=s}this.shared.casterLevelCheck=e["cl-check"],this.shared.concentrationCheck=e.concentration}generateAttacks(e=!1){const t=this.shared.rollData,s=this.action,a=e||this.shared.fullAttack,i=this.action.getAttacks({full:a,rollData:t,conditionals:!1,bonuses:!1,resolve:!1}).map((e=>new ActionUseAttack(e.label,e.bonus)));if(this.action.ammo.type){const e=this.item.system.ammo?.default,t=this.getAmmo();if(e&&t.length){const a=t.find((t=>t.id===e)),n=a?.quantity||0,o=s.ammo.cost,r=a?.abundant||!1;for(let e=0;e<i.length;e++){const t=i[e];t.ammo=r||n>=(e+1)*o?a:null}}}return this.shared.attacks=i,i}async autoSelectAmmo(){const e=this.shared.action.ammo.type;if(!e)return;const t=this.action.ammo.cost,s=this.item.defaultAmmo;if(s&&(s.system.quantity||0)>=t)return;const a=this.actor.itemTypes.loot.filter((s=>"ammo"===s.subType&&s.system.extraType===e&&s.system.quantity>=t&&!1!==s.system.identified)).sort(((e,t)=>e.system.price-t.system.price));0!=a.length&&await this.item.update({"system.ammo.default":a[0].id})}getAmmo(){const e=this.actor,t=this.action.ammo.cost,s=e.itemTypes.loot.filter((e=>this._filterAmmo(e,t))),a=this.action.item.defaultAmmo;return s.map((e=>({id:e.id,quantity:e.system.quantity||0,abundant:e.system.abundant||!1,data:e.toObject(),document:e,isDefault:a===e})))}_filterAmmo(e,t=1){if("loot"!==e.type||"ammo"!==e.subType)return!1;if(e.system.quantity<t)return!1;const s=e.system.extraType;return!s||this.action.ammo.type===s}async subtractAmmo(e=1){if(!this.shared.action.ammo.type)return;const t=this.item.actor,s={};for(const a of this.shared.attacks)if(a.ammo){const i=t.items.get(a.ammo.id);if(!i)continue;if(i.system.abundant)continue;s[a.ammo.id]??=0,s[a.ammo.id]+=e}if(this.shared.ammoUsage=s,!foundry.utils.isEmpty(s)){const e=Object.entries(s).reduce(((e,[t,s])=>{const a=this.item.actor.items.get(t)?.system.quantity,i={_id:t,"system.quantity":a-s};return e.push(i),e}),[]);return this.item.actor.updateEmbeddedDocuments("Item",e)}}updateAmmoUsage(){const e=this.actor,t=this.action.ammo.cost;if(!(t<=0))for(const s of this.shared.attacks){const a=s.ammo?.id;if(!a)continue;const i=s.chatAttack,n=e.items.get(a)?.system.quantity||0;i.ammo.remaining=n,i.ammo.quantity=t}}async handleConditionals(){if(!this.shared.conditionals?.length)return;const e={};for(const t of this.shared.conditionals){const s=this.shared.action.conditionals.get(t),a=ffd20.utils.createTag(s.name);for(const[t,i]of s.modifiers.entries()){if(0==i.formula){console.warn("Ignored ineffective conditional modifier",{modifier:i,actionUse:this});continue}const n=await RollPF.safeRoll(i.formula,this.shared.rollData,void 0,void 0,{allowInteractive:!1});if(n.err){ui.notifications.warn(game.i18n.format("FFD20.Warning.ConditionalRoll",{number:t+1,name:s.name}));continue}e[a]??={},e[a][t]=n.total;const o=i.partID;switch(i.target){case"attack":case"effect":case"charges":case"misc":case"dc":case"cl":{const e=/\[.*\]/.test(i.formula)?i.formula:`(${i.formula})[${s.name}]`;this.shared.conditionalPartsCommon[o]=[...this.shared.conditionalPartsCommon[o]??[],e];break}case"damage":this.shared.conditionalPartsCommon[o]=[...this.shared.conditionalPartsCommon[o]??[],[i.formula,i.damageType,!1]];break;case"size":this.shared.rollData.size+=n.total,this.shared.rollData.item&&(this.shared.rollData.item.size+=n.total);break;case"critMult":this.shared.rollData.critMultBonus+=n.total;break;default:console.warn("Invalid conditional target:",i.target)}}}this.shared.rollData.conditionals=e;for(const e of["cl","dc","charges"]){const t=this.shared.conditionalPartsCommon[e];if(!t)continue;const s=t.join(" + "),a=await RollPF.safeRoll(s,this.shared.rollData,[e,s]);switch(e){case"cl":this.shared.rollData.cl+=a.total;break;case"dc":this.shared.rollData.dcBonus+=a.total;break;case"charges":this.shared.rollData.chargeCostBonus+=a.total}}}checkAttackRequirements(){let e=this.shared.rollData.chargeCost;const t="spell"===this.item.type;if(e>0){const s=this.item.charges;if(t&&this.item.spellbook?.spontaneous&&!this.item.system.preparation?.value&&(e=1/0),e>s)return t&&this.item.maxCharges<=0?ui.notifications.warn(game.i18n.format("FFD20.Error.InsufficientPreparation",{name:this.item.name})):ui.notifications.warn(game.i18n.format("FFD20.Error.InsufficientCharges",{name:this.item.name})),de.INSUFFICIENT_CHARGES}return 0}async generateChatAttacks(){this.shared.action.hasAttack?await this.addAttacks():this.shared.action.hasDamage?await this.addDamage():await this.addEmptyAttack();const e=this.action.misfire??0;this.shared.attacks.forEach((t=>{if(!t.hasAmmo)return;const s=t.chatAttack;if(s&&s.setAmmo(t.ammo.id),s.ammo){const t=s.attack?.d20?.total;s.ammo.misfire=t<=e}})),this.shared.save=this.shared.action.save.type,this.shared.saveDC=this.shared.action.getDC(this.shared.rollData)}_getConditionalParts(e,{index:t=0}){const s={},a={"attack.normal":"attack.;id;.normal","attack.crit":"attack.;id;.crit","damage.normal":"damage.;id;.normal","damage.crit":"damage.;id;.crit","damage.nonCrit":"damage.;id;.nonCrit"},addPart=e=>{for(const[t,i]of Object.entries(a)){s[t]||(s[t]=[]);const a=i.replace(";id;",e);s[t].push(...this.shared.conditionalPartsCommon[a]??[])}};return addPart("attack_"+t),addPart("allAttack"),addPart("allDamage"),"rapid-shot"===e.type?(addPart("rapidShotAttack"),addPart("rapidShotDamage")):"haste-attack"===e.type&&(addPart("hasteAttack"),addPart("hasteDamage")),s}async addAttacks(){const e=this.shared.rollData;for(let t=0;t<this.shared.attacks.length;t++){const s=this.shared.attacks[t],a=this._getConditionalParts(s,{index:t});e.attackCount=t;const i=new ChatAttack(this.shared.action,{label:s.label,rollData:e,targets:game.user.targets,actionUse:this});if("manyshot"!==s.type&&await i.addAttack({extraParts:[...this.shared.attackBonus,s.attackBonus],conditionalParts:a}),this.shared.action.hasDamage){const t=foundry.utils.deepClone(this.shared.damageBonus),n=[],o=[];if(e.powerAttackBonus>0){const t=["rwak","twak","rsak"].includes(this.shared.action.actionType)?game.i18n.localize("FFD20.DeadlyAim"):game.i18n.localize("FFD20.PowerAttack"),s=e.powerAttackBonus,a=s*(e.action?.powerAttack?.critMultiplier??1);n.push(`${s}[${t}]`),o.push(`${a}[${t}]`)}let r=null;"manyshot"===s.type&&(r=game.i18n.localize("FFD20.Manyshot")),await i.addDamage({flavor:r,extraParts:[...t,...n],critical:!1,conditionalParts:a}),i.hasCritConfirm&&await i.addDamage({extraParts:[...t,...o],critical:!0,conditionalParts:a})}this.shared.chatAttacks.push(i),s.chatAttack=i}delete e.attackCount}async addDamage(){this.shared.conditionalParts={"damage.normal":this.shared.conditionalPartsCommon["damage.allDamage.normal"]??[]};const e=new ChatAttack(this.shared.action,{rollData:this.shared.rollData,primaryAttack:this.shared.primaryAttack,actionUse:this});await e.addDamage({extraParts:foundry.utils.deepClone(this.shared.damageBonus),critical:!1,conditionalParts:this.shared.conditionalParts}),this.shared.chatAttacks.push(e)}async addFootnotes(){if(!this.item)return;const e=this.actor,t=this.shared.rollData,s=this.action.actionType,a={rsak:["ranged","rangedSpell"],rwak:["ranged","rangedWeapon"],twak:["ranged","thrownWeapon","rangedWeapon"],rcman:["ranged"],mwak:["melee","meleeWeapon"],msak:["melee","meleeSpell"],mcman:["melee"]},i=this.action.hasAttack??!1,n=[];if(this.actor&&i){n.push(...await e.getContextNotesParsed("attack",{rollData:t}));for(const i of a[s])n.push(...await e.getContextNotesParsed(i,{rollData:t}))}if(this.item?.system.attackNotes&&n.push(...this.item.system.attackNotes.map((e=>({text:e})))),this.action.notes.footer&&n.push(...this.action.notes.footer.map((e=>({text:e})))),this.action.isCombatManeuver&&n.push(...await(e?.getContextNotesParsed("cmb",{rollData:t}))??[]),i){this.shared.attacks.some((e=>!!e.chatAttack?.hasCritConfirm))&&n.push(...await(e?.getContextNotesParsed("critical",{rollData:t}))??[])}this.shared.templateData.footnotes=n}async addEmptyAttack(){const e=new ChatAttack(this.shared.action,{rollData:this.shared.rollData,primaryAttack:this.shared.primaryAttack,actionUse:this});this.shared.chatAttacks.push(e)}async addEffectNotes(){const e=this.shared.chatAttacks.filter((e=>"manyshot"!==e.type)).map((e=>e.addEffectNotes({rollData:this.shared.rollData})));await Promise.all(e)}async promptMeasureTemplate(){const e=this.shared.action.measureTemplate;let t=RollPF.safeRollSync(e.size,this.shared.rollData).total;t=ffd20.utils.convertDistance(t)[0];const{distancePixels:s,width:a,height:i}=canvas.scene.dimensions,n=Math.max(a/s,i/s);if(t>n)return console.debug("FFD20 | Action-Use | Template size exceeds maximum size",{distance:t,maximum:n}),!1;const o={type:e.type,color:e.color,texture:e.texture,distance:t,flags:{ffd20:{origin:{uuid:this.shared.action.uuid}}}};this.shared.template=null;const r=ffd20.canvas.AbilityTemplate.fromData(o,{action:this.shared.action});let l;if(r){const e=this.item.actor?.sheet,t=null!=e?._element;t&&e.minimize(),l=await r.drawPreview(this.shared.event).catch((e=>null)),t&&e.maximize()}return l&&(this.shared.template=await l.place()),l}async handleDiceSoNice(){if(game.settings.get("ffd20","integration").diceSoNice&&game.dice3d?.isEnabled())try{const e={};ChatMessage.implementation.applyRollMode(e,this.shared.rollMode);const t=game.settings.get("dice-so-nice","enabledSimultaneousRolls"),s=game.settings.get("dice-so-nice","immediatelyDisplayChatMessages"),showRoll=async s=>{const a=e.whisper?.length?e.whisper:void 0;if(t)return Promise.all(s.map((t=>game.dice3d.showForRoll(t,game.user,!0,a,e.blind))));for(const t of s)await game.dice3d.showForRoll(t,game.user,!0,a,e.blind)},a=[];for(const e of this.shared.chatAttacks){const t=new foundry.dice.terms.PoolTerm;e.attack&&t.rolls.push(e.attack),t.rolls.push(...e.damage?.rolls??[]);const s=new foundry.dice.terms.PoolTerm;e.hasCritConfirm&&s.rolls.push(e.critConfirm),s.rolls.push(...e.critDamage?.rolls??[]),t.rolls.length&&a.push(t),s.rolls.length&&a.push(s)}a.length&&(s?showRoll(a):await showRoll(a))}catch(e){console.error(e)}}async getMessageData(){if(0===this.shared.chatAttacks.length)return;const e=this.shared.rollData;this.shared.templateData={...this.shared.templateData,name:this.item.name,header:{image:this.action.img||this.item.img},style:CONST.CHAT_MESSAGE_STYLES.OTHER,rollMode:this.shared.rollMode,attacks:this.shared.chatAttacks.map((e=>e.finalize()))};const t=this.item.actor,s=this.token??t?.token;this.shared.chatData={type:"action",speaker:ChatMessage.implementation.getSpeaker({actor:t,token:s}),rollMode:this.shared.rollMode},this.shared.action.soundEffect?this.shared.chatData.sound=this.shared.action.soundEffect:game.settings.get("ffd20","integration").diceSoNice&&game.dice3d?.isEnabled()||(this.shared.chatData.sound=CONFIG.sounds.dice);const a=[],i=await this.enrichNotes(this.shared.templateData.footnotes,"FFD20.Footnotes","footnotes"),n=await this.item.getChatData({actionId:this.shared.action.id,chatcard:!0,rollData:this.shared.rollData}),formatTextNotes=e=>e?.map((e=>({text:e})))??[],o=[...n.properties,...this.addGenericPropertyLabels()];if(o.length&&a.push({header:game.i18n.localize("FFD20.InfoShort"),css:"common-notes",value:formatTextNotes(o)}),game.combat){const e=this.addCombatPropertyLabels();e.length&&a.push({header:game.i18n.localize("FFD20.CombatInfo_Header"),value:formatTextNotes(e),css:"combat-properties"})}if("spell"===this.item.type&&t){const s=await t.getContextNotesParsed("spell.cl."+this.item.system.spellbook,{rollData:e});s.length&&a.push({header:game.i18n.localize("FFD20.CLNotes"),css:"cl-notes",value:s});const i=this.item.system.school;if(i){const s=await t.getContextNotesParsed("dc.school."+i,{rollData:e});s.length&&a.push({header:game.i18n.format("FFD20.DCSchoolNotes",{school:ffd20.config.spellSchools[i]}),css:"dc-notes",value:s});const n=await t.getContextNotesParsed("cl.school."+i,{rollData:e});n.length&&a.push({header:game.i18n.format("FFD20.CLSchoolNotes",{school:ffd20.config.spellSchools[i]}),css:"cl-notes",value:n})}}const r=!!(this.shared.rollData.item?.identified??!0),l=r?`${this.item.name} (${this.shared.action.name})`:this.item.getName(!0);this.shared.templateData={...this.shared.templateData,tokenUuid:s?.uuid,actionId:this.shared.action?.id,extraText:i,identified:r,name:l,description:r?n.identifiedDescription:n.unidentifiedDescription,actionDescription:n.actionDescription,properties:a,item:this.item.toObject(),actor:t,token:s,scene:canvas.scene?.id,hasSave:this.shared.action.hasSave,rollData:this.shared.rollData,save:{dc:this.shared.saveDC,type:this.shared.save,label:game.i18n.format("FFD20.SavingThrowButtonLabel",{type:ffd20.config.savingThrows[this.shared.save],dc:this.shared.saveDC.toString()}),gmSensitiveLabel:game.i18n.format("FFD20.SavingThrowButtonLabelGMSensitive",{save:ffd20.config.savingThrows[this.shared.save]})}};{const e=this.shared.action.getRange({type:"max",rollData:this.shared.rollData});if(null!=e){this.shared.templateData.range=e;const t="metric"===ffd20.utils.getDistanceSystem()?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft,s=this.shared.action.range.units;["melee","touch","reach","close","medium","long"].includes(s)?(this.shared.templateData.rangeLabel=ffd20.config.distanceUnits[s],this.shared.templateData.rangeLabel+=` (${game.i18n.format("FFD20.RangeFormat",{distance:e,units:t})})`,this.shared.templateData.rangeLabel=game.i18n.format("FFD20.RangeNote",{distance:this.shared.templateData.rangeLabel,units:""})):this.shared.templateData.rangeLabel=game.i18n.format("FFD20.RangeNote",{distance:e,units:t})}}if("spell"===this.item.type&&t){if(t.spellFailure>0&&this.item.system.components.somatic){const e=foundry.utils.getProperty(t.system,"attributes.spells.spellbooks."+this.item.system.spellbook);if(e&&e.arcaneSpellFailure){const e=await RollPF.safeRoll("1d100");this.shared.templateData.spellFailure=e.total,this.shared.templateData.spellFailureRoll=e,this.shared.templateData.spellFailureSuccess=e.total>t.spellFailure}}this.shared.templateData.casterLevelCheck=this.shared.casterLevelCheck,this.shared.templateData.concentrationCheck=this.shared.concentrationCheck}const c=this.generateChatMetadata();game.settings.get("ffd20","disableAttackCardTargets")||(this.shared.templateData.targets=this.shared.targets.map((e=>({img:e.document.texture.src,actor:e.actor,token:e.document,uuid:e.document.uuid})))),r||(c.item.identified=r,c.item.name=this.item._source.name||this.item.name,c.item.description=n.identifiedDescription,c.action.name=this.shared.action.name,c.action.description=n.actionDescription),this.shared.chatData.system=c,this.shared.chatData["flags.core.canPopout"]=!0}async enrichNotes(e,t,s){if(0===e.length)return;const a=await renderTemplate("systems/ffd20/templates/chat/parts/item-notes.hbs",{notes:e,css:s,header:game.i18n.localize(t)}),i={rollData:this.shared.rollData,relativeTo:this.actor};return TextEditor.enrichHTML(a,i)}addGenericPropertyLabels(){const e=[],t=this.shared.totalChargeCost;t&&!this.item.system.atWill&&("spell"===this.item.type&&this.item.useSpellPoints()?e.push(`${game.i18n.localize("FFD20.SpellPointsCost")}: ${t}`):e.push(`${game.i18n.localize("FFD20.ChargeCost")}: ${t}`));const s=Object.entries(this.actor.system.conditions??{}).filter((([e,t])=>t)).map((([e])=>ffd20.registry.conditions.get(e))).filter((e=>e?.showInAction)).map((e=>e.name));this.actor.statuses.has("deaf")&&"spell"===this.item.type&&s.push(ffd20.registry.conditions.get("deaf").name),s.length&&e.push(...s),this.action.nonlethal&&e.push(game.i18n.localize("FFD20.Nonlethal")),this.action.manadamage&&e.push(game.i18n.localize("FFD20.ManaDamage")),this.action.splash&&e.push(game.i18n.localize("FFD20.Splash")),this.action.touch&&e.push(game.i18n.localize("FFD20.TouchAttackShort"));let a=null,i=null;const n=this.action.material?.normal.value,o=this.item.system.material?.normal.value,r=this.item.system.material?.base?.value,l=this.action.material?.addon,c=this.item.system.material?.addon;if(a=n&&n.length>0?n:o&&o.length>0?o:r,a&&e.push(ffd20.registry.materials.get(a.toLowerCase())?.name??a.capitalize()),l&&l.length>0?i=l:c&&c.length>0&&(i=c),i){const t=i.map((e=>{if(!e)return null;return ffd20.registry.materials.get(e.toLowerCase())?.name??e.capitalize()})).filter((e=>!!e));t.length>0&&e.push(...t)}const d=this.action.alignments,u=this.item.system.alignments??{};if(d)for(const t of Object.keys(d))(d[t]||null===d[t]&&u[t])&&e.push(game.i18n.localize("FFD20.Alignments."+t[0]));else for(const t of Object.keys(u))u[t]&&e.push(game.i18n.localize("FFD20.Alignments."+t[0]));if(this.shared.powerAttack)switch(this.action.actionType){case"rwak":case"twak":e.push(game.i18n.localize("FFD20.DeadlyAim"));break;case"mwak":e.push(game.i18n.localize("FFD20.PowerAttack"))}this.shared.pointBlankShot&&e.push(game.i18n.localize("FFD20.PointBlankShot")),this.shared.attacks.find((e=>"rapid-shot"===e.id))&&e.push(game.i18n.localize("FFD20.RapidShot")),this.shared.manyShot&&e.push(game.i18n.localize("FFD20.Manyshot")),this.item.hasAttack&&this.shared.rollData.attributes?.acp?.attackPenalty>0&&e.push(game.i18n.localize("FFD20.ArmorCheckPenalty"));for(const t of this.shared.conditionals){const s=this.shared.action.conditionals.get(t);e.push(s.name||game.i18n.localize("FFD20.Undefined"))}return this.shared.rollData.attributes?.woundThresholds?.level>0&&e.push(ffd20.config.woundThresholdConditions[this.shared.rollData.attributes.woundThresholds.level]),e}addCombatPropertyLabels(){const e=[];return e.push(game.i18n.format("FFD20.CombatInfo_Round",{round:game.combat.round})),e}generateChatMetadata(){const e={actor:this.actor.uuid,item:{id:this.item.id},action:{id:this.action.id},combat:void 0,template:this.shared.template?.uuid??null,rolls:{attacks:[]},targets:this.shared.targets.map((e=>e.document.uuid)),config:{critMult:this.shared.rollData.critMult}};this.action.nonlethal&&(e.config.nonlethal=!0),this.action.manadamage&&(e.config.manadamage=!0),e.config.cl=this.shared.rollData.cl,"spell"===this.item.type&&(e.config.sl=this.shared.rollData.sl),this.actor&&game.combat?.combatants.some((e=>e.actor===this.actor))&&(e.combat=game.combat.id);for(let t=0;t<this.shared.chatAttacks.length;t++){const s=this.shared.chatAttacks[t],a={attack:null,damage:[],critConfirm:null,critDamage:[]};if(s.attack&&(a.attack=s.attack.toJSON()),s.damage.rolls.length)for(let e=0;e<s.damage.rolls.length;e++){const t=s.damage.rolls[e];a.damage[e]=t.toJSON()}if(s.critConfirm&&(a.critConfirm=s.critConfirm.toJSON()),s.critDamage.rolls.length)for(let e=0;e<s.critDamage.rolls.length;e++){const t=s.critDamage.rolls[e];a.critDamage[e]=t.toJSON()}s.ammo?.id&&(a.ammo={id:s.ammo.id,quantity:this.shared.action.ammo.cost,misfire:s.ammo.misfire??!1}),e.rolls.attacks[t]=a}return this.shared.saveDC&&(e.save={dc:this.shared.saveDC,type:this.shared.save}),"spell"===this.item.type&&(e.spell={cl:this.shared.rollData.cl,sl:this.shared.rollData.sl}),e}async executeScriptCalls(e="use"){const t=this.shared;"attackData"in t||Object.defineProperty(t,"attackData",{get:()=>(foundry.utils.logCompatibilityWarning("shared.attackData is deprecated in favor of directly accessing shared",{since:"PF1 v10",until:"PF1 v12"}),t)});const s=await this.item.executeScriptCalls(e,{},t);"use"===e&&(this.shared.scriptData=s)}async postMessage(){if(this.shared.chatTemplate||="systems/ffd20/templates/chat/attack-roll.hbs",!1===Hooks.call("pf1PreDisplayActionUse",this))return this.shared;if(!this.shared.chatMessage||this.shared.scriptData.hideChat)return this.shared;const e={rollData:this.shared.rollData,secrets:this.isOwner,relativeTo:this.actor},t=await renderTemplate(this.shared.chatTemplate,this.shared.templateData);this.shared.chatData.content=await TextEditor.enrichHTML(t,e);const s=this.shared.chatData.system;s.item?.description&&(s.item.description=await TextEditor.enrichHTML(s.item.description,e)),s.action?.description&&(s.action.description=await TextEditor.enrichHTML(s.action.description,e)),this.shared.chatData.rollMode??=game.settings.get("core","rollMode"),ChatMessage.implementation.applyRollMode(this.shared.chatData,this.shared.chatData.rollMode);const a=await ChatMessage.implementation.create(this.shared.chatData);return this.shared.message=a,a}async getTargets(){const e=this.shared.template?.object;let t=e?await e.getTokensWithin():null;t??=Array.from(game.user.targets),this.shared.targets=t.filter((e=>!0!==e.combatant?.isDefeated))}getDefenseDC(e){const t=this._getDefenseDCParts(e);return RollPF.safeRollSync(t.join(" + "))}_getDefenseDCParts(e){const t=[],s=e.d20.total;t.push(`${s}[${game.i18n.localize("FFD20.Rolls.Check.Label")}]`);const a=game.i18n.localize("FFD20.BAB"),i=e.terms.find((e=>e.flavor===a))?.number??0;return t.push(`${Math.floor(i/2)}[${game.i18n.localize("FFD20.HalfBAB")}]`),t}async prepareChargeCost(){const e=this.shared.rollData,t=await this.shared.action.getChargeCost({rollData:e});let s=(t?.total||0)+(this.shared.rollData.chargeCostBonus??0);null!==this.shared.cost&&(s=this.shared.cost),this.shared.rollData.chargeCost=s}async process({skipDialog:e=!1}={}){const t=this.shared;let s,a,i=await this.checkRequirements();if(i>0)return{err:ffd20.actionUse.ERR_REQUIREMENT,code:i};if(await this.autoSelectAmmo(),this.getRollData(),Hooks.callAll("pf1CreateActionUse",this),t.fullAttack=!0,await this.generateAttacks(!0),!e&&(s=await this.createAttackDialog(),!s))return;if(this.formData=s??{},this.shared.formData=this.formData,await this.alterRollData(this.formData),t.action.ammo.type&&t.action.ammo?.cost>0&&(t.attacks=t.attacks.filter((e=>e.hasAmmo)),0===t.attacks.length))return ui.notifications.error(game.i18n.localize("FFD20.AmmoDepleted")),{err:ffd20.actionUse.ERR_REQUIREMENT,code:ffd20.actionUse.ERR_REQUIREMENT.INSUFFICIENT_AMMO};if(t.fullAttack||(t.attacks=t.attacks.slice(0,1)),await this.handleConditionals(),await this.prepareChargeCost(),0!=t.rollData.chargeCost&&this.shared.action.uses?.perAttack){const e=t.rollData.chargeCost,s=t.item.charges;if(t.attacks.forEach(((t,a)=>{t.chargeCost=s>=(a+1)*e?e:null})),t.attacks=t.attacks.filter((e=>null!==e.chargeCost)),0===t.attacks.length)return ui.notifications.error(game.i18n.localize("FFD20.ChargesDepleted")),{err:ffd20.actionUse.ERR_REQUIREMENT,code:ffd20.actionUse.ERR_REQUIREMENT.INSUFFICIENT_CHARGES}}if(i=await this.checkAttackRequirements(),i>0)return{err:ffd20.actionUse.ERR_REQUIREMENT,code:i};if(t.useMeasureTemplate&&canvas.scene&&(a=await this.promptMeasureTemplate(),null===a))return;if(await this.getTargets(),await this.generateChatAttacks(),await this.addEffectNotes(),await this.addFootnotes(),!1===Hooks.call("pf1PreActionUse",this))return void await(a?.delete());if(await this.executeScriptCalls(),t.scriptData?.reject)return void await(a?.delete());const n=[];n.push(this.handleDiceSoNice());const o=this.action.ammo.cost;0!=o&&n.push(this.subtractAmmo(o));let r=t.rollData?.chargeCost;this.action.uses.perAttack&&(r=this.shared.attacks.reduce(((e,t)=>e+t.chargeCost),0)),0!=r&&(t.totalChargeCost=r,n.push(this.item.addCharges(-r))),t.action.isSelfCharged&&n.push(t.action.update({"uses.self.value":t.action.uses.self.value-1})),await Promise.all(n),this.updateAmmoUsage(),await this.getMessageData();let l=Promise.resolve(null);return!0!==t.scriptData?.hideChat&&(l=this.postMessage()),game.settings.get("ffd20","clearTargetsAfterAttack")&&game.user.targets.size&&(game.user.updateTokenTargets([]),game.user.broadcastActivity({targets:[]})),await l,await this.executeScriptCalls("postUse"),Hooks.callAll("pf1PostActionUse",this,this.shared.message??null),this}}class ActionUseAttack{type;label;attackBonus;abstract;ammo=null;chargeCost=null;chatAttack=null;get hasAmmo(){return!!this.ammo}constructor(e,t="",s=null,{abstract:a=!1,type:i=null}={}){this.label=e,this.attackBonus=t,this.ammo=s,this.abstract=a??!1,this.type=i}}class AttackDialog extends Application{constructor(e,t={}){super(t),this.actionUse=e,this.object=e.action;const s=e.action,a=e.item,i=e.shared;this.shared=i,this.attacks=this.shared.attacks,a.actor&&(a.actor.apps[this.appId]=this),this.useOptions=i.useOptions??{},this.rollData=i.rollData,this.initAmmoUsage(),this.initAttacks(),this.base={cl:this.rollData.cl??0,sl:this.rollData.sl??0};const n=!("natural"===s.item.subType)||!1!==s.naturalAttack.primary,o=this.useOptions;this.flags={"power-attack":o.powerAttack??!1,"primary-attack":o.primaryAttack??n,"cl-check":o.clCheck??!0===a?.system.clCheck,"measure-template":o.measureTemplate??!0,"haste-attack":o.haste??!1,manyshot:o.manyshot??!1,"rapid-shot":o.rapidShot??!1,"point-blank-shot":o.pointBlankShot??!1,flanking:o.flanking??!1,highGround:o.highGround??!1,charge:o.charge??!1};let r=this.damageMult;null!=o.abilityMult&&(r=o.abilityMult),this.attributes={d20:this.rollData.d20??"","attack-bonus":"","damage-bonus":"","cl-offset":"0","sl-offset":"0",rollMode:i.rollMode||game.settings.get("core","rollMode"),"damage-ability-multiplier":r,held:o.held||this.rollData.action?.held||this.rollData.item?.held||"1h"},this.conditionals={};for(const e of s.conditionals)this.conditionals["conditionals."+e.id]={enabled:!0===e.default,conditional:e};o.haste&&this._toggleExtraAttack("haste-attack",!0),o.manyshot&&this._toggleExtraAttack("manyshot",!0),o.rapidShot&&this._toggleExtraAttack("rapid-shot",!0),this.resolve=null}get damageMult(){const e=this.rollData;let t=e.action?.ability?.damageMult;if("natural"===this.item?.subType){t??=1;this.flags["primary-attack"]||(t=e.action.naturalAttack?.secondary?.damageMult??.5)}return t}get action(){return this.object}get item(){return this.action.item}get actor(){return this.item?.actor}get title(){const e=this.action,t=e.item,s=e.actor;return s?`${e.name} (${t.name}) – ${s.name}`:`${e.name} (${t.name})`}static get defaultOptions(){return{...super.defaultOptions,template:"systems/ffd20/templates/apps/attack-roll-dialog.hbs",classes:["ffd20","attack-dialog"],width:440,height:"auto",closeOnSubmit:!0,sheetConfig:!1,submitOnChange:!1,submitOnClose:!1}}getData(){const e=this.action,t=e.item,s=this.rollData;if(this.action.ammo.type){const e=this.actionUse.getAmmo();for(const t of e)t.used=0,this.ammoUsage[t.id]??=t;const t=new Set(e.map((e=>e.id)));for(const e of Object.keys(this.ammoUsage))if(!t.has(e)){for(let t=0;t<this.attacks.length;t++){const s=this.attacks[t];s.ammo?.id===e&&this.setAttackAmmo(t)}delete this.ammoUsage[e]}}const a={data:s,item:t,action:e,config:ffd20.config,rollMode:game.settings.get("core","rollMode"),rollModes:CONFIG.Dice.rollModes,hasAttack:e.hasAttack,hasDamage:e.hasDamage,hasDamageAbility:!!e.ability?.damage,isNaturalAttack:"natural"===t.system.subType,isWeaponAttack:"weapon"===t.system.subType,isRanged:e.isRanged,isThrown:"twak"==this.action.actionType,isMelee:!e.isRanged,isMeleeWeaponAttackAction:"mwak"===e.actionType,isRangedWeaponAttackAction:e.isRanged&&!e.isCombatManeuver,isAttack:"attack"===t.type,isWeapon:"weapon"===t.type,isSpell:"spell"===t.type,isFeat:"feat"===t.type,isHealing:e.isHealing,hasTemplate:e.hasTemplate,attacks:this.attacks,flags:this.flags,attributes:this.attributes,conditionals:this.conditionals,usesAmmo:!!this.action.ammo.type,ammo:this.ammoUsage};a.isPureRanged=a.isRanged&&!a.isThrown;const i=!a.isPureRanged&&(a.isAttack||a.isWeapon)&&!a.isNaturalAttack,n=a.flags["power-attack"]&&i,o=this.attributes.held||s.action.held||s.item.held||"1h";return a.held={inheritable:i,configurable:n,mult:ffd20.config.abilityDamageHeldMultipliers[o]??1},a}activateListeners(e){super.activateListeners(e),e.find('.flags input[type="checkbox"]').on("change",this._onToggleFlag.bind(this)),e.find("input.attribute").on("change",this._onChangeAttribute.bind(this)),e.find('input[type="checkbox"][name="concentration"]').on("change",this._onToggleFlag.bind(this)),e.find('input[type="checkbox"][name="cl-check"]').on("change",this._onToggleFlag.bind(this)),e.find('input[type="checkbox"][name="measure-template"]').on("change",this._onToggleFlag.bind(this)),e.find("select").on("change",this._onSelectChange.bind(this)),e.find('.conditionals input[type="checkbox"]').on("change",this._onToggleConditional.bind(this)),e.find(".ammo-select").on("click",this._onAmmoSelectClick.bind(this)),e.find(".ammo-select .ammo-item .controls a").on("click",this._onAmmoControlClick.bind(this)),e.find(".ammo-select .ammo-item").on("click",this._onAmmoClick.bind(this)),e.on("click",this._unfocusElements.bind(this)),e.find('button[name="attack_single"]').on("pointerenter",this._hideExtraAttacks.bind(this)),e.find('button[name="attack_single"]').on("pointerleave",this._showExtraAttacks.bind(this)),e.find('button[name="attack_single"]').on("click",(e=>this.resolveAttack(e,!1))),e.find('button[name="attack_full"]').on("click",(e=>this.resolveAttack(e,!0)))}_onSelectChange(e){e.preventDefault();const t=e.currentTarget;this.attributes[t.name]=t.options[t.selectedIndex].value,this.render()}_hideExtraAttacks(e){this.element.find(".attacks .attack").filter(((e,t)=>parseInt(t.dataset.index)>0)).addClass("disabled")}_showExtraAttacks(e){this.element.find(".attacks .attack").removeClass("disabled")}_onToggleFlag(e){e?.cancelable&&e.preventDefault();const t=e.currentTarget;switch(this.flags[t.name]=!0===t.checked,t.name){case"haste-attack":case"rapid-shot":case"manyshot":this._toggleExtraAttack(t.name,t.checked);break;case"primary-attack":this.attributes["damage-ability-multiplier"]=this.damageMult}this.render()}_toggleExtraAttack(e,t=!0){if(t){const t={"haste-attack":"FFD20.Haste","rapid-shot":"FFD20.RapidShot",manyshot:"FFD20.Manyshot"},s=new Set(Object.keys(t));let a=1;switch(e){case"rapid-shot":s.delete("haste-attack");case"haste-attack":for(;s.has(this.attacks[a]?.type);)a++}const i=new ActionUseAttack(game.i18n.localize(t[e]),"",null,{abstract:!0,type:e});i.attackBonusTotal=0,this.attacks.splice(a,0,i),this.setAttackAmmo(a,this.action.item.system.ammo?.default)}else this.attacks.findSplice((t=>t.type===e))}_onToggleConditional(e){e.preventDefault();const t=e.currentTarget;this.conditionals[t.name].enabled=!0===t.checked,this.render()}_onAmmoSelectClick(e){e.preventDefault();const t=e.currentTarget,s=t.querySelector("ul");if(!e.target.closest("ul")){s.classList.toggle("open");s.classList.contains("open")?t.classList.add("focus"):t.classList.remove("focus")}}_onAmmoClick(e){const t=e.target;if(t.closest(".controls")&&!t.classList.contains("controls"))return;e.preventDefault();const s=t.closest(".ammo-item").dataset.id,a=parseInt(t.closest(".attack").dataset.index);this.setAttackAmmo(a,"null"===s?null:s),this.render()}async _onAmmoControlClick(e){e.preventDefault();const t=e.currentTarget,s=t.closest(".ammo-item").dataset.id;switch(t.dataset.type){case"set-default":"null"===s?await this.action.item.update({"system.ammo.-=default":null}):await this.action.item.update({"system.ammo.default":s}),t.closest("ul").querySelectorAll(".ammo-item").forEach((e=>e.classList.remove("default"))),"null"!==s&&t.closest(".ammo-item").classList.add("default");break;case"set-all":for(let e=0;e<this.attacks.length;e++)this.setAttackAmmo(e,s);this.render()}}_unfocusElements(e){if(null!=this.element[0].querySelector(".ammo-select")&&!e.target.closest(".ammo-select")){const e=this.element[0].querySelector(".ammo-select");e.classList.remove("focus"),e.querySelector("ul").classList.remove("open")}}_onChangeAttribute(e){e.preventDefault();const t=e.currentTarget;switch(this.attributes[t.name]=t.value,t.name){case"cl-offset":this.rollData.cl=this.base.cl+parseInt(t.value);break;case"sl-offset":this.rollData.sl=this.base.sl+parseInt(t.value);break;case"damage-ability-multiplier":foundry.utils.setProperty(this.rollData,"action.ability.damageMult",t.value);break;case"held":foundry.utils.setProperty(this.rollData,"action.held",t.value)}this.render()}initAttacks(){for(const e of this.attacks)e.attackBonusTotal=RollPF.safeRollSync(e.attackBonus,this.rollData,void 0,void 0,{minimize:!0}).total??0;if(this.action.ammo.type){const e=this.action.item.system.ammo?.default;for(let t=0;t<this.attacks.length;t++){const s=t.ammo?.id??e;this.setAttackAmmo(t,s)}}}initAmmoUsage(){this.ammoUsage=this.actionUse.getAmmo().reduce(((e,t)=>(t.used=0,e[t.id]=t,e)),{});const e=this.action.ammo.cost??1;for(const t of this.attacks)if(t.ammo){const s=this.ammoUsage[t.ammo.id];if(s.abundant)continue;s.used+=e}}setAttackAmmo(e,t=null){if(!this.action.ammo.type)return;this.ammoUsage[t]||(t=null);const s=this.action.ammo.cost??1,a=this.attacks[e],i=this.action.actor?.items.get(a.ammo?.id)?.system.abundant??!1,n=this.action.actor?.items.get(t)?.system.abundant??!1;if(!i&&a.ammo&&(this.ammoUsage[a.ammo.id].used-=s),t&&!n){this.ammoUsage[t].used+s>this.ammoUsage[t].quantity&&(t=null)}a.ammo=this.actionUse.getAmmo().find((e=>e.id===t))??null,a.ammo&&(n||(this.ammoUsage[t].used+=s))}resolveAttack(e,t=!0){e.preventDefault();const s=new FormDataExtended(this.element.find("form")[0]).object;s.fullAttack=t,this.resolve(s),this.close()}async close(e={}){return delete this.item?.actor?.apps[this.appId],this.resolve(null),super.close(e)}show(){return new Promise(((e,t)=>{this.resolve=e,this.render(!0)}))}}const{ApplicationV2:ue,HandlebarsApplicationMixin:me}=foundry.applications.api;class ChangeLogWindow extends(me(ue)){static DEFAULT_OPTIONS={id:"changelog",tag:"form",form:{handler:ChangeLogWindow._updateObject,submitOnChange:!0,closeOnSubmit:!1},classes:["pf1-v2","changelog"],window:{icon:"fa-solid fa-receipt",minimizable:!0,resizable:!0},position:{width:500,height:680}};static PARTS={form:{template:"systems/ffd20/templates/apps/changelog.hbs"}};_cache;constructor(e=!1,t=!1){super({},{}),this.lastVersion=e,this.autoDisplay=t}get title(){return`${game.i18n.localize("FFD20.Title")} ~ ${game.i18n.localize("FFD20.Application.Changelog.Title")}`}async _prepareContext(){const e={};if(e.dontShowAgain=game.settings.get("ffd20","dontShowChangelog"),e.autoDisplay=this.autoDisplay,e.lastVersion=this.lastVersion,!this._cache){const t=new XMLHttpRequest;t.open("GET","systems/ffd20/CHANGELOG.md");const s=new Promise((s=>{t.onload=()=>{200===t.status?this._cache=this._processChangelog(t.response):e.error={number:t.status,message:t.statusText,url:t.responseURL},s()}}));t.send(null),await s}return e.changelog=this._cache,e.link=game.system.changelog,e}_processChangelog(e){const t=new showdown.Converter,s=ffd20.utils.SemanticVersion.fromString(game.system.version),a=s.major,i=[],n=[],o=[],r=[];let l=null;const c=e.split(/[\n\r]+/);for(const e of c)/^#\s/.test(e)||(e.match(/##\s+([0-9]+\.[0-9]+(\.[0-9]+)?)/)&&(l=ffd20.utils.SemanticVersion.fromString(RegExp.$1),l.major===a&&o.push(l)),l&&(l.isSame(s)?i.push(e):l.major===a?n.push(e):this.lastVersion||r.push(e)));return{version:s,latest:{content:t.makeHtml(i.join("\n"))},major:{patches:o,content:n.length?t.makeHtml(n.join("\n")):null},legacy:{content:r.length?t.makeHtml(r.join("\n")):null}}}static async _updateObject(e,t,s){null!=(s=s.object).dontShowAgain&&await game.settings.set("ffd20","dontShowChangelog",s.dontShowAgain)}}const{ApplicationV2:pe,HandlebarsApplicationMixin:he}=foundry.applications.api;class DamageTypeSelector extends(he(NoAutocomplete(pe))){static DEFAULT_OPTIONS={tag:"form",form:{handler:this._updateObject,closeOnSubmit:!0},classes:["pf1-v2","damage-type-selector","standard-form"],window:{title:"FFD20.DamageType",minimizable:!0,resizable:!1},position:{width:720},actions:{toggleDamageType:this._toggleDamageType},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/damage-type-selector.hbs",scrollable:[".damage-type-categories",".damage-modifiers"]},footer:{template:"templates/generic/form-footer.hbs"}};constructor(e,t,s=new Set,a={}){a.object=e,a.path=t,super(a);const i=new Set,n=s?[...s]:[],o=new Set;for(const e of n){if(!e)continue;ffd20.registry.damageTypes.get(e)?o.add(e):i.add(e)}this.types=o,this.customTypes=i}_initializeApplicationOptions(e){return(e=super._initializeApplicationOptions(e)).id=`DamageTypeSelector-${e.object.uuid.replaceAll(".","-")}-${e.path.replaceAll(".","_")}`,e}get categoryOrder(){return["physical","energy","misc"]}async _prepareContext(){const e=ffd20.registry.damageTypes.filter((e=>!e.isModifier)).map((e=>({...e,id:e.id,enabled:this.types.has(e.id)}))),t=this.categoryOrder;return{types:this.types,customTypes:[...this.customTypes].join(";"),modifiers:ffd20.registry.damageTypes.filter((e=>e.isModifier)).map((e=>({...e,id:e.id,enabled:this.types.has(e.id)}))),categories:e.reduce(((e,t)=>{let s=e.find((e=>e.key===t.category));return s||(s={key:t.category,label:"FFD20.DamageTypeCategory."+t.category,types:[]},e.push(s)),s.types.push(t),e}),[]).sort(((e,s)=>{const a=t.indexOf(e.key),i=t.indexOf(s.key);return-1===a&&i>=0?1:-1===i&&a>=0?-1:a>i?1:a<i?-1:0})),buttons:[{type:"submit",label:"FFD20.Save",icon:"fa-regular fa-floppy-disk"}]}}async _onChangeForm(e,t){t.preventDefault();const s=t.target;if("custom"!==s.name)return;const a=s.value.split(";").map((e=>e.trim())).filter((e=>!!e));this.customTypes=new Set(a)}static _toggleDamageType(e){e.preventDefault();const t=e.target.closest("[data-action]").dataset.id;this.types.has(t)?this.types.delete(t):this.types.add(t),this.render()}static async _updateObject(e,t){const s=[...this.types.union(this.customTypes)];return this.options.updateCallback(s)}}const{ApplicationV2:fe,HandlebarsApplicationMixin:ge}=foundry.applications.api;class AbstractDocumentSelector extends(ge(fe)){selected;static DEFAULT_OPTIONS={tag:"form",form:{handler:this._onSubmit,submitOnClose:!1,submitOnChange:!0,closeOnSubmit:!1},classes:["pf1-v2","document-selector","standard-form"],window:{title:"FFD20.Application.DocumentSelector.Title",minimizable:!1,resizable:!0},position:{width:350},sheetConfig:!1,search:{delay:250,value:"",event:null,compositioning:!1,effectiveSearch:""},empty:""};static PARTS={form:{template:"systems/ffd20/templates/apps/document-selector.hbs",scrollable:[".document-section-wrapper"]},footer:{template:"templates/generic/form-footer.hbs"}};constructor(e){e?.title&&(foundry.utils.logCompatibilityWarning("AbstractDocumentSelector options title property is deprecated",{since:"PF1 v11",until:"PF1 v12"}),e.window??={},e.window.title=e.title,delete e.title),super(e),this.selected=this.options.selected||""}async _prepareContext(){const e=await this._getSections();for(let t=0;t<e.length;t++){const s=e[t];s.documents.length?this.options.empty||(this.selected||=s.documents[0]?.id):(e.splice(t,1),t--)}return{document:this.document,selected:this.selected,searchTerm:this.options.search.value,showSectionHeaders:e.length>1,sections:e,empty:{include:this.options.empty,document:{id:"",name:game.i18n.localize("FFD20.Application.DocumentSelector.None"),img:"icons/svg/cancel.svg"}},buttons:[{type:"submit",label:"FFD20.Select"}]}}_onRender(e,t){super._onRender(e,t);const s=this.element.querySelector("input[type='search']");s.addEventListener("input",this._onSearch.bind(this)),s.addEventListener("change",this._onSearch.bind(this)),s.addEventListener("compositionstart",this._onSearchComposition.bind(this)),s.addEventListener("compositionend",this._onSearchComposition.bind(this))}_onChangeForm(e,t){const s=t.target;s.matches("input[type='radio']")&&(this.element.querySelector("li.selected")?.classList.remove("selected"),this.selected=s.value,s.closest("li").classList.add("selected"))}_onSearchComposition(e){this.options.search.compositioning="compositionstart"===e.type}_onSearch(e){e.preventDefault(),e.stopPropagation();const t=e.target.value,s=this.options.search.value!==t;(this.options.search.compositioning||s)&&clearTimeout(this.options.search.event),this.options.search.compositioning||(this.options.search.value=t,"input"===e.type?s&&(this.options.search.event=setTimeout((()=>this._searchFilterCommit(e)),this.options.search.delay)):this._searchFilterCommit(e))}_searchFilterCommit(){const e=this.options.search.value.toLowerCase();this.options.search.effectiveSearch!==e&&(this.options.search.effectiveSearch=e,this.render(!0))}async _getSections(){}static _onSubmit(){this._resolveResult(),this.close()}_resolveResult(){this.resolve?.(this.selected||null)}_onClose(e){super._onClose(e),this.resolve?.(null)}static wait(e){return new Promise((t=>{const s=new this(e);s.resolve=t,s.render({force:!0})}))}}class ItemSelector extends AbstractDocumentSelector{static DEFAULT_OPTIONS={actor:void 0,items:void 0,filterFunc:void 0,selected:null,window:{title:"FFD20.Application.ItemSelector.Title"},empty:!0};_initializeApplicationOptions(e){return e=super._initializeApplicationOptions(e),e.items||=e.actor?.items||[],e}async _getSections(){let e=this.options.filterFunc?this.options.items.filter(this.options.filterFunc):[...this.options.items];return this.options.search.value&&(e=e.filter((e=>e.name.toLowerCase().includes(this.options.search.value.toLowerCase())))),e.sort(((e,t)=>e.name.localeCompare(t.name))),e=e.map((e=>({id:e.id,name:e.name,img:e.img,isOwner:e.actor?.isOwner||!1,extras:[{label:"FFD20.Application.ItemSelector.Quantity",value:e.system.quantity}]}))),[{id:"items",label:"FFD20.Application.ItemSelector.Items",documents:e}]}_resolveResult(){let e=this.selected;this.selected&&this.options.document&&(e=this.options.items.find((t=>t.id===e))),this.resolve?.(e||null)}}const{ApplicationV2:ye,HandlebarsApplicationMixin:be}=foundry.applications.api;class HelpBrowserPF extends(be(ye)){static DEFAULT_OPTIONS={id:"pf1-help-browser",classes:["pf1-v2","help-browser"],window:{title:"FFD20.Help.Label",icon:"fa-solid fa-book",minimizable:!1,resizable:!0},position:{width:620,height:600},actions:{forward:HelpBrowserPF._forwardInHistory,back:HelpBrowserPF._backInHistory,home:HelpBrowserPF._home}};static PARTS={form:{template:"systems/ffd20/templates/apps/help-browser.hbs"}};_backwardHistory=[];_forwardHistory=[];_currentPage={url:"Help/Home"};#n;constructor(e={}){super(e),this.#n=new showdown.Converter({extensions:[HelpBrowserPF.defaultExtensions],noHeaderId:!1,ghCompatibleHeaderId:!0,prefixHeaderId:"pf1-help-browser-"})}get currentUrl(){return this._currentPage.url}async _prepareContext(){return{hasHistoryBack:this._backwardHistory.length>0,hasHistoryForward:this._forwardHistory.length>0,pageContent:this.#n.makeHtml(game.i18n.localize("FFD20."+this.currentUrl)),url:this.currentUrl.slugify({strict:!0})}}openUrl(e){let t;e.startsWith("/")&&(e=e.slice(1)),[e,t]=e.split("#"),this.currentUrl&&e!==this.currentUrl&&(this._backwardHistory.push(this.getCurrentHistoryObject()),this._forwardHistory.splice(0,this._forwardHistory.length)),this._currentPage={url:e},this.render({header:t,force:!0})}async _render(e,t){await super._render(e,t);const s=this.element.querySelector(".content");if(this._currentPage.scrollTop)setTimeout((()=>{s.scrollTop=this._currentPage.scrollTop}),0);else if(t.header){const e=document.getElementById("pf1-help-browser-"+t.header);e&&setTimeout((()=>{e.scrollIntoView({block:"start"})}),0)}}getCurrentHistoryObject(){const e=this.element?.querySelector(".content"),t=e?.scrollTop??0;return{url:this.currentUrl,scrollTop:t}}static _backInHistory(){this._backwardHistory.length&&(this._forwardHistory.push(this.getCurrentHistoryObject()),this._currentPage=this._backwardHistory.pop(),this.render())}static _forwardInHistory(){this._forwardHistory.length&&(this._backwardHistory.push(this.getCurrentHistoryObject()),this._currentPage=this._forwardHistory.pop(),this.render())}static _home(){this.openUrl("Help/Home")}_onRender(e,t){super._onRender(e,t);const s=this.element.querySelectorAll("a[href]");for(const e of s){const t=e.getAttribute("href");t.startsWith("Help")?(e.removeAttribute("href"),e.dataset.url=t,e.addEventListener("click",(e=>{e.preventDefault(),this.openUrl(t)}))):e.addEventListener("contextmenu",(e=>{e.stopImmediatePropagation()}))}}static get defaultExtensions(){return[{type:"output",regex:/<img.*?src="(.+?)".*?>/g,replace:function(e,t,s,a){const i=game.i18n.localize("FFD20."+(t.startsWith("/")?t.slice(1):t));return e.replace(t,foundry.utils.getRoute("systems/ffd20/"+i))}}]}}const Fe=new HelpBrowserPF,{ApplicationV2:ve,HandlebarsApplicationMixin:De}=foundry.applications.api;class ScriptEditor extends(De(NoAutocomplete(ve))){static DEFAULT_OPTIONS={tag:"form",form:{handler:ScriptEditor._updateObject,closeOnSubmit:!0},classes:["pf1-v2","script-editor"],window:{minimizable:!1,resizable:!0},position:{width:640,height:560},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/script-editor.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};constructor(e={}){super(e),this.command=e.command||"",this.name=e.name||null,this.parent=e.parent,this.script=e.script,this._promises={submit:[]}}get title(){return this.name?this.parent?`${this.parent.name}: ${this.name}`:this.name:this.parent?.name??game.i18n.localize("FFD20.Unknown")}get id(){return`script-call-${this.parent.uuid.replaceAll(".","-")}-id-${this.script}`}get isEditable(){const e=this.parent;let t=this.options.editable&&e.isOwner;return e.pack&&game.packs.get(e.pack)?.locked&&(t=!1),t}async _prepareContext(){return{command:this.command||"",name:this.name,buttons:[{type:"submit",label:"FFD20.Save",icon:"fa-regular fa-floppy-disk"}]}}awaitResult(){let e;const t=new Promise((t=>{e=t}));return this._promises.submit.push({callback:e,promise:t,resolved:!1}),t}_onRender(e,t){super._onRender(e,t),this.element.querySelector("a.help-browser[data-url]").addEventListener("click",this._openHelpBrowser.bind(this))}_openHelpBrowser(e){e.preventDefault();const t=e.currentTarget;ffd20.applications.helpBrowser.openUrl(t.dataset.url)}static _updateObject(e,t,s){s=s.object,this.command=s.command,this.name=s.name||null;const a={command:this.command,name:this.name};this.resolvePromises("submit",a)}resolvePromises(e,t){for(const s of this._promises[e])s.resolved||(s.callback(t),s.resolved=!0)}async close(...e){super.close(...e),this.resolvePromises("submit",null)}}const{DocumentSheetV2:Se,HandlebarsApplicationMixin:ke}=foundry.applications.api;class SensesSelector extends(ke(NoAutocomplete(Se))){static DEFAULT_OPTIONS={tag:"form",form:{handler:this._onSave,submitOnChange:!1,closeOnSubmit:!0},classes:["pf1-v2","senses-selector","standard-form"],window:{icon:"fa-icon fa-eye",minimizable:!1,resizable:!1},position:{width:400},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/senses-selector.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};static get convertKeys(){return{dv:"distance",ts:"distance",bse:"distance",bs:"distance",sc:"distance",tr:"distance"}}async _preparePartContext(e){const t=this.isEditable;switch(e){case"form":{const e=this.document,s=e.toObject().system.traits?.senses??{};for(const[e,t]of Object.entries(this.constructor.convertKeys)){const a=s[e];"distance"===t&&a.value>0&&(s[e].value=ffd20.utils.convertDistance(a.value)[0])}const a="imperial"!==ffd20.utils.getDistanceSystem();return{editable:t,cssClass:t?"":"locked",actor:this.actor,noSystemVision:!game.settings.get("ffd20","systemVision")||(e.token?.getFlag("ffd20","customVisionRules")??e.prototypeToken?.getFlag("ffd20","customVisionRules"))||!1,senses:s,isMetric:a,gridUnits:a?game.i18n.localize("FFD20.Distance.mShort"):game.i18n.localize("FFD20.Distance.ftShort")}}case"footer":return t?{buttons:[{type:"submit",label:"FFD20.Save",icon:"fa-regular fa-floppy-disk"}]}:{}}}_onRender(e,t){if(super._onRender(e,t),!this.isEditable)for(const e of this.element.querySelectorAll(".window-content :is(input,button)"))e.disabled=!0}get actor(){return this.document}get title(){return`${game.i18n.localize("FFD20.Senses")}: ${this.document.name}`}static async _onSave(e,t,s){const a=(s=foundry.utils.expandObject(s.object)).system.traits.senses;if(Object.entries(this.constructor.convertKeys).forEach((([e,t])=>{const s=a[e];s.value>0&&"distance"===t&&(a[e].value=ffd20.utils.convertDistanceBack(s.value)[0])})),!this.document.isToken)for(const[e,t]of Object.entries(a))t||(delete a[e],a["-="+e]=null);this.document.update({"system.traits.senses":a})}}class SkillEditor extends DocumentSheet{constructor(e,t,s,a={}){super(e,a),this.skillId=t,this.subSkillId=s,this._callbacks=[]}static get defaultOptions(){const e=super.defaultOptions;return{...e,width:380,template:"systems/ffd20/templates/apps/skill-editor.hbs",dragDrop:[{dragSelector:null,dropSelector:"*"}],classes:[...e.classes,"ffd20","skill-editor"],sheetConfig:!1,submitOnChange:!0,closeOnSubmit:!1,submitOnClose:!1}}get title(){return`${game.i18n.localize("FFD20.EditSkill")}: ${this.skillName} – ${this.actor.name}`}get actor(){return this.document}get isSubSkill(){return!!this.subSkillId}get isStaticSkill(){return null!=ffd20.config.skills[this.skillId]&&!this.isSubSkill}get skill(){return this.isSubSkill?this.actor.system.skills[this.skillId]?.subSkills[this.subSkillId]:this.actor.system.skills[this.skillId]}get skillName(){return this.isStaticSkill?ffd20.config.skills[this.skillId]:this.skill.name}get skillTag(){return this.isStaticSkill?this.skillId:this.isSubSkill?this.subSkillId:this.skillId}async getData(){const e=await super.getData();e.config=ffd20.config,e.skill=foundry.utils.mergeObject(this.skill,{skillId:this.skillId,subSkillId:this.subSkillId,isSubSkill:this.isSubSkill,name:this.skillName,static:this.isStaticSkill,tag:this.skillTag},{inplace:!1}),e.actorData=this.actor.toObject();try{const t=await fromUuid(e.skill.journal);e.journal=t.toObject(),e.journal.uuid=e.skill.journal,e.journal.documentType=t instanceof JournalEntryPage?"JournalEntryPage":"JournalEntry"}catch{e.journal=null}return e}addCallback(e){this._callbacks.push(e)}async _updateObject(e,t){e.preventDefault();const s={system:{skills:{}}},a=s.system.skills;t=foundry.utils.expandObject(t);const i=ffd20.utils.createTag(t.tag,{allowUpperCase:!0,camelCase:!1}),n=t.skill,o=this.subSkillId,r=this.skillId;if(void 0===n.journal&&(n.journal??=this.skill.journal),void 0===n.custom&&(n.custom??=this.skill.custom),this.isStaticSkill||(n.background??=this.skill.background),!this.isStaticSkill&&!i)return void ui.notifications.error(game.i18n.localize("FFD20.Error.EmptySkillTag"));const l=this.isSubSkill?i:null,c=this.isSubSkill?this.skillId:i,d=this.isSubSkill?i!==this.subSkillId:i!==this.skillId;if(d){if(i in(this.isSubSkill?this.actor.system.skills[c].subSkills:this.actor.system.skills)){const e={tag:this.isSubSkill?`${this.skillId}.${i}`:i};return void ui.notifications.error(game.i18n.format("FFD20.Error.SkillTagAlreadyExists",e))}}return i&&(this.isSubSkill?this.subSkillId=i:this.skillId=i),this.isSubSkill?(a[c]={subSkills:{[l]:n}},d&&(a[c].subSkills["-="+o]=null)):(a[c]=n,d&&(a["-="+r]=null)),this.actor.update(s)}async close(...e){await super.close(...e),this._callbacks.forEach((e=>e()))}_canDragDrop(){return this.isEditable}async _onDrop(e){const t=TextEditor.getDragEventData(e);if("JournalEntryPage"!==t.type&&"JournalEntry"!==t.type)return;const s=await CONFIG[t.type].documentClass.implementation.fromDropData(t);s&&this._updateObject(e,this._getSubmitData({"skill.journal":s.uuid}))}activateListeners(e){super.activateListeners(e),e.find(".compendium-page").on("click",this._openCompendiumEntry.bind(this)),e.find(".compendium-controls a").on("click",this._onCompendiumControls.bind(this)),e.find('button[type="submit"]').on("click",(e=>{e.preventDefault();this.element[0].querySelector("form").reportValidity()&&this.close({submit:!0})}))}async _openCompendiumEntry(e){e.preventDefault();const t=e.currentTarget.closest(".compendium-entry");ffd20.utils.openJournal(t.dataset.compendiumEntry)}async _onCompendiumControls(e){e.preventDefault();if(e.currentTarget.classList.contains("delete"))return this._updateObject(e,this._getSubmitData({"skill.journal":null}))}}class ContentSourceEditor extends DocumentSheet{get title(){const e=game.i18n.format("FFD20.ContentSource.Title",{name:this.document.name}),t=this.document.actor;return t?e+" – "+t.name:e}get template(){return"systems/ffd20/templates/apps/content-source-editor.hbs"}static get defaultOptions(){const e=super.defaultOptions;return{...e,tabs:[{contentSelector:"section.content",navSelector:"nav.tabs",group:"sources"}],dragDrop:[{dragSelector:"nav.tabs .source",dropSelector:null}],width:540,height:"auto",resizable:!0,submitOnChange:!0,submitOnClose:!0,closeOnSubmit:!1,sheetConfig:!1,classes:[...e.classes,"ffd20","content-source-editor"]}}getData(){let e=!0,t=this.document.system.sources??[];return t.some((e=>0===Object.keys(e).length))&&(e=!1),t=t.map((e=>{const t=ffd20.registry.sources.get(e.id);return{...e,registry:t}})),0===t.length&&(t.push({stub:!0}),e=!1),{editable:this.isEditable,sources:t,registry:ffd20.registry.sources,uuid:this.document.uuid,canAdd:e}}_getHeaderButtons(){return super._getHeaderButtons().filter((e=>"import"!==e.class))}async _onAction(e){e.preventDefault();const t=e.target;if(!t.classList.contains("disabled"))switch(t.dataset.action){case"add":{this.form.disabled=!0;const e=this.document.system.sources??[];await this.document.update({"system.sources":[...e,{}]}),this.activateTab("source-"+e.length);break}case"delete":{const e=Number(t.dataset.index);if(Number.isFinite(e)&&e>=0){const t=this.document.system.sources[e];if(!t)return void this.render();const s=t.title||ffd20.registry.sources.get(t.id)?.name||game.i18n.localize("FFD20.ContentSource.NewEntry");if(!0!==await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.format("FFD20.ContentSource.DelTitle",{entry:s})},content:game.i18n.format("FFD20.ContentSource.DelEntryDesc",{entry:s}),rejectClose:!1,modal:!0}))return;this.form.disabled=!0;await this.document.update({"system.sources":this.document.system.sources.filter(((t,s)=>s!==e))})||this.render()}break}default:console.warn("Unrecognized action:",t.dataset.action,t)}}_canDragStart(e){return!this.document.inContainer}_canDragDrop(e){return!this.document.inContainer&&this.isEditable}_onDragStart(e){const t=e.currentTarget,s=Number(t.dataset.index),a=this.document.system.sources?.[s];if(!a)return!1;const i={type:"pf1ContentSourceEntry",uuid:this.document.uuid,index:s,data:{...a}};e.dataTransfer.setData("text/plain",JSON.stringify(i))}async _onDrop(e){const t=TextEditor.getDragEventData(e);if("pf1ContentSourceEntry"===t.type)this._onDropContentSource(e,t)}async _onDropContentSource(e,t){let s=e.target;void 0===s.dataset.index&&(s=s.closest(".source[data-index]"));let a=Number(s?.dataset.index);this.form.disabled=!0;const i=t.data,n=fromUuidSync(t.uuid);if(n)if(n===this.document){if(!Number.isFinite(a)||a<0)return;if(a===t.index)return;const e=this.document.toObject().system.sources??[],[s]=e.splice(t.index,1);e.splice(a,0,s),this.document.update({"system.sources":e})}else{const e=this.document.toObject().system.sources??[];if(i.id&&e.some((e=>e.id===i.id)))return;Number.isFinite(a)||(a=e.length),e.splice(a,0,i),this.document.update({"system.sources":e})}}activateListeners(e){super.activateListeners(e),this.form.querySelectorAll("header .control").forEach((e=>e.addEventListener("click",this._onAction.bind(this))))}static open(e){const t=Object.values(ui.windows).find((t=>t instanceof this&&t.object===e))??new this(e);return t.render(!0,{focus:!0}),t}_updateObject(e,t){(t=foundry.utils.expandObject(t)).system.sources=Object.values(t.system.sources);const s=t.system.sources;for(const e of s){let t=!0;for(const[s,a]of Object.entries(e))null===a||""===a?delete e[s]:t=!1;ffd20.registry.sources.get(e.id)&&(delete e.title,delete e.publisher),t&&(e.empty=!0)}return t.system.sources=t.system.sources.filter((e=>!0!==e.empty)),this.document.update(t)}}const{DocumentSheetV2:Ce,HandlebarsApplicationMixin:we}=foundry.applications.api;function addVisionSharingContextMenu(e,t){t.push({name:"FFD20.Application.VisionSharing.Label",icon:'<i class="fa-solid fa-eye"></i>',condition:()=>game.user.isGM,callback:e=>{e instanceof jQuery&&(e=e[0]);const t=e.dataset.entryId??e.dataset.documentId;game.actors.get(t).visionSharingSheet.render(!0,{position:{top:Math.min(e.offsetTop,window.innerHeight-370),left:window.innerWidth-720}})}})}Hooks.on("getActorDirectoryEntryContext",addVisionSharingContextMenu),Hooks.on("getActorContextOptions",addVisionSharingContextMenu);class VisionSharingSheet extends(we(Ce)){static DEFAULT_OPTIONS={tag:"form",classes:["pf1-v2","vision-sharing","standard-form"],window:{minimizable:!1},position:{width:400,height:"auto"},form:{handler:this._onSubmit,closeOnSubmit:!0,submitOnChange:!1},actions:{reset:this._onReset},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/vision-sharing.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};get title(){let e=game.i18n.localize("FFD20.Application.VisionSharing.Label")+": "+this.actor.name;return this.actor.token&&(e+="["+game.i18n.localize("Token")+"]"),e}_getUniformValue(e){return"true"===e||"yes"===e||!0===e||"false"!==e&&"no"!==e&&!1!==e&&null}async _prepareContext(){const e=this._config??this.actor.getFlag("ffd20","visionSharing");this._config=null;const t={fields:{default:new foundry.data.fields.StringField({choices:{true:"FFD20.Yes",false:"FFD20.No"},label:"FFD20.Default"}),toggle:new foundry.data.fields.StringField({choices:{true:"FFD20.Yes",false:"FFD20.No"}})},default:this._getUniformValue(e?.default)??!1,users:game.users.players.reduce(((t,s)=>(t[s.id]={user:s,level:this._getUniformValue(e?.users?.[s.id]?.level??e?.users?.[s.id]??null)+""},t)),{}),buttons:[{type:"reset",label:"FFD20.Reset",icon:"fa-solid fa-arrow-rotate-left",action:"reset"},{type:"submit",label:"FFD20.Save",icon:"fa-solid fa-floppy-disk"}]};return t}get actor(){return this.document}static async _onSubmit(e,t,s){s=foundry.utils.expandObject(s.object),s.users??={};for(const[e,t]of Object.entries(s.users)){this._getUniformValue(t)?s.users[e]=!0:(s.users["-="+e]=null,delete s.users[e])}s.default=this._getUniformValue(s.default);const a=this.actor.getFlag("ffd20","visionSharing")?.users;if(a)for(const e of Object.keys(a))game.users.get(e)||(s.users["-="+e]=null);const i=Object.keys(s.users);(0===i.length||i.every((e=>e.startsWith("-="))))&&(delete s.users,s["-=users"]=null),s.default||s.users?(await this.actor.setFlag("ffd20","visionSharing",s),console.debug("FFD20 | Vision Sharing saved for",this.actor.name)):(await this.actor.unsetFlag("ffd20","visionSharing"),console.debug("FFD20 | Vision Sharing reset for",this.actor.name))}static async _onReset(e,t){this._config={default:!1,users:{}},this.render()}}const{ApplicationV2:Te,HandlebarsApplicationMixin:_e}=foundry.applications.api;class ExperienceDistributor extends(DragDropApplicationMixin(_e(NoAutocomplete(Te)))){static DEFAULT_OPTIONS={tag:"form",classes:["pf1-v2","experience-distributor","standard-form"],window:{title:"FFD20.Application.XPDistributor.Title",minimizable:!0,resizable:!0},actions:{split:this._doSplitReward,full:this._doFullReward},dragDrop:[{dragSelector:null,dropSelector:"form"}],position:{width:450,height:690}};static PARTS={form:{template:"systems/ffd20/templates/apps/experience-distributor.hbs",scrollable:[".selectors"]},footer:{template:"templates/generic/form-footer.hbs"}};_bonusXP=0;_actors=[];constructor(e){Array.isArray(e)&&(foundry.utils.logCompatibilityWarning("ExperienceDistributor constructor first parameter is no longer directly actor array. Please provide options object with actors property instead.",{since:"PF1 v11",until:"PF1 v12"}),e={actors:e}),super(e);const t=e.actors??[];this._actors=t.map((e=>this.constructor.getActorData(e))).filter((e=>!!e))}_preparePartContext(e,t){switch(e){case"footer":t.buttons=[{action:"split",label:"FFD20.Application.XPDistributor.SplitEvenly",type:"button",icon:"fa-solid fa-people-arrows"},{action:"full",label:"FFD20.Application.XPDistributor.GiveToAll",type:"submit",icon:"fa-solid fa-star"}];break;case"form":t.actors={characters:this.characters,npcs:this.npcs},t.xp={total:this.totalExperience.toLocaleString(),split:this.splitExperience.toLocaleString()},t.bonusXP=this._bonusXP}return t}get characters(){return this._actors.filter((e=>!e.isNPC))}get npcs(){return this._actors.filter((e=>e.isNPC))}async _onDrop(e){e.preventDefault();const t=TextEditor.getDragEventData(e);if("Actor"!==t.type)return;const s=await ffd20.documents.actor.ActorPF.fromDropData(t);if("character"!==s.type||null==this._actors.find((e=>e.actor===s))){const e=this.constructor.getActorData(s);e.selected=!0,this._actors.push(e),this.render({parts:["form"]})}}_onChangeForm(e,t){t.preventDefault();const s=t.target;if(s.matches("input[type=checkbox]")){const e=s.dataset.id,t=this._actors.find((t=>t.id===e));if(!t)return;t.selected=s.checked}s.matches("input[name=bonusXP]")&&(this._bonusXP=parseInt(s.value),isNaN(this._bonusXP)&&(this._bonusXP=0)),this.render({parts:["form"]})}static _doSplitReward(e){return e.preventDefault(),this._giveExperience(!0)}static _doFullReward(e){return e.preventDefault(),this._giveExperience(!1)}async _giveExperience(e=!1){const t=this.totalExperience,s=this.splitExperience,a=e?s:t,i=this.characters.filter((e=>e.selected));if(0==i.length)return void ui.notifications.error("FFD20.Application.XPDistributor.Warnings.NoRecipients",{localize:!0});if(!(a>0))return void ui.notifications.error("FFD20.Application.XPDistributor.Warnings.NoReward",{localize:!0});e?console.debug("FFD20 | XP Reward |",t,"split evenly as",s,"to",i.length,"characters"):console.debug("FFD20 | XP Reward |",t,"to all");for(const e of i){const t={value:a};Hooks.callAll("pf1GainXp",e.actor,t),e.value=Math.floor(t.value)}const n=i.filter((e=>e.value>0&&Number.isSafeInteger(e.value))).map((e=>({_id:e.actor.id,"system.details.xp.value":e.actor.system.details.xp.value+e.value})));this.close(),await Actor.implementation.updateDocuments(n),ui.notifications.info(game.i18n.format("FFD20.Application.XPDistributor.Result",{xp:a}),{console:!1})}get totalExperience(){return this.npcs.filter((e=>e.selected)).reduce(((e,t)=>e+t.xp),this._bonusXP)}get splitExperience(){const e=this.characters.filter((e=>e.selected));if(0===e.length)return 0;const t=this.totalExperience;return Math.floor(t/e.length)}static getActorData(e){if(!(e instanceof Actor))return null;const t=ffd20.utils.CR.getXP(e.getCR?.()??0);return{id:foundry.utils.randomID(16),isNPC:"character"!==e.type,actor:e,selected:this._shouldActorBeSelected(e),xp:t,xpLabel:t.toLocaleString()}}static _shouldActorBeSelected(e){if("character"===e.type)return!0;return game.settings.get("ffd20","healthConfig").getActorConfig(e).rules.useWoundsAndVigor??!1?e.system.attributes?.wounds?.value<=0:e.system.attributes?.hp?.value<0}static fromCombat(e){const t=new this({actors:e.combatants.map((e=>e.actor))});return t.characters.length>0?t.render({force:!0}):t.close(),t}}const{DocumentSheetV2:Pe,HandlebarsApplicationMixin:Ae}=foundry.applications.api;class ChangeEditor extends(Ae(NoAutocomplete(Pe))){static DEFAULT_OPTIONS={tag:"form",form:{handler:this._onSubmit,submitOnChange:!0,submitOnClose:!0,closeOnSubmit:!1},classes:["pf1-v2","change-editor","standard-form"],window:{minimizable:!1,resizable:!0},position:{width:460},actions:{copyUuid:{handler:this.#o,buttons:[0,2]}},sheetConfig:!1};static PARTS={form:{template:"systems/ffd20/templates/apps/change-editor.hbs"}};change;constructor(e){super(e),this.change=e.change}_initializeApplicationOptions(e){return(e=super._initializeApplicationOptions(e)).uniqueId=this.getID(e),e}get actor(){return this.item.actor}get item(){return this.document}get title(){let e=game.i18n.localize("FFD20.Application.ChangeEditor.Label");return e+=": "+this.item.name,this.actor&&(e+=" – "+this.actor.name),e}get id(){return this.getID()}getID(e){return e??=this.options,"change-editor-"+e.change.uuid.replaceAll(".","-")}async _prepareContext(){const e=this.change,t=this.actor,s=this.item,a=ffd20.utils.internal.getBuffTargets("buffs",{actor:t,item:s})[e.target],i=this.isEditable,n=0==e.priority,o=e.priority>0,r=e.priority<0;return{editable:i,cssClass:i?"":"locked",config:ffd20.config,actor:t,item:s,change:e,priority:{early:o,late:r,normal:n},values:{priority:{early:o?e.priority:n?1:-e.priority,late:r?e.priority:n?-1:-e.priority}},isAdd:"add"===e.operator,isSet:"set"===e.operator,isValid:!!a,isCustom:["skill","cl","sl","concn"].includes(e.target?.split(".")?.[0]),isValidType:!!ffd20.config.bonusTypes[e.type],isValidOp:["add","set"].includes(e.operator),isSimple:e.isSimple,isDeferred:e.isDeferred,label:a?.label||e.target}}_onChangeTargetControl(e){if(e.preventDefault(),!this.isEditable)return;const t=ffd20.utils.internal.getBuffTargetDictionary("buffs",{actor:this.item.actor,item:this.item}),s=new Set(["skill"]),a=game.settings.get("core","language");for(const e of t)s.has(e.key)&&e.items.sort(((e,t)=>e.label.localeCompare(t.label,a)));let i=this.change?.target?.split(".")[0];"concn"===i&&(i="concentration");const n=ffd20.config.buffTargets[i]?.category??i;new Widget_CategorizedItemPicker({window:{title:"FFD20.Application.ChangeTargetSelector.Title"},classes:["change-target-selector"]},t,(e=>{e&&this.change.update({target:e})}),{category:n,item:this.change?.target}).render(!0)}_openHelpBrowser(e){e.preventDefault();const t=e.currentTarget;ffd20.applications.helpBrowser.openUrl(t.dataset.url)}async _validateFormula(e){const t=e.value;if(!t)return;let s;try{s=Roll.create(t),await s.evaluate({allowInteractive:!1})}catch(t){return e.dataset.tooltip=t.message,void e.setCustomValidity(t.message)}e.classList.contains("simple")?s.isDeterministic&&!t.includes("@")||(e.dataset.tooltip="FFD20.Warning.FormulaMustBeSimple",e.setCustomValidity(game.i18n.localize("FFD20.Warning.FormulaMustBeSimple"))):e.classList.contains("deterministic")&&(s.isDeterministic||(e.dataset.tooltip="FFD20.Warning.FormulaMustBeDeterministic",e.setCustomValidity(game.i18n.localize("FFD20.Warning.FormulaMustBeDeterministic"))))}get inParent(){return!!this.document.changes.get(this.change.id)}async render(e,t){return"updateItem"!==t?.renderContext||this.inParent?super.render(e,t):this.close()}_onRender(e,t){if(super._onRender(e,t),this.element.querySelector(".target .change-target").addEventListener("click",this._onChangeTargetControl.bind(this)),this.element.querySelector("a.help-browser[data-url]").addEventListener("click",this._openHelpBrowser.bind(this)),this.element.querySelectorAll("input.formula").forEach((async e=>this._validateFormula(e))),this.element.reportValidity(),!this.isEditable)for(const e of this.element.querySelectorAll(".window-content :is(input,select)"))e.disabled=!0}static#o(e){if(e.preventDefault(),e.stopPropagation(),e.detail>1)return;const t=2===e.button?this.change.id:this.change.uuid,s=2===e.button?"id":"uuid",a=game.i18n.localize("FFD20.Change");game.clipboard.copyPlainText(t),ui.notifications.info(game.i18n.format("DOCUMENT.IdCopiedClipboard",{label:a,type:s,id:t}))}static async wait(e,t={}){e instanceof ffd20.components.ItemChange&&(foundry.utils.logCompatibilityWarning("ChangeEditor.wait() first parameter as change instance is deprecated. Please include it in app options instead.",{since:"PF1 v11",until:"PF1 v12"}),t.change=e,e=t);const s=Object.values(foundry.applications.instances).find((t=>t instanceof this&&t.change===e.change));return s?(s.render(!0),s.bringToFront(),s):new Promise((t=>{e.document=e.change.parent;const s=new this(e);s.resolve=t,s.render(!0)}))}static _onSubmit(e,t,s){s=s.object;const a=foundry.utils.expandObject(s).change;this.change.update(a)}}class ItemDirectoryPF extends CONFIG.ui.items{static get defaultOptions(){const e=super.defaultOptions;return e.renderUpdateKeys.push("system.unidentified.name","system.identified"),e}static DEFAULT_OPTIONS={renderUpdateKeys:["system.unidentified.name","system.identified"]}}const{ApplicationV2:Ie,HandlebarsApplicationMixin:Oe}=foundry.applications.api;class Troubleshooter extends(Oe(Ie)){static DEFAULT_OPTIONS={id:"pf1-troubleshooter",tag:"form",classes:["pf1-v2","troubleshooter"],window:{title:"FFD20.Troubleshooter.Title",icon:"fa-solid fa-screwdriver-wrench",minimizable:!1,resizable:!1},position:{width:460},actions:{migrate:this._runMigration,help:this._openHelp}};static PARTS={form:{template:"systems/ffd20/templates/apps/troubleshooter.hbs"}};unlock=!1;reprocess=!1;migrating={world:!1,modules:!1};async _prepareContext(){return{isGM:game.user.isGM,unlockPacks:this.unlock,reprocess:this.reprocess,migrating:this.migrating,links:{help:`<a data-action='help'>${game.i18n.localize("FFD20.Troubleshooter.Steps.HelpLink")}</a>`,report:`<a href="https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues">${game.i18n.localize("FFD20.Troubleshooter.Steps.ReportLinkText")}</a>`,foundry:{kb:`<a href="https://foundryvtt.com/kb/">${game.i18n.localize("FFD20.Troubleshooter.Steps.FoundryLink")}</a>`,discord:'<a href="https://discord.gg/foundryvtt">Foundry VTT</a>',channel:"#pf1"},faq:"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/wikis/FAQs",helpmodule:'<a href="https://foundryvtt.com/packages/find-the-culprit">Find the Culprit</a>'}}}static async _runMigration(e,t){const s=this.unlock??!1,a=!this.reprocess;if(t.disabled)return;t.classList.remove("finished"),t.disabled=!0,t.classList.add("active");const i=t.dataset.target,n=t.closest(".window-content").getBoundingClientRect().top+20;switch(i){case"world":this.migrating.world=!0,await ffd20.migrations.migrateWorld({unlock:s,fast:a,dialog:{top:n}}),this.migrating.world=!1;break;case"modules":this.migrating.modules=!0,await ffd20.migrations.migrateModules({unlock:s,fast:a,dialog:{top:n}}),this.migrating.modules=!1;break;default:throw Error(`Unrecognized migration target: "${i}"`)}this.element?.querySelector(".form-body").classList.remove("migrating"),t.disabled=!1,t.classList.remove("active"),t.classList.add("finished")}static _openHelp(e){ffd20.applications.helpBrowser.openUrl("Help/Home")}_onChangeForm(e,t){const s=t.target;switch(s.name){case"unlock":this.unlock=s.checked;break;case"reprocess":this.reprocess=s.checked}}_onRender(e,t){super._onRender(e,t);const s=this.element.querySelectorAll("button[data-action='migrate']");if(ffd20.migrations.isMigrating){this.migrating.world=!0,this.migrating.modules=!0;for(const e of s)e.disabled=!0,e.classList.add("active");Hooks.once("pf1MigrationFinished",(()=>{for(const e of s)e.disabled=!1,this.migrating.world=!1,this.migrating.modules=!1}))}}static open(){(new Troubleshooter).render(!0)}}class ActorSelector extends AbstractDocumentSelector{static DEFAULT_OPTIONS={actors:void 0,ownership:void 0,selected:null,window:{title:"FFD20.Application.ActorSelector.Title",icon:"fa-solid fa-people-group"}};_initializeApplicationOptions(e){return e=super._initializeApplicationOptions(e),e.ownership||=CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED,e.actors||=[...game.actors],e}async _getSections(){let e=this.options.filterFunc?this.options.actors.filter(this.filterFunc):[...this.options.actors];return e=e.filter((e=>e.testUserPermission(game.user,this.options.ownership))),this.options.search.value&&(e=e.filter((e=>e.name.toLowerCase().includes(this.options.search.value.toLowerCase())))),e.sort(((e,t)=>e.name.localeCompare(t.name))),e=e.map((e=>({id:e.id,name:e.name,img:e.img,isOwner:e.isOwner,extras:[{label:"FFD20.Application.ActorSelector.Owner",value:[...game.users].filter((t=>e.testUserPermission(t,CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER))).map((e=>e.id===game.user.id?game.i18n.localize("FFD20.Application.ActorSelector.You"):e.name)).join(", ")}]}))),[{id:"owned",label:"FFD20.Application.ActorSelector.OwnedActors",documents:e.filter((e=>e.isOwner))},{id:"unowned",label:"FFD20.Application.ActorSelector.UnownedActors",documents:e.filter((e=>!e.isOwner))}]}_resolveResult(){let e=this.selected;this.selected&&this.options.document&&(e=this.options.actors.find((t=>t.id===e))),this.resolve?.(e||null)}}class SplitStack extends foundry.applications.api.DialogV2{static async wait({title:e,initial:t=1,step:s=1,total:a,css:i=[]}={},n={}){if(a<=1)return null;if(2==a)return[1,1];s||=1,t=Math.clamp(t||0,1,a);const o=a-1,r={window:{title:e},content:await renderTemplate("systems/ffd20/templates/apps/split-stack.hbs",{initial:t,keep:a-t,max:o}),classes:["pf1-v2","split-stack",...i],buttons:[{icon:"fa-solid fa-people-arrows",label:game.i18n.localize("FFD20.Split"),action:"split",default:!0,callback:(e,t,s)=>{s instanceof foundry.applications.api.DialogV2&&(s=s.element);const i=Math.clamp(s.querySelector("form input.split").valueAsNumber,1,o);return Number.isNumeric(i)?[Math.max(1,a-i),i]:null}}],render:(e,t)=>{t instanceof foundry.applications.api.DialogV2&&(t=t.element);const s=(t=t.querySelector(".dialog-content")).querySelector("input.slider"),i=t.querySelector("input.left"),n=t.querySelector("input.split");s.addEventListener("input",(e=>{const t=e.target.valueAsNumber;n.value=t,i.value=a-t}),{passive:!0}),n.addEventListener("input",(e=>{let t=e.target.valueAsNumber;t>o?(n.value=o,t=o):t<1&&(n.value=1,t=1),s.value=t,i.value=a-t}),{passive:!0}),i.addEventListener("input",(e=>{let t=a-e.target.valueAsNumber;t>a?(i.value=o,t=1):t<1&&(i.value=1,t=o),n.value=t,s.value=t}))},close:()=>null,rejectClose:!1};return super.wait(foundry.utils.mergeObject(r,n))}}const{DocumentSheetV2:xe,HandlebarsApplicationMixin:Me}=foundry.applications.api;class HTMLEditor extends(Me(xe)){_initializeApplicationOptions(e){return(e=super._initializeApplicationOptions(e)).uniqueId+="-"+e.path.replaceAll(".","-"),e}static DEFAULT_OPTIONS={tag:"form",classes:["pf1-v2","html-editor"],window:{minimizable:!1,resizable:!0},position:{height:520,width:580},sheetConfig:!1,form:{closeOnSubmit:!0,submitOnChange:!0}};static PARTS={form:{template:"systems/ffd20/templates/apps/html-editor.hbs"}};get title(){return this.options.window.title||super.title}_prepareContext(){return{uuid:this.document.uuid,content:foundry.utils.getProperty(this.document,this.options.path),path:this.options.path,editable:this.isEditable,field:new foundry.data.fields.HTMLField}}_processSubmitData(e,t,s){if(this.options.callback)return this.options.callback(s);this.document.update(s)}}const{ApplicationV2:Ee,HandlebarsApplicationMixin:Re}=foundry.applications.api;class ApplyDamage extends(Re(NoAutocomplete(Ee))){value;isHealing;asWounds;critMult;asNonlethal;asManaDamage;reduction;targets;instances;resolve;constructor(e){const t=e.value<0;t&&(e.value=-e.value);const{resolve:s}=e;super(e),this.damageOptions={asNonlethal:e.asNonlethal??!1,asManaDamage:e.asManaDamage??!1,asWounds:e.asWounds??!1,critMult:e.critMult??0,dualHeal:e.dualHeal??game.settings.get("ffd20","dualHeal")},Object.defineProperties(this,{resolve:{value:s,writable:!0,enumerable:!1},isHealing:{value:t,writable:!1},asWounds:{value:e.asWounds??!1},asNonlethal:{value:e.asNonlethal??!1},asManaDamage:{value:e.asManaDamage??!1},critMult:{value:e.critMult||0},value:{value:e.value,writable:!0},reduction:{value:e.reduction,writable:!0},woundsAndVigor:{value:!1,writable:!0}}),this._prepareInstances(),this._prepareTargets()}static DEFAULT_OPTIONS={tag:"form",classes:["pf1-v2","apply-damage","standard-form"],window:{resizable:!0,minimizable:!1},position:{width:460,height:"auto"},actions:{apply:this._onApply}};get title(){return this.isHealing?game.i18n.localize("FFD20.ApplyHealing"):game.i18n.localize("FFD20.ApplyDamage")}static PARTS={form:{template:"systems/ffd20/templates/apps/apply-damage-dialog.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};_preparePartContext(e,t,s){switch(e){case"footer":t.buttons=[{action:"apply",type:"submit",label:game.i18n.localize("FFD20.Apply"),icon:"fa-solid fa-heart-pulse",default:!0}];break;case"form":t.value=this.value,t.isHealing=this.isHealing,t.reduction=this.reduction,t.targets=this.targets,t.instances=this.instances,t.hasPhysical=this.hasPhysical,t.hasEnergy=this.hasEnergy,t.options=this.damageOptions,t.useWoundsAndVigor=this.woundsAndVigor,t.multiTarget=t.targets.size>1}return t}_onChangeForm(e,t){const s=foundry.utils.expandObject(new FormDataExtended(this.element).object),a=t.target.name,i=a.split(".");if("targets"===i[0]){const e=i[1],t=s.targets[e];this._updateTarget(t.uuid,t)}switch(a){case"value":this.value=s.value;break;case"reduction":this.reduction=s.reduction}for(const e of this.targets)this._updateTarget(e.uuid);foundry.utils.mergeObject(this.damageOptions,s.options),t.target.dataset?.action||this.render({parts:["form"]})}_onClose(){super._onClose(),this.resolve?.(null)}_prepareInstances(){const e=this.options.instances;for(let t=1;t<e.length;t++){const s=e[t];if(0!=s.value)for(let a=0;a<t;a++){const t=e[a];if(0!=t.value&&s.types.equals(t.types)){t.value+=s.value,s.value=0;break}}}Object.defineProperty(this,"instances",{value:e.filter((e=>0!=e.value)),writable:!1,enumerable:!1})}_prepareTargets(){const e=this.instances??[];for(const t of e)t.label=ffd20.utils.i18n.join(t.names,"u",!0);const t=0===e.length||e.some((e=>e.standard.some((e=>!["physical","energy"].includes(e.category)))));Object.defineProperties(this,{hasPhysical:{value:!this.isHealing&&(!!t||e.some((e=>e.standard.some((e=>"physical"===e.category))))),enumerable:!1,writable:!1},hasEnergy:{value:!this.isHealing&&(!!t||e.some((e=>e.standard.some((e=>"energy"===e.category))))),enumerable:!1,writable:!1}}),Object.defineProperty(this,"targets",{value:new Collection,writable:!1,enumerable:!1});const s=game.settings.get("ffd20","healthConfig");for(const e of this.options.targets){const t={uuid:e.uuid,actor:e,name:e.token?.name||e.name,value:this.value,isToken:!!e.token,ratio:1,dr:this.hasPhysical?this.getResistances(e,"dr"):[],get visibleDR(){return this.dr.some((e=>e.visible))},eres:this.hasEnergy?this.getResistances(e,"eres"):[],get visibleER(){return this.eres.some((e=>e.visible))},hardness:this.isHealing?0:e.system.traits.hardness??0,reduction:void 0,reductionChoices:0,reductions:{hardness:!this.isHealing&&e.system.traits.hardness>0},di:this.isHealing?[]:e.system.traits?.di?.names??[],dv:this.isHealing?[]:e.system.traits?.dv?.names??[],selected:!0};t.haveDIV=t.di.length||t.dv.length,t.haveDER=t.dr.length||t.eres.length||t.hardness,this.targets.set(t.uuid,t),this._updateTarget(t.uuid);const a=s.getActorConfig(e);this.woundsAndVigor||=a.rules.useWoundsAndVigor??!1}}getResistances(e,t="dr"){const s=e.system.traits?.[t];if(!s)return;const a=[];if(s.custom)for(const i of s.custom.split(ffd20.config.re.traitSeparator)){const s=e._parseResistanceEntry(i,t);a.push(s)}if(s.value?.length)for(const i of s.value){const s=e._parseResistanceEntry(i,t);a.push(s)}const i=new Set(this.instances.map((e=>[...e.types])).flat()),enrichResistance=e=>{e.value=e.amount,e.active=!1,e.typeIds=[e.type0?.id,e.type1?.id].filter((e=>e)),e.visible=!0,e.enabled=!0,e.hasGeneric=e.isDR&&(0===e.typeIds.length||e.typeIds.includes("")),e.hasGeneric?e.active=!0:e.operator?e.active=!e.typeIds.some((e=>i.has(e))):e.active=!e.typeIds.every((e=>i.has(e)))};for(const e of a)enrichResistance(e);return a}_updateTarget(e,t){const s=this.targets.get(e);if(t){const{dr:e,eres:a}=t;if(delete t.dr,delete t.eres,foundry.utils.mergeObject(s,t),e){for(let t=0;t<s.dr.length;t++)e[t]??={active:!1};Object.values(e).forEach(((e,t)=>foundry.utils.mergeObject(s.dr[t],e)))}if(a){for(let e=0;e<s.eres.length;e++)a[e]??={active:!1};Object.values(a).forEach(((e,t)=>foundry.utils.mergeObject(s.eres[t],e)))}}s.value=Math.floor(this.value*(s.ratio??0));let a=0;a+=s.dr.filter((e=>e.active)).reduce(((e,t)=>e+t.value),0),a+=s.eres.filter((e=>e.active)).reduce(((e,t)=>e+t.value),0),s.reductions.hardness&&(a+=s.hardness||0),s.reductionChoices=a;const i=this.reduction||0,n=s.reduction||0;s.value=s.value-a-n,s.value<0&&(s.value=0),s.totalValue=s.value-i,s.totalValue<0&&(s.totalValue=0)}static async _onApply(e,t){e.preventDefault();const s=this.resolve;this.resolve=null;const a={value:this.options.value,reduction:this.reduction||0,isHealing:this.isHealing,asWounds:this.asWounds,asNonlethal:this.asNonlethal,asManaDamage:this.asManaDamage,instances:this.instances,targets:this.targets};this.element.inert=!0;let i=Math.max(0,this.value);this.isHealing&&(i=-i);const n=[];try{const e=[];for(const t of this.targets){const s=this._getTargetDamageOptions(t),a=t.actor.applyDamage(i,s);n.push(t.actor),e.push(a)}const t=await Promise.all(e).then((e=>e.filter((e=>!!e)).length));i=Math.abs(i),this.isHealing?ui.notifications.info(game.i18n.format("FFD20.Application.Damage.ApplyHeal",{targets:t})):ui.notifications.info(game.i18n.format("FFD20.Application.Damage.ApplyDamage",{targets:t}))}catch(e){throw ui.notifications.error(e.message,{console:!1}),e}finally{this.close(),a.updated=n,s(a)}}_getTargetDamageOptions(e){return ffd20.utils.deepClone({...this.damageOptions,reduction:(e.reduction||0)+(this.reduction||0)+e.reductionChoices,ratio:e.ratio??1,event:this.options.event,message:this.options.message,element:this.options.element,instances:this.instances})}static async wait(e,t={}){return new Promise((s=>{e.resolve=s;new this(e).render(!0,t)}))}}const Ne=Object.freeze(Object.defineProperty({__proto__:null,ActionSelector,ActorSelector,ActorTraitSelector,ApplyDamage,AttackDialog,ChangeEditor,ChangeLogWindow,ContentSourceEditor,CurrencyTransfer,DamageTypeSelector,EntrySelector:class EntrySelector extends AbstractListSelector{static DEFAULT_OPTIONS={classes:["entry-selector"],position:{width:300}};static PARTS={form:{template:"systems/ffd20/templates/apps/entry-selector.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};constructor(e){super(e),e.title&&(this.subtitle=game.i18n.localize(e.title)),this.isFlag=!0===this.options.flag,this.isBoolean=!0===this.options.boolean,this.isFlat=!0===this.options.flat;const t=foundry.utils.deepClone(foundry.utils.getProperty(this.document,this.attribute)??(this.isFlag?{}:[]));this.originalEntries=t,this.entries=this.isFlag?this.isBoolean?Object.keys(t).map((e=>[e])):Object.entries(t):t}_initializeApplicationOptions(e){(e=super._initializeApplicationOptions(e)).id=`EntrySelector-${e.name.replaceAll(".","-")}-${e.document.uuid.replaceAll(".","-")}`;return!0===e.boolean||(e.position??={},e.position.width=Math.max(e.position?.width??0,360)),e}get title(){const e=this.document,t=e.actor,s=this.subtitle??game.i18n.localize("FFD20.Application.EntrySelector.Title");return e?t?game.i18n.format("FFD20.Application.EntrySelector.TitleOwned",{item:e.name,actor:t.name,title:s}):game.i18n.format("FFD20.Application.EntrySelector.TitleIsolated",{item:e.name,title:s}):s}async _preparePartContext(e,t,s){let a=await super._preparePartContext(e,t,s);if("form"===e){a??={};const e=this.entries.map((e=>this.isFlat?[e,this.dtypes[e]]:e.map(((e,t)=>[e,this.dtypes[t]]))));a.entries=e,a.isFlat=this.isFlat,a.isBoolean=this.isBoolean}return a}_getNewEntry(e){const t=e.currentTarget;if(this.isFlat){return"Number"===this.dtypes[t]?0:""}{const e=[];for(let t=0;t<this.dataCount;t++){"Number"===this.dtypes[t]?e.push(0):e.push("")}return e}}async _onChangeForm(e,t){const s=t.target,a=s.closest("tr.entry"),i=parseInt(a.dataset.index),n=parseInt(s.dataset.index),o=s.value;if("Number"===s.dataset.dtype){let e=parseFloat(o);isNaN(e)&&(e=0),this.isFlat?this.entries[i]=Math.floor(100*e)/100:this.entries[i][n]=Math.floor(100*e)/100}else this.isFlat?this.entries[i]=o:this.entries[i][n]=o}_getUpdateData(){const e={};if(this.isFlag){const t=new Set;this.entries.forEach((([s,a])=>{t.add(s),e[`${this.attribute}.${s}`]=!!this.isBoolean||a}));Object.keys(this.originalEntries).forEach((s=>{t.has(s)||(e[`${this.attribute}.-=${s}`]=null)}))}else e[this.attribute]=this.entries;return e}},ExperienceDistributor,HTMLEditor,HelpBrowserPF,ItemDirectoryPF,ItemSelector,LevelUpForm,PointBuyCalculator,ScriptEditor,SensesSelector,SkillEditor,SplitStack,Troubleshooter,VisionSharingSheet,Widget_CategorizedItemPicker,Widget_ItemPicker,actor:z,compendiumBrowser:ie,compendiums:{},component:V,helpBrowser:Fe,item:G,journal:ne,mixin:oe,settings:R,utils:re},Symbol.toStringTag,{value:"Module"}));class ActiveEffectPF extends ActiveEffect{async _preCreate(e,t,s){await super._preCreate(e,t,s);const a=this.actor;if(!a)return;const i=a.getCombatants()[0]?.combat;if(i){void 0===(this.system.initiative??e.system?.initiative)&&this.updateSource({"system.initiative":i.initiative})}}get actor(){const e=this.parent;return e instanceof Actor?e:e?.actor||null}get isTemporary(){if(this.statuses.size&&this.getFlag("core","overlay"))return!0;if(!1===this.getFlag("ffd20","show"))return!1;const e=this.isTracker;if(e){if(this.parent?.system?.hideFromToken)return!1;if(game.settings.get("ffd20","hideTokenConditions"))return!1}return e||super.isTemporary}get _hasDuration(){const e=this.duration.seconds??(this.duration.rounds||this.duration.turns);return Number.isFinite(e)&&e>=0}get initiative(){return this.system.initiative}get isTracker(){return this.system.isTracker??!1}get isSuppressed(){return this.parent instanceof Item&&!this.parent.isActive}}class ChatMessagePF extends ChatMessage{async _preCreate(e,t,s){await super._preCreate(e,t,s);const a=e.flags?.ffd20;a&&(a.metadata&&foundry.utils.logCompatibilityWarning("message.flags.ffd20.metadata has been deprecated in favor of message.system",{since:"PF1 v11",until:"PF1 v12"}),a.identifiedInfo&&foundry.utils.logCompatibilityWarning("message.flags.ffd20.identifiedInfo has been deprecated in favor of message.system",{since:"PF1 v11",until:"PF1 v12"}),a.subject&&(foundry.utils.logCompatibilityWarning("message.flags.ffd20.subject has been deprecated in favor of message.system.subject",{since:"PF1 v11",until:"PF1 v12"}),this.updateSource({flags:{ffd20:{"-=subject":null}},system:{subject:a.subject}})))}static _initRollObject(e){if(Array.isArray(e))return e.map((e=>this._initRollObject(e)));if(null!=e&&"object"==typeof e&&"class"in e)return Roll.fromData(e);if("object"==typeof e&&null!=e)for(const[t,s]of Object.entries(e))e[t]=this._initRollObject(s);return e}get actionSource(){const e=this.system.action?.id;return e?this.itemSource?.actions.get(e):null}get itemSource(){const e=this.system.item?.id;if(e){const t=this.constructor.getSpeakerActor(this.speaker);return t?.items.get(e)}return null}get hasItemSource(){return foundry.utils.logCompatibilityWarning("ChatMessagePF.hasItemSource has been deprecated in favor of ChatMessagePF.itemSource",{since:"PF1 v11",until:"PF1 v12"}),void 0!==this.system.item}get measureTemplate(){const e=this.system.template;return e?fromUuidSync(e)??canvas.templates.get(e)??null:null}get targets(){const e=this.system.targets??[];return 0===e.length?e:/^\w{16}$/.test(e[0])?canvas.tokens.placeables.filter((t=>e.includes(t.id))):e.map((e=>fromUuidSync(e)?.object)).filter((e=>!!e))}prepareBaseData(){super.prepareBaseData(),this._setTitle()}_setTitle(){if(this.title)return;const e=this.speaker.alias||ChatMessage.getSpeakerActor(this.speaker)?.name;switch(this.type){case"item":{const t=this.itemSource;this.title=e?`${t?.name} – ${e}`:""+t?.name;break}case"action":{const t=this.itemSource,s=this.actionSource,a=`${t?.name} (${s?.name})`;this.title=e?`${a} – ${e}`:a;break}}}prepareDerivedData(){super.prepareDerivedData(),this.systemRolls=this.constructor._initRollObject(this.system.rolls??{}),this.flags.ffd20??={};const e=this;"subject"in this.flags.ffd20||Object.defineProperty(this.flags.ffd20,"subject",{get:()=>(foundry.utils.logCompatibilityWarning("ChatMessagePF.flags.ffd20.subject has been deprecated in favor of ChatMessagePF.system.subject",{since:"PF1 v11",until:"PF1 v12"}),e.system?.subject)}),"metadata"in this.flags.ffd20||Object.defineProperty(this.flags.ffd20,"metadata",{get:()=>(foundry.utils.logCompatibilityWarning("ChatMessagePF.flags.ffd20.metadata has been deprecated in favor of ChatMessagePF.system",{since:"PF1 v11",until:"PF1 v12"}),e.system)}),["item","action"].includes(this.type)&&("identifiedInfo"in this.flags.ffd20||Object.defineProperty(this.flags.ffd20,"identifiedInfo",{get:()=>(foundry.utils.logCompatibilityWarning("ChatMessagePF.flags.ffd20.identifiedInfo has been deprecated in favor of ChatMessagePF.system",{since:"PF1 v11",until:"PF1 v12"}),{identified:e.system.item?.identified??!0,name:e.system.item?.name,description:e.system.item?.description,actionName:e.system.action?.name,actionDescription:e.system.action?.description})}))}async getHTML(e){const t=await super.getHTML(e);switch(this.type){case"check":t[0].classList.add("basic-check","ffd20");break;case"item":t[0].classList.add("item-card","ffd20");break;case"action":t[0].classList.add("action-card","ffd20");break;default:this.isRoll&&t[0].classList.add("basic-roll","ffd20")}return Hooks.events.renderChatMessagePF?.length&&Hooks.callAll("renderChatMessagePF",this,t[0]),t}async renderHTML(e){const t=await super.renderHTML(e);switch(this.type){case"check":t.classList.add("basic-check","ffd20");break;case"item":t.classList.add("item-card","ffd20");break;case"action":t.classList.add("action-card","ffd20");break;default:this.isRoll&&t.classList.add("basic-roll","ffd20")}return Hooks.events.renderChatMessagePF?.length&&Hooks.callAll("renderChatMessagePF",this,t),t}toObject(e=!0,t=!0){const s=super.toObject(e);return t&&s.system&&this.system.constructor.pruneData?.(s.system),s}_onCreate(e,t,s){super._onCreate(e,t,s);const a=game.users.get(s);if("check"===this.type)this._onCreateCheck(a)}_onCreateCheck(e){if(!game.users.activeGM?.isSelf)return;const t=this.system.subject?.save;if(!t)return;const{scene:s,token:a}=this.speaker,i=game.scenes.get(s)?.tokens.get(a);if(!i)return;const n=fromUuidSync(this.system.reference);if(!n)return;if(!n.system.targets?.length)return;const o=this.rolls[0]?.total;Number.isFinite(o)&&n.setFlag("ffd20","targetDefense",{[i.uuid]:{save:{[t]:o}}})}}function addCombatTrackerContextOptions(e,t){t.push({name:"FFD20.DuplicateInitiative",icon:'<i class="fa-solid fa-dice-d20"></i>',callback:e=>{e instanceof jQuery&&(e=e[0]),async function duplicateCombatantInitiativeDialog(e){const t=game.combat.combatants.get(e);if(!t)return void ui.notifications.warn(game.i18n.localize("FFD20.Warning.NoCombatantFound"));const s=await ffd20.utils.dialog.getNumber({title:`${game.i18n.localize("FFD20.DuplicateInitiative")}: ${t.name}`,label:game.i18n.localize("FFD20.InitiativeOffset"),initial:0,classes:["duplicate-initiative"]});return Number.isFinite(s)?t.duplicateWithData({initiative:(t.initiative??0)+s}):void 0}(e.dataset.combatantId)}})}Hooks.on("renderChatMessage",(function messageHookPriorityHack(e,t){switch(t instanceof jQuery&&(t=t[0]),this.type){case"check":t.classList.add("basic-check","ffd20");break;case"item":t.classList.add("item-card","ffd20");break;case"action":t.classList.add("action-card","ffd20");break;default:this.isRoll&&t.classList.add("basic-roll","ffd20")}})),Hooks.on("getCombatTrackerEntryContext",addCombatTrackerContextOptions),Hooks.on("getCombatTrackerContextOptions",addCombatTrackerContextOptions);class CombatPF extends Combat{async rollInitiative(e,{formula:t=null,d20:s,bonus:a=null,rollMode:i,updateTurn:n=!0,messageOptions:o={},skipDialog:r=null}={}){r??=getSkipActionPrompt(),e=Array.isArray(e)?e:[e];const l=this.combatant?.id;i&&(o.rollMode=i),i=o.rollMode||game.settings.get("core","rollMode");const c=1==e.length?this.combatants.get(e[0]):null,d=c?.name??null;if(!r){let e=!0;if(c){const t=c.actor?.getInitiativeOptions?.();!1===t.check&&(e=!1)}const t=await this.constructor.showInitiativeDialog({d20:s,check:e,bonus:a,rollMode:i,name:d});if(!t)return this;i=t.rollMode,o.rollMode=i,a=t.bonus||"",s=t.d20}const u=[],m=[];for(const[n,r]of e.entries()){const e=this.combatants.get(r);if(!e?.isOwner)continue;const l=e.getInitiativeRoll(t,s,a);l.options.flavor=game.i18n.format("FFD20.Check",{type:game.i18n.localize("FFD20.Initiative")}),await l.evaluate(),l.err&&ui.notifications.warn(l.err.message),u.push({_id:r,initiative:l.total});let c=i;(e.token?.hidden||e.hidden)&&!o.rollMode&&["roll",CONST.DICE_ROLL_MODES.PUBLIC].includes(c)&&(c=o.rollMode||CONST.DICE_ROLL_MODES.PRIVATE);const d=[],p=await(e.actor?.getContextNotesParsed?.("init"))??[];p.length&&d.push({header:game.i18n.localize("FFD20.Notes"),value:p});const h={formula:l.formula,tooltip:await l.getTooltip(),total:l.total,properties:d};let f={speaker:ChatMessage.implementation.getSpeakerActor({actor:e.actor,token:e.token,alias:e.name}),...o};f.rollMode||=c,foundry.utils.setProperty(f,"flags.core.initiativeRoll",!0),f=await l.toMessage(f,{create:!1,rollMode:c,subject:{core:"init"},chatTemplateData:h}),n>0&&(f.sound=null),m.push(f)}return u.length?(await this.updateEmbeddedDocuments("Combatant",u),n&&l&&await this.update({turn:this.turns.findIndex((e=>e.id===l))}),await ChatMessage.implementation.create(m),this):this}static async showInitiativeDialog({d20:e=null,check:t=!0,bonus:s=null,name:a}={}){const i={d20:e,check:t,bonus:s,rollMode:game.settings.get("core","rollMode"),rollModes:CONFIG.Dice.rollModes};return foundry.applications.api.DialogV2.wait({window:{icon:"fa-solid fa-dice-d20",title:(a?a+" – ":"")+game.i18n.format("FFD20.Check",{type:game.i18n.localize("FFD20.Initiative")})},position:{width:420},content:await renderTemplate("systems/ffd20/templates/chat/roll-dialog.hbs",i),buttons:[{action:"roll",default:!0,icon:"fa-solid fa-dice-d20",label:game.i18n.localize("FFD20.Roll"),callback:(e,t,s)=>(s instanceof foundry.applications.api.DialogV2&&(s=s.element),new FormDataExtended(s.querySelector("form")).object)}],close:()=>null,classes:["pf1-v2","roll-prompt","roll-initiative"],subject:{core:"init"},rejectClose:!1})}_onUpdate(e,t,s){super._onUpdate(e,t,s),void 0===e.turn&&void 0===e.round||(t.ffd20??={},t.ffd20.worldTime=game.time.worldTime,this._onNewTurn(e,t,s))}async _preUpdate(e,t,s){await super._preUpdate(e,t,s),!1!==t.diff&&!1!==t.recursive&&("turn"in e||"round"in e)&&(t.ffd20??={},t.ffd20.from={turn:this.turn,round:this.round})}async _onNewTurn(e,t,s){if(this._isForwardTime(e,t)){if(t.ffd20?.from){const e=this._detectSkippedTurns(t.ffd20.from,t);game.users.activeGM?.isSelf&&this._handleSkippedTurns(e,t);const s=this.turns.at(this.turn-1);e.has(s)||this._processEndTurn(t.ffd20?.from,t)}this._processTurnStart(e,t,s),this._processInitiative(t)}}_isForwardTime(e,t){const s=t.ffd20.from.turn,a=t.ffd20.from.round,i=e.turn??s,n=(e.round??a)-a;return!(n<0)&&!(0==n&&i-s<=0)}_detectSkippedTurns({turn:e,round:t}={},s){const a=this.round!==t,i=new Set;if(!a&&e+1===this.turn)return i;for(const[t,s]of this.turns.entries())!a&&t<=e||(t<this.turn||a&&t>e)&&i.add(s);return Hooks.callAll("pf1CombatTurnSkip",this,i,s),i}_handleSkippedTurns(e,t){const s=this.turn,a=t.advanceTime??0,i=t.ffd20?.worldTime??game.time.worldTime;for(const t of e){const e=t.actor;if(!e)continue;const n=a+(this.turns.findIndex((e=>e===t))>s)?-CONFIG.time.roundTime:0;e.expireActiveEffects?.({timeOffset:a+n,worldTime:i,combat:this,event:"turnEnd"})}}async _processEndTurn({turn:e,round:t}={},s={}){const a=this.turns.at(e).actor;if(!a)return;const i=a.activeOwner;if(!i?.isSelf)return;const n=s.advanceTime??0,o=s.ffd20?.worldTime??game.time.worldTime;try{await(a.expireActiveEffects?.({combat:this,worldTime:o,timeOffset:n,event:"turnEnd"}))}catch(e){console.error(e,a)}}async _processTurnStart(e,t){const s=this.combatant?.actor;if(!s)return;const a=s.activeOwner;if(!a?.isSelf)return;const i=t.advanceTime??0,n=t.ffd20?.worldTime??game.time.worldTime;try{await(s.expireActiveEffects?.({combat:this,worldTime:n,timeOffset:i,event:"turnStart"}))}catch(e){console.error(e,s)}try{await(s.rechargeItems?.({period:"round",exact:!0}))}catch(e){console.error(e,s)}}_processInitiative(e={}){if(!game.users.activeGM?.isSelf)return;const t=e.ffd20?.worldTime??game.time.worldTime,s=e.advanceTime??0,a=this.initiative;for(const e of this.combatants){if(e.isDefeated)continue;const i=e.actor;i&&i.expireActiveEffects?.({combat:this,initiative:a,timeOffset:s,worldTime:t})}}_onDelete(e,t){if(super._onDelete(e,t),game.user.id!==t)return;if(!this.started)return;const s=game.settings.get("ffd20","experienceConfig");if(s.disable)return;s.openDistributor^ffd20.documents.settings.getSkipActionPrompt()&&ffd20.applications.ExperienceDistributor.fromCombat(this)}get initiative(){return this.combatant?.initiative}}class CombatantPF extends Combatant{updateResource(){return this.actor&&this.combat?this.resource=foundry.utils.getProperty(this.actor.system,this.parent.settings.resource)??null:this.resource=null}duplicateWithData(e={},t={}){return console.debug("Duplicating combatant:",this),t.parent??=this.combat,this.constructor.create(foundry.utils.mergeObject(this.toObject(),e),t)}getInitiativeRoll(e,t=null,s=null){const a=this.actor?.getInitiativeOptions?.()??{};e||=this._getInitiativeFormula(t);const i=this.actor?.getRollData()||{};return s&&(i.bonus=s,e+=" + @bonus"),new ffd20.dice.D20RollPF(e,i,a)}_getInitiativeFormula(e){const t=[];!1!==(this.actor?.getInitiativeOptions?.()??{}).check&&t.push(e||ffd20.dice.D20RollPF.standardRoll),t.push(`@attributes.init.total[${game.i18n.localize("FFD20.Initiative")}]`);const s=this.actor;s&&game.settings.get("ffd20","initiativeTiebreaker")&&t.push(`(@attributes.init.total / 100)[${game.i18n.localize("FFD20.Tiebreaker")}]`);const a=CONFIG.Combat.initiative.formula?CONFIG.Combat.initiative.formula.split(/\s*\+\s*/):t;return s?a.filter((e=>!!e)).join(" + "):a[0]||"0"}}const Le=[(ze="Shift")+"Left",ze+"Right"].map((e=>({key:e})));var ze;const registerSystemControls=()=>{game.keybindings.register("ffd20","skipConfirmPrompt",{name:"FFD20.KEYBINDINGS.SkipConfirmPrompt.Name",uneditable:Le,onDown:()=>{ffd20.skipConfirmPrompt=!0},onUp:()=>{ffd20.skipConfirmPrompt=!1}})},je=Object.freeze(Object.defineProperty({__proto__:null,registerSystemControls},Symbol.toStringTag,{value:"Module"}));class TokenDocumentPF extends TokenDocument{async _preCreate(e,t,s){await super._preCreate(e,t,s),this._preCreateSetSize()}async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!1===t.recursive)return;const a=e.flags?.ffd20;if(a){const e=["staticSize","disableLowLight","customVisionRules"];for(const t of e)!1===a[t]&&(a["-="+t]=null,delete a[t])}}_preCreateSetSize(){if(!this.actor)return;if(this.getFlag("ffd20","staticSize"))return;const e=this.actor.system.traits?.size?.base,t=ffd20.config.tokenSizes[e];t&&this.updateSource({width:t.w,height:t.h,texture:{scaleX:t.scale*this.actor.prototypeToken.texture.scaleX,scaleY:t.scale*this.actor.prototypeToken.texture.scaleY}})}static _getTrackedAttributesFromObject(e,t=[]){if("conditions"===t[0])return{bar:[],value:[]};const s=super._getTrackedAttributesFromObject(e,t);if("attributes"===t[0]){1===t.length&&s.value.push(["attributes","hp","value"],["attributes","hp","offset"],["attributes","hp","max"],["attributes","hp","temp"],["attributes","hp","nonlethal"],["attributes","vigor","value"],["attributes","vigor","offset"],["attributes","vigor","max"],["attributes","vigor","temp"],["attributes","wounds","value"],["attributes","wounds","offset"],["attributes","wounds","max"]);const e=t[1];2===t.length&&["hp","wounds","vigor"].includes(e)&&(s.value.push(["attributes",e,"value"],["attributes",e,"max"],["attributes",e,"offset"]),s.bar.push(["attributes",e]))}return e||s.value.push(["attributes","ac","normal","total"]),s}getBarAttribute(e,{alternative:t=null}={}){let s;try{s=super.getBarAttribute(e,{alternative:t})}catch{s=null}s?.attribute.startsWith("resources.")&&(s.editable=!0);if(["attributes.hp","attributes.wounds","attributes.vigor"].includes(s?.attribute)){const e=foundry.utils.getProperty(this.actor?.system,s.attribute+".temp")||0;s.value+=e,s.editable=!0}return s}prepareBaseData(){this._syncSenses(),super.prepareBaseData()}_syncSenses(){if(!this.actorId||!this.actor)return;if(!game.settings.get("ffd20","systemVision"))return;if(this.getFlag("ffd20","customVisionRules"))return;this.detectionModes=[];const e=this._source.sight.range;this.sight.visionMode="basic";const t={id:(foundry.canvas?.perception?.DetectionMode??DetectionMode).BASIC_MODE_ID,enabled:!0,range:e};this.detectionModes.push(t);this.detectionModes.push({id:"lightPerception",enabled:!0,range:null});const s=this.actor?.system?.traits?.senses??{},convertDistance2=e=>ffd20.utils.convertDistance(e)[0],a=s.dv?.total??0,i=s.bs?.total??0,n=Math.max(a,i);n>0&&(this.sight.visionMode="darkvision",t.range=Math.max(e,convertDistance2(n))),s.si&&this.detectionModes.push({id:"seeInvisibility",enabled:!0,range:t.range});const o=s.tr?.total??0;if(o>0){const e=convertDistance2(o);t.range=Math.max(e,t.range),o>n&&(this.sight.visionMode="basic"),this.detectionModes.push({id:"seeInvisibility",enabled:!0,range:e,limited:!0})}this.sight.range=Math.max(e,t.range),s.ts?.total&&this.detectionModes.push({id:"feelTremor",enabled:!0,range:convertDistance2(s.ts?.total)}),s.ls?.total&&this.detectionModes.push({id:"lifesense",enabled:!0,range:convertDistance2(s.ls?.total)}),s.bse?.total&&this.detectionModes.push({id:"blindSense",enabled:!0,range:convertDistance2(s.bse?.total)}),s.bs?.total&&this.detectionModes.push({id:"blindSight",enabled:!0,range:convertDistance2(s.bs?.total)}),this.detectionModes.sort(this.constructor._sortDetectionModes);const r=CONFIG.Canvas.visionModes[this.sight.visionMode]?.vision?.defaults||{};for(const e of["attenuation","brightness","saturation","contrast"])e in r&&(this.sight[e]=r[e])}static _sortDetectionModes(e,t){const s=foundry.canvas?.perception?.DetectionMode??DetectionMode;if(e.id===s.BASIC_MODE_ID)return-1;if(t.id===s.BASIC_MODE_ID)return 1;if("lightPerception"===e.id)return-1;if("lightPerception"===t.id)return 1;const a=CONFIG.Canvas.detectionModes[e.id],i=CONFIG.Canvas.detectionModes[t.id];return(a?.constructor.PRIORITY??0)-(i?.constructor.PRIORITY??0)}get allowedMovement(){const e=this.actor;if(!e)return null;const t=new Set(["walk","crawl","swim","climb"]);if(e.statuses.has("prone"))t.delete("walk"),t.delete("swim"),t.delete("climb");else{const s=["fly","burrow"];for(const a of s)e.system.attributes?.speed?.[a]?.total&&t.add(a)}return t}}const applyChanges=(e,{simple:t=!1}={})=>{e.changeOverrides={};const s=Array.from(e.changes).filter((e=>{const s=ffd20.config.buffTargets[e.target];return!!s?.simple===t})),{targets:a,types:i}=getSortChangePriority(e);s.sort(((e,t)=>((e,t)=>{const s=a.indexOf(e.target),n=a.indexOf(t.target),o=i.indexOf(e.type),r=i.indexOf(t.type),l=e.priority??0;return(t.priority??0)-l||s-n||o-r})(e,t))),e.changeFlags.immuneToMorale=e.system.traits?.ci?.total?.has("moraleEffects")||!1;const n=e.items.filter((e=>e.isActive&&e.hasChanges&&e.system.changeFlags));for(const t of n)if(t.system.changeFlags)for(const[s,a]of Object.entries(t.system.changeFlags))if(!0===a&&(e.changeFlags[s]=!0,"loseDexToAC"===s)){for(const s of["normal","touch"])getSourceInfo(e.sourceInfo,`system.attributes.ac.${s}.total`).negative.push({value:game.i18n.localize("FFD20.ChangeFlags.LoseDexToAC"),name:t.name,type:t.type});getSourceInfo(e.sourceInfo,"system.attributes.cmd.total").negative.push({value:game.i18n.localize("FFD20.ChangeFlags.LoseDexToAC"),name:t.name,type:t.type})}t||e.refreshDerivedData();const o=s.filter((e=>!0===e.continuous));for(const a of s){if(e.changeFlags.immuneToMorale&&"morale"===a.type)continue;const s=a.getTargets(e);for(const t of s)e.changeOverrides[t]??=createOverride();a._safeApplyChange(e,s,{applySourceInfo:!1});for(const t of o){if(t===a)continue;const s=t.getTargets(e);for(const t of s)e.changeOverrides[t]||(e.changeOverrides[t]=createOverride());t._safeApplyChange(e,s,{applySourceInfo:!1})}t||e.refreshDerivedData()}for(const t of s)t.applySourceInfo(e)};function createOverride(){const e={add:{},set:{}};for(const t of Object.keys(ffd20.config.bonusTypes))e.add[t]=null,e.set[t]=null;return e}const getSortChangePriority=e=>{const t=ffd20.config.buffTargets.skills.sort+100;return{targets:[...e._skillTargets.map(((e,s)=>[e,{sort:t+10*s}])),...Object.entries(ffd20.config.buffTargets)].sort((([,{sort:e}],[,{sort:t}])=>e-t)).map((([e])=>e)),types:Object.keys(ffd20.config.bonusTypes)}};function getChangeFlat(e,t,s,a){if(null==t)return[];const i=e.system,n=[];switch(t){case"mhp":n.push("system.attributes.hp.max");break;case"wounds":n.push("system.attributes.wounds.max");break;case"woundThreshold":n.push("system.attributes.wounds.threshold");break;case"vigor":n.push("system.attributes.vigor.max");break;case"mmp":n.push("system.attributes.mp.max");break;case"mprec":n.push("system.attributes.mp.recover");break;case"str":case"dex":case"con":case"int":case"wis":case"cha":["base","untypedPerm"].includes(s)&&n.push(`system.abilities.${t}.base`),n.push(`system.abilities.${t}.total`,`system.abilities.${t}.undrained`);break;case"strPen":case"dexPen":case"conPen":case"intPen":case"wisPen":case"chaPen":{const e=t.slice(0,-3);n.push(`system.abilities.${e}.penalty`);break}case"strMod":case"dexMod":case"conMod":case"intMod":case"wisMod":case"chaMod":n.push(`system.abilities.${t.slice(0,3)}.mod`);break;case"carryStr":n.push("system.details.carryCapacity.bonus.total");break;case"carryMult":n.push("system.details.carryCapacity.multiplier.total");break;case"size":n.push("system.traits.size.value");break;case"ageCategory":n.push("system.traits.ageCategory.value"),n.push("system.traits.ageCategory.mental"),n.push("system.traits.ageCategory.physical");break;case"ageCategoryMental":n.push("system.traits.ageCategory.mental");break;case"ageCategoryPhysical":n.push("system.traits.ageCategory.physical");break;case"ac":switch(n.push("system.attributes.ac.normal.total","system.attributes.ac.touch.total"),s){case"dodge":case"haste":n.push("system.attributes.cmd.total");break;case"deflection":case"circumstance":case"insight":case"luck":case"morale":case"profane":case"sacred":case void 0:n.push("system.attributes.ac.flatFooted.total","system.attributes.cmd.total","system.attributes.cmd.flatFootedTotal");break;default:n.push("system.attributes.ac.flatFooted.total"),a<0&&n.push("system.attributes.cmd.total","system.attributes.cmd.flatFootedTotal")}break;case"aac":{const e=["system.ac.normal.total"];switch(s){case"base":e.push("system.ac.normal.base");break;case"enh":e.push("system.ac.normal.enh");break;case void 0:e.push("system.ac.normal.base","system.ac.normal.enh","system.ac.normal.misc");break;default:e.push("system.ac.normal.misc")}n.push(...e);break}case"sac":{const e=["system.ac.shield.total"];switch(s){case"base":e.push("system.ac.shield.base");break;case"enh":e.push("system.ac.shield.enh");break;case void 0:e.push("system.ac.shield.base","system.ac.shield.enh","system.ac.shield.misc");break;default:e.push("system.ac.shield.misc")}n.push(...e);break}case"nac":{const e=["system.ac.natural.total"];switch(s){case"base":e.push("system.ac.natural.base");break;case"enh":e.push("system.ac.natural.enh");break;case void 0:e.push("system.ac.natural.base","system.ac.natural.enh","system.ac.natural.misc");break;default:e.push("system.ac.natural.misc")}n.push(...e);break}case"tac":n.push("system.attributes.ac.touch.total");break;case"ffac":n.push("system.attributes.ac.flatFooted.total");break;case"ffcmd":n.push("system.attributes.cmd.flatFootedTotal");break;case"bab":n.push("system.attributes.bab.total");break;case"~attackCore":n.push("system.attributes.attack.shared");break;case"attack":n.push("system.attributes.attack.general");break;case"wattack":n.push("system.attributes.attack.weapon");break;case"sattack":n.push("system.attributes.attack.spell");break;case"mattack":n.push("system.attributes.attack.melee");break;case"nattack":n.push("system.attributes.attack.natural");break;case"rattack":n.push("system.attributes.attack.ranged");break;case"tattack":n.push("system.attributes.attack.thrown");break;case"critConfirm":n.push("system.attributes.attack.critConfirm");break;case"allSavingThrows":n.push("system.attributes.savingThrows.fort.total","system.attributes.savingThrows.ref.total","system.attributes.savingThrows.will.total");break;case"fort":n.push("system.attributes.savingThrows.fort.total");break;case"ref":n.push("system.attributes.savingThrows.ref.total");break;case"will":n.push("system.attributes.savingThrows.will.total");break;case"vehicleSave":n.push("system.attributes.savingThrows.save.total");break;case"skills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&(n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const s of Object.keys(t.subSkills))n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"unskills":for(const[e,t]of Object.entries(i.skills))if(null!=t){for(const[s,a]of Object.entries(t.subSkills??{}))a.rank>0||n.push(`system.skills.${e}.subSkills.${s}.mod`);t.rank>0||n.push(`system.skills.${e}.mod`)}break;case"reach":n.push("system.traits.reach.total.melee"),n.push("system.traits.reach.total.reach");break;case"strSkills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&("str"===t.ability&&n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const[s,a]of Object.entries(t.subSkills))null!=a&&"str"===a.ability&&n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"dexSkills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&("dex"===t.ability&&n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const[s,a]of Object.entries(t.subSkills))null!=a&&"dex"===a.ability&&n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"conSkills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&("con"===t.ability&&n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const[s,a]of Object.entries(t.subSkills))null!=a&&"con"===a.ability&&n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"intSkills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&("int"===t.ability&&n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const[s,a]of Object.entries(t.subSkills))null!=a&&"int"===a.ability&&n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"wisSkills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&("wis"===t.ability&&n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const[s,a]of Object.entries(t.subSkills))null!=a&&"wis"===a.ability&&n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"chaSkills":for(const[e,t]of Object.entries(i.skills))if(null!=t&&("cha"===t.ability&&n.push(`system.skills.${e}.mod`),null!=t.subSkills))for(const[s,a]of Object.entries(t.subSkills))null!=a&&"cha"===a.ability&&n.push(`system.skills.${e}.subSkills.${s}.mod`);break;case"allChecks":n.push("system.abilities.str.checkMod","system.abilities.dex.checkMod","system.abilities.con.checkMod","system.abilities.int.checkMod","system.abilities.wis.checkMod","system.abilities.cha.checkMod",...i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"strChecks":n.push("system.abilities.str.checkMod",..."str"===i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"dexChecks":n.push("system.abilities.dex.checkMod",..."dex"===i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"conChecks":n.push("system.abilities.con.checkMod",..."con"===i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"intChecks":n.push("system.abilities.int.checkMod",..."int"===i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"wisChecks":n.push("system.abilities.wis.checkMod",..."wis"===i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"chaChecks":n.push("system.abilities.cha.checkMod",..."cha"===i.attributes?.init?.ability?["system.attributes.init.total"]:[]);break;case"allSpeeds":for(const e of Object.keys(i.attributes?.speed??{}))n.push(`system.attributes.speed.${e}.total`);break;case"landSpeed":n.push("system.attributes.speed.land.total");break;case"climbSpeed":n.push("system.attributes.speed.climb.total");break;case"swimSpeed":n.push("system.attributes.speed.swim.total");break;case"burrowSpeed":n.push("system.attributes.speed.burrow.total");break;case"flySpeed":n.push("system.attributes.speed.fly.total");break;case"cmb":n.push("system.attributes.cmb.bonus");break;case"cmd":if(["dodge","haste"].includes(s)){n.push("system.attributes.cmd.total");break}n.push("system.attributes.cmd.total","system.attributes.cmd.flatFootedTotal");break;case"init":n.push("system.attributes.init.total");break;case"acpA":n.push("system.attributes.acp.armorBonus");break;case"acpS":n.push("system.attributes.acp.shieldBonus");break;case"mDexA":n.push("system.attributes.mDex.armorBonus");break;case"mDexS":n.push("system.attributes.mDex.shieldBonus");break;case"spellResist":n.push("system.attributes.sr.total");break;case"damage":n.push("system.attributes.damage.general");break;case"mdamage":n.push("system.attributes.damage.meleeAll");break;case"rdamage":n.push("system.attributes.damage.rangedAll");break;case"wdamage":n.push("system.attributes.damage.weapon");break;case"rwdamage":n.push("system.attributes.damage.ranged");break;case"twdamage":n.push("system.attributes.damage.thrown");break;case"mwdamage":n.push("system.attributes.damage.melee");break;case"ndamage":n.push("system.attributes.damage.natural");break;case"sdamage":n.push("system.attributes.damage.spell");break;case"bonusFeats":n.push("system.details.feats.bonus");break;case"bonusSkillRanks":n.push("system.details.skills.bonus");break;case"concentration":n.push("system.attributes.spells.spellbooks.primary.concentration.total","system.attributes.spells.spellbooks.secondary.concentration.total","system.attributes.spells.spellbooks.tertiary.concentration.total","system.attributes.spells.spellbooks.quaternary.concentration.total","system.attributes.spells.spellbooks.spelllike.concentration.total");break;case"cl":n.push("system.attributes.spells.spellbooks.primary.cl.total","system.attributes.spells.spellbooks.secondary.cl.total","system.attributes.spells.spellbooks.tertiary.cl.total","system.attributes.spells.spellbooks.quaternary.cl.total","system.attributes.spells.spellbooks.spelllike.cl.total");break;case"dc":n.push("system.attributes.spells.school.all.dc");break;case"sensedv":n.push("system.traits.senses.dv.total");break;case"sensets":n.push("system.traits.senses.ts.total");break;case"sensebse":n.push("system.traits.senses.bse.total");break;case"sensebs":n.push("system.traits.senses.bs.total");break;case"sensels":n.push("system.traits.senses.ls.total");break;case"sensetr":n.push("system.traits.senses.tr.total");break;case"sensesc":n.push("system.traits.senses.sc.total")}const o=/^dc\.school\.(?<schoolId>\w+)/.exec(t);if(o){const e=o.groups.schoolId;n.push(`system.attributes.spells.school.${e}.dc`)}const r=/^cl\.school\.(?<schoolId>\w+)/.exec(t);if(r){const e=r.groups.schoolId;n.push(`system.attributes.spells.school.${e}.cl`)}const l=/^concn\.(?<bookId>\w+)/.exec(t);if(l){const e=l.groups.bookId;n.push(`system.attributes.spells.spellbooks.${e}.concentration.total`)}const c=/^cl\.book\.(?<bookId>\w+)/.exec(t);if(c){const e=c.groups.bookId;n.push(`system.attributes.spells.spellbooks.${e}.cl.bonus`)}if(/^skill\./.test(t)){const e=t.split(".").slice(1);let s=e.shift(),a=!0;"~"===s[0]&&(a=!1,s=s.slice(1));const o=i.skills[s];if(o){const t=e.pop();if(t)o.subSkills?.[t]&&n.push(`system.skills.${s}.subSkills.${t}.mod`);else if(n.push(`system.skills.${s}.mod`),a)for(const e of Object.keys(o.subSkills??{}))n.push(`system.skills.${s}.subSkills.${e}.mod`)}}return Hooks.events.pf1GetChangeFlat?.length&&Hooks.callAll("pf1GetChangeFlat",n,t,s,a,e),n}function getSourceInfo(e,t){return e[t]??={negative:[],positive:[]},e[t]}function setSourceInfoByName(e,t,s,a,i=!0,n){const o=i?"positive":"negative",r=getSourceInfo(e,t)[o],l=r.find((e=>e.name===s));if(l)l.value=a;else{const e={name:s,value:a};n&&(e.id=n),r.push(e)}}function getHighestChanges(e,t={ignoreTarget:!1}){const s={value:0,ids:[],highestID:null},a=Object.keys(ffd20.config.bonusTypes).reduce(((e,a)=>(t.ignoreTarget?e[a]=foundry.utils.deepClone(s):e[a]={},e)),{});for(const s of e){let e;e=t.ignoreTarget?a[s.type]:a[s.type]?.[s.target],e&&(e.ids.push(s._id),(e.value<s.value||!e.highestID)&&(e.value=s.value,e.highestID=s._id))}let i,n;const filterFunc=e=>n.highestID===e._id||(-1!==ffd20.config.stackingBonusTypes.indexOf(i)||!n.ids.includes(e._id));for(i of Object.keys(a))if(t.ignoreTarget)n=a[i],e=e.filter(filterFunc);else for(const t of Object.keys(a[i]))n=a[i][t],e=e.filter(filterFunc);return e}const Be=Object.freeze(Object.defineProperty({__proto__:null,addDefaultChanges:function addDefaultChanges(e,t){foundry.utils.logCompatibilityWarning("ffd20.documents.actor.changes.addDefaultChanges() is deprecated in favor of ffd20.documents.actor.abstract.BaseCharacterPF#_prepareTypeChanges()",{since:"PF1 v11",until:"PF1 v12"})},applyChanges,getChangeFlat,getHighestChanges,getSourceInfo,setSourceInfoByName},Symbol.toStringTag,{value:"Module"}));class Spellbook{key;actor;data;spells=[];level={};constructor(e,t){this.key=e,this.actor=t,this.data=t.system.attributes.spells.spellbooks[e]}addSpell(e){this.spells.push(e);const t=e.system.level;Math.clamp(t,0,9)===t?(this.level[t]??=new SpellbookLevel(this),this.level[t].spells.push(e)):console.error("Spell with impossible spell level:",e)}}class SpellbookLevel{book;spells=[];constructor(e){this.book=e}}class SpellbookSlots{level=0;max=0;value=0;domain=0;domainMax=0;domainUnused=0;used=0;total=0;constructor({max:e=0,domain:t=0,level:s=0}={}){this.level=s,0===s&&(t=0),this.value=e+t,this.max=e,this.domain=t,this.domainMax=t,this.domainUnused=t,this.total=e+t}}class SpellRanges{close;medium;long;cl;constructor(e){this.cl=e,this.close=ffd20.utils.calculateRange(null,"close",{cl:e})[0],this.medium=ffd20.utils.calculateRange(null,"medium",{cl:e})[0],this.long=ffd20.utils.calculateRange(null,"long",{cl:e})[0]}}class SpellbookMode{raw;#r=!1;#l=!1;get isSpontaneous(){return this.#r||!1}get isPrepared(){return this.#l||!1}get usesSpellpoints(){return!0===this.book.spellPoints?.useSystem}get isSemiSpontaneous(){return this.isSpontaneous||this.usesSpellpoints||!1}constructor(e){this.book=e;let t=e.spellPreparationMode;t||=e.spellPreparationMode="spontaneous",this.raw=t;const s=ffd20.config.caster.type[this.raw];this.#r=s.spontaneous,this.#l=s.prepared}}const He=Object.freeze(Object.defineProperty({__proto__:null,SpellRanges,Spellbook,SpellbookLevel,SpellbookMode,SpellbookSlots},Symbol.toStringTag,{value:"Module"}));class Resource{get id(){return this._id}#c;get item(){return this.#c}async add(e){return this.item.addCharges(e)}constructor(e){this.#c=e;const t=e.system.tag;Object.defineProperties(this,{value:{get(){return this.item.charges},enumerable:!0},max:{get(){return this.item.maxCharges},enumerable:!0},_id:{value:e.id,enumerable:!0},tag:{value:t,enumerable:!0}})}}class ActorPF extends ActorBasePF{_configure(e={}){super._configure(e),this.changes??=new Collection,Object.defineProperties(this,{itemFlags:{value:{boolean:{},dictionary:{}},writable:!1},_rollData:{value:null,enumerable:!1,writable:!0},_visionSharingSheet:{value:null,enumerable:!1,writable:!0}})}get spellFailure(){return this.itemTypes.equipment.filter((e=>!0===e.system.equipped)).reduce(((e,t)=>e+(t.system.spellFailure||0)),0)}get race(){return this.itemTypes.race[0]??null}static _getSourceLabel(e){const t=e.change?.parent;if(t){const s=t.subType;let a;return a=s&&((t.system.identified??1)||game.user.isGM)&&!["weapon"].includes(t.type)?game.i18n.localize(`FFD20.Subtypes.Item.${t.type}.${s}.Single`):game.i18n.localize("TYPES.Item."+t.type),`${e.name} (${a})`}return e.name}get _skillTargets(){const e=[];for(const[t,s]of Object.entries(this.system.skills))if(null!=s){e.push("skill."+t),e.push("skill.~"+t);for(const a of Object.keys(s.subSkills??[]))e.push(`skill.${t}.${a}`)}return e}get _spellbookTargets(){const e=[];for(const[t,s]of Object.entries(this._source.system.attributes?.spells?.spellbooks??{}))s.inUse&&e.push("cl.book."+t,"concn."+t);return e}_prepareItemFlags(){const e=this.allItems,t={},s={};for(const a of e){if(a.isActive){const e=a.system.flags?.boolean||{};for(const s of Object.keys(e))t[s]??={sources:[]},t[s].sources.push(a)}const e=a.system.tag;if(e){const t=Object.entries(a.system.flags?.dictionary||{});if(t.length){s[e]||={};for(const[i,n]of t){if(void 0!==s[e][i]&&this.isOwner){const t=game.i18n.format("FFD20.Warning.DuplicateDFlag",{actor:this.uuid,item:a.name,key:i,tag:e});console.warn(t,a),ui.notifications?.warn(t,{console:!1})}s[e][i]=a.isActive?n:0}}}}this.itemFlags.boolean=t,this.itemFlags.dictionary=s}_prepareChanges(){const e=[];for(const t of this.items)t.isActive&&t.hasChanges&&t.changes.size&&e.push(...t.changes);this._prepareTypeChanges(e);const t=new Collection;for(const s of e){const e=`${s.parent?.id??"Actor"}-${s._id}`;t.set(e,s)}this.changes=t}_prepareTypeChanges(e){}applyActiveEffects(){super.applyActiveEffects(),this.prepareConditions(),this._prepareItemFlags(),this._prepareChanges(),applyChanges(this,{simple:!0})}async expireActiveEffects({combat:e,timeOffset:t=0,worldTime:s=null,event:a=null,initiative:i=null}={},n={}){if(!this.isOwner)throw Error("Must be owner");s??=game.time.worldTime,s+=t;const o=this._effectsWithDuration.filter((t=>{const{seconds:n,startTime:o}=t.duration,{rounds:r,startRound:l}=t.duration;let c=1/0;if(Number.isFinite(n)&&n>=0){c=n-(s-(o??0))}else if(r>0&&e){c=(r-(e.round-(l??0)))*CONFIG.time.roundTime}if(c>0)return!1;const d=t.system?.initiative;switch(t.system?.end||"turnStart"){case"initiative":return null!==i?i<=d:c<0;case"turnStart":if(0===c&&!["turnStart","turnEnd"].includes(a))return!1;break;case"turnEnd":if(0===c&&"turnEnd"!==a)return!1}return c<=0})),r=[],l=[],c=[];for(const e of o){let t;t=e.parent instanceof Item?e.parent:e.origin?await fromUuid(e.origin,{relative:this}):null,"buff"===t?.type?c.push({_id:t.id,"system.active":!1}):e.getFlag("ffd20","autoDelete")?l.push(e.id):r.push({_id:e.id,disabled:!0})}if(n.ffd20??={},n.ffd20.reason="duration",l.length){const e=foundry.utils.mergeObject({render:!c.length&&!r.length},n);await this.deleteEmbeddedDocuments("ActiveEffect",l,e)}if(r.length){const e=foundry.utils.mergeObject({render:!c.length},n);await this.updateEmbeddedDocuments("ActiveEffect",r,e)}c.length&&await this.updateEmbeddedDocuments("Item",c,n)}prepareBaseData(){super.prepareBaseData(),this.system.details??={},this.system.details.level??={},this.sourceInfo={},this.changeFlags={},this.equipment={shield:{type:ffd20.config.shieldTypes.none,id:void 0},armor:{type:ffd20.config.armorTypes.none,id:void 0}},this.classes={},this.system.resources??={},this._resetInherentTotals(),this._prepareTraits(),Hooks.events.pf1PrepareBaseActorData?.length&&Hooks.callAll("pf1PrepareBaseActorData",this);const e=this.itemTypes.class,t=e.reduce(((e,t)=>(t.reset(),e.hd+=t.hitDice,["mythic","racial"].includes(t.subType)||(e.level+=t.system.level??0),e.mythic+=t.mythicTier,e)),{hd:0,mythic:0,level:0});this.system.details.level.value=t.level,this.system.details.mythicTier=t.mythic;for(const e of Object.values(this.system.abilities)){const t=e.value;null===t?(e.total=null,e.base=null,e.undrained=null):(e.undrained=t,e.total=t-e.drain,e.penalty=(e.penalty||0)-Math.abs(e.userPenalty||0),e.base=e.total)}this.refreshAbilityModifiers();{const t="system.attributes.bab.total",s=Math.floor(e.reduce(((e,s)=>{const a=s.system.babBase;return 0!==a&&getSourceInfo(this.sourceInfo,t).positive.push({name:s.name,value:ffd20.utils.fractionalToString(a)}),e+a}),0));this.system.attributes.bab.total=Math.floor(s),this.system.attributes.bab.value&&(this.system.attributes.bab.total+=this.system.attributes.bab.value??0)}this._prepareSenses(),this._prepareClassSkills(),foundry.utils.setProperty(this.system,"attributes.hd.total",t.hd)}_prepareTraits(){}_finalizeTraits(){}_prepareCreatureType(){const e=this.system.traits.creatureTypes?.standard;this.system.traits.humanoid=e.has("humanoid"),this.system.traits.undead=e.has("undead"),this.system.traits.construct=e.has("construct"),this.system.traits.living=!this.system.traits.undead&&!this.system.traits.construct}_prepareSenses(){for(const[e,t]of Object.entries(this.system.traits.senses))if("object"==typeof t&&t)switch(e){case"ll":case"si":case"sid":break;default:t.total=t.value}}prepareConditions(){this.system.conditions={};const e=this.system.conditions;for(const t of ffd20.registry.conditions.keys())e[t]=this.statuses.has(t)}_prepareNaturalReach(){this.system.traits.reach??={};const e=this.system.traits.reach;e.base=this.constructor.getReach(this.system.traits?.size?.value,this.system.traits?.stature),e.natural=e.base,e.total={...e.base},getSourceInfo(this.sourceInfo,"system.traits.reach.total.melee").positive.push({name:game.i18n.localize("FFD20.BuffTarReach"),modifier:"base",value:e.base.melee}),getSourceInfo(this.sourceInfo,"system.traits.reach.total.reach").positive.push({name:game.i18n.localize("FFD20.BuffTarReach"),modifier:"base",value:e.base.reach})}_prepareClassSkills(){const e=this.system.skills;if(!e)return;const t=new Set,s=this.items.filter((e=>["class","race","feat"].includes(e.type)));for(const e of s)for(const[s,a]of Object.entries(e.system.classSkills||{}))!0===a&&t.add(s);if(0!=t.size)for(const[s,a]of Object.entries(e))if(a){e[s].cs=t.has(s);for(const e of Object.keys(a.subSkills??{}))foundry.utils.setProperty(a,`subSkills.${e}.cs`,t.has(s))}else console.warn(`Bad skill data for "${s}"`,this)}hasArmorProficiency(e){if("equipment"!==e.type||!["armor","shield"].includes(e.system.subType))return!0;const t=this.system.traits?.armorProf;if(!t)return!1;if(t.total.has(e.baseArmorProficiency))return!0;if(0==t.custom.size)return!1;return(e.system.baseTypes??[]).some((e=>t.custom.has(e)))}hasWeaponProficiency(e,{override:t=!0}={}){if(t&&e.system.proficient)return!0;const s=this.system.traits?.weaponProf;if(!s)return!1;let a;if("weapon"===e.type?a=e.subType:"attack"===e.type&&(a="weapon"===e.subType?e.system.weapon?.category:null),s.standard.has(a))return!0;if(0==s.custom.size)return!1;return(e.system.baseTypes??[]).some((e=>s.custom.has(e)))}_updateSpellBook(e,t,s){const a=this.system,i=a.attributes?.spells?.spellbooks?.[e];if(!i)return void console.error(`Spellbook data not found for "${e} on actor`,this);if(i.label=i.name||game.i18n.localize("FFD20.SpellBook"+e.capitalize()),!i.inUse)return;const n=i.domainSlotValue||0,o=new Map;for(let e=0;e<10;e++){const t=i.spells["spell"+e];t&&(o.set(e,t),t.casts={unused:0,max:NaN},t.known={unused:0,max:NaN},t.preparation={unused:0,max:NaN,domain:0},t.domain={unused:0,max:n},t.slots={used:0,max:NaN})}const r=new SpellbookMode(i);let l=ffd20.config.casterProgression.castsPerDay[r.raw]??{},c=i.casterType;if(!l[c]){const t=Object.keys(l);i.casterType=c=t[0],console.debug(`Actor ${this.name} [${this.uuid}] has invalid caster type in spellbook "${e}", auto-corrected to "${c}"`)}l=l[c],i.isSchool="divine"!==i.kind,i.hasProgressionChoices=Object.keys(l).length>1;const d=ffd20.config.casterProgression.spellsPreparedPerDay[r.raw]?.[c];if(i.name)i.label=i.name;else if(i.class)if("_hd"===i.class)i.label=i.name||game.i18n.localize("FFD20.SpellBookSpelllike");else{const e=this.classes[i.class]?._id,t=this.items.get(e);t&&(i.label=t.name)}t??=this.getRollData({refresh:!0}),s??=this._generateSpellbookCache(),"_hd"===i.class?t.class={level:t.attributes.hd?.total}:t.class=t.classes?.[i.class],t.cl=i.cl?.total;const u=s.books[e],m=a.abilities[i.ability],p=RollPF.safeRollSync(i.spellSlotAbilityBonusFormula||"0",t).total,h=(m?.total??10)+p,f=ffd20.utils.getAbilityModifier(h);let g=0;{const s=`system.attributes.spells.spellbooks.${e}.cl.total`,n=i.cl.formula||"0";let o=0;if("npc"===this.type){const e=i.cl.base||0;o+=e,g+=e,setSourceInfoByName(this.sourceInfo,s,game.i18n.localize("FFD20.Base"),e)}if("_hd"===i.class){const e=a.attributes.hd.total;o+=e,g+=e,setSourceInfoByName(this.sourceInfo,s,game.i18n.localize("FFD20.HitDie"),e)}else if(i.class&&t.class){const e=t.class?.unlevel||0;o+=e,g+=e,setSourceInfoByName(this.sourceInfo,s,this.classes[i.class]?.name,e,!0,"class")}if(i.autoSpellLevelCalculation){const e=i.cl.autoSpellLevelCalculationFormula||"0",a=RollPF.safeRollSync(e,t).total??0,n=Math.clamp(o+a,1,20);i.cl.autoSpellLevelTotal=n,g+=a,0!==a&&setSourceInfoByName(this.sourceInfo,s,game.i18n.localize("FFD20.AutoSpellClassLevelOffset.Formula"),a)}else i.cl.autoSpellLevelTotal=o;const r=RollPF.safeRollSync(n,t).total;g+=r,r>0?setSourceInfoByName(this.sourceInfo,s,game.i18n.localize("FFD20.CasterLevelBonusFormula"),r):r<0&&setSourceInfoByName(this.sourceInfo,s,game.i18n.localize("FFD20.CasterLevelBonusFormula"),r,!1);const l=this.system.attributes?.woundThresholds?.penalty||0;if(g>0&&0!=l&&ffd20.config.woundThresholdChangeTargets.includes("cl")){const e=Math.max(1,g-l);i.cl.woundPenalty=g-e,g=e}t.attributes.energyDrain&&(g=Math.max(0,g-t.attributes.energyDrain),setSourceInfoByName(this.sourceInfo,s,game.i18n.localize("FFD20.NegativeLevels"),-Math.abs(t.attributes.energyDrain),!1)),g+=i.cl.total??0,g+=i.cl.bonus??0,i.cl.total=g}{Number.isFinite(i.concentration)&&(console.error(`Bad spellbook concentration value "${i.concentration}" in spellbook "${e}"`),i.concentration={});const s=i.concentrationFormula,n=s.length?RollPF.safeRollSync(s,t,void 0,void 0,{minimize:!0}):{total:0,isDeterministic:!0},o=n.isDeterministic?n.total:0,r=a.abilities[i.ability]?.mod??0,l=g+r+o;i.concentration.total||=0,setSourceInfoByName(this.sourceInfo,`system.attributes.spells.spellbooks.${e}.concentration.total`,game.i18n.localize("FFD20.CasterLevel"),g,!1),setSourceInfoByName(this.sourceInfo,`system.attributes.spells.spellbooks.${e}.concentration.total`,game.i18n.localize("FFD20.SpellcastingAbility"),r,!1),setSourceInfoByName(this.sourceInfo,`system.attributes.spells.spellbooks.${e}.concentration.total`,game.i18n.localize("FFD20.ByBonus"),n.isDeterministic?n.total:n.formula,!1),i.concentration??={},i.concentration.total+=l}const getAbilityBonus=e=>ActorPF.getSpellSlotIncrease(f,e),y=i.autoSpellLevelCalculation;y?i.spellPoints.useSystem=!1:i.autoSpellLevels=!1;const b=r.isSemiSpontaneous,F=r.isPrepared,v=b!=F,D=!v;if(i.spontaneous=b,i.prepared=F,i.pure=v,i.hybrid=D,!l)return void console.error(`Actor ${this.name} [${this.uuid}] has invalid caster type in spellbook "${e}"`);let S=i.cl.autoSpellLevelTotal;if(y&&(S=Math.clamp(S,1,20)),!Number.isSafeInteger(S)){const e=`Actor ${this.uuid} has invalid caster class level.`;console.error(e,S),ui.notifications?.error(e,{console:!1}),S=Math.floor(S)}const k=l[S-1],C=d[S-1];if(t.ablMod=f,y){let e=Math.clamp(i.cl.autoSpellLevelTotal,1,20);if(!Number.isSafeInteger(e)){const t=`Actor ${this.id} has invalid caster class level.`;console.error(t,e),ui.notifications?.error(t,{console:!1}),e=Math.floor(e)}t.ablMod=f;const s=i.castPerDayAllOffsetFormula||"0",a="0"!=s?RollPF.safeRollSync(s,t).total:0,r=i.preparedAllOffsetFormula||"0",l="0"!=r?RollPF.safeRollSync(r,t).total:0;for(let e=0;e<10;e++){t.sl=e;const s=o.get(e),r=s.castPerDayOffsetFormula||"0",c="0"!=r?RollPF.safeRollSync(r,t).total:0,d=s.preparedOffsetFormula||"0",u="0"!=d?RollPF.safeRollSync(d,t).total:0,m=getAbilityBonus(e);let p=k[e];i.hasCantrips||0!=e||(p=NaN),s.base=p||0;const h=C[e];if(p===1/0)s.max=1/0;else if(Number.isFinite(p)){let e=p+m+a+c;F&&(e+=n),s.max=e}else s.max=NaN;if(s.casts.max=s.max,Number.isFinite(h)){let t=h+u+l;s.preparation.domain=e>0?n:0,b||(t+=m,s.max=t,e>0&&(s.max+=n)),s.preparation.max=t,s.known.max=F?1/0:t,s.known.domain=b&&e>0?n:0}Number.isFinite(s.value)||(s.value=s.max),isNaN(s.max)&&(s.preparation.max=NaN,s.domain.max=NaN,s.known.max=NaN)}}else for(let e=i.hasCantrips?0:1;e<10;e++){const t=o.get(e);let s=t.base;Number.isNaN(s)||null===s?(t.base=null,t.max=0):i.autoSpellLevels&&s>=0?(s+=getAbilityBonus(e),t.max=s):t.max=s||0,Number.isFinite(t.value)||(t.value=t.max)}const w=(m?.total??0)-10,T={};for(let e=0;e<10;e++){const t=o.get(e);if(t.value||=0,w<e&&!0!==i.noAbilityLimit&&(t.hasIssues=!0,t.lowAbilityScore=!0),Number.isNaN(t.max))continue;const s=y?b?t.casts.max:t.preparation.max:t.max||0;T[e]=new SpellbookSlots({level:e,max:s,domain:i.domainSlotValue});const a=u.level[e]?.spells??[],n=T[e];for(const e of a){let t;if(t=b?e.system.preparation?.value||0:e.system.preparation?.max||0,!t)continue;const s=e.slotCost*t;e.isDomain?n.domain-=s:n.used+=s,n.value-=s}b||(t.value=n.value),y?(t.slots.max=b?t.casts.max:t.preparation.max,D&&(t.slots.max-=t.domain.max)):t.slots.max=t.max,t.slots.used=n.used,F&&(t.preparation.used=t.slots.used),t.slots.remaining=t.slots.max-t.slots.used,t.slots.excess=Math.max(0,-t.slots.remaining),t.domain.remaining=n.domain,t.domain.used=0,t.domain.excess=Math.max(0,-t.domain.remaining),t.mismatchSlots=-(t.slots.excess+t.domain.excess-Math.max(0,t.slots.remaining)),0==t.mismatchSlots&&(t.mismatchSlots=t.slots.remaining),!y&&b||(t.invalidSlots=0!=t.mismatchSlots||0!=t.slots.remaining);let r=0;if(F&&v)r=t.value;else{const s=y?t.preparation.max:t.max;Number.isNaN(s)&&(t.hasIssues=!0,t.lowLevel=!0),n.used=0,t.domain.used=0;let a=t.domain.max;for(const t of u.level[e]?.spells??[]){const{preparation:e,atWill:s,domain:i}=t.system;if(s)continue;if(e.value<=0)continue;const o=t.slotCost;i&&a>0?a-=o:n.used+=o}t.domain.used=t.domain.max-a,r=s-n.used}t.remaining=r;const l=e>0?n.domain:0;if(!(0==r&&l<=0)){if(t.hasIssues=!0,b)if(t.known.used=n.used,F)y&&(t.mismatchSlots=r);else{const e=t.known.max-t.known.used;t.known.unused=Math.max(0,e),t.known.excess=-Math.min(0,e),y&&(t.mismatchKnown=e,t.invalidKnown=0!=t.known.unused||0!=t.known.excess)}if(F&&Number.isFinite(t.preparation.max)){const e=t.preparation.max+t.preparation.domain;t.preparation.unused=Math.max(0,e-t.preparation.used)}!y&&b&&(t.mismatchKnown=0,t.mismatchSlots=0,t.domain.remaining=0,t.slots.remaining=0)}}if(!0===i.spellPoints.useSystem){const e=i.spellPoints.maxFormula||"0";t.ablMod=f,t.classLevel=t.class?.level;const s=RollPF.safeRollSync(e,t);i.spellPoints.max=s.total}else i.spellPoints.max=0;i.range=new SpellRanges(i.cl.total)}_generateSpellbookCache(){const e=new Set(Object.keys(this.system.attributes.spells.spellbooks)),t=this.itemTypes.spell,s={spells:t,books:{}};for(const t of e)s.books[t]??=new Spellbook(t,this);for(const a of t){const t=a.system.spellbook;e.has(t)?s.books[t].addSpell(a):console.error("Spell has invalid book",a)}return s}updateSpellbookInfo(e,t){e??=this.getRollData({refresh:!0}),t??=this._generateSpellbookCache();const s=this.system.attributes.spells.spellbooks;for(const a of Object.keys(s))this._updateSpellBook(a,e,t),delete e.class,delete e.classLevel,delete e.cl,delete e.sl,delete e.ablMod}refreshDerivedData(){this.system.attributes.maxDexBonus=null,this.system.abilities.dex.maxBonus=this.system.abilities.dex.mod;const e=this._computeEncumbrance(),t=this._applyArmorPenalties();this.system.attributes.acp.encumbrance=e.acp,this.system.attributes.acp.gear=t.acp,this.system.attributes.acp.total=Math.max(e.acp,t.acp),this.system.attributes.acp.skill=Math.max(e.acp,t.acpSkill),null==e.maxDexBonus&&null==t.maxDexBonus||(this.system.attributes.maxDexBonus=Math.min(e.maxDexBonus??1/0,t.maxDexBonus??1/0),this.system.abilities.dex.maxBonus=Math.min(this.system.abilities.dex.maxBonus,this.system.attributes.maxDexBonus))}prepareDerivedData(){super.prepareDerivedData(),this._prepareNaturalReach(),this.system.traits??={},this._finalizeTraits(),this.system.traits?.creatureSubtypes?.standard?.has("incorporeal")&&(this.statuses.add("incorporeal"),this.system.conditions.incorporeal=!0),this.system.attributes??={},this._prepareCreatureType(),this._rollData=null,this.prepareItemLinks();for(const e of this.items)e._prepareDependentData(!1),this.updateItemResources(e);applyChanges(this);const e=this.system.traits.reach.total;e.melee<0&&(e.melee=0),e.reach<0&&(e.reach=0),this.prepareSpecificDerivedData(),this.prepareCMB(),this._prepareOverlandSpeeds(),this._rollData=null;for(const e of this.items)e._prepareDependentData(!0),this.updateItemResources(e,{warnOnDuplicate:!1})}_prepareOverlandSpeeds(){for(const e of Object.values(this.system.attributes?.speed??{}))e.overland=e.total>0?ffd20.utils.overlandSpeed(e.total).speed:0}prepareCMB(){const e=this.system.attributes.attack.shared??0,t=this.system.attributes.attack.general??0,s=this.system.attributes.cmbAbility,a=this.system.abilities[s]?.mod??0,i=this.system.traits.size.value,n=e+t+(Object.values(ffd20.config.sizeSpecialMods)[i]??0)+(this.system.attributes.cmb.bonus??0)+a;this.system.attributes.cmb.total=n}prepareSpecificDerivedData(){Hooks.events.pf1PrepareDerivedActorData?.length&&Hooks.callAll("pf1PrepareDerivedActorData",this),this.refreshDerivedData();const e=this.system.attributes,t=this.system.abilities;for(const e of Object.keys(t)){const s=t[e],a=s.base,i=s.penalty||0,n=s.damage;s.baseMod=ffd20.utils.getAbilityModifier(a,{penalty:i,damage:n}),s.unmod=ffd20.utils.getAbilityModifier(s.undrained)}const s=this.system,a=game.settings.get("ffd20","healthConfig"),i={up:Math.ceil,nearest:Math.round,down:Math.floor}[a.rounding];for(const t of["hp","vigor"])e[t].max=i(e[t].max);for(const e of["hp","wounds","vigor"]){const t=this.system.attributes[e];Number.isFinite(t?.offset)&&(t.value=t.max+t.offset)}for(const e of["mp"]){const t=this.system.attributes[e];Number.isFinite(t?.offset)&&(t.value=t.max+t.offset)}{const t=e.bab.total-e.acp.attackPenalty-(e.energyDrain??0);e.attack.shared=t}this.updateWoundThreshold();for(const e of ffd20.config.arbitrarySkills){if(null==s.skills[e])continue;const t=s.skills[e];t.subSkills=t.subSkills||{};for(const e of Object.keys(t.subSkills))null==t.subSkills[e]&&delete t.subSkills[e]}for(const e of Object.keys(s.skills)){null==s.skills[e]&&delete s.skills[e]}for(const e of Object.keys(s.skills))if(ffd20.config.backgroundSkills.includes(e)){const t=s.skills[e];t.background=!0;for(const e of Object.keys(t.subSkills??{}))t.subSkills[e].background=!0}for(const t of["ac.normal.total","ac.shield.total","ac.natural.total"]){const a=foundry.utils.getProperty(s,t);if(a)for(const t of["normal","flatFooted"])e.ac[t].total+=a}{const s=e.ac.normal.ability??"dex",a=e.ac.touch.ability??"dex",i=e.cmd.dexAbility??"dex";let n=t[s]?.mod??0,o=t[a]?.mod??0;const r=t[i]?.mod??0;this.changeFlags.loseDexToAC&&(n=Math.min(n,0),o=Math.min(o,0));const l=e.maxDexBonus??null,c={normal:null!==l?Math.min(l,n):n,touch:null!==l?Math.min(l,o):o,flatFooted:Math.min(0,n)},d={normal:s,touch:a,flatFooted:s},u={total:r,flatFootedTotal:Math.min(0,r)};for(const[t,s]of Object.entries(c))e.ac[t].total+=s,getSourceInfo(this.sourceInfo,`system.attributes.ac.${t}.total`).positive.push({value:s,name:ffd20.config.abilities[d[t]]});for(const[t,s]of Object.entries(u))e.cmd[t]+=s,getSourceInfo(this.sourceInfo,"system.attributes.cmd."+t).positive.push({value:s,name:ffd20.config.abilities[i]})}{let t=!1;const s={name:"",value:game.i18n.localize("FFD20.ReducedMovementSpeed")},a=e.encumbrance.level;if(a>0){const e=ffd20.config.encumbranceLevels;a>=e.heavy?this.changeFlags.noHeavyEncumbrance||(t=!0,s.name=game.i18n.localize("FFD20.HeavyEncumbrance")):a>=e.medium&&(this.changeFlags.noMediumEncumbrance||(t=!0,s.name=game.i18n.localize("FFD20.MediumEncumbrance")))}const i={type:0},n=this.equipment;n&&this._prepareArmorData(n.armor,i),i.type!=ffd20.config.armorTypes.heavy||this.changeFlags.heavyArmorFullSpeed?i.type!=ffd20.config.armorTypes.medium||this.changeFlags.mediumArmorFullSpeed||(t=!0,s.name=game.i18n.localize("FFD20.Subtypes.Item.equipment.armor.Types.medium")):(t=!0,s.name=game.i18n.localize("FFD20.Subtypes.Item.equipment.armor.Types.heavy"));for(const e of Object.keys(this.system.attributes.speed)){const a=this.system.attributes.speed[e].total;this.system.attributes.speed[e].unhindered=a,t&&a>0&&(this.system.attributes.speed[e].total=this.constructor.getReducedMovementSpeed(a),getSourceInfo(this.sourceInfo,`system.attributes.speed.${e}.total`).negative.push(s))}}let n=null,o=null;switch(e.encumbrance.level){case ffd20.config.encumbranceLevels.medium:n=3,o=3;break;case ffd20.config.encumbranceLevels.heavy:n=6,o=1}const r=game.i18n.localize("FFD20.Encumbrance");if(null!==n&&getSourceInfo(this.sourceInfo,"system.attributes.acp.total").negative.push({name:r,value:n}),null!==o){getSourceInfo(this.sourceInfo,"system.attributes.maxDexBonus").negative.push({name:r,value:o});let e=new Intl.NumberFormat(void 0,{signDisplay:"always"}).format(o);e=`${game.i18n.localize("FFD20.MaxDexShort")} ${e}`,getSourceInfo(this.sourceInfo,"system.attributes.ac.normal.total").negative.push({name:r,value:e,valueAsNumber:o}),getSourceInfo(this.sourceInfo,"system.attributes.ac.touch.total").negative.push({name:r,value:e,valueAsNumber:o})}const l=this.system.traits.senses;l.ll.enabled||=this.changeFlags.lowLightVision,l.si||=this.changeFlags.seeInvisibility,l.sid||=this.changeFlags.seeInDarkness,this.updateSpellbookInfo()}getLabels(){const e={};e.alignment=ffd20.config.alignments[this.system.details.alignment],e.speed={};for(const[t,s]of Object.entries(this.system.attributes.speed??{})){const a=ffd20.utils.convertDistance(s.total);e.speed[t]=`${a[0]} ${ffd20.config.measureUnitsShort[a[1]]}`}return e}_applyArmorPenalties(){let e=0;const t={armor:0,shield:0},s={armor:{value:0,item:null},shield:{value:0,item:null}},a={armor:null,shield:null},i=this.itemTypes.equipment;for(const n of i){if(!n.system.equipped)continue;let i=n.system.subType;const o=["armor","shield"].includes(i);o||(i="armor");let r=n.system.armor?.acp??0;if(Number.isFinite(r)||(r=0),!0===n.system.masterwork&&o&&(r=Math.max(0,r-1)),r=Math.max(0,r+(this.system.attributes?.acp?.[i+"Bonus"]??0)),r){if(n.isBroken){s[i].value=r,s[i].item=n;const e=getSourceInfo(this.sourceInfo,"system.attributes.acp.skill").negative.find((e=>e.itemId===n.id));e?e.value=r:getSourceInfo(this.sourceInfo,"system.attributes.acp.skill").negative.push({name:`${n.name} (${game.i18n.localize("FFD20.Broken")})`,itemId:n.id,value:r})}const e=getSourceInfo(this.sourceInfo,"system.attributes.acp.total").negative.find((e=>e.itemId===n.id));e?e.value=r:getSourceInfo(this.sourceInfo,"system.attributes.acp.total").negative.push({name:n.name,itemId:n.id,value:r})}r>t[i]&&(t[i]=r);try{n.getProficiency(!1)||(e+=r)}catch{}const l=n.system.armor.dex;if(Number.isFinite(l)){const e=l+(this.system.attributes?.mDex?.[i+"Bonus"]??0);a[i]=Math.min(e,a[i]??1/0);const t=getSourceInfo(this.sourceInfo,"system.attributes.maxDexBonus").negative.find((e=>e.itemId===n.id));t?t.value=e:getSourceInfo(this.sourceInfo,"system.attributes.maxDexBonus").negative.push({name:n.name,itemId:n.id,value:e,ignoreNull:!1});let s=new Intl.NumberFormat(void 0,{signDisplay:"always"}).format(e);s=`${game.i18n.localize("FFD20.MaxDexShort")} ${s}`;for(const t of["system.attributes.ac.normal.total","system.attributes.ac.touch.total"]){const a=getSourceInfo(this.sourceInfo,t).negative.find((e=>"maxDexEq"===e.id));a?e<a.valueAsNumber?(a.value=s,a.valueAsNumber=e,a.itemId=n.id,a.name=n.name):a.itemId==n.id&&(a.value=s,a.valueAsNumber=e):getSourceInfo(this.sourceInfo,t).negative.push({name:n.name,value:s,valueAsNumber:e,itemId:n.id,id:"maxDexEq"})}}}for(const e of Object.keys(s)){const t=s[e].value;if(0==t)continue;const a=s[e].item.id,i=getSourceInfo(this.sourceInfo,`system.attributes.acp.${e}Bonus`).negative.find((e=>e.brokenId===a));i?i.value=t:getSourceInfo(this.sourceInfo,`system.attributes.acp.${e}Bonus`).negative.push({name:`${s[e].item.name} (${game.i18n.localize("FFD20.Broken")})`,brokenId:a,value:t})}const n=t.armor+t.shield,o={maxDexBonus:null,acp:n,acpSkill:n+s.armor.value+s.shield.value};return this.system.attributes.acp.gear=n,null===a.armor&&null===a.shield||(o.maxDexBonus=Math.min(a.armor??1/0,a.shield??1/0)),this.system.attributes.acp.attackPenalty=e,o}prepareItemLinks(){for(const e of this.items){const t=e.system.links;if(t)for(const s of Object.keys(t))for(const a of t[s]){if(!a.uuid){console.warn(`"${e.name}" on "${this.name}" has invalid link in "${s}"`,{link:a,item:e});continue}const t=foundry.utils.parseUuid(a.uuid,{relative:this}),i=this.items.get(t?.id);if(i)switch(s){case"charges":i.links.charges=e,i.prepareLinks();break;case"children":i.links.parent=e}}}}get sourceDetails(){foundry.utils.logCompatibilityWarning("ActorPF.sourceDetails is deprecated in favor of ActorPF.getSourceDetails()",{since:"PF1 v11",until:"PF1 v12"});const e=this;return new Proxy({},{get:(t,s)=>e.getSourceDetails(s)})}getSourceDetails(e){const t=[],s=!0===this.changeFlags.loseDexToAC,a=this.getRollData(),i=this.sourceInfo[e]??{},n=Object.values(i),o={};for(const i of n)for(const n of i){n.operator||="add";let i=null!=n.value?n.value:RollPF.safeRollSync(n.formula||"0",a,[e,n,this],{suppressError:!this.isOwner}).total;if("set"===n.operator){let e=i;n.change?.isDistance&&(e=ffd20.utils.convertDistance(e)[0]),i=game.i18n.format("FFD20.SetTo",{value:e})}if("add"!==n.operator||0!==i||!1===n.ignoreNull){if(s&&i>0&&"dodge"===n.modifier&&"add"===n.operator&&n.change?.isAC)continue;const e={name:this.constructor._getSourceLabel(n).replace(/[[\]]/g,""),value:i,modifier:n.modifier||null};n.id&&(e.id=n.id),o[n.modifier||"untyped"]??=[],o[n.modifier||"untyped"].push(e),t.push(e)}}const r=new Set(ffd20.config.stackingBonusTypes);for(const[e,t]of Object.entries(o))if(!r.has(e)){t.sort(((e,t)=>t.value-e.value));for(const e of t)e.disabled=e.value>=0||"number"!=typeof e.value;t[0].disabled=!1}return t}_getInherentTotalsKeys(){const e={"attributes.ac.normal.total":10,"attributes.ac.touch.total":10,"attributes.ac.flatFooted.total":10,"attributes.bab.total":0,"attributes.cmd.total":10,"attributes.cmd.flatFootedTotal":10,"attributes.acp.armorBonus":0,"attributes.acp.shieldBonus":0,"attributes.acp.gear":0,"attributes.acp.encumbrance":0,"attributes.acp.total":0,"attributes.acp.skill":0,"attributes.acp.attackPenalty":0,"attributes.maxDexBonus":null,"ac.normal.total":0,"ac.normal.base":0,"ac.normal.enh":0,"ac.normal.misc":0,"ac.natural.total":0,"ac.natural.base":0,"ac.natural.misc":0,"ac.natural.enh":0,"ac.shield.total":0,"ac.shield.base":0,"ac.shield.enh":0,"ac.shield.misc":0,"attributes.sr.total":0,"attributes.init.bonus":0,"attributes.init.total":this.system.attributes.init.value??0,"attributes.cmb.bonus":0,"attributes.cmb.total":0,"attributes.cmb.value":0,"attributes.hp.max":this.system.attributes.hp.base??0,"attributes.vigor.max":this.system.attributes.vigor.base??0,"attributes.wounds.max":this.system.attributes.wounds.base??0,"attributes.wounds.threshold":0,"attributes.mp.max":this.system.attributes.mp.base??0,"attributes.mp.recover":0,"attributes.attack.general":0,"attributes.attack.melee":0,"attributes.attack.natural":0,"attributes.attack.ranged":0,"attributes.attack.thrown":0,"attributes.attack.shared":0,"attributes.attack.critConfirm":0,"attributes.mDex":{armorBonus:0,shieldBonus:0},"attributes.damage.general":0,"attributes.damage.weapon":0,"attributes.damage.natural":0,"attributes.damage.melee":0,"attributes.damage.meleeAll":0,"attributes.damage.ranged":0,"attributes.damage.rangedAll":0,"attributes.damage.thrown":0,"attributes.damage.spell":0,"attributes.damage.shared":0,"attributes.woundThresholds.level":0,"attributes.woundThresholds.mod":0,"attributes.woundThresholds.penaltyBase":0,"attributes.woundThresholds.penalty":0,"abilities.str.checkMod":0,"abilities.str.total":0,"abilities.str.undrained":0,"abilities.dex.checkMod":0,"abilities.dex.total":0,"abilities.dex.undrained":0,"abilities.con.checkMod":0,"abilities.con.total":0,"abilities.con.undrained":0,"abilities.int.checkMod":0,"abilities.int.total":0,"abilities.int.undrained":0,"abilities.wis.checkMod":0,"abilities.wis.total":0,"abilities.wis.undrained":0,"abilities.cha.checkMod":0,"abilities.cha.total":0,"abilities.cha.undrained":0,"attributes.spells.spellbooks.primary.concentration.total":0,"attributes.spells.spellbooks.secondary.concentration.total":0,"attributes.spells.spellbooks.tertiary.concentration.total":0,"attributes.spells.spellbooks.quaternary.concentration.total":0,"attributes.spells.spellbooks.spelllike.concentration.total":0,"attributes.spells.spellbooks.primary.cl.total":0,"attributes.spells.spellbooks.secondary.cl.total":0,"attributes.spells.spellbooks.tertiary.cl.total":0,"attributes.spells.spellbooks.quaternary.cl.total":0,"attributes.spells.spellbooks.spelllike.cl.total":0,"details.carryCapacity.bonus.total":0,"details.carryCapacity.multiplier.total":0,"details.feats.bonus":0,"details.skills.bonus":0,"attributes.speed.land.add":0,"attributes.speed.swim.add":0,"attributes.speed.fly.add":0,"attributes.speed.climb.add":0,"attributes.speed.burrow.add":0,"attributes.savingThrows.fort.total":this.system.attributes.savingThrows.fort.base??0,"attributes.savingThrows.ref.total":this.system.attributes.savingThrows.ref.base??0,"attributes.savingThrows.will.total":this.system.attributes.savingThrows.will.base??0};try{const t=getChangeFlat(this,"skills");for(const s of t)e[s.replace(/^system\./,"")]=0}catch(e){console.error("Could not determine skills for an actor",this,e)}return e}_getBaseValueFillKeys(){return[{parent:"abilities.str",key:"base",value:0},{parent:"abilities.dex",key:"base",value:0},{parent:"abilities.con",key:"base",value:0},{parent:"abilities.int",key:"base",value:0},{parent:"abilities.wis",key:"base",value:0},{parent:"abilities.cha",key:"base",value:0}]}_resetInherentTotals(){const e=this._getInherentTotalsKeys();for(const[t,s]of Object.entries(e))try{foundry.utils.setProperty(this.system,t,s)}catch(e){console.error(e,t)}for(const e of this._getBaseValueFillKeys()){const{parent:t,key:s,value:a}=e,i=foundry.utils.getProperty(this.system,t);i&&(i[s]??=a)}}static getReducedMovementSpeed(e){return e-5*Math.floor(e/5/3)}static getSpellSlotIncrease(e,t){return 0===t||e<=0?0:Math.max(0,Math.ceil((e+1-t)/4))}getLevelExp(e){return 0}async getTokenDocument(e={},t={}){const s=this.system.traits?.size?.value;if(!this.prototypeToken.flags?.ffd20?.staticSize&&Number.isFinite(s)){const t=Object.values(ffd20.config.sizeChart).length-1,a=Math.clamp(s,0,t),i=Object.values(ffd20.config.tokenSizes)[a];i&&foundry.utils.mergeObject(e,{width:i.w,height:i.h,texture:{scaleX:i.scale*(this.prototypeToken.texture.scaleX||1),scaleY:i.scale*(this.prototypeToken.texture.scaleY||1)}})}return super.getTokenDocument(e,t)}async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;const a=this.system,i=e.system.attributes;if(i){for(const e of["hp","wounds","vigor"]){const t=i[e];if(t){if(void 0!==t.value&&void 0===t.offset){const s=t.max??a.attributes[e]?.max??0;t.offset=t.value-s}delete t.value}}for(const e of["mp"]){const t=i[e];if(t){if(void 0!==t.value&&void 0===t.offset){const s=t.max??a.attributes[e]?.max??0;t.offset=t.value-s}delete t.value}}const e=i.vigor;if(e?.offset<0){const t=a.attributes.vigor.max,s=-(t+e.offset);s>0&&(i.wounds??={},i.wounds.offset??=a.attributes?.wounds?.offset??0,i.wounds.offset-=s,e.offset=-t)}}if(void 0!==e.system.attributes?.quadruped){e.system.attributes.quadruped===(this.race?.system.quadruped??!1)&&(e.system.attributes.quadruped=null)}const n=e.system.abilities;if(n){const e=["userPenalty","damage","drain"],t=Object.keys(n);for(const s of t){const t=n[s];if(t)for(const s of e)void 0!==t[s]&&(t[s]=Math.abs(t[s]))}}const o=e.system.attributes?.energyDrain;void 0!==o&&(e.system.attributes.energyDrain=Math.abs(o)),void 0!==e.system.conditions&&delete e.system.conditions;const r=e.system.attributes?.spells?.spellbooks;if(r){const e=this.system.attributes?.spells?.spellbooks;for(const[t,s]of Object.entries(r)){const a=s.spellPreparationMode;if(a!==e[t].spellPreparationMode){const i=s.casterType||e[t].casterType,n=ffd20.config.casterProgression.castsPerDay[a]??{};n[i]||(s.casterType=Object.keys(n)[0])}}}this._detectHealthChange(e,t)}_detectHealthChange(e,t){}updateVision(e=!1,t=!1){if(!this.testUserPermission(game.user,"OBSERVER"))return;const s={refreshLighting:!0,refreshVision:!0};let a=this.getActiveTokens(!1,!0).filter((e=>e.sight.enabled));if(game.settings.get("ffd20","lowLightVisionMode")&&(a=a.filter((e=>e.object?.controlled??!1))),0!=a.length){if(e){for(const e of a)e._syncSenses();s.initializeVision=!0,ffd20.canvas.lowLightVision.debouncedLightSourceReInit()}t&&(s.initializeLighting=!0),canvas.perception.update(s)}}_onUpdate(e,t,s){if(super._onUpdate(e,t,s),!e.system)return;const a=game.user.id===s;let i=!1,n=!1;foundry.utils.hasProperty(e.system,"traits.senses")?(i=!0,e.system.traits.senses.ll&&(n=!0)):e.flags?.ffd20?.visionSharing&&(i=!0,n=!0),(i||n)&&this.updateVision(i,n),a&&e?.system?.traits?.size&&this._updateTokenSize()}async _updateTokenSize(e=void 0){const t=canvas.scene;if(!t)return null;if(!e){if(void 0===(e=Object.keys(ffd20.config.tokenSizes)[this.getRollData({refresh:!0}).size]))return}const s=ffd20.config.tokenSizes[e];if(!s)throw Error(`Size key "${e}" is invalid`);const a=(this.token?[this.token]:this.getActiveTokens(!1,!0)).filter((e=>!e.getFlag("ffd20","staticSize"))),{scaleX:i,scaleY:n}=this.prototypeToken?.texture??{},o=a.map((e=>({_id:e.id,width:s.w,height:s.h,texture:{scaleX:s.scale*(i||1),scaleY:s.scale*(n||1)}})));return o.length?TokenDocument.implementation.updateDocuments(o,{parent:t}):void 0}_onCreateDescendantDocuments(e,t,s,a,i,n){if(super._onCreateDescendantDocuments(...arguments),n===game.user.id){if("items"===t){const e=s.find((e=>"race"===e.type));e?.system.size&&this.system.traits.size?.base!==e.system.size&&this.update({"system.traits.size":e.system.size})}"effects"===t&&!1!==i.ffd20?.updateConditionTracks&&this._handleConditionTracks(s,i)}}async _handleConditionTracks(e){const t={},s={},a=ffd20.registry.conditions.trackedConditions();for(const i of e)for(const e of i.statuses??[])if(ffd20.registry.conditions.has(e)){t[e]=!0;for(const t of a)if(t.includes(e))for(const a of t)a!==e&&(s[a]=!1)}if(this._conditionToggleNotify(t),!foundry.utils.isEmpty(s))return this.setConditions(s)}_onDeleteDescendantDocuments(e,t,s,a,i,n){if(super._onDeleteDescendantDocuments(e,t,s,a,i,n),"effects"===t){const e={};for(const t of s)for(const s of t.statuses??[])ffd20.registry.conditions.has(s)&&!this.statuses.has(s)&&(e[s]=!1);!1!==i?.ffd20?.updateConditionTracks&&this._conditionToggleNotify(e)}if(game.user.id===n&&"items"===t){this._cleanItemLinksTo(s);const e=new Set,_enumChildren=t=>{e.add(t.id);const s=t.getLinkedItemsSync("children");for(const a of s){if(e.has(a.id))continue;const s=t.actor.items.get(a.id);s&&_enumChildren(s)}};for(const e of s)_enumChildren(e);for(const t of a)e.delete(t);e.size>0&&this.deleteEmbeddedDocuments("Item",Array.from(e))}}async _cleanItemLinksTo(e){const t=[];for(const s of e){const e=s.getRelativeUUID(this);for(const s of this.items){const a=await s.removeItemLink(e,{commit:!1});a&&(a._id=s.id,t.push(a))}}if(t.length)return this.updateEmbeddedDocuments("Item",t)}_conditionToggleNotify(e={}){for(const[t,s]of Object.entries(e))Hooks.callAll("pf1ToggleActorCondition",this,t,s)}updateItemResources(e,{warnOnDuplicate:t=!0}={}){if("spell"===e.type)return!1;if(e.links?.charges)return!1;if(!e.isCharged)return!1;if(e.isSingleUse)return!1;if(e.isPhysical)return!1;const s=e.system.tag;if(s||console.error("Attempting create resource on tagless item",e),t&&this.system.resources[s]&&this.isOwner){const t=game.i18n.format("FFD20.Warning.DuplicateTag",{actor:this.uuid,item:e.name,tag:s});console.warn(t,e),ui.notifications?.warn(t,{console:!1})}const a=new Resource(e);return this.system.resources[s]=a,!0}createSpellbook(e={},{commit:t=!0}={}){const s=this.system.attributes.spells.spellbooks??{},a=e.class?Object.entries(s).find((([t,s])=>!!s.class&&s.class===e.class)):null;let i;if(a){if(a[1].inUse)return void ui.notifications.warn(game.i18n.localize("FFD20.Error.SpellbookExists"));i=a[0]}else{const e=Object.entries(s).find((([e,t])=>!0!==t.inUse));if(void 0===e)return void ui.notifications.warn(game.i18n.localize("FFD20.Error.NoFreeSpellbooks"));i=e[0]}e.type??="prepared",e.class??="_hd",e.progression??="high",e.spells??="arcane",e.ability??="int",e.cantrips??=!0,e.domain??=1,e.offset??=0,0!==e.offset&&(e.offset=""+e.offset);const n={["system.attributes.spells.spellbooks."+i]:{inUse:!0,kind:e.spells,class:e.class,spellPreparationMode:e.type,casterType:e.progression,ability:e.ability,psychic:"psychic"===e.spells,arcaneSpellFailure:"arcane"===e.spells,hasCantrips:e.cantrips,domainSlotValue:e.domain,"cl.formula":e.offset?""+e.offset:""}};return t?this.update(n):n}getSkillInfo(e,{rollData:t}={}){const s=e.split(".");s.length>2&&s.splice(1,1);const a=s.shift(),i=s.pop(),n=!!i;e=[a,i].filterJoin("."),t??=this.getRollData();const o=n?this.getSkillInfo(a,{rollData:t}):null,r=i?o.subSkills?.[i]:foundry.utils.deepClone(t.skills[a]);if(!r)throw Error(`Invalid skill ID '${e}'`);return r.journal||=ffd20.config.skillCompendiumEntries[n?a:e],r.name||=ffd20.config.skills[e]||e,r.id=e,n?(r.fullName=`${o.name} (${r.name})`,r.parentSkill=o):r.fullName=r.name,r}async rollSkill(e,t={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const s=e.split("."),a=s[0],i=s.length>1?s.at(-1):null;e=i?`${a}.${i}`:a;const n=this.getSkillInfo(e),o=!!i,r=this.getRollData(),l=await this.getContextNotesParsed("skill."+e,{rollData:r});o&&l.push(...await this.getContextNotesParsed("skill."+a,{rollData:r,all:!1})),n.rt&&!n.rank&&l.push({text:game.i18n.localize("FFD20.Untrained")});const c=[],d=this.getSourceDetails(`system.abilities.${n.ability}.mod`);for(const{value:e,name:t}of d)c.push(`${e}[${t}]`);if(r.attributes.woundThresholds?.penalty>0){const e=ffd20.config.woundThresholdConditions[r.attributes.woundThresholds.level];l.push({text:e}),c.push(`- @attributes.woundThresholds.penalty[${e}]`)}const u=i?`${a}.subSkills.${i}`:a,m=getHighestChanges(this.changes.filter((e=>e.getTargets(this).includes(`system.skills.${u}.mod`))),{ignoreTarget:!0});for(const e of m)e.value&&("string"==typeof e.value&&RollPF.parse(e.value).length>1?c.push(`(${e.value})[${e.flavor}]`):c.push(`${e.value}[${e.flavor}]`));const p=this._getContextConditions("skill."+e);for(const e of p)l.push({text:e.name});const h=[];l.length>0&&h.push({header:game.i18n.localize("FFD20.Notes"),value:l});const f=t.token??this.token,g={rank:n.rank??0};if(["acr","swm","clm"].includes(e)){const t=this.system.attributes?.speed??{};g.speed={base:t.land?.total??0},"swm"===e&&(g.speed.swim=t.swim?.total??0),"clm"===e&&(g.speed.climb=t.climb?.total??0)}const y={...t,parts:c,rollData:r,flavor:game.i18n.format("FFD20.Check",{type:n.fullName}),chatTemplateData:{properties:h},compendium:{entry:ffd20.config.skillCompendiumEntries[e]??n.journal,type:"JournalEntry"},subject:{skill:e},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:f}),messageData:{system:{subject:{skill:e},config:g}}};if(!1===Hooks.call("pf1PreActorRollSkill",this,y,e))return;const b=await ffd20.dice.d20Roll(y);return b&&Hooks.callAll("pf1ActorRollSkill",this,b,e),b}async rollBAB(e={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const t=e.token??this.token,s={...e,parts:[`${this.system.attributes.bab.total}[${game.i18n.localize("FFD20.BABAbbr")}]`],subject:{core:"bab"},flavor:game.i18n.format("FFD20.Check",{type:game.i18n.localize("FFD20.BABAbbr")}),speaker:ChatMessage.implementation.getSpeaker({actor:this,token:t})};if(!1===Hooks.call("pf1PreActorRollBab",this,s))return;const a=await ffd20.dice.d20Roll(s);return Hooks.callAll("pf1ActorRollBab",this,a),a}async rollAttack({maneuver:e=!1,ranged:t=!1,ability:s=null,...a}={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));if(e&&this.system.config?.noManeuvers)throw Error("Manuevers are disabled for this actor.");let i;i=e?t?"rcman":"mcman":t?"rwak":"mwak";const n={name:t?game.i18n.localize("FFD20.Ranged"):game.i18n.localize("FFD20.Melee"),actionType:i},o=this.system.attributes?.attack?.[(t?"ranged":"melee")+"Ability"];n.ability??={},e&&(n.ability.attack=s||this.system.attributes?.cmbAbility),n.ability.attack||=s||o||(t?"dex":"str"),n.activation??={},n.activation.type="attack",n.activation.unchained??={},n.activation.unchained.type="attack";return new Item.implementation({type:"attack",name:e?game.i18n.localize("FFD20.CMBAbbr"):game.i18n.localize("TYPES.Item.weapon"),system:{actions:[new ffd20.components.ItemAction(n).toObject()]}},{parent:this}).use(a)}async rollCL(e,t={}){const s=this.system.attributes.spells.spellbooks[e],a=t.rollData??this.getRollData();a.cl=s.cl.total;const i=[],n=this.getSourceDetails(`system.attributes.spells.spellbooks.${e}.cl.total`);for(const e of n.reverse())if("woundThreshold"!==e.id)i.push(`${e.value}[${e.name}]`);else{const t=s.cl.woundPenalty||0;t&&i.push(`${t}[${e.name}]`)}const o=await this.getContextNotesParsed("spell.cl."+e,{rollData:a}),r=this.getWoundThresholdData();r.valid&&o.push({text:ffd20.config.woundThresholdConditions[r.level]});const l=[];o.length&&l.push({header:game.i18n.localize("FFD20.Notes"),value:o});const c=t.token??this.token,d={...t,parts:i,rollData:a,subject:{core:"cl",spellbook:e},flavor:game.i18n.localize("FFD20.CasterLevelCheck"),chatTemplateData:{properties:l},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:c})};if(!1===Hooks.call("pf1PreActorRollCl",this,d,e))return;const u=await ffd20.dice.d20Roll(d);return Hooks.callAll("pf1ActorRollCl",this,u,e),u}async rollConcentration(e,t={}){const s=this.system.attributes.spells.spellbooks[e],a=t.rollData??this.getRollData();if(a.cl=s.cl.total,a.mod=this.system.abilities[s.ability]?.mod??0,!1===Hooks.call("actorRoll","pf1PreActorRollConcentration",void 0,this,"concentration",e,t))return;const i=[];var n;n=this.getSourceDetails(`system.attributes.spells.spellbooks.${e}.concentration.total`),n?.reverse().forEach((e=>{return t=e.value,s=e.name,i.push(`${t}[${s}]`);var t,s}));const o=await this.getContextNotesParsed("spell.concentration."+e,{rollData:a}),r=this.getWoundThresholdData();r.valid&&o.push({text:game.i18n.localize(ffd20.config.woundThresholdConditions[r.level])});const l=[];o.length>0&&l.push({header:game.i18n.localize("FFD20.Notes"),value:o});const c=t.token??this.token,d={...t,parts:i,rollData:a,subject:{core:"concentration",spellbook:e},flavor:game.i18n.localize("FFD20.ConcentrationCheck"),chatTemplateData:{properties:l},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:c})};if(!1===Hooks.call("pf1PreActorRollConcentration",this,d,e))return;const u=await ffd20.dice.d20Roll(d);return Hooks.callAll("pf1ActorRollConcentration",this,u,e),u}getDefenseHeaders({damageResistances:e=!0,damageVulnerabilities:t=!0}={}){const s=this.system,a=[],i=ffd20.config.re.traitSeparator,n=[];if(e&&(s.traits.dr.length&&a.push({header:game.i18n.localize("FFD20.DamRed"),value:s.traits.dr.split(i).map((e=>({text:e})))}),s.traits.eres.length&&a.push({header:game.i18n.localize("FFD20.EnRes"),value:s.traits.eres.split(i).map((e=>({text:e})))})),t&&s.traits.dv.total.size){const e=s.traits.dv.names.map((e=>({text:e})));a.push({header:game.i18n.localize("FFD20.DamVuln"),value:e})}if(s.traits.cres.length&&a.push({header:game.i18n.localize("FFD20.ConRes"),value:s.traits.cres.split(i).map((e=>({text:e})))}),s.traits.di.total.size||s.traits.ci.total.size){const e=[...s.traits.di.names,...s.traits.ci.names].map((e=>({text:e})));a.push({header:game.i18n.localize("FFD20.ImmunityPlural"),value:e})}return s.attributes.sr.total>0&&n.push({text:game.i18n.format("FFD20.SpellResistanceNote",{value:s.attributes.sr.total})}),n.length>0&&a.push({header:game.i18n.localize("FFD20.MiscShort"),value:n}),a}async rollInitiative({createCombatants:e=!1,rerollInitiative:t=!1,initiativeOptions:s={},dice:a=null,bonus:i=null,rollMode:n=null,skipDialog:o,token:r}={}){r||=this.token;let l=game.combat;if(!l){if(!game.user.isGM)return ui.notifications.warn("COMBAT.NoneActive",{localize:!0}),null;{const e=getDocumentClass("Combat");l=await e.create({scene:canvas.scene?.id,active:!0})}}if(e){const e=this.isToken?[this.token]:this.getActiveTokens().map((e=>e.document)),t=[];if(e.length)for(const s of e)s.inCombat||t.push({tokenId:s.id,sceneId:s.parent.id,actorId:this.id,hidden:s.hidden});else{l.combatants.filter((e=>e.actor==this&&!e.token)).length||t.push({actorId:this.id,hidden:!1})}t.length&&await l.createEmbeddedDocuments("Combatant",t)}let c=0,d=l.combatants.filter((e=>e.actor?.id===this.id&&((!r||e.token?.id===r.id)&&(e.token||(c+=1),t||null===e.initiative))));return c>1&&(d=d.filter((e=>!!e.token||null===e.initiative)),0==d.length&&ui.notifications.warn(game.i18n.localize("FFD20.Error.NoInitOnDuplicateCombatant"))),0==d.length?l:(foundry.utils.mergeObject(s,{d20:a,bonus:i,rollMode:n,skipDialog:o}),l.rollInitiative(d.map((e=>e.id)),s))}async rollSavingThrow(e,t={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const s=this.getRollData(),a=await this.getContextNotesParsed("savingThrow."+e,{rollData:s}),i=[],n=this.system.attributes.savingThrows[e]?.base;n&&i.push(`${n}[${game.i18n.localize("FFD20.Base")}]`);let o=[];o=getHighestChanges(this.changes.filter((t=>["allSavingThrows",e].includes(t.target))).filter((e=>"set"!==e.operator)),{ignoreTarget:!0}).reduce(((e,t)=>(t.value&&e.push({value:t.value,source:t.flavor}),e)),[]);for(const e of o)i.push(`${e.value}[${e.source}]`);if(s.attributes.woundThresholds.penalty>0){const e=ffd20.config.woundThresholdConditions[s.attributes.woundThresholds.level];a.push({text:e}),i.push(`- @attributes.woundThresholds.penalty[${e}]`)}const r=this._getContextConditions("savingThrow."+e);for(const e of r)a.push({text:e.name});const l=this.getDefenseHeaders({damageResistances:!1,damageVulnerabilities:!1});a.length>0&&l.push({header:game.i18n.localize("FFD20.Notes"),value:a});const c=ffd20.config.savingThrows[e],d=t.token??this.token,u={...t,parts:i,rollData:s,flavor:game.i18n.format("FFD20.SavingThrowRoll",{save:c}),subject:{save:e},chatTemplateData:{properties:l},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:d})};if(!1===Hooks.call("pf1PreActorRollSave",this,u,e))return;const m=await ffd20.dice.d20Roll(u);return Hooks.callAll("pf1ActorRollSave",this,m,e),m}async rollAbilityTest(e,t={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const s=t.rollData||this.getRollData(),a=await this.getContextNotesParsed("abilityChecks."+e,{rollData:s}),i=ffd20.config.abilities[e]??e,n=[`@abilities.${e}.mod[${i}]`],o=this.getSourceDetails(`system.abilities.${e}.mod`);for(const{value:e,name:t}of o)n.push(`${e}[${t}]`);const r=`system.abilities.${e}.checkMod`,l=getHighestChanges(this.changes.filter((e=>e.getTargets(this).includes(r))),{ignoreTarget:!0});for(const e of l)e.value&&("string"==typeof e.value&&RollPF.parse(e.value).length>1?n.push(`(${e.value})[${e.flavor}]`):n.push(`${e.value}[${e.flavor}]`));if(this.system.attributes.energyDrain){const e=game.i18n.localize("FFD20.NegativeLevels");n.push(`-@attributes.energyDrain[${e}]`)}if(s.attributes.woundThresholds.penalty>0){const e=ffd20.config.woundThresholdConditions[s.attributes.woundThresholds.level];a.push({text:e}),n.push(`-@attributes.woundThresholds.penalty[${e}]`)}const c=[];a.length>0&&c.push({header:game.i18n.localize("FFD20.Notes"),value:a});const d=t.token??this.token,u={...t,parts:n,rollData:s,flavor:game.i18n.format("FFD20.Check",{type:i}),subject:{ability:e},chatTemplateData:{properties:c},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:d})};if(!1===Hooks.call("pf1PreActorRollAbility",this,u,e))return;const m=await ffd20.dice.d20Roll(u);return Hooks.callAll("pf1ActorRollAbility",this,m,e),m}async displayDefenseCard({rollMode:e=null,token:t}={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const s=this.getRollData(),formatTextNotes=e=>e?.split(/[\n\r]+/).map((e=>({text:e})))??[],a=await this.getContextNotesParsed("ac",{rollData:s});this.system.attributes.acNotes&&a.push(...formatTextNotes(this.system.attributes.acNotes));const i=await this.getContextNotesParsed("cmd",{rollData:s});this.system.attributes.cmdNotes&&i.push(...formatTextNotes(this.system.attributes.cmdNotes));const n=await this.getContextNotesParsed("sr",{rollData:s});this.system.attributes.srNotes&&n.push(...formatTextNotes(this.system.attributes.srNotes));const o=await this.getContextNotesParsed("allSavingThrows",{rollData:s});this.system.attributes.saveNotes&&o.push(...formatTextNotes(this.system.attributes.saveNotes));const r=Object.values(this.parseResistances("dr")).map((e=>({text:e}))),l=Object.values(this.parseResistances("eres")).map((e=>({text:e})));if(this.system.traits.di.total.size){const e=[...this.system.traits.di.names];l.push(...e.map((e=>({text:game.i18n.format("FFD20.ImmuneTo",{immunity:e})}))))}if(this.system.traits.dv.total.size){const e=[...this.system.traits.dv.names];l.push(...e.map((e=>({text:game.i18n.format("FFD20.VulnerableTo",{vulnerability:e})}))))}const c=Object.entries(this.system.conditions??{}).filter((([e,t])=>t)).map((([e])=>ffd20.registry.conditions.get(e))).filter((e=>e?.showInDefense)).map((e=>({text:e.name}))),d=this.getWoundThresholdData();if(d.valid){const e=ffd20.config.woundThresholdConditions[d.level];a.push({text:e}),i.push({text:e})}t??=this.token;const u=this.system,m={actor:this,name:t?.name??this.name,tokenUuid:t?.uuid??null,ac:{normal:u.attributes.ac.normal.total,touch:u.attributes.ac.touch.total,flatFooted:u.attributes.ac.flatFooted.total,notes:a},cmd:{normal:u.attributes.cmd.total,flatFooted:u.attributes.cmd.flatFootedTotal,notes:i},misc:{hardness:u.traits.hardness,sr:u.attributes.sr.total,srNotes:n,drNotes:r,erNotes:l,conditions:c},saves:{fort:s.attributes?.savingThrows?.fort?.total,ref:s.attributes?.savingThrows?.ref?.total,will:s.attributes?.savingThrows?.will?.total,notes:o}};this.system.config?.noManeuvers&&delete m.cmd,((u.traits?.fastHealing||"").length||(u.traits?.regen||"").length)&&(m.regen={regen:u.traits.regen,fastHealing:u.traits.fastHealing}),e||=game.settings.get("core","rollMode");const p={content:await renderTemplate("systems/ffd20/templates/chat/defenses.hbs",m),speaker:ChatMessage.implementation.getSpeaker({actor:this,token:t}),rollMode:e,system:{subject:{info:"defenses"}},flags:{core:{canPopout:!0}}};return ChatMessage.implementation.applyRollMode(p,e),ChatMessage.implementation.create(p)}async toggleCondition(e,t){let s=!this.statuses.has(e);return s&&t&&(s=t),this.setCondition(e,s)}async setCondition(e,t,s){if("boolean"!=typeof t&&"Object"!==foundry.utils.getType(t))throw new TypeError("Actor.setCondition() enabled state must be a boolean or plain object");return this.setConditions({[e]:t},s)}async setConditions(e={},t={}){e=foundry.utils.deepClone(e);const s=ffd20.registry.conditions.trackedConditions();for(const t of s){const s=t.find((t=>!0===e[t]));if(!s)continue;const a=t.filter((e=>e!==s));for(const t of a)e[t]=!1}const a=[],i=[],n=this.getConditionImmunities();for(const[t,s]of Object.entries(e)){const o=ffd20.registry.conditions.get(t);if(!o){console.error("Unrecognized condition:",t),delete e[t];continue}if(!0===s&&n.has(t)){console.warn("Actor is immune to condition:",t,this),delete e[t];continue}const r=this.statuses.has(t)?this.effects.find((e=>e.statuses.has(t))):null;if(s)if(r)delete e[t];else{const e={flags:{ffd20:{autoDelete:!0}},statuses:[t],name:o.name,img:o.texture};o.statuses?.size&&e.statuses.push(...o.statuses),s?.overlay&&(delete s.overlay,foundry.utils.setProperty(e.flags,"core.overlay",!0)),"boolean"!=typeof s&&foundry.utils.mergeObject(e,s),i.push(e)}else r?a.push(r.id):delete e[t]}if(t.ffd20??={},t.ffd20.updateConditionTracks=!1,a.length){const e=foundry.utils.deepClone(t);t.trender&&i.length&&(e.render=!1),await this.deleteEmbeddedDocuments("ActiveEffect",a,t)}if(i.length){const e=foundry.utils.deepClone(t);await this.createEmbeddedDocuments("ActiveEffect",i,e)}return this._conditionToggleNotify(e),e}hasCondition(e){return foundry.utils.logCompatibilityWarning("ActorPF.hasCondition() is deprecated in favor of actor.statuses.has(conditionId)",{since:"PF1 v11",until:"PF1 v13"}),this.statuses.has(e)}_getContextConditions(e){const t=[];for(const s of this.statuses){const a=ffd20.registry.conditions.get(s);a&&(a.mechanics.contexts.has(e)&&t.push(a))}return t}parseResistances(e){const t=this.system.traits?.[e];if(!t)return{};const s={};return Array.isArray(t.value)&&t.value.forEach(((t,a)=>{const i=this._parseResistanceEntry(t,e);s[""+(a+1)]=i.label})),"string"==typeof t.custom&&t.custom.split(ffd20.config.re.traitSeparator).forEach(((t,a)=>{if(t=t?.trim(),!t?.length)return;const i=this._parseResistanceEntry(t,e);s["custom"+(a+1)]=i.label})),s}_parseResistanceEntry(e,t="dr"){const format=(e,s,a=null,i=null)=>{let n=s;if(i)if(!1===a)n=game.i18n.format("FFD20.Application.DamageResistanceSelector.CombinationFormattedAnd",{type1:s,type2:i});else n=game.i18n.format("FFD20.Application.DamageResistanceSelector.CombinationFormattedOr",{type1:s,type2:i});return"dr"===t?`${e}/${n}`:`${n} ${e}`},getType=e=>ffd20.registry.damageTypes.get(e)??ffd20.registry.materials.get(e)??{name:ffd20.config.damageResistances[e]??e},s="dr"==t,a=!s;if("string"==typeof e){const t=/(?<value>\d+)/.exec(e),i=parseInt(t?.groups.value||"0"),n=e.replace(/\d+\s*\/?/,"").trim();return{type0:{name:n},amount:i,label:format(i,n||"–"),isDR:s,isER:a,custom:!0}}{const{amount:t,operator:i}=e,[n,o]=e.types,r=getType(n),l=r?.shortName||r?.name,c=getType(o),d=c?.shortName||c?.name;return{type0:{id:n,name:l,data:r},type1:{id:o,name:d,data:c},operator:i,amount:t,label:format(t,l||"–",i,d),isDR:s,isER:a}}}async applyDamage(e,t={}){const{asWounds:s=!1,asNonlethal:a=!1,asManaDamage:i=!1,critMult:n,dualHeal:o=game.settings.get("ffd20","dualHeal"),reduction:r=0,ratio:l=1}=t,c=e<0;(e=Math.floor(e*l))<0?e+=Math.min(-e,r):e-=Math.min(e,r),console.debug("FFD20 | Apply Damage |",e=Math.floor(e),"to",this.name,`[${this.uuid}]`);const d=game.settings.get("ffd20","healthConfig");if(0==e)return console.warn("Attempting to apply 0 damage."),!1;if(!this.isOwner)return ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name})),!1;const u=d.getActorConfig(this).rules?.useWoundsAndVigor??!1,m=u?this.system.attributes.vigor:this.system.attributes.hp,p=this.system.attributes.mp;if(!m)return!1;const h=m.temp||0,f=p.temp||0,g={};if(i){const t=p.value;i&&e>0&&(e=Math.min(t,e));const s=c?0:Math.min(f,e);0!=s&&(g["system.attributes.mp.temp"]=f-s);const a=Math.min(p.value-(e-s),p.max);a!=p.value&&(g["system.attributes.mp.value"]=a)}else if(u){const t=m.value;let i=0;s&&(i-=e,e=0);const o=e>0?Math.min(f,e):0;if(e-=o,a&&e>0&&(t>0?e=Math.min(t,e):(i-=n>1?n:1,e=0)),0!=o&&(g["system.attributes.vigor.temp"]=f-o),0!=e){let s=Math.min(t-e,m.max);e>0&&s<0&&(i-=-s,n>0&&(i-=n),s=0),s!=m.value&&(g["system.attributes.vigor.value"]=s)}if(0!=i){const e=this.system.attributes.wounds;g["system.attributes.wounds.value"]=Math.clamp(e.value+i,0,e.max)}}else{let t=0;a?e>0?(t=Math.min(m.max-m.nonlethal,e),e-=t):e<0&&(t=e,e=0):c&&o&&(t=e);const s=c?0:Math.min(h,e);0!=t&&(g["system.attributes.hp.nonlethal"]=Math.max(0,m.nonlethal+t)),0!=s&&(g["system.attributes.hp.temp"]=h-s);const i=Math.min(m.value-(e-s),m.max);i!=m.value&&(g["system.attributes.hp.value"]=i)}return this.update(g)}static async applyDamage(e=0,t={}){if(t.targets?.length||(t.targets=canvas.tokens.controlled),!t.targets?.length&&game.user.character&&(t.targets=[game.user.character]),t.targets=t.targets.map((e=>e.actor||e)).filter((e=>e instanceof Actor)),console.debug("FFD20 | Apply Damage |",e,"to",t.targets.length,"target(s)"),0===t.targets.length)throw Error("No valid targets");if(0==e||!Number.isFinite(e))return console.warn("Attempting to apply 0 damage."),!1;if(t.instances?.length&&void 0===t.asNonlethal&&(t.asNonlethal=t.instances.every((e=>e.types.has("nonlethal"))),t.asNonlethal&&console.debug("FFD20 | Damage inferred as nonlethal")),t.instances?.length&&void 0===t.asManaDamage&&(t.asManaDamage=t.instances.every((e=>e.types.has("manapoint"))),t.asManaDamage&&console.debug("FFD20 | Damage inferred as mana damage")),t.asNonlethal??=!1,t.asManaDamage??=!1,t.critMult??=0,t.asWounds??=!1,t.forceDialog??=!1,void 0!==t.reductionDefault&&(foundry.utils.logCompatibilityWarning("ActorPF.applyDamage() reductionDefault option is deprecated in favor of reduction.",{since:"PF1 v11",until:"PF1 v12"}),t.reduction=t.reductionDefault),ffd20.skipConfirmPrompt?t.forceDialog:!t.forceDialog){const s=t.targets.map((s=>s.applyDamage(e,t)));return Promise.all(s)}t.value=e;const s=await ffd20.applications.ApplyDamage.wait(t);return!!s&&s.updated}async addTempHP(e,{set:t=!1}={}){const s=game.settings.get("ffd20","healthConfig").getActorConfig(this).rules.useWoundsAndVigor,a=(s?this.system.attributes.vigor.temp:this.system.attributes.hp.temp)||0,i=Math.max(0,t?e:a+e);return this.update({system:{attributes:{[s?"vigor":"hp"]:{temp:i}}}})}getWoundThresholdMultiplier({healthConfig:e}={}){return e??=game.settings.get("ffd20","healthConfig").getActorConfig(this),e.rules.useWoundThresholds}getWoundThresholdData({healthConfig:e}={}){e??=game.settings.get("ffd20","healthConfig").getActorConfig(this);const t=this.system.attributes?.woundThresholds??{},s=this.getWoundThresholdMultiplier({healthConfig:e}),a=t.level||0;return{level:a,penalty:a*s+(t.mod||0),multiplier:s,valid:a>0&&s>0}}updateWoundThreshold(){const e=game.settings.get("ffd20","healthConfig").getActorConfig(this),t=e.rules.useWoundThresholds,s=e.rules.useWoundsAndVigor,a=this.system.attributes.woundThresholds;if(!t||s)return a.level=0,a.penaltyBase=0,a.penalty=0,void(a.mod=0);const i=this.system.attributes.hp,n=i.value,o=i.temp??0,r=i.max;let l=t>0?Math.clamp(4-Math.ceil((n+o)/r*4),0,3):0;Number.isNaN(l)&&(l=0);const c=this.getWoundThresholdMultiplier({healthConfig:e}),d=a.mod??0;a.level=l,a.penaltyBase=l*c,a.penalty=l*c+d;const u=a.penalty;if(0!=u){const e=ffd20.config.woundThresholdChangeTargets;for(const t of e){if("cl"===t)continue;const e=getChangeFlat(this,t,"untyped",-u);for(const t of e){if(!t)continue;const e=foundry.utils.getProperty(this,t)??0;foundry.utils.setProperty(this,t,e-u)}}const t=new ffd20.components.ItemChange({_id:"woundThreshold",formula:"-"+u,flavor:ffd20.config.woundThresholdConditions[a.level],target:"attack",type:"untyped",value:-u});this.changes.set(t.id,t)}else this.changes.delete("woundThreshold")}get allSkills(){const e=[];for(const[t,s]of Object.entries(this.system.skills))if(s){e.push(t);for(const a of Object.keys(s.subSkills??{}))e.push(`${t}.${a}`)}return e}get allNotes(){return this.items.filter((e=>e.isActive&&e.system.contextNotes?.length>0)).map((e=>({notes:e.system.contextNotes,item:e})))}get allItems(){return[...this.containerItems,...this.items]}get containerItems(){const e=[];function getContainerContents(t){if("container"===t.type)for(const s of t.items)e.push(s),getContainerContents(s)}for(const e of this.itemTypes.container)getContainerContents(e);return e}getContextNotes(e,t=!0){e.string&&(foundry.utils.logCompatibilityWarning("ActorPF.getcontextNotes() first parameter must be a string, support for anything else is deprecated.",{since:"PF1 v11",until:"PF1 v12"}),e=e.string);const formatTextNotes=e=>e?.split(/[\n\r]+/)??[],s=this.allNotes,a=e.split(".");switch(a.shift()){case"skill":{const i=a.shift(),n=this.getSkillInfo(i).ability;for(const a of s)a.notes=a.notes.filter((s=>[e,n+"Skills"].includes(s.target)||t&&"skills"===s.target)).map((e=>e.text));return s}case"savingThrow":{const e=a.shift();for(const t of s)t.notes=t.notes.filter((t=>[e,"allSavingThrows"].includes(t.target))).map((e=>e.text));return this.system.attributes?.saveNotes&&s.push({notes:[this.system.attributes.saveNotes],item:null}),s}case"abilityChecks":{const e=a.shift();for(const t of s)t.notes=t.notes.filter((t=>[e+"Checks","allChecks"].includes(t.target))).map((e=>e.text));return s}case"spell":switch(a.shift()){case"concentration":{const e=a.shift(),t=["concentration"];e&&t.push("concn."+e);for(const e of s)e.notes=e.notes.filter((e=>t.includes(e.target))).map((e=>e.text));const i=this.system.attributes?.spells?.spellbooks?.[e]?.concentrationNotes;return i?.length&&s.push({notes:formatTextNotes(i),item:null}),s}case"cl":{const e=["cl"],t=a.pop();t&&e.push("cl.book."+t);for(const t of s)t.notes=t.notes.filter((t=>e.includes(t.target))).map((e=>e.text));const i=this.system.attributes?.spells?.spellbooks?.[t]?.clNotes;return i?.length&&s.push({notes:formatTextNotes(i),item:null}),s}}}for(const t of s)t.notes=t.notes.filter((t=>t.target===e)).map((e=>e.text));return s.filter((e=>e.notes.length))}async getContextNotesParsed(e,{all:t,roll:s=!0,rollData:a}={}){a??=this.getRollData();const i=this.getContextNotes(e,t);return await this.enrichContextNotes(i,a,{roll:s}),i.reduce(((e,t)=>(e.push(...t.enriched.map((e=>({text:e,source:t.item?.name})))),e)),[])}async enrichContextNotes(e,t,{roll:s=!0}={}){t??=this.getRollData();for(const a of e){t.item={},a.item&&(t=a.item.getRollData());const e=[];for(const i of a.notes)e.push(...i.split(/[\n\r]+/).map((e=>ffd20.utils.enrichHTMLUnrolled(e,{rollData:t,rolls:s,relativeTo:this}))));a.enriched=await Promise.all(e)}}_computeEncumbrance(){this.system.attributes??={};const e=this.system.attributes;e.encumbrance??={};const t=e.encumbrance,s=this.getCarryCapacity();t.levels=s,t.levels.overhead=s.heavy,t.levels.carry=2*s.heavy,t.levels.drag=5*s.heavy;const a=Math.max(0,this.getCarriedWeight());t.carriedWeight=Math.round(10*a)/10;let i=ffd20.config.encumbranceLevels.light;a>0&&(a>t.levels.medium?i=ffd20.config.encumbranceLevels.heavy:a>t.levels.light&&(i=ffd20.config.encumbranceLevels.medium)),t.level=i;const n={maxDexBonus:null,acp:0};switch(t.level){case ffd20.config.encumbranceLevels.medium:n.acp=3,n.maxDexBonus=3;break;case ffd20.config.encumbranceLevels.heavy:n.acp=6,n.maxDexBonus=1}return t.acp=n.acp,t.maxDex=n.maxDexBonus,n}_calculateCoinWeight(){const e=game.settings.get("ffd20","coinWeight");return e?Object.values(this.system.currency||{}).reduce(((e,t)=>e+(t||0)),0)/e:0}getCarryCapacity(){const e=this.system.details?.carryCapacity??{},t=this.system.abilities.str.total+e.bonus?.total;let s=e.multiplier?.total;const a=Object.keys(ffd20.config.sizeChart)[this.system.traits.size.value];this.system.attributes.quadruped?s*=ffd20.config.encumbranceMultipliers.quadruped[a]:s*=ffd20.config.encumbranceMultipliers.normal[a];const i=ffd20.config.encumbranceLoads;let n=Math.floor(i[t]*s);if(t>=i.length){const e=(t-(i.length-1))/10;n=Math.floor(i[i.length-1]*Math.pow(4,e)*s)}return n=ffd20.utils.convertWeight(n),{light:Math.floor(n/3),medium:Math.floor(n/3*2),heavy:n}}getCarriedWeight(){const e=this.items.filter((e=>e.isPhysical&&!1!==e.system.carried)).reduce(((e,t)=>e+t.system.weight.total),this._calculateCoinWeight());return ffd20.utils.convertWeight(e)}getCurrency(e="currency",{inLowestDenomination:t=!0}={}){const s=this.system[e];if(!s)return console.error(`Currency type "${e}" not found.`),NaN;const a=ffd20.config.currency;let i=0;for(let[e,t]of Object.entries(s))t=Math.max(0,t||0),0!=t&&(i+=t*(a.rate[e]||1));return t?i:i/a.standardRate}getTotalCurrency({inLowestDenomination:e=!0}={}){const t=this.getCurrency("currency",{inLowestDenomination:!0})+this.getCurrency("altCurrency",{inLowestDenomination:!0});return e?t:t/ffd20.config.currency.standardRate}convertCurrency(e="currency",t="pp"){const s=this.getCurrency(e,{inLowestDenomination:!0});if(!Number.isFinite(s))return void console.error(`Invalid total currency "${s}" in "${e}" category`);const a=ffd20.utils.currency.convert(s,t,{pad:!0});return this.update({system:{[e]:a}})}_prepareArmorData({id:e,type:t}={},s){s.type=t??null;const a=this.items.get(e)?.system;a&&(s.ac=a.armor.value??0,s.enh=a.armor.enh??0,s.total=s.ac+s.enh,Number.isFinite(s.total)||(s.total=0))}getRollData(e={refresh:!1,cache:!0}){const t=!e.refresh&&this._rollData&&e.cache,s={...t?this._rollData:foundry.utils.deepClone(this.system)};if(ffd20.utils.rollData.addStatic(s),t)for(const e of ffd20.config.temporaryRollDataFields.actor)delete s[e];if(game.combats?.viewed&&(s.combat={round:game.combat.round||0}),s.conditions??={},s.conditions.loseDexToAC=this.changeFlags?.loseDexToAC??!1,t)return s;for(const e of["hp","wounds","vigor"]){const t=s.attributes[e];t.value=t.max+t.offset}for(const e of["mp"]){const t=s.attributes[e];t.value=t.max+t.offset}const a=Object.values(ffd20.config.sizeChart);s.size=Math.clamp(s.traits.size.value,0,a.length-1);const i=Object.keys(ffd20.config.ageCategories).length-1;s.ageCategory={value:Math.clamp(s.traits?.ageCategory?.value,0,i),physical:Math.clamp(s.traits?.ageCategory?.physical,0,i),mental:Math.clamp(s.traits?.ageCategory?.mental,0,i)},s.armor={type:0,total:0,ac:0,enh:0},s.shield={type:0,total:0,ac:0,enh:0};const n=this.equipment;n&&(this._prepareArmorData(n.armor,s.armor),this._prepareArmorData(n.shield,s.shield)),s.spells=s.attributes.spells.spellbooks;for(const e of Object.values(s.spells))e.abilityMod=s.abilities[e.ability]?.mod??0,e.class&&"_hd"!==e.class&&(s.spells[e.class]??=e);s.dFlags=this.itemFlags.dictionary??{},s.bFlags=Object.fromEntries(Object.entries(this.itemFlags.boolean??{}).map((([e,{sources:t}])=>[e,t.length>0?1:0]))),s.range=this.system.traits?.reach?.total??{melee:NaN,reach:NaN},s.classes=this.classes;const o=s.attributes.energyDrain??0;if(o>0&&s.classes)for(const e of Object.values(s.classes))e.isMythic||(e.level=Math.max(0,e.unlevel-o));const r=s.abilities[s.attributes.hpAbility];return Object.defineProperty(s.attributes,"hpAbility",{get:()=>r}),s.alignment=ffd20.utils.parseAlignment(this.system.details?.alignment||"tn"),e.cache&&(this._rollData=s),Hooks.events.pf1GetRollData?.length>0&&Hooks.callAll("pf1GetRollData",this,s),s}static getReach(e="med",t="tall"){let s=e>=0?e:Object.keys(ffd20.config.sizeChart).indexOf(e);"tall"!==t&&s>4&&(s-=1);const reachStruct=(e,t)=>({melee:e,reach:t});switch(s){case 0:case 1:return reachStruct(0,0);case 2:return reachStruct(0,5);default:case 3:case 4:return reachStruct(5,10);case 5:return reachStruct(10,20);case 6:return reachStruct(15,30);case 7:return reachStruct(20,40);case 8:return reachStruct(30,60)}}getQuickActions(){return this.items.filter((e=>e.isActive&&!0===e.system.showInQuickbar&&!0!==e.showUnidentifiedData)).sort(((e,t)=>e.sort-t.sort)).map((e=>{const t={item:e,name:e.name,id:e.id,type:e.type,img:e.img,get isSingleUse(){return e.isSingleUse},get haveAnyCharges(){return this.item.isCharged&&this.maxCharge>0},get maxCharge(){return e.maxCharges},get charges(){return this.item.charges}};if(t.isCharged=t.haveAnyCharges,t.isCharged){let s=e.defaultAction?.getChargeCostSync({maximize:!0})?.total??e.getDefaultChargeCost();t.recharging=s<0,s=Math.abs(s),t.uses=t.charges,t.max=t.maxCharge,Number.isFinite(t.max)?0!=s&&(t.recharging?(t.uses=Math.ceil((t.max-t.uses)/s),t.max=Math.ceil(t.max/s)):(t.uses=Math.floor(t.uses/s),t.max=Math.floor(t.max/s))):delete t.max}else{const s=e.defaultAction;if(s?.ammo.type){const s=e.defaultAmmo;s&&(t.isCharged=!0,t.uses=s.system.quantity||0)}}return t}))}refreshAbilityModifiers(){for(const e of Object.values(this.system.abilities)){const t=Math.abs(e.penalty||0),s=e.damage||0,a=ffd20.utils.getAbilityModifier(e.total,{penalty:t,damage:s});e.mod=a}}getFeatCount(){const e=this.itemTypes.feat.filter((e=>"feat"===e.subType)),t=e.filter((e=>e.isActive)).length,s=e.length,a={max:0,active:t,owned:s,disabled:s-t,levels:0,mythic:0,formula:0,changes:0,get discrepancy(){return this.max-this.active},get missing(){return Math.max(0,this.discrepancy)},get excess(){return Math.max(0,-this.discrepancy)}};null===this.system.abilities?.int?.value||(a.levels=Math.ceil(this.system.attributes.hd.total/2),a.max+=a.levels,a.mythic=Math.ceil(this.system.details.mythicTier/2),a.max+=a.mythic);const i=RollPF.safeRollSync(this.system.details?.bonusFeatFormula||"0",this.getRollData());return a.formula=i.total,a.max+=a.formula,i.err&&console.error(`An error occurred in the Bonus Feat Formula of actor "${this.name}" [${this.id}].`,{formula:this.system.details?.bonusFeatFormula,actor:this},i.err),a.changes=getHighestChanges(this.changes.filter((e=>"bonusFeats"===e.target&&"set"!==e.operator)),{ignoreTarget:!0}).reduce(((e,t)=>e+t.value),0),a.max+=a.changes,a}hasItemBooleanFlag(e){return null!=this.itemFlags.boolean[e]}async resetSpellbookUsage({commit:e=!0,rollData:t}={}){const s=this.system,a={};t??=this.getRollData();for(const[e,i]of Object.entries(s.attributes.spells.spellbooks))if(i.inUse)if(i.spellPoints.useSystem){let s=i.spellPoints.max;if(i.spellPoints.restoreFormula){const e=await RollPF.safeRoll(i.spellPoints.restoreFormula,t,void 0,void 0,{allowInteractive:!1});e.err?console.error(e.err,i.spellPoints.restoreFormula):s=Math.min(i.spellPoints.value+e.total,i.spellPoints.max)}a[`system.attributes.spells.spellbooks.${e}.spellPoints.value`]=s}else for(let t=0;t<10;t++)a[`system.attributes.spells.spellbooks.${e}.spells.spell${t}.value`]=i.spells["spell"+t]?.max??0;return e?this.update(a):a}async rechargeItems({commit:e=!0,...t}={}){const s=[];for(const e of this.items){const a=await e.recharge({...t,commit:!1});a?.system&&!foundry.utils.isEmpty(a.system)&&(a._id=e.id,s.push(a))}return e?s.length?this.updateEmbeddedDocuments("Item",s):[]:s}_restingHeal(e={}){const t=this.system,s=t.attributes.hp,a=t.attributes.mp,i=t.attributes?.wounds,n=t.attributes?.vigor,{hours:o,longTermCare:r}=e,l={},c=t.attributes.hd.total,d={hp:c,mp:t.attributes.mp.recover,abl:1,nonlethal:o*c,vigor:n?.max??0,wounds:i?.max>0?1:0};o>=24&&(d.hp+=1,d.mp*=2,d.wounds+=Math.floor(c/2),d.abl+=1),!0===r&&(d.hp*=2,d.mp*=2,d.abl*=2,d.wounds*=2),l["system.attributes.hp.value"]=Math.min(s.value+d.hp,s.max),l["system.attributes.mp.value"]=Math.min(a.value+d.mp,a.max),l["system.attributes.hp.nonlethal"]=Math.max(0,(s.nonlethal||0)-d.nonlethal);for(const[e,s]of Object.entries(t.abilities)){const t=Math.abs(s.damage);l[`system.abilities.${e}.damage`]=Math.max(0,t-d.abl)}return i?.max&&n?.max&&(l["system.attributes.wounds.value"]=Math.min(i.value+d.wounds,i.max),l["system.attributes.vigor.value"]=Math.min(n.value+d.vigor,n.max)),l}async performRest(e={}){const{restoreHealth:t=!0,longTermCare:s=!1,restoreDailyUses:a=!0,hours:i=8,verbose:n=!1}=e,o={};if(!0===t){const t=this._restingHeal(e);foundry.utils.mergeObject(o,t)}let r=[];if(!0===a){const e=await this.resetSpellbookUsage({commit:!1});foundry.utils.mergeObject(o,e),r=await this.rechargeItems({commit:!1,updateData:o,period:"day"})}e={restoreHealth:t,restoreDailyUses:a,longTermCare:s,hours:i};if(!1===Hooks.call("pf1PreActorRest",this,e,o,r))return;const l={ffd20:{action:"rest",restOptions:e}};if(r.length&&await this.updateEmbeddedDocuments("Item",r,foundry.utils.deepClone(l)),foundry.utils.isEmpty(o.system)||await this.update(o,foundry.utils.deepClone(l)),Hooks.callAll("pf1ActorRest",this,e,o,r),n){const e=a?"FFD20.FullRestMessage":"FFD20.RestMessage";ui.notifications.info(game.i18n.format(e,{name:this.token?.name??this.name,hours:i}))}return{options:e,updateData:o,itemUpdates:r}}async modifyTokenAttribute(e,t,s=!1,a=!0){let i=this;const n=foundry.utils.getProperty(this.system,e),o={},r=n instanceof Resource;if(r&&(i=n.item),!i)return;if("attributes.hp"===e){s||(t=-1*(n.temp+n.value-t));let e=t;n.temp>0&&t<0&&(e=Math.min(0,n.temp+t),o["system.attributes.hp.temp"]=Math.max(0,n.temp+t)),o["system.attributes.hp.value"]=Math.min(n.value+e,n.max)}else if("attributes.vigor"===e){s||(t=-1*(n.temp+n.value-t));let e=t;n.temp>0&&t<0&&(e=Math.min(0,n.temp+t),o["system.attributes.vigor.temp"]=Math.max(0,n.temp+t)),o["system.attributes.vigor.value"]=Math.min(n.value+e,n.max)}else s?r?o["system.uses.value"]=Math.min(n.value+t,n.max):a?o[`system.${e}.value`]=Math.clamp(n.value+t,n.min||0,n.max):o["system."+e]=n+t:r?o["system.uses.value"]=Math.clamp(t,0,n.max):a?o[`system.${e}.value`]=Math.min(t,n.max):o["system."+e]=t;return!1!==Hooks.call("modifyTokenAttribute",{attribute:e,value:t,isDelta:s,isBar:a},o)?i.update(o):this}get visionSharingSheet(){return this._visionSharingSheet??=new VisionSharingSheet({document:this}),this._visionSharingSheet}}class BaseCharacterPF extends ActorPF{_detectHealthChange(e,t){super._detectHealthChange(e,t);const s=t.ffd20?.deltas??{},a=e.system?.attributes;if(a){const e=this.system.attributes;for(const t of["hp","wounds","vigor"]){const i=a[t];if(i)for(const a of["offset","temp","nonlethal"]){if(void 0===i[a])continue;const n=i[a]-(e?.[t]?.[a]||0);n&&Number.isFinite(n)&&(s[t]??={},s[t][a]=n)}}}const i=e.system.abilities;if(i){const e=this.system.abilities;for(const[t,a]of Object.entries(i))for(const i of["damage","drain","userPenalty"]){if(void 0===a[i])continue;const n=a[i]-(e?.[t]?.[i]??0);n&&Number.isFinite(n)&&(s[t]??={},s[t][i]=n)}}if(void 0!==e.system.attributes?.energyDrain){const t=e.system.attributes?.energyDrain-this.system.attributes.energyDrain;t&&Number.isFinite(t)&&(s.energyDrain=t)}Object.keys(s).length>0&&(t.ffd20??={},t.ffd20.deltas=s)}_onUpdate(e,t,s){super._onUpdate(e,t,s),this._onDeltaUpdates(t.ffd20?.deltas)}async _onDeltaUpdates(e){if(!e)return;if(!game.user.isGM&&!this.testUserPermission(game.user,game.settings.get("ffd20","healthPermission")))return;let t=this.token??this.getActiveTokens(!0,!0)[0];if(game.user.isGM||t.object.isVisible||(t=null),!t)return;const s={hp:{offset:{label:"FFD20.ActiveFeedback.Deltas.Health",color:ffd20.config.feedback.deltas.hp},temp:{label:"FFD20.ActiveFeedback.Deltas.TempHP",color:ffd20.config.feedback.deltas.temp},nonlethal:{label:"FFD20.ActiveFeedback.Deltas.Nonlethal",color:ffd20.config.feedback.deltas.nonlethal}},wounds:{offset:{label:"FFD20.ActiveFeedback.Deltas.Wounds",color:ffd20.config.feedback.deltas.wounds}},vigor:{offset:{label:"FFD20.ActiveFeedback.Deltas.Vigor",color:ffd20.config.feedback.deltas.vigor},temp:{label:"FFD20.ActiveFeedback.Deltas.TempVigor",color:ffd20.config.feedback.deltas.temp}},energyDrain:{label:"FFD20.ActiveFeedback.Deltas.NegativeLevel",color:ffd20.config.feedback.deltas.energyDrain},ability:{damage:{label:"FFD20.ActiveFeedback.Deltas.AbilityDamage",color:ffd20.config.feedback.deltas.abilityScore},drain:{label:"FFD20.ActiveFeedback.Deltas.AbilityDrain",color:ffd20.config.feedback.deltas.abilityScore},userPenalty:{label:"FFD20.ActiveFeedback.Deltas.AbilityPenalty",color:ffd20.config.feedback.deltas.abilityScore}}},a=new Intl.NumberFormat(void 0,{signDisplay:"always"}).format;for(const i of Object.keys(e)){const n=[];switch(i){case"hp":case"wounds":case"vigor":for(const[t,o]of Object.entries(e[i])){const e=s[i][t];if(e){const s=o>0,r=s?e.color.positive:e.color.negative;n.push({label:game.i18n.format(e.label,{value:a(o)}),positive:s,color:r,value:o,key:`${i}.${t}`})}else console.debug("Unrecognized delta:",i,t,o)}break;case"energyDrain":{const t=e[i],o=s.energyDrain,r=t<0,l=r?o.color.positive:o.color.negative;n.push({label:game.i18n.format(o.label,{value:a(t)}),positive:r,color:l,value:t,key:i});break}default:if(i in ffd20.config.abilities)for(const[t,o]of Object.entries(e[i])){const r=ffd20.config.abilities[i],l=s.ability[t];if(r&&l){const e=o<0,s=e?l.color.positive:l.color.negative;n.push({label:game.i18n.format(l.label,{value:a(o),ability:r}),positive:e,color:s,value:o,key:`${i}.${t}`})}else console.debug("Unrecognized ability score delta:",i,t,e[i]?.[t])}else console.warn("Unrecognized delta:",i,e[i])}let o=0;for(const e of n){const{positive:s,color:a}=e,i=Math.max(canvas.grid.size/3,24),n={anchor:CONST.TEXT_ANCHOR_POINTS.CENTER,direction:s?CONST.TEXT_ANCHOR_POINTS.TOP:CONST.TEXT_ANCHOR_POINTS.BOTTOM,fontSize:i,fill:a,stroke:0,strokeThickness:2.5,jitter:.5};if(!1===Hooks.call("pf1HealthDeltaRender",this,e,n))continue;const r=performance.now(),l=r-o;l<200&&await new Promise((e=>setTimeout((()=>e()),Math.max(10,200-l)))),o=r,console.debug("FFD20 |",e.label,"|",this.uuid),canvas.interface.createScrollingText(t.object.center,e.label,n)}}}prepareBaseData(){super.prepareBaseData();const e=this.system;e.traits??={};const t=e.traits.size||"med",s=Object.keys(ffd20.config.sizeChart).indexOf(t);e.traits.size={base:t,value:s};const a=e.traits.ageCategory||"adult",i=Object.keys(ffd20.config.ageCategories).indexOf(a);e.traits.ageCategory={base:a,value:i,physical:i,mental:i};const n=e.skills;for(const e of Object.values(n))if(e){e.rank||=0,e.mod=0;for(const t of Object.values(e.subSkills||{}))t&&(t.rank||=0,t.mod=0)}}_prepareTypeChanges(e){const t=[];Hooks.events.pf1AddDefaultChanges?.length&&Hooks.callAll("pf1AddDefaultChanges",this,t),e.push(...t.filter((e=>e instanceof ffd20.components.ItemChange)));const s=this.itemTypes.class.sort(((e,t)=>e.sort-t.sort));this._calculateMaxHealth(s,e),this._calculateMaxMana(s,e);const a=this.system,i=!0===game.settings.get("ffd20","useFractionalBaseBonuses");for(const t of Object.keys(a.attributes.savingThrows)){let n=!1;a.attributes.savingThrows[t].total=a.attributes.savingThrows[t]?.base??0;const o=s.reduce(((s,a)=>{const o=a.system.savingThrows[t].base;return i?!0===a.system.savingThrows[t].good&&(n=!0):e.push(new ffd20.components.ItemChange({formula:o,target:t,type:"untypedPerm",flavor:a.name})),s+o}),0);if(i&&e.push(new ffd20.components.ItemChange({formula:Math.floor(o),target:t,type:"untypedPerm",flavor:game.i18n.localize("FFD20.Base")})),i&&n){const s=ffd20.config.classFractionalSavingThrowFormulas.goodSaveBonus,a=RollPF.safeRollSync(s).total;e.push(new ffd20.components.ItemChange({formula:a,target:t,type:"untypedPerm",flavor:game.i18n.localize("FFD20.SavingThrowGoodFractionalBonus")}))}}let n=0,o=!1,r=!1,l=!1;s.forEach((e=>{""===e.system.classCastingStat&&"noncaster"===e.system.classCastingStat||("halfCaster"===e.system.classBaseMPTypes&&e.system.level>3?n+=e.system.level-3:n+=e.system.level,"intAndWis"!==e.system.classCastingStat&&"int"!==e.system.classCastingStat||(o=!0),"intAndWis"!==e.system.classCastingStat&&"wis"!==e.system.classCastingStat||(r=!0),"cha"===e.system.classCastingStat&&(l=!0))})),e.push(new ffd20.components.ItemChange({formula:n,target:"mprec",type:"untypedPerm",flavor:"Mp recovery from total Caster Levels"})),o&&e.push(new ffd20.components.ItemChange({formula:"@abilities.int.mod",target:"mprec",type:"untypedPerm",flavor:"Mp recovery from Intelligence"})),r&&e.push(new ffd20.components.ItemChange({formula:"@abilities.wis.mod",target:"mprec",type:"untypedPerm",flavor:"Mp recovery from Wisdom"})),l&&e.push(new ffd20.components.ItemChange({formula:"@abilities.cha.mod",target:"mprec",type:"untypedPerm",flavor:"Mp recovery from Charisma"}));const c=a.attributes.hpAbility;c&&(e.push(new ffd20.components.ItemChange({formula:"@attributes.hpAbility.mod * @attributes.hd.total",operator:"add",target:"mhp",type:"base",flavor:ffd20.config.abilities[c]})),a.attributes.wounds?.base||(e.push(new ffd20.components.ItemChange({formula:"@attributes.hpAbility.undrained * 2",operator:"add",target:"wounds",type:"base",flavor:ffd20.config.abilities[c]})),e.push(new ffd20.components.ItemChange({formula:"@attributes.hpAbility.undrained",operator:"add",target:"woundThreshold",type:"base",flavor:ffd20.config.abilities[c]})),e.push(new ffd20.components.ItemChange({formula:"-(@attributes.hpAbility.damage * 2)",operator:"add",target:"wounds",type:"untyped",flavor:game.i18n.localize("FFD20.AbilityDamage")})),e.push(new ffd20.components.ItemChange({formula:"@attributes.hpAbility.penalty",operator:"add",target:"wounds",type:"untyped",flavor:game.i18n.localize(`FFD20.Ability${c.capitalize()}Pen`)})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.hpAbility.drain",operator:"add",target:"wounds",type:"untyped",flavor:game.i18n.localize("FFD20.AbilityDrain")}))));const addSKillChanges=(t,s)=>{t.rank>0&&(e.push(new ffd20.components.ItemChange({formula:t.rank,value:t.rank,target:"skill.~"+s,type:"base",operator:"add",flavor:game.i18n.localize("FFD20.SkillRankPlural")})),t.cs&&e.push(new ffd20.components.ItemChange({formula:ffd20.config.classSkillBonus,value:ffd20.config.classSkillBonus,target:"skill.~"+s,type:"untyped",operator:"add",flavor:game.i18n.localize("FFD20.CSTooltip")}))),t.ability&&(e.push(new ffd20.components.ItemChange({formula:`@abilities.${t.ability}.mod`,target:"skill.~"+s,operator:"add",type:"untyped",flavor:ffd20.config.abilities[t.ability]||t.ability,priority:-10})),t.acp&&e.push(new ffd20.components.ItemChange({formula:"-@attributes.acp.skill",target:"skill.~"+s,type:"untyped",operator:"add",flavor:game.i18n.localize("FFD20.ACPLong")})))},d=a.skills;for(const[e,t]of Object.entries(d))if(t){addSKillChanges(t,e);for(const[s,a]of Object.entries(t.subSkills||{}))a&&addSKillChanges(a,`${e}.${s}`)}for(const[t,s]of Object.entries(a.attributes.speed))e.push(new ffd20.components.ItemChange({formula:s.base||0,target:t+"Speed",type:"base",operator:"set",priority:1001,flavor:game.i18n.localize("FFD20.Base")}));e.push(new ffd20.components.ItemChange({_id:"_bab",formula:"@attributes.bab.total",operator:"add",target:"~attackCore",type:"untypedPerm",flavor:game.i18n.localize("FFD20.BAB")})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.energyDrain",operator:"add",target:"~attackCore",type:"untypedPerm",flavor:game.i18n.localize("FFD20.NegativeLevels")})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.acp.attackPenalty",operator:"add",target:"~attackCore",type:"untyped",flavor:game.i18n.localize("FFD20.ArmorCheckPenalty")})),e.push(new ffd20.components.ItemChange({formula:"@attributes.bab.total",operator:"add",target:"cmd",type:"untypedPerm",flavor:game.i18n.localize("FFD20.BAB")}));const u=a.attributes.cmd.strAbility;u in ffd20.config.abilities&&e.push(new ffd20.components.ItemChange({formula:`@abilities.${u}.mod`,target:"cmd",type:"untypedPerm",flavor:ffd20.config.abilities[u]})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.energyDrain",operator:"add",target:"cmd",type:"untypedPerm",flavor:game.i18n.localize("FFD20.NegativeLevels")}));const m=a.attributes.init.ability;m&&e.push(new ffd20.components.ItemChange({formula:`@abilities.${m}.mod`,operator:"add",target:"init",type:"untypedPerm",priority:-100,flavor:ffd20.config.abilities[m]})),["str","dex"].includes(m)&&e.push(new ffd20.components.ItemChange({formula:"-@attributes.acp.attackPenalty",operator:"add",target:"init",type:"untyped",priority:-100,flavor:game.i18n.localize("FFD20.ArmorCheckPenalty")}));const p=a.attributes.savingThrows.fort.ability;p&&e.push(new ffd20.components.ItemChange({formula:`@abilities.${p}.mod`,operator:"add",target:"fort",type:"untypedPerm",flavor:ffd20.config.abilities[p]}));const h=a.attributes.savingThrows.ref.ability;m&&e.push(new ffd20.components.ItemChange({formula:`@abilities.${h}.mod`,operator:"add",target:"ref",type:"untypedPerm",flavor:ffd20.config.abilities[h]}));const f=a.attributes.savingThrows.will.ability;f&&e.push(new ffd20.components.ItemChange({formula:`@abilities.${f}.mod`,operator:"add",target:"will",type:"untypedPerm",flavor:ffd20.config.abilities[f]})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.energyDrain",operator:"add",target:"allSavingThrows",type:"untyped",flavor:game.i18n.localize("FFD20.NegativeLevels")})),e.push(new ffd20.components.ItemChange({formula:a.attributes.sr.formula||0,target:"spellResist",type:"untyped",priority:1e3,flavor:game.i18n.localize("FFD20.CustomBonus")})),e.push(new ffd20.components.ItemChange({formula:a.details.carryCapacity.bonus.user||0,target:"carryStr",type:"untyped",priority:1e3,flavor:game.i18n.localize("FFD20.Custom")})),e.push(new ffd20.components.ItemChange({formula:a.details.carryCapacity.multiplier.base??1,target:"carryMult",type:"base",priority:1e3,flavor:game.i18n.localize("FFD20.Base")})),e.push(new ffd20.components.ItemChange({formula:a.details.carryCapacity.multiplier.user||0,target:"carryMult",type:"untyped",priority:1e3,flavor:game.i18n.localize("FFD20.Custom")}));const g={init:null,cmd:null,bab:null,ac:e=>e.normal};for(const[t,s]of Object.entries(g)){let i=a.attributes[t];"function"==typeof s&&(i=s(i)),i=i.value,void 0!==i&&e.push(new ffd20.components.ItemChange({formula:i,trget:t,type:"base",flavor:game.i18n.localize("FFD20.Custom"),operator:"set"}))}const y=a.attributes.naturalAC||0;e.push(new ffd20.components.ItemChange({formula:y,target:"nac",type:"untyped",flavor:game.i18n.format("FFD20.CustomBonusType",{type:game.i18n.localize("FFD20.NaturalArmor")})}));for(const t of this.itemTypes.equipment){if(!t.system.equipped)continue;const s=t.system.armor?.value||0,a=t.system.armor?.enh||0;if(!(s+a))continue;const i=t.isBroken;let n="aac";"shield"===t.system.subType&&(n="sac");const o=i?Math.floor(s/2):s,r=i?Math.floor(a/2):a,l=i?Math.floor((s%2+a%2)/2):0;e.push(new ffd20.components.ItemChange({formula:o,value:o,target:n,type:"base"},{parent:t})),e.push(new ffd20.components.ItemChange({formula:r+l,value:r+l,target:n,type:"enhancement"},{parent:t}))}const b=a.attributes.speed.fly.maneuverability;let F=0;null!=b&&(F=ffd20.config.flyManeuverabilityValues[b]),0!==F&&e.push(new ffd20.components.ItemChange({formula:F,target:"skill.fly",type:"racial",flavor:game.i18n.localize("FFD20.Movement.FlyManeuverability.Label")})),e.push(new ffd20.components.ItemChange({formula:"(min(1, @attributes.speed.climb.total) * 8)",operator:"add",target:"skill.clm",type:"racial",priority:-1,flavor:game.i18n.localize("FFD20.Movement.Mode.climb")})),e.push(new ffd20.components.ItemChange({formula:"(min(1, @attributes.speed.swim.total) * 8)",operator:"add",target:"skill.swm",type:"racial",priority:-1,flavor:game.i18n.localize("FFD20.Movement.Mode.swim")})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.energyDrain",operator:"add",target:"skills",type:"untypedPerm",flavor:game.i18n.localize("FFD20.NegativeLevels")})),e.push(new ffd20.components.ItemChange({formula:"-@attributes.woundThresholds.penalty",operator:"add",target:"skills",type:"untyped",flavor:game.i18n.localize("FFD20.WoundThreshold")})),e.push(new ffd20.components.ItemChange({formula:"lookup(@size + 1, 0, "+Object.values(ffd20.config.sizeMods).join(", ")+")",target:"ac",type:"size",flavor:game.i18n.localize("FFD20.ModifierType.size"),priority:-1e3})),e.push(new ffd20.components.ItemChange({formula:"lookup(@size + 1, 0, "+Object.values(ffd20.config.sizeStealthMods).join(", ")+")",target:"skill.ste",type:"size",flavor:game.i18n.localize("FFD20.ModifierType.size"),priority:-1e3})),e.push(new ffd20.components.ItemChange({formula:"lookup(@size + 1, 0, "+Object.values(ffd20.config.sizeFlyMods).join(", ")+")",target:"skill.fly",type:"size",flavor:game.i18n.localize("FFD20.ModifierType.size"),priority:-1e3})),e.push(new ffd20.components.ItemChange({formula:"lookup(@size + 1, 0, "+Object.values(ffd20.config.sizeSpecialMods).join(", ")+")",target:"cmd",type:"size",flavor:game.i18n.localize("FFD20.ModifierType.size"),priority:-1e3}));const v=Object.values(ffd20.config.ageCategories);for(const t of["str","dex","con","int","wis","cha"]){const s=`lookup(@ageCategory.${["str","dex","con"].includes(t)?"physical":"mental"} + 1, 0, `+v.map((e=>e.modifiers[t])).join(", ")+")";e.push(new ffd20.components.ItemChange({formula:`ifelse(gt(@abilities.${t}.base + ${s}, 0), ${s}, -@abilities.${t}.base + 1)`,target:t,type:"untyped",flavor:game.i18n.localize("FFD20.Age"),priority:0}))}a.details?.bonusSkillRankFormula&&e.push(new ffd20.components.ItemChange({formula:a.details.bonusSkillRankFormula,target:"bonusSkillRanks",type:"untyped",flavor:game.i18n.localize("FFD20.SkillBonusRankFormula")}));for(const[t,s]of Object.entries(a.conditions)){if(!s)continue;const a=ffd20.registry.conditions.get(t),i=a?.mechanics;if(i){for(const t of i.changes){const s={...t,flavor:a.name},i=new ffd20.components.ItemChange(s);e.push(i)}for(const e of i.flags)this.changeFlags[e]=!0}}a.attributes.energyDrain>0&&(e.push(new ffd20.components.ItemChange({formula:"-(@attributes.energyDrain * 5)",operator:"add",target:"mhp",type:"untyped",priority:-750,flavor:game.i18n.localize("FFD20.NegativeLevels")})),e.push(new ffd20.components.ItemChange({formula:"-(@attributes.energyDrain * 5)",operator:"add",target:"vigor",type:"untyped",priority:-750,flavor:game.i18n.localize("FFD20.NegativeLevels")})))}_calculateMaxHealth(e,t){const s=[],a=[],i=[];for(const t of e)"racial"===t.subType?i.push(t):"npc"===t.subType?a.push(t):s.push(t);const n=game.settings.get("ffd20","healthConfig"),o=n.getActorConfig(this),r={up:Math.ceil,nearest:Math.round,down:Math.floor}[n.rounding],{continuous:l}=n;function pushHealth(e,s){const a=ffd20.config.favoredClassTypes.includes(s.subType)&&s.system.fc?.hp?.value||0;t.push(new ffd20.components.ItemChange({formula:e,target:"mhp",type:"untypedPerm",flavor:s.name}),new ffd20.components.ItemChange({formula:e,target:"vigor",type:"untypedPerm",flavor:s.name})),0!=a&&t.push(new ffd20.components.ItemChange({formula:a,target:"mhp",type:"untypedPerm",flavor:game.i18n.format("FFD20.SourceInfoSkillRank_ClassFC",{className:s.name})}),new ffd20.components.ItemChange({formula:a,target:"vigor",type:"untypedPerm",flavor:game.i18n.format("FFD20.SourceInfoSkillRank_ClassFC",{className:s.name})}))}function manualHealth(e){let t=e.system.hp;l||(t=r(t)),pushHealth(t,e)}function autoHealth(e,{rate:t,maximized:s}={},a){const i=e.system.hd??0;if(0===i)return;let n=0;if("mythic"===e.subType){const t=i??0;if(0===t)return;const s=e.system.level??0;if(0===s)return;n=t*s}else{let o=1+(i-1)*t;l||(o=r(o));const c=e.hitDice;let d=0;s&&(d=Math.min(c,a.maximized.remaining),a.maximized.value+=d);n=d*i+Math.max(0,c-d)*o}pushHealth(n,e)}function computeHealth(e,t,s){if(t.auto)for(const a of e)autoHealth(a,t,s);else for(const t of e)manualHealth(t)}const c={maximized:{value:0,max:n.maximized,get remaining(){return this.max-this.value}}};computeHealth(i,o.classes.racial,c),computeHealth(s,o.classes.base,c),computeHealth(a,o.classes.npc,c)}_calculateMaxMana(e,t){const s=[],a=[],i=[];for(const t of e)"racial"===t.subType?i.push(t):"npc"===t.subType?a.push(t):s.push(t);function pushMana(e,s){t.push(new ffd20.components.ItemChange({formula:e,target:"mmp",type:"untypedPerm",flavor:s.name}));const a=s.system.classCastingStat,i=ffd20.config.ClassSpellLvlProgression[s.system.classBaseMPTypes],n=Math.floor(RollPF.safeRollSync(i,{level:s.system.level}).total);if(""!==a)for(let e=1;e<n+1;e++)"intAndWis"!==a&&"int"!==a||t.push(new ffd20.components.ItemChange({formula:`ceil(max(@abilities.int.mod - (${e} - 1 ), 0) / 4) * ${e}`,target:"mmp",type:"untypedPerm",flavor:`Bonus Mp ${s.name} from Intelligence for spell level ${e}`})),"intAndWis"!==a&&"wis"!==a||t.push(new ffd20.components.ItemChange({formula:`ceil(max(@abilities.wis.mod - (${e} - 1 ), 0) / 4) * ${e}`,target:"mmp",type:"untypedPerm",flavor:`Bonus Mp ${s.name} from Wisdom for spell level ${e}`})),"cha"===a&&t.push(new ffd20.components.ItemChange({formula:`ceil(max(@abilities.cha.mod - (${e} - 1 ), 0) / 4) * ${e}`,target:"mmp",type:"untypedPerm",flavor:`Bonus Mp ${s.name} from Charisma for spell level ${e}`}))}function computeMana(e){e.forEach((e=>{"no"===e.system.classBaseMPauto||null===e.system.classBaseMPauto?function manualMana(e){pushMana(e.system.mp,e)}(e):function autoMana(e){if("noncaster"===e.system.classBaseMPTypes)return;if(0===e.system.level)return;if("halfCaster"===e.system.classBaseMPTypes&&e.system.level<4)return;let t=0,s=1;"half"===e.system.classBaseMPauto&&(s=.5);const a=ffd20.config.classMPlevels[e.system.classBaseMPTypes];t=Math.floor(a[e.system.level-1]*s),pushMana(t,e)}(e)}))}computeMana(i),computeMana(s),computeMana(a)}getSourceDetails(e){const t=super.getSourceDetails(e),s=game.i18n.localize("FFD20.Base");["system.attributes.ac.normal.total","system.attributes.ac.touch.total","system.attributes.ac.flatFooted.total","system.attributes.cmd.total","system.attributes.cmd.flatFootedTotal"].includes(e)&&t.push({name:s,value:10,enabled:!0});const a=/^system\.abilities\.(?<key>\w+)\.(?<detail>\w+)$/.exec(e);if(a){const{key:e,detail:i}=a.groups,n=this.system.abilities[e];switch(i){case"total":t.push({name:s,value:n.value}),n.drain>0&&t.push({name:game.i18n.localize("FFD20.AbilityDrain"),value:-Math.abs(n.drain)});break;case"mod":n.damage>0&&t.push({name:game.i18n.localize("FFD20.AbilityDamage"),value:-Math.floor(Math.abs(n.damage)/2)}),n.userPenalty>0&&t.push({name:game.i18n.localize("FFD20.AbilityPenalty"),value:-Math.floor(Math.abs(n.userPenalty)/2)})}}const i=game.settings.get("ffd20","healthConfig").getActorConfig(this);if(0!=i.rules.useWoundThresholds){const s=this.getWoundThresholdData({healthConfig:i});if(s.valid){const a=-s.penalty;for(const i of ffd20.config.woundThresholdChangeTargets){getChangeFlat(this,i,"untyped",a).includes(e)&&t.push({name:ffd20.config.woundThresholdConditions[s.level],value:a,id:"woundThreshold"})}}}return t}_prepareTraits(){this.system.traits??={};const e=this.system.traits,t=ffd20.registry.damageTypes.getLabels(),s={di:t,dv:t,ci:ffd20.config.conditionTypes,languages:ffd20.config.languages,armorProf:ffd20.config.armorProficiencies,weaponProf:ffd20.config.weaponProficiencies,creatureTypes:ffd20.config.creatureTypes,creatureSubtypes:ffd20.config.creatureSubtypes};for(const[t,a]of Object.entries(s)){const i={base:e[t]??[],custom:new Set,standard:new Set,get total(){return this.standard.union(this.custom)},get names(){return[...this.standard.map((e=>a[e]||e)),...this.custom]}};if(e[t]=i,Object.defineProperty(i,"value",{get(){return foundry.utils.logCompatibilityWarning(`actor.system.traits.${t}.value is deprecated.`,{since:"PF1 v11",until:"PF1 v12"}),this.standard}}),Array.isArray(i.base)){const e=s[t];for(const t of i.base)e[t]?i.standard.add(t):i.custom.add(t)}}}_finalizeTraits(){const e=this.system.traits,t={armorProf:ffd20.config.armorProficiencies,weaponProf:ffd20.config.weaponProficiencies,languages:ffd20.config.languages,creatureTypes:ffd20.config.creatureTypes,creatureSubtypes:ffd20.config.creatureSubtypes},s=this.items.filter((e=>e.isActive));for(const[a,i]of Object.entries(t)){const t=e[a];if(t)for(const e of s){const s=e.system[a];if(!s)continue;if(!s.total)continue;if(0==s.total.size)continue;let n=getSourceInfo(this.sourceInfo,"system.traits."+a).positive.find((t=>t.name===e.name));const o=!!n;n?"string"==typeof n.value&&(n.value=n.value.split(", ")):n={name:e.name,value:[]};for(const e of s.standard){const s=i[e];n.value.includes(s)||n.value.push(s),t.standard.add(e)}for(const e of s.custom)n.value.includes(e)||n.value.push(e),t.custom.add(e);n.value.length>0&&(o&&(n.value=[...new Set(n.value)]),n.value=ffd20.utils.i18n.join(n.value),o||getSourceInfo(this.sourceInfo,"system.traits."+a).positive.push(n))}else console.error(this.name,"actor trait",a,"is missing")}}}class ActorCharacterPF extends BaseCharacterPF{async _preCreate(e,t,s){await super._preCreate(e,t,s);const a={};if(void 0===e.prototypeToken?.actorLink&&(a.actorLink=!0),game.settings.get("ffd20","characterVision")&&void 0===e.prototypeToken?.sight?.enabled&&(a.sight={enabled:!0}),void 0===e.prototypeToken?.disposition){const e=game.settings.get("ffd20","pcDisposition");"NONE"!==e&&(a.disposition=CONST.TOKEN_DISPOSITIONS[e])}foundry.utils.isEmpty(a)||this.prototypeToken.updateSource(a)}async _preUpdate(e,t,s){await super._preUpdate(e,t,s),e.system&&!1!==t.diff&&!1!==t.recursive&&this._updateExp(e)}_updateExp(e){const t=e.system.details?.xp;if(t?.value<=0){const e=this.system.details?.level?.value??0;t.value=e>0?this.getLevelExp(e-1):0}}getLevelExp(e,{rollData:t=null}={}){if(!(Number.isInteger(e)&&e>=0))throw Error(`Level "${e}" must be zero or greater integer.`);if(0===e)return 0;const s=game.settings.get("ffd20","experienceConfig"),a=s.track;if(["fast","medium","slow"].includes(a)){const t=ffd20.config.CHARACTER_EXP_LEVELS[a];return e<t.length?t[e]:t.at(-1)}let i=0;if(s.custom.formula.length>0){t??=this.getRollData();for(let a=0;a<e;a++){t.level=a+1;i+=RollPF.safeRollSync(s.custom.formula,t).total}delete t.level}return i}prepareDerivedData(){super.prepareDerivedData();const e=this.system;e.details??={};const t=e.details.level?.value||1;e.details.xp??={};const s=this.getLevelExp(t);e.details.xp.max=s;const a=e.details.xp.value;if(a>=s)e.details.xp.pct=100;else{const i=this.getLevelExp(t-1||0);e.details.xp.pct=(Math.clamp(a,i,s)-i)/(s-i)*100}}getMovement(e){e={prone:"crawl",land:"walk"}[e]??e;const t={...ffd20.config.tokenRuler.movement.default,...ffd20.config.tokenRuler.movement[e]};let s=0;switch(e){case"walk":s=this.system.attributes?.speed?.land?.total??0;break;case"fly":s=this.system.attributes?.speed?.fly?.total??0;break;case"jump":s=Math.max(this.system.attributes?.speed?.land?.total??0,this.system.attributes?.speed?.fly?.total??0);break;case"burrow":s=this.system.attributes?.speed?.burrow?.total??0;break;case"swim":if(s=this.system.attributes?.speed?.swim?.total??0,s<=0){const e=this.system.attributes?.speed?.land?.total??30;Object.assign(t,ffd20.config.tokenRuler.movement.swimSkill),s=5*Math.floor(e/5/4)}break;case"climb":if(s=this.system.attributes?.speed?.climb?.total??0,s<=0){const e=this.system.attributes?.speed?.land?.total??30;Object.assign(t,ffd20.config.tokenRuler.movement.climbSkill),s=5*Math.floor(e/5/4)}break;case"crawl":s=5}return t.speed??=s,t}}class ActorNPCPF extends BaseCharacterPF{async _preCreate(e,t,s){await super._preCreate(e,t,s);const a={};if(void 0===e.prototypeToken?.disposition){const e=game.settings.get("ffd20","npcDisposition");"NONE"!==e&&(a.disposition=CONST.TOKEN_DISPOSITIONS[e])}foundry.utils.isEmpty(a)||this.prototypeToken.updateSource(a)}async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;const a=e.system?.details?.cr?.base;"string"==typeof a&&(e.system.details.cr.base=ffd20.utils.CR.fromString(a))}prepareBaseData(){super.prepareBaseData(),this.system.details.cr.total=this.getCR()}prepareSpecificDerivedData(){super.prepareSpecificDerivedData(),this._prepareCR()}_prepareCR(){foundry.utils.setProperty(this.system,"details.cr.total",this.getCR());let e=0;try{const t=this.system.details?.cr?.total||0;e=ffd20.utils.CR.getXP(t)}catch{e=ffd20.utils.CR.getXP(1)}foundry.utils.setProperty(this.system,"details.xp.value",e)}hasArmorProficiency(e){return!game.settings.get("ffd20","npcProficiencies")||super.hasArmorProficiency(e)}hasWeaponProficiency(e,t={}){return!game.settings.get("ffd20","npcProficiencies")||super.hasWeaponProficiency(e,t)}getCR(){const e=this.system.details?.cr?.base??0;return this.itemTypes.feat.filter((e=>"template"===e.subType&&e.isActive)).reduce(((e,t)=>{const s=t.system.crOffset;return s&&(e+=RollPF.safeRollSync(s,t.getRollData()).total),e}),e)}getCRExp(e){return foundry.utils.logCompatibilityWarning("ActorPF.getCRExp() is deprecated in favor of ffd20.utils.CR.getXP()",{since:"PF1 v11",until:"PF1 v12"}),ffd20.utils.CR.getXP(e)}}class ActorHauntPF extends ActorPF{prepareBaseData(){this._resetInherentTotals(),this.changeFlags={},this.sourceInfo={},this.system.abilities={str:{value:10,damage:0,drain:0,userPenalty:0,mod:0,total:10},dex:{value:10,damage:0,drain:0,userPenalty:0,mod:0,total:10},con:{value:10,damage:0,drain:0,userPenalty:0,mod:0,total:10},int:{value:10,damage:0,drain:0,userPenalty:0,mod:0,total:10},wis:{value:10,damage:0,drain:0,userPenalty:0,mod:0,total:10},cha:{value:10,damage:0,drain:0,userPenalty:0,mod:0,total:10}},this.system.attributes.attack??={general:0,shared:0},this.system.skills??={},this.system.resources??={},this.system.attributes.hp.max=this.system.attributes.hp.base}_getInherentTotalsKeys(){return{"details.carryCapacity.bonus.total":0,"details.carryCapacity.multiplier.total":0}}prepareDerivedData(){this.system.details.cr.total=this.system.details.cr.base,this.system.attributes.init.total=this.system.attributes.init.value;for(const e of this.items)e._prepareDependentData(!1),this.updateItemResources(e);applyChanges(this),this._prepareTemplates(),this._prepareCR(),this.prepareHealth(),this.prepareItemLinks(),this._rollData=null;for(const e of this.items)e._prepareDependentData(!0),this.updateItemResources(e,{warnOnDuplicate:!1})}prepareHealth(){const e=this.system.attributes.hp;Number.isFinite(e?.offset)||(e.offset=0),e.value=e.max+e.offset}refreshDerivedData(){}_prepareTypeChanges(e){e.push(new ffd20.components.ItemChange({_id:"_bab",formula:"@attributes.bab.total",operator:"add",target:"~attackCore",type:"untypedPerm",flavor:game.i18n.localize("FFD20.BAB")}))}getRollData(e={refresh:!1,cache:!0}){const t=!e.refresh&&this._rollData&&e.cache,s={...t?this._rollData:ffd20.utils.deepClone(this.system)};if(t)for(const e of ffd20.config.temporaryRollDataFields.actor)delete s[e];return game.combats?.viewed&&(s.combat={round:game.combat.round||0}),s.cl=s.details.cl,s.auraStrength=this.auraStrength,t||(s.size=4,s.dFlags=this.itemFlags?.dictionary??{},s.range=ffd20.documents.actor.ActorPF.getReach(this.system.traits.size,this.system.traits.stature),s.attributes.woundThresholds={level:0},s.attributes.acp={attackPenalty:0},Hooks.events.pf1GetRollData?.length>0&&Hooks.callAll("pf1GetRollData",this,s),this._rollData=s),s}_prepareCR(){let e=0;for(const t of this.system.templates.base){const s=ffd20.config.hauntTemplates[t];if(!s)continue;e+=s.cr;const a=s.crBonusTag;a&&this.system.templates.base.includes(a)&&(e+=s.crBonus)}this.system.details.cr.total=this.system.details.cr.base+e;let t=0;try{const e=this.system.details?.cr?.total||0;t=ffd20.utils.CR.getXP(e)}catch{t=ffd20.utils.CR.getXP(1)}foundry.utils.setProperty(this.system,"details.xp.value",t)}get auraStrength(){const e=this.system.details.cl||0;return e<1?0:e<6?1:e<12?2:e<21?3:4}getInitiativeOptions(){return{check:!1}}_prepareTemplates(){const e=this.system.templates??{},t=ffd20.config.hauntTemplateLabels,s={base:e,custom:new Set,standard:new Set,get total(){return this.standard.union(this.custom)},get names(){return[...this.standard.map((e=>t[e]||e)),...this.custom]}};if(this.system.templates=s,Array.isArray(s.base))for(const e of s.base)t[e]?s.standard.add(e):s.custom.add(e)}getCR(){return this.system.details?.cr?.total??0}}class ActorTrapPF extends ActorPF{prepareBaseData(){this.changeFlags={},this.sourceInfo={},this.system.resources??={},this.system.abilities={},this.system.attributes={attack:{general:0,shared:0},bab:{total:0},woundThresholds:{}},this.system.skills??={}}prepareDerivedData(){for(const e of this.items)e._prepareDependentData(!1),this.updateItemResources(e);applyChanges(this),this._prepareCR(),this.prepareItemLinks(),this._rollData=null;for(const e of this.items)e._prepareDependentData(!0),this.updateItemResources(e,{warnOnDuplicate:!1})}refreshDerivedData(){}_prepareCR(){this.system.cr.total=this.system.cr.base;const e=ffd20.utils.CR.getXP(this.system.cr.total);foundry.utils.setProperty(this.system,"xp.value",e)}_prepareTypeChanges(e){e.push(new ffd20.components.ItemChange({_id:"_bab",formula:"@attributes.bab.total",operator:"add",target:"~attackCore",type:"untypedPerm",flavor:game.i18n.localize("FFD20.BAB")}))}getRollData(e={refresh:!1,cache:!0}){const t=!e.refresh&&this._rollData&&e.cache,s={...t?this._rollData:foundry.utils.deepClone(this.system)};if(t)for(const e of ffd20.config.temporaryRollDataFields.actor)delete s[e];return game.combats?.viewed&&(s.combat={round:game.combat.round||0}),t||(s.size=4,s.range=ffd20.documents.actor.ActorPF.getReach(),s.dFlags=this.itemFlags?.dictionary??{},Hooks.events.pf1GetRollData?.length>0&&Hooks.callAll("pf1GetRollData",this,s),e.cache&&(this._rollData=s)),s}getPerceptionModifier(){const e=this.system.trigger.type,t=this.system.trigger.vision;return"visual"!==e?ffd20.config.trapPerceptionModifiers[e]??0:ffd20.config.trapPerceptionModifiers.vision[t]??0}async rollPerception(e={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const t=this.getRollData(),s=e.token??this.token,a={...e,parts:[`(${this.getPerceptionModifier()})[${game.i18n.localize("FFD20.SkillPer")}]`],rollData:t,flavor:game.i18n.format("FFD20.Check",{type:ffd20.config.skills.per}),compendium:{entry:ffd20.config.skillCompendiumEntries.per,type:"JournalEntry"},subject:{skill:"per"},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:s}),messageData:{system:{subject:{skill:"per"},config:{rank:0}}}};await ffd20.dice.d20Roll(a)}getCR(){return this.system.cr?.total??0}getMovement(e){return{speed:0,run:!1,step:!1}}}class ActorVehiclePF extends ActorPF{prepareBaseData(){this._resetInherentTotals(),this.system.traits??={};const e=this.system.traits.size||"med",t=Object.keys(ffd20.config.sizeChart).indexOf(e);this.system.traits.size={base:e,value:t},this.sourceInfo={},this.changeFlags={},this.system.resources??={};const s=ffd20.config.sizeMods[this.system.traits.size.base],a=Object.values(ffd20.config.sizeSpecialMods)[this.system.traits.size.value]??0;this.system.attributes.init.total=this.system.attributes.init.value;for(const[e,t]of Object.entries(this.system.attributes.ac))t.base=10,this.system.attributes.ac[e].total=t.bonus+t.base+s,getSourceInfo(this.sourceInfo,`system.attributes.ac.${e}.total`).positive.push({name:game.i18n.localize("FFD20.Size"),value:s,modifier:"size"},{name:game.i18n.localize("FFD20.Modifications"),value:t.bonus}),"stopped"===e&&(this.system.attributes.ac[e].total-=7,getSourceInfo(this.sourceInfo,"system.attributes.ac.stopped.total").positive.push({name:game.i18n.localize("FFD20.AbilityDex"),value:-5},{name:game.i18n.localize("FFD20.Vehicles.ACStoppedMotion"),value:-2}));this.system.attributes.cmd={base:10},this.system.attributes.cmd.total=this.system.attributes.cmd.base+a,getSourceInfo(this.sourceInfo,"system.attributes.cmd.total").positive.push({name:game.i18n.localize("FFD20.Size"),value:a,modifier:"size"}),this.system.attributes.cmd.stoppedTotal=this.system.attributes.cmd.total-7,getSourceInfo(this.sourceInfo,"system.attributes.cmd.stoppedTotal").positive.push({name:game.i18n.localize("FFD20.Size"),value:a,modifier:"size"},{name:game.i18n.localize("FFD20.AbilityDex"),value:-5},{name:game.i18n.localize("FFD20.Vehicles.ACStoppedMotion"),value:-2}),this.system.attributes.savingThrows.save.total=this.system.attributes.savingThrows.save.base,getSourceInfo(this.sourceInfo,"system.attributes.savingThrows.save.total").positive.push({name:game.i18n.localize("FFD20.Base"),value:this.system.attributes.savingThrows.save.base}),this.system.attributes.hardness.base=ffd20.config.vehicleMaterials[this.system.material.base]?.hardness??0,this.system.attributes.hardness.total=(this.system.attributes.hardness.base+this.system.attributes.hardness.bonus)*(this.system.material.magicallyHardened?2:1),getSourceInfo(this.sourceInfo,"system.attributes.hardness.total").positive.push({name:game.i18n.localize("FFD20.Materials.Normal"),value:this.system.attributes.hardness.base},{name:game.i18n.localize("FFD20.Modifications"),value:this.system.attributes.hardness.bonus}),this.system.material.magicallyHardened&&getSourceInfo(this.sourceInfo,"system.attributes.hardness.total").positive.push({name:game.i18n.localize("FFD20.Vehicles.MagicallyHardened"),value:"x2"}),this.system.attributes.hp.base=(ffd20.config.vehicleMaterials[this.system.material.base]?.hp??0)*this.system.squares,this.system.attributes.hp.max=(this.system.attributes.hp.base+this.system.attributes.hp.bonus)*(this.system.material.magicallyHardened?2:1),getSourceInfo(this.sourceInfo,"system.attributes.hp.max").positive.push({name:game.i18n.localize("FFD20.Materials.Normal"),value:this.system.attributes.hp.base},{name:game.i18n.localize("FFD20.Modifications"),value:this.system.attributes.hp.bonus}),this.system.squares>0&&this.system.material.magicallyHardened&&getSourceInfo(this.sourceInfo,"system.attributes.hp.max").positive.push({name:game.i18n.localize("FFD20.Vehicles.MagicallyHardened"),value:"x2"}),this.system.attributes.attack??={general:0,shared:0},this.system.attributes.woundThresholds??={},this.system.skills??={},this.system.attributes.speed??={},this.system.attributes.cmb??={},this._prepareDriverData()}getSourceDetails(e){const t=super.getSourceDetails(e),s=game.i18n.localize("FFD20.Base");["system.attributes.ac.normal.total","system.attributes.ac.touch.total","system.attributes.ac.stopped.total","system.attributes.cmd.total","system.attributes.cmd.stoppedTotal"].includes(e)&&t.push({name:s,value:10})}getCarryCapacity(){return{light:0,medium:0,heavy:0}}_getInherentTotalsKeys(){return{"details.carryCapacity.bonus.total":0,"details.carryCapacity.multiplier.total":0}}_getBaseValueFillKeys(){return[]}prepareDerivedData(){for(const e of this.items)e._prepareDependentData(!1),this.updateItemResources(e);applyChanges(this),this.prepareHealth(),this._computeEncumbrance(),this.prepareCMB(),this._prepareOverlandSpeeds(),this.prepareItemLinks(),this._rollData=null;for(const e of this.items)e._prepareDependentData(!0),this.updateItemResources(e,{warnOnDuplicate:!1})}_prepareDriverData(){const e=this.system.driver.uuid?fromUuidSync(this.system.driver.uuid):null;if(!e)return;let t=e.system.abilities.wis.mod;try{t=e.getSkillInfo(this.system.driver.skill).mod}catch{}this.system.driver.bonus=t}prepareCMB(){const e=this.system.traits.size.value,t=Object.values(ffd20.config.sizeSpecialMods)[e]??0,s=this.system.driver.bonus??0;this.system.attributes.cmb.total=t+s}prepareHealth(){const e=this.system.attributes.hp;Number.isFinite(e?.offset)||(e.offset=0),e.value=e.max+e.offset}refreshDerivedData(){}_prepareTypeChanges(e){e.push(new ffd20.components.ItemChange({_id:"_bab",formula:"@attributes.bab.total",operator:"add",target:"~attackCore",type:"untypedPerm",flavor:game.i18n.localize("FFD20.BAB")})),this.system.driver.uuid&&e.push(new ffd20.components.ItemChange({formula:"@driver.bonus",operator:"add",target:"cmb",type:"untyped",flavor:game.i18n.localize("FFD20.Vehicles.DriverSkill")}),new ffd20.components.ItemChange({formula:"@driver.bonus",operator:"add",target:"ac",type:"untyped",flavor:game.i18n.localize("FFD20.Vehicles.DriverSkill")}),new ffd20.components.ItemChange({formula:"@driver.bonus",operator:"add",target:"cmd",type:"untyped",flavor:game.i18n.localize("FFD20.Vehicles.DriverSkill")}),new ffd20.components.ItemChange({formula:"floor(@driver.bonus / 2)",operator:"add",target:"vehicleSave",type:"untyped",flavor:game.i18n.localize("FFD20.Vehicles.DriverSkill")}))}getRollData(e={refresh:!1,cache:!0}){const t=!e.refresh&&this._rollData&&e.cache,s={...t?this._rollData:foundry.utils.deepClone(this.system)};if(t)for(const e of ffd20.config.temporaryRollDataFields.actor)delete s[e];if(game.combats?.viewed&&(s.combat={round:game.combat.round||0}),t)return s;const a=Object.values(ffd20.config.sizeChart);return s.size=Math.clamp(s.traits.size.value,0,a.length-1),s.dFlags=this.itemFlags?.dictionary??{},s.range={melee:5,reach:5},s.attributes.woundThresholds={level:0},s.attributes.acp={attackPenalty:0},Hooks.events.pf1GetRollData?.length>0&&Hooks.callAll("pf1GetRollData",this,s),e.cache&&(this._rollData=s),s}getTotalCurrency({inLowestDenomination:e=!0}={}){const t=this.getCurrency("currency",{inLowestDenomination:!0});return e?t:t/100}_prepareOverlandSpeeds(){this.system.details.currentSpeedOverland=ffd20.utils.overlandSpeed(this.system.details.currentSpeed),this.system.details.maxSpeedOverland=ffd20.utils.overlandSpeed(this.system.details.maxSpeed)}async rollSavingThrow(e,t={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const s=this.getRollData(),a=await this.getContextNotesParsed("savingThrow."+e,{rollData:s}),i=[],n=this.system.attributes.savingThrows.save.base;n&&i.push(`${n}[${game.i18n.localize("FFD20.Base")}]`);let o=[];o=getHighestChanges(this.changes.filter((t=>["vehicle",e].includes(t.target))).filter((e=>"set"!==e.operator)),{ignoreTarget:!0}).reduce(((e,t)=>(t.value&&e.push({value:t.value,source:t.flavor}),e)),[]);for(const e of o)i.push(`${e.value}[${e.source}]`);const r=[{header:game.i18n.localize("FFD20.ConRes"),value:[{text:ffd20.registry.conditions.get("bleed").name.toLowerCase()},{text:game.i18n.localize("FFD20.AbilityDamage").toLowerCase()},{text:game.i18n.localize("FFD20.AbilityDrain").toLowerCase()}]}];a.length>0&&r.push({header:game.i18n.localize("FFD20.Notes"),value:a});const l=ffd20.config.savingThrows[e],c=t.token??this.token,d={...t,parts:i,rollData:s,flavor:game.i18n.format("FFD20.SavingThrowRoll",{save:l}),subject:{save:e},chatTemplateData:{properties:r},speaker:ChatMessage.implementation.getSpeaker({actor:this,token:c,alias:c?.name})};if(!1===Hooks.call("pf1PreActorRollSave",this,d,e))return;const u=await ffd20.dice.d20Roll(d);return Hooks.callAll("pf1ActorRollSave",this,u,e),u}async displayDefenseCard({rollMode:e=null,token:t}={}){if(!this.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:this.name}));const s=this.getRollData(),a=await this.getContextNotesParsed("ac",{rollData:s}),i=await this.getContextNotesParsed("cmd",{rollData:s}),n=await this.getContextNotesParsed("allSavingThrows",{rollData:s}),o={bleed:ffd20.registry.conditions.get("bleed").name,abilityDamage:game.i18n.localize("FFD20.AbilityDamage"),abilityDrain:game.i18n.localize("FFD20.AbilityDrain")};t??=this.token;const r=this.system,l={actor:this,name:t?.name??this.name,tokenUuid:t?.uuid??null,type:this.system.traits.type,ac:{normal:r.attributes.ac.normal.total,touch:r.attributes.ac.touch.total,stopped:r.attributes.ac.stopped.total,notes:a},cmd:{normal:r.attributes.cmd.total,stopped:r.attributes.cmd.stoppedTotal,notes:i},misc:{hardness:r.traits.hardness,conditions:o},saves:{save:s.attributes?.savingThrows?.save?.total,notes:n}};e||=game.settings.get("core","rollMode");const c={content:await renderTemplate("systems/ffd20/templates/chat/defenses-vehicle.hbs",l),speaker:ChatMessage.implementation.getSpeaker({actor:this,token:t,alias:t?.name}),rollMode:e,system:{subject:{info:"defenses"}},flags:{core:{canPopout:!0}}};return ChatMessage.implementation.applyRollMode(c,e),ChatMessage.implementation.create(c)}getMovement(e){return{speed:this.system.details?.currentSpeed??0,run:!1,step:!1}}}const Ue=Object.freeze(Object.defineProperty({__proto__:null,BaseCharacterPF},Symbol.toStringTag,{value:"Module"})),qe=Object.freeze(Object.defineProperty({__proto__:null,ActorBasePF,ActorCharacterPF,ActorHauntPF,ActorNPCPF,ActorPF,ActorTrapPF,ActorVehiclePF,abstract:Ue,changes:Be,spellbook:He},Symbol.toStringTag,{value:"Module"}));class ItemPF extends ItemBasePF{_configure(e={}){super._configure(e),this.links={},this.hasActions&&(this.actions=new Collection),this.scriptCalls=new Collection}static system=Object.freeze({isPhysical:!1,hasIdentifier:!0,hasChanges:!0,hasActions:!0,subtypeName:!1});async _preCreate(e,t,s){await super._preCreate(e,t,s);if(this.actor&&e?.system?.changes?.length>0){const t=e.system.changes;let s=new Set;for(;s.size<t.length;)s.add(foundry.utils.randomID(8));s=Array.from(s);for(const e of t)e._id=s.pop();this.updateSource({"system.changes":t})}}static _adjustNewItem(e,t,s=!1){}_onCreate(e,t,s){super._onCreate(e,t,s),s===game.user.id&&(this.isActive&&["buff","feat"].includes(this.type)&&this.executeScriptCalls("toggle",{state:!0}),this.actor&&this.adjustsSize&&this.actor._updateTokenSize())}getFlag(e,t){return"ffd20"===e&&"defaultAmmo"===t?(foundry.utils.logCompatibilityWarning("item.getFlag('ffd20', 'defaultAmmo') is deprecated, please use item.system.ammo?.default instead",{since:"PF1 v11",until:"PF1 v12"}),this.system.ammo?.default||this.flags?.ffd20?.defaultAmmo):super.getFlag(e,t)}async _preUpdate(e,t,s){if(t.adjustedSize=this.adjustsSize,t.adjustedVision=this.adjustsVision,await super._preUpdate(e,t,s),e.flags?.ffd20?.defaultAmmo&&(foundry.utils.logCompatibilityWarning("item.flags.ffd20.defaultAmmo is no longer used, please use item.system.ammo.default instead",{since:"PF1 v11",until:"PF1 v12"}),foundry.utils.setProperty(e.system,"ammo.default",e.flags?.ffd20?.defaultAmmo),delete e.flags.ffd20.defaultAmmo),!e.system)return;if(!1===t.diff||!1===t.recursive)return;this._preUpdateNumericValueGuard(e.system),e.system.tag&&(e.system.tag=ffd20.utils.createTag(e.system.tag,{allowUpperCase:!0,camelCase:!1}));const a=["system.attackNotes","system.effectNotes","system.contextNotes","system.scriptCalls","system.actions","system.changes"],i=this.toObject();for(const t of a)ffd20.utils.internal.keepUpdateArray(i,e,t);await this._chargePreUpdate(e,t)}_preUpdateNumericValueGuard(e){}async _chargePreUpdate(e,t){const s=e.system.uses;if(s?.value&&this.isCharged){const a=this.maxCharges;s.value>a&&(s.value=a);const i=this.links.charges;i&&(await i.update({"system.uses.value":s.value},t),delete e.system.uses.value)}}_onDelete(e,t){super._onDelete(e,t);if(!this.actor)return;const s=this.getLinkedItemsSync("charges");if(s.length)for(const e of s)e.links?.charges&&(delete e.links.charges,e.reset());this.adjustsSize&&this.actor?._updateTokenSize()}get memoryVariables(){return["quantity","level"]}static get isPhysical(){return this.system.isPhysical}get isPhysical(){return this.constructor.isPhysical}static get hasChanges(){return this.system.hasChanges}get hasChanges(){return this.constructor.hasChanges}static get hasActions(){return this.system.hasChanges}get hasActions(){return this.constructor.hasActions}get subType(){return this.system.subType??null}get baseMaterial(){return this.system.armor?.material?.base?.value||this.system.material?.base?.value||null}get normalMaterial(){return this.system.armor?.material?.normal?.value||this.system.material?.normal?.value||this.baseMaterial||null}get addonMaterial(){return(this.system.armor?.material?.addon||this.system.material?.addon||[]).filter((e=>!!e))}get alignments(){return this.system.alignments??null}get firstAction(){return foundry.utils.logCompatibilityWarning("ItemPF.firstAction is deprecated in favor of ItemPF.defaultAction",{since:"PF1 v10",until:"PF1 v12"}),this.defaultAction}get defaultAction(){return this.actions?.get(this.system.actions?.[0]?._id)}get hasAttack(){return this.actions?.some((e=>e.hasAttack))??!1}get hasDamage(){return this.actions?.some((e=>e.hasDamage))??!1}getProficiency(e=!0){throw Error(`Item type ${this.type} has no concept of proficiency`)}get isProficient(){return!0}get hasAction(){return this.system.actions?.length>0}get isSingleUse(){return"single"===this.system.uses?.per}get isCharged(){return this.isSingleUse||!!this.system.uses?.per}get hasFiniteCharges(){return this.isSingleUse||["charges"].includes(this.system.uses?.per)}get charges(){const e=this.links?.charges;return e?e.charges:this.system.uses?.per?this.isSingleUse?this.system.quantity||0:this.system.uses?.value??0:1/0}get autoDeductCharges(){return 0!=this.getDefaultChargeCost()}getDefaultChargeCost({rollData:e}={}){e??=this.getRollData();const t=this.getDefaultChargeFormula();return RollPF.safeRollSync(t,e,void 0,void 0,{maximize:!0}).total}getDefaultChargeFormula(){return this.system.uses?.autoDeductChargesCost||"1"}get maxCharges(){const e=this.links?.charges;return e?e.maxCharges:this.system.uses?.per?this.isSingleUse?this.system.quantity||0:this.system.uses?.max??1/0:1/0}async recharge({value:e,period:t="day",exact:s=!1,maximize:a=!1,commit:i=!0,rollData:n,context:o}={}){const r=await this._rechargeUses({value:e,period:t,exact:s,maximize:a,rollData:n})??{system:{}},l=this._rechargeActions({period:t,exact:s,rollData:n});if(l&&(r.system.actions=l.system.actions),!foundry.utils.isEmpty(r.system))return i?this.update(r,o):r}async _rechargeUses({value:e,period:t,exact:s,maximize:a,rollData:i}={}){const n=this.system.uses??{};if(!n.per)return;if(this.links.charges)return;if(["charges","single"].includes(n.per)){if("any"!==t)return}else if(ffd20.config.limitedUsePeriodOrder.includes(t)&&!s){const e=ffd20.config.limitedUsePeriodOrder.indexOf(t);if(!ffd20.config.limitedUsePeriodOrder.slice(0,e+1).includes(n.per))return}else if(n.per!==t&&"any"!==t)return;if(!(void 0!==e)){const t=n.rechargeFormula||"";if(t){i??=this.getRollData();if(e=(await RollPF.safeRoll(t,i,"recharge",void 0,{allowInteractive:!1})).total,!Number.isFinite(e))return void console.warn(`Formula "${t}" produced non-numeric value "${e}"`)}else n.max>0&&(a=!0)}return a&&(e=n.max),Number.isFinite(e)&&(e=Math.clamp(e,0,n.max))!==n.value?{system:{uses:{value:e}}}:void 0}_rechargeActions({period:e,exact:t,rollData:s}={}){if(!(this.system.actions?.length>0))return;const a=this.toObject().system.actions;let i=!1;for(const s of a){const a=this.actions.get(s._id),n=a.uses?.self?.max??0;if(!(n>0))continue;const o=s.uses?.self,r=o?.per;if(r&&!["charges"].includes(o.per)){if(ffd20.config.limitedUsePeriodOrder.includes(e)&&!t){const t=ffd20.config.limitedUsePeriodOrder.indexOf(e);if(!ffd20.config.limitedUsePeriodOrder.slice(0,t+1).includes(r))continue}o.value<n&&(o.value=n,i=!0)}}return i?{system:{actions:a}}:void 0}get auraStrength(){const e=this.system.cl||0;return e<1?0:e<6?1:e<12?2:e<21?3:4}get uuid(){return this.parentItem?this.parentItem.uuid+".Item."+this.id:super.uuid}get fullDescription(){return this.system.description.value}async getDescription({chatcard:e=!1,data:t={},rollData:s,header:a=!0,body:i=!0,isolated:n=!1,identified:o=!1}={}){return i?o?this._source.system.description?.value||"":this.system.description?.value||"":""}async getDescriptionData({rollData:e,isolated:t=!1}={}){const s={},a=this.defaultAction;e??=a?.getRollData()??this.getRollData(),s.rollData=e,s.labels=a?.getLabels({rollData:e,isolated:t})??this.getLabels({rollData:e,isolated:t});const i=!!game.user.isGM||(this.system.identified??!0);if(!a)return s;if(a?.hasAttack){if(s.action={},a.hasDamage){const t=a.damage?.parts?.[0]?.formula,n=ffd20.config.sizeChart[this.system.size||"med"]||"M",o=Object.values(ffd20.config.sizeChart).indexOf(n);s.action.damage=ffd20.utils.formula.simplify(t||"0",{...e,size:o});const r=a?.ability?.critMult||1;if(r>1){const e=a.critRange||20;s.action.critical=20===e?"×"+r:`${e}-20/×${r}`}s.action.size=Object.values(ffd20.config.actorSizes)[o]||ffd20.config.actorSizes.med;const l=i?a.damage?.parts?.map((e=>e.parsed.all.map((e=>e.name||e)))).flat():a.damage?.parts?.[0].parsed.all.map((e=>e.name||e))??[];s.action.type=l.join(", ")}if(["melee","reach"].includes(a.range?.units)?s.action.range="–":["ft"].includes(a.range?.units)&&(s.action.range=a.range,s.action.unit="metric"===ffd20.utils.getDistanceSystem()?ffd20.config.measureUnitsShort.m:ffd20.config.measureUnitsShort.ft),a.ammo.type&&a.ammo.cost){const e=a.misfire,t=this.system.ammo?.capacity??0;s.action.ammo={misfire:e>1?"1–"+e:e>0?e:null,capacity:t>0?t:"–",enabled:e>0||t>0}}}return s}get effect(){return null}get actionTypes(){const e=this.actions?.map((e=>e.actionType)).filter(Boolean)??[];return[...new Set(e)]}async addCharges(e){const t=this.links.charges;return t?t.addCharges(e):this.isSingleUse&&this.isPhysical?this.update({"system.quantity":(this.system.quantity||0)+e}):this.update({"system.uses.value":(this.system.uses?.value||0)+e})}get defaultAmmo(){return this.actor?.items.get(this.system.ammo?.default)}get showUnidentifiedData(){return!1}prepareDerivedData(){super.prepareDerivedData(),this.prepareLinks(),this.hasChanges&&this._prepareChanges(),this._prepareScriptCalls(),this.actor&&!1===this.actor._initialized||this._prepareDependentData(!0)}_prepareDependentData(e=!1){this._updateMaxUses(),e&&this._prepareActions()}prepareBaseData(){super.prepareBaseData(),this._prepareIdentifier(),this._prepareTraits(),this.inContainer&&this.adjustContained(),this.system.contextNotes?.length&&(this.system.contextNotes=this.system.contextNotes.map((e=>new ffd20.components.ContextNote(e,{parent:this}))))}_prepareIdentifier(){(this.constructor.system?.hasIdentifier??!1)&&(this.system.tag||(this.system.tag=ffd20.utils.createTag(this.name)))}_prepareTraits(){const e={descriptors:ffd20.config.spellDescriptors,weaponGroups:ffd20.config.weaponGroups,multischool:ffd20.config.spellMultischools,subschool:ffd20.config.spellSubschools,languages:ffd20.config.languages,armorProf:ffd20.config.armorProficiencies,weaponProf:ffd20.config.weaponProficiencies,creatureTypes:ffd20.config.creatureTypes,creatureSubtypes:ffd20.config.creatureSubtypes};for(const[t,s]of Object.entries(e)){if(!this.system[t])continue;if(!Array.isArray(this.system[t]))continue;const e={base:this.system[t],custom:new Set,standard:new Set,get total(){return this.standard.union(this.custom)},get names(){return[...this.standard.map((e=>s[e]||e)),...this.custom]}};if(Object.defineProperty(e,"value",{get(){return foundry.utils.logCompatibilityWarning(`item.system.${t}.value is deprecated.`,{since:"PF1 v11",until:"PF1 v12"}),this.standard}}),Array.isArray(e.base))for(const t of e.base)s[t]?e.standard.add(t):e.custom.add(t);this.system[t]=e}}adjustContained(){}getLabels({actionId:e,rollData:t,isolated:s}={}){const a=e?this.actions.get(e):this.defaultAction,i=a?.getLabels({rollData:t,isolated:s})??{};return i.activation||=ffd20.config.abilityActivationTypes.passive,a||(i.noAction=!0),a&&"passive"!==a.activation.type||(i.isPassive=!0),i.hasEffect=!!(i.range||i.area||i.target||i.effect||i.duration||i.savingThrow),i}prepareLinks(){if(this.links)for(const[e,t]of Object.entries(this.links))if("charges"===e){if(!t.getLinkedItemsSync("charges").some((e=>e.id===this.id))){delete this.links.charges;continue}this._updateInheritedCharges(t)}}_prepareChanges(){const e=this.changes,t=new Collection;for(const s of this.system.changes??[]){let a;e&&e.has(s._id)?(a=e.get(s._id),a.replaceSource(s)):a=new ffd20.components.ItemChange(s,{parent:this,strict:!1}),t.set(s._id||a.data._id,a)}this.changes=t}_prepareActions(){const e=this.system.actions??[],t=this.actions,s=new Collection;for(const a of e){let e=null;t&&t.has(a._id)?(e=t.get(a._id),e.replaceSource(a)):e=new ffd20.components.ItemAction(a,{parent:this,strict:!1}),s.set(e.id,e)}this.actions=s;for(const e of t??[])if(this.actions.get(e.id)!==e)for(const t of Object.values(e.apps))t.close({ffd20:{action:"delete"},submit:!1,force:!0})}_prepareScriptCalls(){if(!this.scriptCalls)return;const e=new Collection(this.scriptCalls.entries());this.scriptCalls.clear();const t=this.system.scriptCalls;if(t?.length)for(const s of t){const t=s._id;let a=null;if(e&&e.has(t)){a=e.get(t);const i={...s};a.replaceSource(i)}else a=new ffd20.components.ItemScriptCall(s,{parent:this});this.scriptCalls.set(t,a)}}async executeScriptCalls(e,t={},s={}){const a=this.scriptCalls?.filter((t=>t.category===e))??[];s.category=e;try{for(const e of a)await e.execute(s,t)}catch(e){throw console.error("Script call execution failed\n",e,this),Error("Error occurred while executing a script call",{cause:e})}return s}async update(e,t={}){if(!1===t.recursive){if(!this.inContainer)return super.update(e,t);this.rootItem.update(this._transformContainerUpdateData(e,{recursive:!0}),t)}e=foundry.utils.expandObject(e),this.memorizeVariables();const s=this.parentItem;return s?(t.ffd20??={},t.ffd20.containerItem=this.id,await s.update(this._transformContainerUpdateData(e),t),this):super.update(e,t)}_transformContainerUpdateData(e,{recursive:t=!1}={}){const s=this.parentItem;if(s){const a={system:{items:{[this.id]:e}}};return t?s._transformContainerUpdateData(a,{recursive:t}):a}return e}memorizeVariables(){if(null!=this._memoryVariables)return;const e=this.memoryVariables;this._memoryVariables={};for(const t of e)foundry.utils.hasProperty(this.system,t)&&(this._memoryVariables[t]=foundry.utils.deepClone(foundry.utils.getProperty(this.system,t)));for(const e of this.items??[])e.memorizeVariables()}get adjustsSize(){return this.changes?.some((e=>"size"===e.target))??!1}static _hasSizeUpdate(e){return e.system?.changes?.some((e=>"size"===e.target))||!1}get adjustsVision(){const e=this.system.changeFlags;return!(!e||!(e?.lowLightVision||e?.seeInvisibility||e?.seeInDarkness))||(this.system.changes?.some((e=>"senses"===ffd20.config.buffTargets[e.target]?.category))??!1)}static _hasVisionUpdate(e){return void 0!==e.system?.changeFlags?.lowLightVision||void 0!==e.system?.changeFlags?.seeInvisibility||void 0!==e.system?.changeFlags?.seeInDarkness||(e.system?.changes?.some((e=>"senses"===ffd20.config.buffTargets[e.target]?.category))||!1)}_onUpdate(e,t,s){if(super._onUpdate(e,t,s),s!==game.user.id)return;let a=null;if("buff"===this.type?a=e.system?.active:"feat"===this.type&&void 0!==e.system?.disabled&&(a=!0!==e.system.disabled),null!=a){const e=this.effect?.duration.startTime??game.time.worldTime;this.executeScriptCalls("toggle",{state:a,startTime:e})}const i=this._activeStateChange(e),n=this.adjustsSize;(void 0!==i&&n||this.constructor._hasSizeUpdate(e)||t.adjustedSize&&!n)&&this.actor?._updateTokenSize(),this._memoryVariables&&this._onMemorizedUpdate(e,t)}_activeStateChange(e){return this.system._activeStateChange?.(e.system)??!0}_onMemorizedUpdate(e,t){const s=this._memoryVariables?.level;if(void 0!==s&&void 0!==e.system?.level){const e={previous:parseInt(s),new:parseInt(this.system.level)};for(const[t,s]of Object.entries(e))Number.isNaN(s)&&(e[t]=null);void 0!==e.new&&e.new!==e.previous&&this.executeScriptCalls("changeLevel",{level:e})}if(void 0!==e?.system?.active&&this.adjustsVision||this.constructor._hasVisionUpdate(e)||t.adjustedVision&&!this.adjustsVision){const e=!0,t=this.system.changeFlags.lowLightVision||!1;this.actor.updateVision(e,t)}this._memoryVariables=null}_updateMaxUses(){const e=this.system.uses?.per;if(!e)return;if(this.links?.charges)return;const t=this.system.uses.maxFormula;if("single"===e)this.system.uses.max=1;else if(t)try{if(Roll.parse(t).every((e=>e.isDeterministic))){const e=this.getRollData(),s=RollPF.safeRollSync(t,e,{formula:t,item:this},{suppressError:!this.isOwner});this.system.uses.max=s.total;const a=this.getLinkedItemsSync("charges");for(const e of a)e._updateInheritedCharges(this)}else{const e=game.i18n.format("FFD20.Warning.NoDiceAllowedInFormula",{formula:t,context:game.i18n.localize("FFD20.ChargePlural")});ui.notifications.warn(e,{console:!1}),console.warn(e,this)}}catch(e){console.error("Invalid max uses formula:",{formula:t,item:this},e)}else this.system.uses.max=null}_updateInheritedCharges(e){const t=e.system.uses;if(!t)return;const s=this.system.uses;s.per=t.per,s.max=t.max,s.maxFormula=t.maxFormula,s.value=t.value,s.rechargeFormula=t.rechargeFormula}async getRawEffectData({rollData:e}={}){return{name:this.name,img:this.img,origin:this.getRelativeUUID(this.actor),duration:{startTime:game.time.worldTime},disabled:!this.isActive}}getScriptCalls(e){return this.scriptCalls?.filter((t=>t.category===e))??[]}async displayCard(e={},{token:t}={}){const s=this.actor;if(s&&!s.isOwner)return void ui.notifications.warn(game.i18n.format("FFD20.Error.NoActorPermissionAlt",{name:s.name}));t??=s?.token;const a=this.defaultAction?.getRollData()??this.getRollData(),i=await this.getChatData({rollData:a}),n=!!(a.item?.identified??!0),o={actor:this.actor,token:t,tokenId:t?.uuid,item:this.toObject(),labels:this.getLabels({rollData:a}),hasAttack:this.hasAttack,hasMultiAttack:this.hasMultiAttack,hasAction:this.hasAction,isVersatile:this.isVersatile,isSpell:"spell"===this.type,name:this.getName(!0),description:n?i.identifiedDescription:i.unidentifiedDescription,rollData:a,properties:[]},r={rollData:a,secrets:this.isOwner,relativeTo:this.actor},l={};if(l.item={identified:n,id:this.id},!1===n&&(l.item.name=this._source.name,l.item.description=await TextEditor.enrichHTML(i.identifiedDescription,r)),i.properties&&o.properties.push({header:game.i18n.localize("FFD20.InfoShort"),value:i.properties,css:"info-properties"}),game.combat){l.combat=game.combat.id;const e=[];e.push(game.i18n.format("FFD20.CombatInfo_Round",{round:game.combat.round})),e.length>0&&o.properties.push({header:game.i18n.localize("FFD20.CombatInfo_Header"),value:e,css:"combat-properties"})}const c=foundry.utils.mergeObject({type:"item",system:l,style:CONST.CHAT_MESSAGE_STYLES.OTHER,speaker:ChatMessage.implementation.getSpeaker({actor:s,token:t}),flags:{core:{canPopout:!0}}},e),d="systems/ffd20/templates/chat/items/item-card.hbs";if(!1===Hooks.call("pf1DisplayCard",this,{template:d,templateData:o,chatData:c}))return;const u=await renderTemplate(d,o);return c.content=await TextEditor.enrichHTML(u,r),c.rollMode??=game.settings.get("core","rollMode"),ChatMessage.implementation.applyRollMode(c,c.rollMode),ChatMessage.implementation.create(c)}async getChatData({chatcard:e=!1,actionId:t=null,rollData:s,extended:a=!1,interactive:i=!1}={}){const n={},o=t?this.actions.get(t):this.defaultAction;s??=o?o.getRollData():this.getRollData();const r=s.action??o??{},l=this.getLabels({actionId:t,rollData:s});n.identifiedDescription=await this.getDescription({chatcard:e,rollData:s,isolated:a,identified:!0}),n.unidentifiedDescription=this.system.description.unidentified,n.isIdentified=this.system.identified??!0,n.showIdentified=!this.showUnidentifiedData,n.description=n.showIdentified?n.identifiedDescription:n.unidentifiedDescription,n.actionDescription=r.description;const c=[];if(!0!==e&&(l.subType&&!0!==l.childTypeDistinct&&c.push(l.subType),l.childType&&c.push(l.childType)),!this.showUnidentifiedData){if(l.activation&&c.push(l.activation),null!=r.range){const e=o.getRange({type:"max",rollData:s}),t="mi"===r.range.units?"mi":"ft",a=ffd20.utils.convertDistance(e,t),i=e>0?game.i18n.format("FFD20.MaxRangeNote",{distance:e,units:a[1]}):null;i&&c.push(i)}if(l.save){c.push(l.save);const e=r.save?.description;e&&c.push(e)}if(null!=r.duration){let e;if("spec"===r.duration.units)e=r.duration.value;else if(!["inst","perm"].includes(r.duration.units)){e=[(await RollPF.safeRoll(r.duration.value||"0",s,void 0,void 0,{allowInteractive:i})).total,ffd20.config.timePeriods[r.duration.units]].filterJoin(" ")}e&&c.push(e)}const e=r.enh?.value??s.item.enh??0;e>0&&c.push(game.i18n.format("FFD20.EnhancementInline",{bonus:e}))}this.getTypeChatData(n,l,c,s,{actionId:t,chatcard:e});const d=r.save?.harmless;return d&&c.push(game.i18n.localize("FFD20.Harmless")),this.isBroken&&c.push(game.i18n.localize("FFD20.Broken")),n.properties=c,n}getTypeChatData(e,t,s,a,{actionId:i=null,chatcard:n=!1}={}){const o=this.system.uses?.per;if(o){const e="single"===o;if(e&&this.isPhysical)s.push(`${game.i18n.localize("FFD20.Quantity")}: ${this.system.quantity}`);else if(this.isCharged){const t=this.charges;if(Number.isFinite(t)){const a=this.maxCharges;Number.isFinite(a)&&!e?s.push(`${game.i18n.localize("FFD20.ChargePlural")}: ${t}/${a}`):s.push(`${game.i18n.localize("FFD20.ChargePlural")}: ${t}`)}}}}async use({actionId:e="",cost:t=null,ev:s=null,skipDialog:a=getSkipActionPrompt(),chatMessage:i=!0,dice:n=ffd20.dice.D20RollPF.standardRoll,rollMode:o,token:r,options:l={}}={}){if(o||=game.settings.get("core","rollMode"),r||=this.actor?.token??this.actor?.getActiveTokens(!0,!0)[0],s?.originalEvent&&(s=s.originalEvent),null!==t&&!Number.isSafeInteger(t))throw Error("Invalid value for cost override: "+t);l.held&&("twohanded"===l.held?l.held="2h":"offhand"===l.held&&(l.held="oh"));const c={event:s,action:null,item:null,token:null,rollData:{},skipDialog:a,chatMessage:i,dice:n,cost:t,fullAttack:!0,useOptions:l,attackBonus:[],damageBonus:[],attacks:[],chatAttacks:[],rollMode:o,useMeasureTemplate:!1,conditionals:null,conditionalPartsCommon:{},casterLevelCheck:!1,concentrationCheck:!1,scriptData:{}};if(Object.defineProperties(c,{item:{value:this,writable:!1,enumerable:!0},token:{value:r,writable:!1,enumerable:!0}}),!this.hasAction){if("attackData"in c||Object.defineProperty(c,"attackData",{get:()=>(foundry.utils.logCompatibilityWarning("shared.attackData is deprecated in favor of directly accessing shared",{since:"PF1 v10",until:"PF1 v12"}),c)}),await this.executeScriptCalls("use",{},c),o=c.rollMode||o,c.reject)return c;if(this.isCharged){const e=t??this.getDefaultChargeCost();if(this.charges<e)return this.isSingleUse?void ui.notifications.warn(game.i18n.localize("FFD20.Error.NoQuantity")):void ui.notifications.warn(game.i18n.format("FFD20.Error.InsufficientCharges",{name:this.name}));await this.addCharges(-e)}return!0!==c.hideChat&&i&&(c.descriptionOnly=!0,Object.defineProperty(c,"chatCard",{get(){return foundry.utils.logCompatibilityWarning("shared.chatCard is deprecated in favor of shared.message",{since:"PF1 v11",until:"PF1 v12"}),this.message}}),c.message=await this.displayCard({rollMode:o})),await this.executeScriptCalls("postUse",{},c),c}let d;if(e){if(d=this.actions.get(e),!d)throw Error(`Could not find action by ID "${e}"`)}else if(this.system.actions.length>1&&!0!==a){const e=await ffd20.applications.ActionSelector.open({document:this});d=this.actions.get(e)}else d=this.defaultAction;return d?(Object.defineProperties(c,{action:{value:d,writable:!1,enumerable:!0}}),c.useOptions.ammo&&(d.usesAmmo?await this.update({"system.ammo.default":c.useOptions.ammo}):console.error("Attempted to set ammo for action that does not use ammo")),c.useMeasureTemplate=d.hasTemplate&&game.settings.get("ffd20","placeMeasureTemplateOnQuickRolls"),new ActionUse(c).process({skipDialog:a})):(console.debug(`FFD20 | Cancelled use of "${this.name}"`),null)}getConditionalTargets(e,t){if(t)return foundry.utils.logCompatibilityWarning("ItemPF.getConditionalTargets() with two parameters is now ItemPF.getConditionalSubTargets()",{since:"PF1 v11",until:"PF1 v12"}),this.getConditionalSubTargets(e,t)}getConditionalSubTargets(e,t){}getContextChanges(e=["attack"]){if(!this.actor)return[];const t=this.getContextStack(e);return this.actor.changes.filter((e=>t.has(e.target)))}getContextStack(e){const t=new Set(e);for(const s of e)switch(s){case"sattack":case"wattack":case"mattack":case"rattack":case"nattack":case"tattack":t.add("attack");break;case"wdamage":case"sdamage":t.add("damage");break;case"mwdamage":case"rwdamage":case"twdamage":t.add("damage"),t.add("wdamage")}return(t.has("rwdamage")||t.has("twdamage"))&&t.add("rdamage"),t}getRollData(e){const t=this.actor,s={...t?.getRollData(e)??{}};t||ffd20.utils.rollData.addStatic(s),s.item=foundry.utils.deepClone(this.system);const a=s.item.class;a&&(s.class=s.classes?.[a]);const i=this.system.tag;return s.item.dFlags=s.dFlags?.[i],s.item.bFlags=Object.fromEntries(Object.entries(s.item.flags?.boolean??{}).map((([e,t])=>[e,t?1:0]))),this.isPhysical&&(s.item.auraStrength=this.auraStrength,this.system.resizing&&void 0!==s.size&&(s.item.size=s.size)),s.cl=s.item?.cl,this._addTypeRollData(s),Hooks.events.pf1GetRollData?.length>0&&Hooks.callAll("pf1GetRollData",this,s),s}_addTypeRollData(e){}async _canCreateItemLink(e,t){if(!(t instanceof Item))throw Error("Item must be instance of Item document");if(!["charges","children","supplements","classAssociations"].includes(e))throw Error(`Invalid link type: "${e}"`);if(t===this)return!1;const s=this.actor&&t.actor===this.actor;if(["children","charges"].includes(e)&&!s)return ui.notifications.warn("FFD20.Warning.LinkOwnerMismatch",{localize:!0}),!1;const a=this.system.links?.[e]||[];for(const e of a){if(await fromUuid(e.uuid,{relative:this.actor})===t)return ui.notifications.warn("FFD20.Warning.NoMultiLink",{localize:!0}),!1}switch(e){case"charges":if(t.links?.charges)return ui.notifications.warn(game.i18n.format("FFD20.Warning.CannotCreateChargeLink2",{source:this.name,target:t.name,deeptarget:t.links.charges.name})),!1;return(t.system.links?.charges??[]).length>0?(ui.notifications.warn(game.i18n.format("FFD20.Warning.CannotCreateChargeLink",{source:this.name,target:t.name})),!1):!this.links?.charges||(ui.notifications.warn(game.i18n.format("FFD20.Warning.CannotCreateChargeLink2",{source:t.name,target:this.name,deeptarget:this.links.charges.name})),!1);case"classAssociations":return t.actor?(ui.notifications.error("FFD20.Warning.LinkOnlyUnowned",{localize:!0}),!1):!!t.pack||(ui.notifications.error("FFD20.Warning.LinkOnlyCompendium",{localize:!0}),!1);case"supplements":if(!t.actor)return!0;ui.notifications.error("FFD20.Warning.LinkOnlyUnowned",{localize:!0});break;case"children":return!0}return!1}_generateLinkData(e,t,s){const a={name:t.name,uuid:s};switch(e){case"classAssociations":a.level=1;case"supplements":"system"===game.packs.get(t.pack)?.metadata.packageType&&delete a.name;break;case"charges":case"children":delete a.name}return a}async createItemLink(e,t,s){if(!await this._canCreateItemLink(e,t))return console.warn(`Can not create "${e}" link for ${t.name} [${t.uuid}] in ${this.name}`),!1;const a=this.toObject().system.links?.[e]??[],i=this.actor?t.getRelativeUUID(this.actor):t.uuid,n=this._generateLinkData(e,t,i);s&&foundry.utils.mergeObject(n,s),a.push(n);const o={_id:this.id,["system.links."+e]:a},r=[];return"charges"===e&&r.push({_id:t.id,system:{uses:{"-=value":null,"-=maxFormula":null,"-=per":null,"-=rechargeFormula":null}}}),this.actor&&r.length>0?await this.actor.updateEmbeddedDocuments("Item",[o,...r]):await this.update(o),Hooks.callAll("pf1CreateItemLink",this,n,e),!0}async getLinkedItems(e,t=!1,{recursive:s=!1,_results:a}={}){const i=this.system.links?.[e];if(!i)return[];const n=a??new Set;for(const a of i){if(!a.uuid)continue;const i=await fromUuid(a.uuid,{relative:this.actor});if(i){if(t){if(n.some((e=>e.item===i)))continue}else if(n.has(i))continue;t?n.add({item:i,linkData:a}):n.add(i),"charges"!==e&&s&&await i.getLinkedItems(e,{recursive:s,includeLinkData:t,_results:n})}}return Array.from(n)}getLinkedItemsSync(e,{recursive:t=!1,_results:s}={}){const a=this.system.links?.[e];if(!a)return[];const i=s??new Set;for(const s of a){if(!s.uuid)continue;const a=foundry.utils.parseUuid(s.uuid,{relative:this.actor}),n=this.actor?.items.get(a?.id);n&&!i.has(n)&&(i.add(n),"charges"!==e&&t&&n.getLinkedItemsSync(e,{recursive:t,_results:i}))}return Array.from(i)}async getAllLinkedItems(){const e=[];for(const t of Object.values(this.system.links??{}))for(const s of t){if(!s.uuid)continue;const t=await fromUuid(s.uuid,{relative:this.actor});t&&e.push(t)}return e}async removeItemLink(e,{commit:t=!0}={}){const s={};for(const[t,a]of Object.entries(this.system.links??{})){const i=foundry.utils.deepClone(a),n=i.findIndex((t=>t.uuid===e));n>=0&&(i.splice(n,1),s["system.links."+t]=i)}if(!foundry.utils.isEmpty(s))return t?this.update(s):s}getChangeTargets(e){const t={};if("skill"===e)if(this.actor){const e=foundry.utils.mergeObject(ffd20.config.skills,this.actor.system.skills,{inplace:!1});for(const[s,a]of Object.entries(e))if(a.subSkills)for(const[e,i]of Object.entries(a.subSkills))t[`skill.${s}.${e}`]=`${ffd20.config.skills[s]} (${i.name})`;else a.custom?t["skill."+s]=a.name:t["skill."+s]=ffd20.config.skills[s]}else for(const[e,s]of Object.entries(ffd20.config.skills))t["skill."+e]=s;else if(foundry.utils.hasProperty(ffd20.config.buffTargets,e))for(const[s,a]of Object.entries(ffd20.config.buffTargets[e]))s.startsWith("_")||s.startsWith("~")||(t[s]=a);return t}async addItemBooleanFlag(e,t={}){e=(e+"").replace(/[^\w_-]/g,"-").replace(/^-+/,"_");const s=this.system.flags?.boolean??{};if(Array.isArray(s))throw Error(`${this.name} [${this.id}] requires migration.`);return void 0===s[e]&&(await this.update({["system.flags.boolean."+e]:!0},t),!0)}async removeItemBooleanFlag(e,t={}){return void 0!==(this.system.flags?.boolean??{})[e]&&(await this.update({["system.flags.boolean.-="+e]:null},t),!0)}hasItemBooleanFlag(e){return!0===(this.system.flags?.boolean??{})[e]}getItemBooleanFlags(){const e=this.system.flags?.boolean??{};return Object.keys(e)}async setItemDictionaryFlag(e,t,s={}){e=(e+"").replace(/[^\w_-]/g,"-").replace(/^-+/,"_");return(this.system.flags?.dictionary??{})[e]!==t&&(await this.update({["system.flags.dictionary."+e]:t},s),!0)}async removeItemDictionaryFlag(e,t={}){return void 0!==(this.system.flags?.dictionary??{})[e]&&(await this.update({["system.flags.dictionary.-="+e]:null},t),!0)}getItemDictionaryFlag(e){return(this.system.flags?.dictionary||{})[e]}getItemDictionaryFlags(){return this.system.flags?.dictionary||{}}getAttackSources(e,{rollData:t}={}){e??=this.defaultAction?.id;const s=this.actions.get(e);if(!s)return;const a=[],i=this.actor?.system,n=this.system;if(!i)return a;t??=s.getRollData();const describePart=(e,t,s,i=0)=>{0!=e&&a.push({value:e,name:t,modifier:s,sort:i})},o=s.isCombatManeuver,r=Object.values(o?ffd20.config.sizeSpecialMods:ffd20.config.sizeMods)[t.size]||0;0!=r&&describePart(r,game.i18n.localize("FFD20.Size"),"size",-20);const l=getHighestChanges(s.attackSources,{ignoreTarget:!0});for(const e of l){let a=e.value;s.bab&&"_bab"===e._id&&(a=RollPF.safeRollSync(e.formula,t).total||0),describePart(a,e.flavor,e.type,-800)}if(s.ability.attack){describePart(i.abilities?.[s.ability.attack]?.mod??0,ffd20.config.abilities[s.ability.attack],"untyped",-50)}const c=RollPF.safeRollSync(s.attackBonus||"0",t,void 0,void 0,{minimize:!0});0!=c.total&&describePart(c.total,c.flavor??game.i18n.localize("FFD20.AttackRollBonus"),"untyped",-100);const d=s.enhancementBonus??(n.masterwork?1:0);l.find((e=>"enh"===e.type&&e.value>d))||(Number.isFinite(s.enhancementBonus)&&0!==s.enhancementBonus?describePart(s.enhancementBonus,game.i18n.localize("FFD20.EnhancementBonus"),"enh",-300):n.masterwork&&describePart(1,game.i18n.localize("FFD20.Masterwork"),"enh",-300));try{this.getProficiency(!0)||describePart(-4,game.i18n.localize("FFD20.Proficiency.Penalty"),"untyped",-500)}catch{}if(this.isBroken&&describePart(-2,game.i18n.localize("FFD20.Broken"),"untyped",-500),!0!==s.naturalAttack.primary&&"natural"===n.subType){const e=s.naturalAttack?.secondary?.attackBonus||ffd20.config.naturalAttacks.secondary.penalty;describePart(RollPF.safeRollSync(""+e,t).total??0,game.i18n.localize("FFD20.SecondaryAttack"),"untyped",-400)}const u=s.conditionals.filter((e=>e.default&&e.modifiers.find((e=>"attack"===e.target))));for(const e of u)for(const s of e.modifiers)if("allAttack"===s.subTarget){const a=RollPF.safeRollSync(s.formula,t,void 0,void 0,{minimize:!0});a.err&&console.error("FFD20 | Bad Conditional Formula:",s.formula,"\n",s,"\n",a.err);const i=!a.isDeterministic;if(0==a.total&&!i)continue;describePart(i?a.formula:a.total,e.name,s.type,-5e3)}return a.sort(((e,t)=>t.sort-e.sort))}get attackSources(){return this.getAttackSources(this.defaultAction.id)}getAllDamageSources(e){return this.actions.get(e)?.allDamageSources}get allDamageSources(){return this.getAllDamageSources(this.defaultAction.id)}get inContainer(){return!!this.parentItem}get rootItem(){return this.parentItem?.rootItem??this}}class ItemAttackPF extends ItemPF{async _preUpdate(e,t,s){await super._preUpdate(e,t,s),e.system&&!1!==t.diff&&!1!==t.recursive&&"natural"===e.system.subType&&(e.system.held=null)}prepareBaseData(){super.prepareBaseData(),"weapon"===this.subType&&(this.system.weapon??={},this.system.weapon.category||="simple",this.system.weapon.type||="light")}get isQuasiPhysical(){return["weapon","item"].includes(this.subType)}get isBroken(){return!!this.isQuasiPhysical&&!0===this.system.broken}getProficiency(e=!0){if(!e)throw Error("Attacks do not support non-weapon proficiency");return this.isProficient}get isProficient(){return!!this.system.proficient||("weapon"!==this.subType||(this.actor?.hasWeaponProficiency?.(this)??!0))}static fromItem(e){if("weapon"!==e.type)throw Error(`Unsupported item type "${e.type}"`);const t=e.toObject().system,s=t.uses??{};"single"===s.per&&(s.per="charges",s.maxFormula="1");const a={name:e.name,type:"attack",img:e.img,system:{subType:"weapon",weapon:{category:t.subType,type:t.weaponSubtype},held:t.held,masterwork:t.masterwork,proficient:t.proficient,enh:t.enh,broken:e.isBroken,timeworn:t.timeworn,cursed:t.cursed,artifact:t.artifact,baseTypes:t.baseTypes,tags:t.tags,ammo:t.ammo,weaponGroups:t.weaponGroups,actions:t.actions??[],material:t.material,alignments:t.alignments,attackNotes:t.attackNotes??[],effectNotes:t.effectNotes??[]}};for(const e of a.system.actions)e._id=foundry.utils.randomID(16);return a}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t}),a=this.system;if(s.subType=ffd20.config.attackTypes[this.subType],"weapon"===this.subType){const e=a.weapon?.category||"simple",t=a.weapon?.type||"light";s.weapon??={};const i=ffd20.config.weaponTypes[e];s.weapon.category=i?._label,s.weapon.type=i?.[t]}return s}}class ItemBuffPF extends ItemPF{async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),e.system&&!1!==t.diff&&!1!==t.recursive&&(e.system?.active&&void 0===e.system?.duration?.start&&foundry.utils.setProperty(e,"system.duration.start",game.time.worldTime),this.isActive&&!1===e.system?.active)){const e=this.effect;t.ffd20??={},t.ffd20.startTime=e?.duration.startTime}}_onUpdate(e,t,s){if(super._onUpdate(e,t,s),void 0===e.system)return;const a=this.actor;if(!a)return;const i=e.system?.active;void 0!==i&&Hooks.callAll("pf1ToggleActorBuff",a,this,i)}_onCreate(e,t,s){super._onCreate(e,t,s);const a=this.actor,i=this.isActive;a&&i&&Hooks.callAll("pf1ToggleActorBuff",a,this,!0)}_onDelete(e,t){if(super._onDelete(e,t),game.users.get(t)?.isSelf&&this.isActive){const t=e.ffd20?.startTime;this.executeScriptCalls("toggle",{state:!1,startTime:t})}const s=this.actor;s&&this.isActive&&Hooks.callAll("pf1ToggleActorBuff",s,this,!1)}_activeStateChange(e){return e.system?.active}async _updateTrackingEffect(e){const t=e.system?.active;if(void 0===t)return;const s=this.effect;if(t){const e=await this.getRawEffectData();e.active=t,e.transfer=!0,foundry.utils.setProperty(e,"flags.ffd20.tracker",!0),s?s.update(e):ActiveEffect.implementation.create(e,{parent:this})}else s?.delete({render:!1})}async _preDelete(e,t){const s=this.effect;s&&(e.ffd20??={},e.ffd20.startTime=s?.duration.startTime,s?.parent!==this&&await s.delete({ffd20:{delete:this.uuid}})),await super._preDelete(e,t)}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t}),a=this.system;if(s.subType=ffd20.config.buffTypes[a.subType],this.system.duration){const e=this.system.duration,a=ffd20.config.timePeriodsShort[e.units];if("turn"===a)s.duration=game.i18n.format("FFD20.Time.Format",{value:1,unit:a});else if(a&&e.value)try{t??=this.getRollData();const i=RollPF.safeRollSync(e.value,t,{formula:e.value,item:this},{},{maximize:!0});let n;n=i.isDeterministic?i.total??0:ffd20.utils.formula.simplify(e.value,t),s.duration=game.i18n.format("FFD20.Time.Format",{value:n,unit:a})}catch(t){console.warn(`Error with buff duration formula "${e.value}"`,this,t)}}return s}_addTypeRollData(e){e.cl=e.item.level}_prepareDependentData(e=!1){super._prepareDependentData(e)}async getDuration({rollData:e,interactive:t=!1}={}){const s=this.system.duration??{},{units:a,value:i}=s;if(!a)return null;e??=this.getRollData();let n=0;if("turn"===a)n=CONFIG.time.roundTime;else{if(!i)return null;e??=this.getRollData();const s=(await RollPF.safeRoll(i,e,void 0,void 0,{allowInteractive:t})).total;switch(a){case"hour":n=60*s*60;break;case"minute":n=60*s;break;case"round":n=s*CONFIG.time.roundTime}}return n}async getRawEffectData({rollData:e}={}){const t=await super.getRawEffectData();t.type="buff",this.system.conditions?.length&&(t.statuses=[...this.system.conditions]);const s=this.system.duration;let a,i=this.system.duration.end||"turnStart";return"turn"===s.units?(i="turnEnd",a=0):s.value&&(a=await this.getDuration({rollData:e})),Number.isFinite(a)&&(t.duration.seconds=a),t.system??={},t.system.end=i,t.system.initiative=game.combat?.initiative,t}getRollData(e){const t=super.getRollData(e);return t.item.level=this.system.level,t}get isActive(){return this.system.active??!1}get effect(){return this.effects.find((e=>!0===e.getFlag("ffd20","tracker")))}async setActive(e,t){return this.update({"system.active":e},t)}}class ItemClassPF extends ItemPF{static system=Object.freeze({...super.system,hasActions:!1,subtypeName:!0});async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;void 0!==e.system.level&&e.system.level!==this.system.level&&(t.ffd20??={},t.ffd20.item??={},t.ffd20.item[this.id]??={},t.ffd20.item[this.id].oldLevel=this.system.level);const a=e.system.links?.classAssociations;a?.length&&(a.forEach((e=>e.level||=1)),a.sort(((e,t)=>e.level-t.level)))}async _onLevelChange(e=0,t=0,{event:s}={}){const a=this.actor;if(a&&e!==t){if(t>e){const s=(this.system.links?.classAssociations??[]).filter((s=>s.level>e&&s.level<=t)),i=new Map,n=[];for(const e of s){const t=await fromUuid(e.uuid);if(!t){const t="Could not find class association: "+e.uuid;console.warn(e.uuid,t,this),ui.notifications?.warn(t,{console:!1});continue}i.set(t.uuid,e);const s=game.items.fromCompendium(t,{clearFolder:!0});s.system.class=this.system.tag,n.push({data:s,link:e})}if(n.length){const e=n.sort(((e,t)=>e.link.level-t.link.level)).map((e=>e.data)),t={};for(const s of e)t[s.type]??=a.itemTypes[s.type].sort(((e,t)=>t.sort-e.sort))[0]?.sort??0,t[s.type]+=CONST.SORT_INTEGER_DENSITY,s.sort=t[s.type];const s=await a.createEmbeddedDocuments("Item",e),o={},r={flags:{ffd20:{links:{classAssociations:o}}}};for(const e of s){const t=i.get(e._stats?.compendiumSource);o[e.id]=t?.level??1}await this.update(r,{render:!1})}}if(t<e){const e=foundry.utils.deepClone(this.getFlag("ffd20","links.classAssociations")||{}),i=[];for(const[s,n]of Object.entries(e)){const o=a.items.get(s);o?n>t&&(i.push(o.id),delete e[s]):delete e[s]}"delete"!==s&&await this.setFlag("ffd20","links.classAssociations",e),await Item.implementation.deleteDocuments(i,{parent:a})}Hooks.callAll("pf1ClassLevelChange",this.actor,this,e,t)}}prepareBaseData(){super.prepareBaseData();const e=this.system;e.hitDice=void 0,e.mythicTier=void 0,e.casting?.type&&(e.casting.progression??="high",e.casting.ability??="int",e.casting.spells??="arcane",e.casting.domainSlots??=1,e.casting.cantrips??=!0)}prepareDerivedData(){super.prepareDerivedData();const e=this.system,t=game.settings.get("ffd20","useFractionalBaseBonuses");{const s=t?ffd20.config.classFractionalSavingThrowFormulas:ffd20.config.classSavingThrowFormulas;for(const a of Object.keys(ffd20.config.savingThrows)){const i=e.subType||"base";let n;const o=e.savingThrows[a],r=o.value;n="custom"===r?o.custom||"0":s[i][r],null==n&&(n="0");const l=RollPF.safeRollSync(n,{level:e.level,hitDice:this.hitDice}).total;o.base=l,t&&(o.good=!0===s[i].goodSave&&"high"===r)}}{const s=t?ffd20.config.classFractionalBABFormulas:ffd20.config.classBABFormulas,a=e.bab;let i;i="custom"===a?e.babFormula||"0":s[a]||"0",e.babBase=RollPF.safeRollSync(i,{level:e.level,hitDice:this.hitDice}).total}this.actor?.system&&this._registerOnActor()}_registerOnActor(){const e=this.actor;if(!e.classes)return;const t=this.system;if(!t.tag)return void console.error("Class doesn't have a tag",this);t.subType||console.warn(this.name+" lacks class type",this);const s=game.settings.get("ffd20","healthConfig").getClassHD(this),a="base"===(t.subType||"base"),i="mythic"===t.subType;e.classes[t.tag]={_id:this.id,level:t.level,unlevel:t.level,name:this.name,hd:t.hd,hitDice:this.hitDice,mythicTier:this.mythicTier,bab:t.bab,hp:s.auto,type:t.subType,isBase:a,isMythic:i,savingThrows:{fort:t.savingThrows.fort.base,ref:t.savingThrows.ref.base,will:t.savingThrows.will.base},fc:{hp:a?t.fc.hp.value:0,skill:a?t.fc.skill.value:0,alt:a?t.fc.alt.value:0}}}get hitDice(){const e=this.system;if(void 0===e.hitDice)if("mythic"===e.subType)e.hitDice=0;else if(e.customHD?.length>0){const t={item:{level:this.system.level}};e.hitDice=RollPF.safeRollSync(e.customHD,t).total}else e.hitDice=e.level;return e.hitDice}get mythicTier(){return this.system.mythicTier??="mythic"===this.subType?this.system.level:0,this.system.mythicTier}recharge(){}getLabels({rollData:e,isolated:t}={}){const s=super.getLabels({rollData:e,isolated:t}),a=this.system;return s.subType=ffd20.config.classTypes[a.subType],s.bab=ffd20.config.classBAB[a.bab],s.saves={fort:ffd20.config.classSavingThrows[a.savingThrows?.fort?.value],ref:ffd20.config.classSavingThrows[a.savingThrows?.ref?.value],will:ffd20.config.classSavingThrows[a.savingThrows?.will?.value]},s.hitDie=a.hd,"mythic"!==a.subType&&(s.hitDie=game.i18n.format("FFD20.DieSize",{size:a.hd})),s.hasFCB=a.fc?.hp>0||a.fc?.skill>0||a.fc?.alt>0,delete s.activation,s}}class ItemPhysicalPF extends ItemPF{async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;const a=e.system?.hp;if(void 0!==a?.value){let e=this.system.hp?.max??0;const t=this.system.hp?.base;void 0!==a.base&&a.base!==t&&(e+=a.base-t),a.offset??=a.value-e,delete a.value}await this._resetChargesOnQuantityUpdate(e)}static system=Object.freeze(foundry.utils.mergeObject(super.system,{isPhysical:!0},{inplace:!1}));_preUpdateNumericValueGuard(e){super._preUpdateNumericValueGuard(e),void 0!==e.quantity&&(!Number.isSafeInteger(e.quantity)||e.quantity<0)&&(e.quantity=0),void 0===e.price||Number.isFinite(e.price)||(e.price=0),void 0===e.unidentified?.price||Number.isFinite(e.unidentified.price)||(e.unidentified.price=0),void 0!==e.hardness&&(!Number.isSafeInteger(e.hardness)||e.hardness<0)&&(e.hardness=0),void 0===e.hp?.value||Number.isSafeInteger(e.hp.value)||(e.hp.value=0),void 0!==e.hp?.max&&(!Number.isSafeInteger(e.hp.max)||e.hp.max<0)&&(e.hp.max=0)}async _preCreate(e,t,s){await super._preCreate(e,t,s);const a={};void 0===e.system?.identified&&this.actor&&"character"!==this.actor.type&&!this.actor?.hasPlayerOwner&&(a["system.identified"]=!1),void 0===e.system?.hp?.base&&void 0===e.system?.hp?.max&&(a["system.hp.base"]=10),foundry.utils.isEmpty(a)||this.updateSource(a)}_onCreate(e,t,s){super._onCreate(e,t,s),!0===this.system.equipped&&this.executeScriptCalls("equip",{equipped:!0});const a=this.system.quantity||0;a>0&&this.executeScriptCalls("changeQuantity",{quantity:{previous:0,new:a}})}_onUpdate(e,t,s){super._onUpdate(e,t,s);const a=e.system?.equipped;null!=a&&this.executeScriptCalls("equip",{equipped:a})}_onMemorizedUpdate(e,t){const s=this._memoryVariables?.quantity;if(void 0!==s){const e={previous:s,new:this.system.quantity};null!=e.new&&e.new!==e.previous&&this.executeScriptCalls("changeQuantity",{quantity:e})}super._onMemorizedUpdate(e,t)}_onDelete(e,t){super._onDelete(e,t),game.users.get(t)?.isSelf&&(!0===this.system.equipped&&this.executeScriptCalls("equip",{equipped:!1}),this.system.quantity>0&&this.executeScriptCalls("changeQuantity",{quantity:{previous:this.system.quantity,new:0}}))}_activeStateChange(e){return e.system?.equipped}async _resetChargesOnQuantityUpdate(e){if(this.links.charges)return;const t=e.system.quantity;if(void 0===t)return;if((t||0)>=(this.system.quantity||0))return;if(void 0!==e.system.uses?.value)return;const s=this.system.uses??{};if(s.per&&0===s.value&&s.max>0){const t=await this.recharge({period:"any",commit:!1});t&&(e.system.uses??={},e.system.uses.value=t.system.uses.value)}}prepareBaseData(){this.showUnidentifiedData?this.name=this.system.unidentified?.name||this._source.name:this.name=this._source.name,this.system.size||="med",this.system.weight??={},this.system.weight.value||=0,this.system.quantity||=0,super.prepareBaseData();const e=this.system;e.weight??={},e.weight.value??=0,e.weight.total=0,e.weight.converted??={},this.prepareDurability()}prepareDerivedData(){super.prepareDerivedData(),this.isPhysical&&this.showUnidentifiedData&&(this.system.description.value=this.system.description.unidentified)}_prepareDependentData(e=!1){super._prepareDependentData(e),this.prepareWeight()}async setActive(e,t){return this.update({"system.equipped":e},t)}get isActive(){return!((this.system.hp?.value||0)<=0)&&(!(this.system.quantity<=0)&&(this.system.equipped??!1))}get activeState(){return this.system.equipped||!1}prepareDurability(){const e=this.system,t=e.enh||e.armor?.enh||0,s=this._source.system.hardness||0;e.hardness={base:s,total:s+ffd20.config.itemEnhancementMods.hardness*t},e.hp??={},e.hp.base??=10,e.hp.offset||=0,e.hp.max=this._sizeAdjustedHealth()+ffd20.config.itemEnhancementMods.hp*t,e.hp.value=Math.max(0,e.hp.max+e.hp.offset)}_sizeAdjustedHealth(){let e=this.system.hp?.base||10,t=Object.keys(ffd20.config.actorSizes).indexOf(this.system.size||"med");for(t<0&&(t=4);4!==t;)t>4?(e*=2,t--):t<4&&(e/=2,t++);return Math.max(1,Math.floor(e))}prepareWeight(e=!0){const t=this.system,s=t.weight,a=s.value*this.getWeightMultiplier();e&&(s.total=0),s.total+=a*t.quantity,s.converted.value=ffd20.utils.convertWeight(a),s.converted.total=ffd20.utils.convertWeight(s.total)}getWeightMultiplier(){return 1}_getArmorWeightMultiplier(){const e=Object.keys(ffd20.config.sizeChart)[this.actor?.system.traits?.size?.value],t=this.system.size||"med",s=this.system.resizing&&e||t;return ffd20.config.armorWeight[s]??1}getValue({recursive:e=!0,sellValue:t=.5,inLowestDenomination:s=!1,forceUnidentified:a=!1,single:i=!1,identical:n=!1,maximized:o=!1}={}){const r=this.hasFiniteCharges,l=r?this.maxCharges:0,c=r?o?l:this.charges:0,getActualValue=(e=!0,t=!1)=>{let a=0;if(a=e?this.system.price||0:this.system.unidentified?.price||0,e&&r){let e=t?l:c;(!Number.isFinite(e)||e<0)&&(e=0),a+=(this.system.uses?.pricePerUse??0)*e}return s&&(a*=100),this.isBroken&&(a*=.75),this.system.timeworn&&(a*=r&&0===c?.01:.5),a},d=!a&&!this.showUnidentifiedData,u=i?1:this.system.quantity||0;let m=getActualValue(d);return u>1&&(r&&!0!==n?m+=getActualValue(d,!0)*(u-1):m*=u),"loot"===this.type&&["tradeGoods","treasure"].includes(this.subType)||(m*=t),m}get canUse(){return this.system.equipped&&this.system.quantity>0}get isBroken(){if(this.system.broken)return!0;const e=this.system.hp??{},t=e.max??0;if(t>0){return(e.value??0)<=Math.floor(t/2)}return!1}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t});s.broken=this.isBroken;const a=this.system,i='<i class="fa-solid fa-check"></i>',n='<i class="fa-solid fa-times"></i>';return s.equipped="",!0===a.equipped?s.equipped=i:s.equipped=n,s.carried="",!0===a.carried?s.carried=i:s.carried=n,s.identified="",!0===a.identified?s.identified=i:s.identified=n,s}adjustContained(){super.adjustContained(),this.system.carried=!0,this.canEquip||(this.system.equipped=!1)}get canEquip(){return!this.inContainer}getName(e=!1){return game.user.isGM&&e&&!1===this.system.identified&&this.system.unidentified?.name||this.name}get showUnidentifiedData(){return!game.user.isGM&&!1===this.system.identified}_addTypeRollData(e){e.item.size=Object.keys(ffd20.config.actorSizes).indexOf(e.item.size),e.item.broken=this.isBroken}}class ItemConsumablePF extends ItemPhysicalPF{static system=Object.freeze({...super.system,subtypeName:!0});adjustContained(){super.adjustContained(),this.system.carried=!0}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t});return s.subType=ffd20.config.consumableTypes[this.subType],s}}class ItemContainerPF extends ItemPhysicalPF{static system=Object.freeze({...super.system,hasIdentifier:!0,hasActions:!1});_initialize(){this.items=new Collection,super._initialize()}async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.recursive||!1===t.diff)return;const a=e.system.items;if(a)for(const[e,s]of Object.entries(a))await this._containedItemUpdate(e,s,a,t)}async _containedItemUpdate(e,t,s,a){if(e.startsWith("-=")){const t=this.items.get(e.replace(/^-=/,""));return void(t&&await t._preDelete(a,game.user))}const i=this.items.get(e);let n;if(i)await i._preUpdate(t,a,game.user),n=i.updateSource(t,{dryRun:!0,fallback:!1}),"data"in this.system.items[e]&&(n["-=data"]=null);else{const e=new Item.implementation(t);await e._preCreate(t,a,game.user),n=e.toObject()}s[e]=n}_onUpdate(e,t,s){const a=e.system?.items;if(a)for(const[e,i]of Object.entries(a)){const a=this.items.get(e);try{e.startsWith("-=")||(i._id?a._onCreate(i,t,s):a._onUpdate(i,t,s))}catch(e){console.error(e,{parent:this,item:a})}}super._onUpdate(e,t,s)}prepareBaseData(){super.prepareBaseData();const e=(100-(this.system.weight?.reduction?.percent??0))/100;this.system.weight.currency=this._calculateCoinWeight()*e}prepareDerivedData(){this._prepareInventory(),super.prepareDerivedData()}_prepareDependentData(e=!1){for(const t of this.items)t._prepareDependentData(e);super._prepareDependentData(e)}_prepareInventory(){const e=this.items,t=new Collection;this.system.items??={};for(const[s,a]of Object.entries(this.system.items))try{let i=e?.get(s);i?i.updateSource(new Item.implementation(a,{strict:!1}).toObject(),{recursive:!1}):(i=new Item.implementation(a,{parent:this.actor,strict:!1}),i.parentItem=this),i.reset(),t.set(s,i)}catch(e){throw console.error("Error preparing contained item:",{id:s,data:a},this),e}this.items=t}prepareWeight(){this.system.weight??={};const e=this.system.weight;e.total=0;const t=(100-(e.reduction?.percent||0))/100,s=this._calculateCoinWeight();e.currency=s*t,e.contents=this.items.reduce(((e,t)=>e+t.system.weight.total),0),e.contents+=s;const a=e.reduction?.value??0;e.total+=Math.max(0,e.contents*t-a),e.total*=this.system.quantity||0,e.converted.reduction=ffd20.utils.convertWeight(a),e.converted.contents=ffd20.utils.convertWeight(e.contents),e.converted.currency=ffd20.utils.convertWeight(e.currency),super.prepareWeight(!1)}async createContainerContent(e,t={renderSheet:!1}){e=e instanceof Array?e:[e];const s=foundry.utils.deepClone(t),a=game.user,i=[],n={system:{items:{}}};for(const o of e){do{o._id=foundry.utils.randomID(16)}while(void 0!==this.system.items[o._id]);const e=new Item.implementation(o);let r=await e._preCreate(o,t,game.user)??!0;r&&=t.noHook||Hooks.call("preCreateItem",e,o,s,a.id),!1!==r?(e.updateSource({_stats:{coreVersion:game.version,systemVersion:game.system.version,createdTime:Date.now(),lastModifiedBy:a.id}}),n.system.items[o._id]=e.toObject(),i.push(o._id)):console.debug("FFD20 | Item creation prevented during pre-create")}await this.update(n,{ffd20:{createContained:i}});const o=this.items.filter((e=>i.includes(e.id)));return t.renderSheet&&o.forEach((e=>e.sheet.render(!0))),o}async deleteContainerContent(e,t={}){const s=new Set(e instanceof Array?e:[e]),a="ContainerContent",i=game.user,n={system:{items:{}}},o=[];for(const e of s){const s=this.items.get(e);let r=await s._preDelete(t,i)??!0;r&&=t.noHook||Hooks.call("preDelete"+a,s,t,i.id),!1!==r?(n.system.items["-="+e]=null,o.push(e)):console.debug(`FFD20 | ${a} deletion prevented during pre-delete`)}await this.update(n,{ffd20:{removeContained:o}})}async updateContainerContents(e){e=e instanceof Array?e:[e];const t="ContainerContent",s=game.user,a={diff:!0},i=[],n={system:{items:{}}};for(const o of e){if(!o._id)throw Error("You must provide an id for every Embedded Document in an update operation");const e=this.items.get(o._id);let r={};try{r=e.updateSource(o,{dryRun:!0,fallback:!1})}catch(e){console.error(e);continue}let l=await e._preUpdate(r,a,s)??!0;l&&=a.noHook||Hooks.call("preUpdate"+t,e,r,a,s.id),!1!==l?(r._stats={coreVersion:game.version,systemVersion:game.system.version,modifiedTime:Date.now(),lastModifiedBy:s.id},n.system.items[o._id]=r,i.push(o._id)):console.debug(`FFD20 | ${t} update prevented during pre-update`)}await this.update(n,{ffd20:{updateContained:i}})}getTotalCurrency({inLowestDenomination:e=!1}={}){const t=ffd20.config.currency;let s=0;for(let[e,a]of Object.entries(this.system.currency||{}))a=Math.max(0,a||0),0!=a&&(s+=a*(t.rate[e]||1));return e?s:s/t.standardRate}convertCurrency(e="pp"){const t=this.getTotalCurrency({inLowestDenomination:!0}),s=ffd20.utils.currency.convert(t,e,{pad:!0});return this.update({system:{currency:s}})}_calculateCoinWeight(){const e=game.settings.get("ffd20","coinWeight");return e?Object.values(this.system.currency||{}).reduce(((e,t)=>e+(t||0)),0)/e:0}getValue({recursive:e=!1,inLowestDenomination:t=!1,...s}={}){s.single&&(e=!1);const a={recursive:e,inLowestDenomination:t,...s};let i=super.getValue(a);if(!e)return i;i+=this.getTotalCurrency({inLowestDenomination:t});for(const e of this.items)i+=e.getValue(a);return i}async getChatData({chatcard:e,rollData:t}={}){const s=await super.getChatData({chatcard:e,rollData:t}),a=this.getValue({sellValue:1,recursive:!0,inLowestDenomination:!0})-this.getValue({sellValue:1,recursive:!1,inLowestDenomination:!0}),i=ffd20.utils.currency.split(a,{pad:!0}),n=game.i18n.localize("FFD20.Containers.Contents.Value")+": "+game.i18n.format("FFD20.SplitValue",i);s.properties.push(n);const o={...this.system.currency};o.gp||=0,o.gp+=10*o.pp;const r=game.i18n.localize("FFD20.Currency.Label")+": "+game.i18n.format("FFD20.SplitValue",o);return s.properties.push(r),s}recharge(){}adjustContained(){super.adjustContained(),this.system.carried=!0}}class ItemEquipmentPF extends ItemPhysicalPF{static system=Object.freeze({...super.system,subtypeName:!0});async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;const a=e.system?.subType;if(void 0!==a&&a!==this.system.subType){const t=e.system?.equipmentSubtype??this.system.equipmentSubtype??"",s=Object.keys(ffd20.config.equipmentTypes[a]??{}).filter((e=>!e.startsWith("_")));s.includes(t)||(0===s.length?e.system.equipmentSubtype="":s.length>0&&(e.system.equipmentSubtype=s[0]));const i=e.system?.slot??this.system.slot??"",n="other"===a?"wondrous":a,o=Object.keys(ffd20.config.equipmentSlots[n]??{});i&&o.includes(i)||(e.system.slot=o[0])}}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t}),a=this.system;let i=this.subType;const n=Object.keys(ffd20.config.equipmentTypes);n.includes(i)||(i=n[0]);let o=this.system.equipmentSubtype;const r=Object.keys(ffd20.config.equipmentTypes[i]).filter((e=>!e.startsWith("_")));r.includes(o)||(o=r[0]);const l=!this.showUnidentifiedData,c=["armor","shield"].includes(this.subType),d=c||["clothing"].includes(this.subType),u=ffd20.config.equipmentTypes[i];s.subType=u._label,l||d?s.childType=u[o]:"wondrous"===this.subType&&(s.subType=ffd20.config.equipmentTypes.other._label),c&&s.childType&&(s.childTypeDistinct=!0);let m=a.armor.value||0;l&&(m+=a.armor?.enh||0),m>0&&(s.armor=`${m} ${game.i18n.localize("FFD20.ACNormal")}`,s.armorValue=m,s.broken&&(s.armorValueEffective=Math.floor(m/2)));const p=a.armor?.acp||0;p>0&&(s.acp=!0,s.acpEffective=Math.max(0,p+(a.masterwork?-1:0)));const h=a.armor?.dex??null;return Number.isFinite(h)&&(s.mdex=!0),(this.hasSlots||["armor","shield","materia"].includes(this.subType))&&("armor"===this.subType?s.slot=ffd20.config.equipmentSlots.armor.armor:"shield"===this.subType?s.slot=ffd20.config.equipmentSlots.shield.shield:"clothing"===this.subType?s.slot=ffd20.config.equipmentSlots.clothing.clothing:"materia"===this.subType?(s.slot=ffd20.config.equipmentSlots.materia[a.slot],s.slotted=ffd20.config.materia.Slot[a.slotted],s.materiaRarity=ffd20.config.materia.Rarity[a.materiaRarity]):s.slot=ffd20.config.equipmentSlots.wondrous[a.slot]),s}get canEquip(){if(!this.inContainer)return!0;switch(this.subType){case"armor":case"shield":case"clothing":return!1;case"wondrous":case"materia":case"other":return"slotless"===this.system.slot}return!0}prepareDerivedData(){super.prepareDerivedData();const e=this.system;e.armor.enh??=0;const t=e.armor.enh||0;e.armor.total=(e.armor.value||0)+t,!1!==e.equipped&&this.applyEquippedEffects()}applyEquippedEffects(){const e=this.system;if(!this.isActive)return;const t=this.actor;if(t?.system&&t?.equipment)switch(this.subType){case"shield":{const s=ffd20.config.shieldTypes,a=e.equipmentSubtype;let i=t.equipment.shield.type;"other"===a&&i<s.other?i=s.other:"lightShield"===a&&i<s.light?i=s.light:"heavyShield"===a&&i<s.heavy?i=s.heavy:"towerShield"===a&&i<s.tower&&(i=s.tower),t.equipment.shield.type!==i&&(t.equipment.shield.type=i,t.equipment.shield.id=this.id);break}case"armor":{const s=ffd20.config.armorTypes,a=e.equipmentSubtype;let i=t.equipment.armor.type;"lightArmor"===a&&i<s.light?i=s.light:"mediumArmor"===a&&i<s.medium?i=s.medium:"heavyArmor"===a&&i<s.heavy&&(i=s.heavy),i!==t.equipment.armor.type&&(t.equipment.armor.type=i,t.equipment.armor.id=this.id);break}}}get hasSlots(){return["wondrous","other","materia"].includes(this.subType)}getProficiency(e=!0){if(e)return this.isProficient;const t=this.subType;if(!["armor","shield"].includes(t))throw Error(`"${t}" does not support proficiency`);const s=this.actor;return!s||s.hasArmorProficiency(this)}get baseArmorProficiency(){const e=this.subType;if(!["armor","shield"].includes(e))throw Error(`"${e}" does not support proficiency`);return{armor:{lightArmor:"lgt",mediumArmor:"med",heavyArmor:"hvy"},shield:{other:"shl",lightShield:"shl",heavyShield:"shl",towerShield:"twr"}}[e][this.system.equipmentSubtype]??null}getWeightMultiplier(){return["armor","shield"].includes(this.subType)?this._getArmorWeightMultiplier():1}get isProficient(){return!!this.system.proficient||(this.actor?.hasWeaponProficiency?.(this)??!0)}}class ItemFeatPF extends ItemPF{static system=Object.freeze({...super.system,subtypeName:!0});_onDelete(e,t){super._onDelete(e,t),game.users.get(t)?.isSelf&&this.isActive&&this.executeScriptCalls("toggle",{state:!1})}_activeStateChange(e){const t=e.system?.disabled;if(void 0!==t)return!t}async setActive(e,t){return this.update({"system.disabled":!e},t)}get isActive(){return!0!==this.system.disabled}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t}),{subType:a,abilityType:i}=this.system;return s.subType=ffd20.config.featTypes[a],s.featType=ffd20.config.featTypes[a],s.abilityType=ffd20.config.abilityTypes[this.system.abilityType]?.short,"trait"===this.subType?s.traitType=ffd20.config.traitTypes[this.system.traitType]:"racial"===this.subType&&(s.raceType=ffd20.config.raceTypes[this.system.traitType],s.traitCategory=ffd20.config.racialTraitCategories[this.system.traitCategory]),i&&"none"!==i?(s.abilityType=ffd20.config.abilityTypes[i].short,s.abilityTypeLong=ffd20.config.abilityTypes[i].long):s.abilityType&&delete s.abilityType,s}_addTypeRollData(e){e.cl=e.class?.level||e.attributes?.hd?.total}getTypeChatData(e,t,s,a){super.getTypeChatData(e,t,s,a),t.abilityType&&s.push(t.abilityType)}}class ItemLootPF extends ItemPhysicalPF{static system=Object.freeze({...super.system,subtypeName:!0});get extraType(){return this.system.extraType}async _preUpdate(e,t,s){await super._preUpdate(e,t,s),e.system&&!1!==t.diff&&!1!==t.recursive&&void 0!==e.system?.subType&&e.system?.subType!==this.system.subType&&void 0===e.system?.extraType&&(e.system.extraType="")}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t});return this.showUnidentifiedData||(s.subType=ffd20.config.lootTypes[this.subType]),s}get isActive(){return!((this.system.hp?.value||0)<=0)&&(!(this.system.quantity<=0)&&(!!ffd20.config.unequippableLoot.includes(this.subType)||(this.system.equipped??!1)))}get isSingleUse(){return"ammo"===this.subType||super.isSingleUse}}class ItemRacePF extends ItemPF{static system=Object.freeze({...super.system,hasIdentifier:!1,hasActions:!1});async _preCreate(e,t,s){await super._preCreate(e,t,s);const a=this.actor;if(!a)return;const i=a.itemTypes.race.find((e=>e!==this));if(i){i.system.size;await i.delete();a.system.traits.size;this.system.size}}async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;const a=this.actor,i=e.system?.size;if(a&&void 0!==i){const e=a.system.traits?.size?.base;this.system.size===e&&i!==e&&(t._pf1SizeChanged=!0)}}recharge(){}}class ItemSpellPF extends ItemPF{static system=Object.freeze({...super.system,hasIdentifier:!1,hasChanges:!1});async _preCreate(e,t,s){await super._preCreate(e,t,s),this.actor&&this.constructor._adjustNewItem(this,e,!1)}static _adjustNewItem(e,t,s=!1){if(e.actor){if(!Number.isFinite(t?.system?.level)||s){const t=e.system.spellbook,s=e.actor.system.attributes?.spells?.spellbooks?.[t]?.class,a=e.system.learnedAt?.class?.[s];Number.isFinite(a)&&foundry.utils.setProperty(e._source,"system.level",Math.clamp(a,0,9))}Number.isFinite(t?.system?.preparation?.value)&&!s||"spontaneous"===e.spellbook?.spellPreparationMode&&(foundry.utils.setProperty(e._source,"system.preparation.value",1),foundry.utils.setProperty(e._source,"system.preparation.max",1)),!0===this.spellbook?.psychic&&(!0===this.system.components?.verbal&&(foundry.utils.setProperty(e._source,"components.verbal",!1),foundry.utils.setProperty(e._source,"components.thought",!0)),!0===this.system.components?.somatic&&(foundry.utils.setProperty(e._source,"components.somatic",!1),foundry.utils.setProperty(e._source,"components.emotion",!0)))}}async _preUpdate(e,t,s){await super._preUpdate(e,t,s),e.system&&!1!==t.diff&&!1!==t.recursive&&this._preparationPreUpdate(e)}_preparationPreUpdate(e){const t=e.system.preparation;if(!t)return;const s=this.system.preparation,a=t.max??s.max??0,i=t.value??s.value??0;i>a&&(void 0!==t.max?t.value=a:void 0!==t.value&&(t.max=i)),t.max<0&&(t.max=0),t.value<0&&(t.value=0)}getLabels({actionId:e,rollData:t,isolated:s}={}){const a=super.getLabels({actionId:e,rollData:t,isolated:s}),i=this.system;return a.level=ffd20.config.spellLevels[i.level],a.school=ffd20.config.spellSchools[i.school],a.components=this.getSpellComponents({compact:!0}).join(" "),a}_addTypeRollData(e){e.sl=this.spellLevel||0;const t=this.spellbook;if(t){const s=t.ability;let a="";""!==s&&(a=e.abilities?.[s]?.mod),e.ablMod=a,e.cl=this.casterLevel||0,"_hd"===t.class?e.class={level:e.attributes.hd?.total??e.details?.level?.value??0}:e.class=e.classes?.[t.class]??{},e.spellbook=e.spells[this.system.spellbook],this.useSpellPoints()&&(e.sp=e.spellbook.spellPoints)}else{const[t,s]=this.constructor.getMinimumCasterLevelBySpellData(this);e.sl=t,e.cl=s,e.ablMod=Math.floor(t/2)}}getConditionalTargets(e){super.getConditionalTargets(e),e.push({id:"cl",label:game.i18n.localize("FFD20.CasterLevel"),simple:!0,sort:(e.find((e=>"dc"===e.id)).sort??5e3)+100});const t=e.find((e=>"charges"===e.id));this.useSpellPoints()?t.label=game.i18n.localize("FFD20.SpellPointsCost"):t.disabled=!0}getTypeChatData(e,t,s,a){a.item.sr&&s.push(game.i18n.localize("FFD20.SpellResistance")),this.isCharged&&!this.system.atWill&&(this.useSpellPoints()?s.push(`${game.i18n.localize("FFD20.SpellPoints")}: ${this.charges}/${this.maxCharges}`):s.push(`${game.i18n.localize("FFD20.ChargePlural")}: ${this.charges}/${this.maxCharges}`))}async addCharges(e,t=null){if(!this.actor)return;if(this.system.atWill)return;const s=this.spellbook;if(!s)return;const a=s.spontaneous,i=this.system.spellbook||"primary",n=this.system.level;if(this.useSpellPoints()){const t=this.getSpellUses(),s={},a=foundry.utils.getProperty(this.actor,"system.attributes.mp.temp"),i=foundry.utils.getProperty(this.actor,"system.attributes.mp.value");if(0===a)s["system.attributes.mp.value"]=t+e,await this.actor.update(s);else if(a>=-1*e)s["system.attributes.mp.temp"]=a+e,await this.actor.update(s);else{const t=a+e;s["system.attributes.mp.temp"]=0,s["system.attributes.mp.value"]=i+t,await this.actor.update(s)}return this}{const o=Math.max(0,a?(s.spells?.["spell"+n]?.value||0)+e:(this.system.preparation?.value||0)+e);if(a){const e={};return e[`system.attributes.spells.spellbooks.${i}.spells.spell${n}.value`]=o,await this.actor.update(e),this}{const e="system.preparation.value";if(null==t)return(t={})[e]=o,this.update(t);t[e]=o}}}get isCharged(){return!this.system.atWill}get hasFiniteCharges(){return!this.system.atWill&&this.getDefaultChargeCost()>0}get charges(){return this.getSpellUses()}get maxCharges(){return this.getSpellUses(!0)}getDefaultChargeCost({rollData:e}={}){if(this.system.atWill)return 0;if(this.useSpellPoints()){e??=this.getRollData();const t=this.getDefaultChargeFormula();return RollPF.safeRollSync(t,e).total}return super.getDefaultChargeCost({rollData:e})}getDefaultChargeFormula(){return this.useSpellPoints()?this.system.spellPoints?.cost||game.settings.get("ffd20","spellPointCost")||"0":super.getDefaultChargeFormula()}async recharge({value:e,period:t="day",exact:s=!1,maximize:a=!0,commit:i=!0,rollData:n,context:o}={}){const r=this.spellbook;if("prepared"!==(r?.spellPreparationMode||"prepared"))return;if(r?.spellPoints?.useSystem)return;if("week"==t){if(s)return;t="day"}if(!["day","any"].includes(t))return;const l=this.system.preparation??{};if(!(Number.isFinite(e)&&e>=0)&&(e=l.max||0),(e=Math.clamp(e,0,l.max||0))===(l.value||0)||!Number.isFinite(e))return;const c={system:{preparation:{value:e}}};return i?this.update(c,o):c}get spellLevel(){return this.system.level+(this.system.slOffset||0)}get casterLevel(){const e=this.spellbook;return e?e.cl.total+(this.system.clOffset||0):null}get spellbook(){const e=this.system.spellbook;return this.actor?.system.attributes?.spells.spellbooks[e]}getSpellUses(e=!1){const t=this.system;if(t.atWill)return 1/0;const s=this.spellbook,a=s?.spontaneous??!1,i=t.level,n=t.preparation?.max??0,o=t.preparation?.value??0;if(this.useSpellPoints()){if(o>0)return e?this.actor.system.attributes.mp.max:this.actor.system.attributes.mp.value+this.actor.system.attributes.mp.temp}else{if(!a)return e?n:o;if(o>0)return e?Math.max(s.spells?.["spell"+i]?.max||0,o):s.spells?.["spell"+i]?.value||0}return 0}useSpellPoints(){return this.spellbook?.spellPoints?.useSystem??!1}getSpellComponents({compact:e=!1}={}){const t=ffd20.config.re.traitSeparator,s=this.system.components??{},a=this.system.materials??{},i=this.spellbook?.kind,n="divine"===i,o=[],r=ffd20.config.spellComponents;s.verbal&&o.push(r.verbal),s.somatic&&o.push(r.somatic),s.thought&&o.push(r.thought),s.emotion&&o.push(r.emotion);const l=1,c=2,d=3;let u=s.divineFocus;if(n&&u===c&&e)u=l;else if(s.material){let t=r.material;i&&e||u!==c||(t=`${t}/${r.divineFocus}`),a.value&&!e&&(t=`${t} (${a.value})`),t&&o.push(t)}if(n&&u===d&&e)u=l;else if(s.focus){let t=r.focus;i&&e||u!==d||(t=`${t}/${r.divineFocus}`),a.focus&&!e&&(t=`${t} (${a.focus})`),t&&o.push(t)}return u===l&&o.push(r.divineFocus),r.value&&o.push(...s.value.split(t)),o}static getMinimumCasterLevelBySpellData(e){const t=Object.entries(e.system.learnedAt?.class??{})?.reduce(((e,[t,s])=>{const a=t.split("/");for(const t of a)e.push([t,s]);return e}),[]),s=[9,20];for(const[e,a]of t){s[0]=Math.min(s[0],a);const t=ffd20.config.classCasterType[e]||"high";"high"===t?s[1]=Math.min(s[1],1+2*Math.max(0,a-1)):"med"===t?s[1]=Math.min(s[1],1+3*Math.max(0,a-1)):"low"===t&&(s[1]=Math.min(s[1],1+3*Math.max(0,a)))}return s}static _replaceConsumableConversionString(e,t){return e.replace(/@sl/g,`${t.sl}[${game.i18n.localize("FFD20.SpellLevel")}]`).replace(/@cl/g,"@item.cl").replace(/@ablMod/g,`${t.ablMod}[${game.i18n.localize("FFD20.AbilityScore")}]`)}static async toConsumable(e,t,{spellType:s="arcane"}={}){const a="wand"===t,i="potion"===t,n="scroll"===t,[o,r]=this.getMinimumCasterLevelBySpellData(e),l=e.sl??o??1,c=e.cl??r??1,d=e.system.materials?.gpValue??0,u={type:"consumable",name:e.name,system:{subType:t,spellType:e.spellType||s,description:{},identified:e.identified??!0,unidentified:{name:e.unidentifiedName||game.i18n.localize("FFD20.CreateItem"+t.capitalize())},cl:c,aura:{school:e.system.school},uses:{per:"single"},price:0,hardness:0,hp:{value:1,max:1},actions:e.system.actions??[],sources:e.system.sources??[]}},m={wand:{id:"PZO1110",pages:"496"},scroll:{id:"PZO1110",pages:"490-491"},potion:{id:"PZO1110",pages:"477-478"}}[t];if(m){const e=u.system.sources.find((e=>e.id==m.id));e?e.pages?e.pages+=", "+m.pages:e.pages=m.pages:u.system.sources.push(m)}0==u.system.actions.length&&u.system.actions.push(p);const p=u.system.actions[0]??ffd20.components.ItemAction({},{parent:this}).toObject();p.range??={},p.activation.type="standard",p.activation.unchained.type="action",p.activation.unchained.cost=2;const h={item:e.system,ablMod:Math.floor(l/2),sl:l,cl:c};a?(u.name=game.i18n.format("FFD20.CreateItemWandOf",{name:e.name}),p.name=game.i18n.localize("FFD20.Use"),u.img="systems/ffd20/icons/items/inventory/wand-star.jpg",u.system.uses.pricePerUse=Math.floor(Math.max(.5,l)*c*750/50*100)/100+d,u.system.hardness=5,u.system.hp.max=5,u.system.hp.value=5,u.system.uses.maxFormula="50",u.system.uses.value=50,u.system.uses.max=50,u.system.uses.per="charges"):i?(u.name=game.i18n.format("FFD20.CreateItemPotionOf",{name:e.name}),p.name=game.i18n.localize("FFD20.Drink"),u.img="systems/ffd20/icons/items/potions/minor-blue.jpg",u.system.price=Math.max(.5,l)*c*50+d,u.system.hardness=1):n&&(u.name=game.i18n.format("FFD20.CreateItemScrollOf",{name:e.name}),p.name=game.i18n.localize("FFD20.Use"),u.img="systems/ffd20/icons/items/inventory/scroll-magic.jpg",u.system.price=Math.max(.5,l)*c*25+d);const convertNotes=(e,t=[])=>{if(e)for(const s of t){const t=e[s];if(t)for(let e=0;e<t.length;e++)t[e]=this._replaceConsumableConversionString(t[e],h)}};for(const t of u.system.actions){i&&p===t&&(t.range.units="personal",delete t.range.value),t.measureTemplate?.type&&(t.measureTemplate.size=this._replaceConsumableConversionString(t.measureTemplate.size,h));const s=t.extraAttacks;if(s){s.formula?.count?.length&&(s.formula.count=this._replaceConsumableConversionString(s.formula.count,h)),s.formula?.bonus?.length&&(s.formula.bonus=this._replaceConsumableConversionString(s.formula.bonus,h));for(const e of s.manual??[])e.formula=this._replaceConsumableConversionString(e.formula,h)}for(const e of t.damage?.parts??[])e.formula=this._replaceConsumableConversionString(e.formula,h);if(t.save?.type){const s=t.save.dc;t.save.dc=`10 + ${e.sl}[${game.i18n.localize("FFD20.SpellLevel")}] + ${Math.floor(e.sl/2)}[${game.i18n.localize("FFD20.SpellcastingAbility")}]`,s?.length&&(t.save.dc+=` + (${s})[${game.i18n.localize("FFD20.DCOffset")}]`)}convertNotes(t.notes,["effect","footer"])}convertNotes(u.system,["attackNotes","effectNotes"]);const f=new Item.implementation(e);f.reset();const g=await f.getDescription({charcard:!1,header:!0,body:!0,rollData:h});return u.system.description.value=this._replaceConsumableConversionString(g,h),new ItemPF(foundry.utils.expandObject(u)).toObject()}static async toConsumablePrompt(e,{allowSpell:t=!0,spellType:s="arcane",actor:a}={}){const[i,n]=CONFIG.Item.documentClasses.spell.getMinimumCasterLevelBySpellData(e),getFormData=t=>{t instanceof foundry.applications.api.DialogV2&&(t=t.element);const s=foundry.utils.expandObject(new FormDataExtended(t.querySelector("form")).object);return foundry.utils.mergeObject(e,s),Number.isNaN(e.sl)&&(e.sl=1),e},createConsumable=(e,t)=>this.toConsumable(e,t,{spellType:e.spellType}),o=[{icon:"fa-solid fa-prescription-bottle",label:game.i18n.localize("FFD20.CreateItemPotion"),action:"potion",default:!0,callback:(e,t,s)=>createConsumable(getFormData(s),"potion")},{icon:"fa-solid fa-scroll",label:game.i18n.localize("FFD20.CreateItemScroll"),action:"scroll",callback:(e,t,s)=>createConsumable(getFormData(s),"scroll")},{icon:"fa-solid fa-magic",label:game.i18n.localize("FFD20.CreateItemWand"),action:"wand",callback:(e,t,s)=>createConsumable(getFormData(s),"wand")}];t&&o.push({icon:"fa-solid fa-hand-sparkles",label:game.i18n.localize("TYPES.Item.spell"),action:"spell",callback:()=>!1});const r=foundry.data.fields;return foundry.applications.api.DialogV2.wait({window:{title:game.i18n.format("FFD20.CreateItemForSpell",{name:e.name})},position:{width:"auto",height:"auto"},classes:["pf1-v2","create-consumable"],content:await renderTemplate("systems/ffd20/templates/internal/create-consumable.hbs",{name:e.name,sl:i,cl:n,isGM:game.user.isGM,spellType:s,fields:{sl:new r.NumberField({min:0,integer:!0}),cl:new r.NumberField({min:1,integer:!0}),spellType:new r.StringField({choices:ffd20.config.spellcasting.spells}),identified:new r.BooleanField({initial:"character"===a?.type}),unidentifiedName:new r.StringField},isNPC:"npc"===a?.type}),itemData:e,buttons:o,close:()=>null,rejectClose:!1})}get canUse(){return!!this.system.atWill||(this.system.preparation?.value??0)>0}get isDomain(){return!0===this.system.domain}async getDescription({chatcard:e=!1,data:t={},rollData:s,header:a=!0,body:i=!0,isolated:n=!1}={}){const o=a?renderCachedTemplate("systems/ffd20/templates/items/headers/spell-header.hbs",{...t,...await this.getDescriptionData({rollData:s,isolated:n}),chatcard:!0===e}):"";let r="";if(i){const e="<p class='placeholder'>"+game.i18n.localize("FFD20.NoDescription")+"</p>";r='<div class="description-body">'+(this.system.description.value||e)+"</div>"}let l="";return a&&i&&(l=`<h3 class="description-header">${game.i18n.localize("FFD20.Description")}</h3>`),o+l+r}async getDescriptionData({rollData:e,isolated:t=!1}={}){const s=await super.getDescriptionData({rollData:e,isolated:t}),a=this.system;s.system=a;const i=this.defaultAction,n=i??{};e??=i?.getRollData()??this.getRollData();const o=this.getLabels({rollData:e,isolated:t});if(s.labels=o,o.school=ffd20.config.spellSchools[a.school],o.multischool=ffd20.utils.i18n.join([...a.multischool.names??[]]),o.subschool=ffd20.utils.i18n.join([...a.subschool.names??[]]),o.descriptors=ffd20.utils.i18n.join([...a.descriptors.names??[]],"conjunction",!1),s.learnedAt={},a.learnedAt){const e=await ffd20.utils.packs.getClassIDMap();for(const t of["class","domain"])s.learnedAt[t]=ffd20.utils.i18n.join(Object.entries(a.learnedAt[t]).map((([t,s])=>`${e[t]||t} ${s}`)))}o.components=ffd20.utils.i18n.join(this.getSpellComponents());const r=n.effect;r&&(o.effect=r);{const e=n.save?.description;o.savingThrow=e||game.i18n.localize("FFD20.None");const t=a.sr;o.sr=(!0===t?game.i18n.localize("FFD20.Yes"):game.i18n.localize("FFD20.No")).toLowerCase(),"personal"!==n.range?.units&&(s.useDCandSR=!0)}return(n.save?.harmless??!1)&&(o.harmless=game.i18n.localize("FFD20.Yes").toLowerCase()),s}get slotCost(){return this.system.atWill?0:this.system.slotCost??1}getConcentrationDC(e="defensive",t={}){const s=this.system.level||0;switch(e){case"defensive":return 15+2*s;case"damage":return 15+s+(t.damage??0);default:throw Error(`Unrecgnized concentration check type: "${e}"`)}}}class ItemWeaponPF extends ItemPhysicalPF{async _preUpdate(e,t,s){if(await super._preUpdate(e,t,s),!e.system)return;if(!1===t.diff||!1===t.recursive)return;const a=e.system?.subType;if(null!=a&&a!==this.system.subType){const t=e.system.weaponSubtype??this.system.weaponSubtype??"",s=Object.keys(ffd20.config.weaponTypes[a]).filter((e=>!e.startsWith("_")));t&&s.includes(t)||(e.system.weaponSubtype=s[0])}}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t}),{weaponTypes:a}=ffd20.config;let i=this.system.subType;const n=Object.keys(a);n.includes(i)||(i=n[0]);let o=this.system.weaponSubtype;const r=Object.keys(a[i]).filter((e=>!e.startsWith("_")));return r.includes(o)||(o=r[0]),s.subType=a[i]._label,s.childType=a[i][o],s.properties=[...Object.entries(this.system.properties??{}).filter((([e,t])=>t)).map((([e])=>ffd20.config.weaponProperties[e]||e))],s}getTypeChatData(e,t,s,a,{actionId:i=null,chatcard:n=!1}={}){super.getTypeChatData(e,t,s,a,{actionId:i,chatcard:n}),this.showUnidentifiedData||t.weaponSubtype&&s.push(t.weaponSubtype)}getProficiency(e=!0){if(!e)throw Error("Weapons do not support non-weapon proficiency");return this.isProficient}get isProficient(){return!!this.system.proficient||(this.actor?.hasWeaponProficiency?.(this)??!0)}getWeightMultiplier(){return this._getArmorWeightMultiplier()}}class ItemImplantPF extends ItemPhysicalPF{static system=Object.freeze({...super.system,subtypeName:!0});_onCreate(e,t,s){super._onCreate(e,t,s),!0===this.system.implanted&&this.executeScriptCalls("implant",{implanted:!0})}_onDelete(e,t){super._onDelete(e,t),game.users.get(t)?.isSelf&&!0===this.system.implanted&&this.executeScriptCalls("implant",{implanted:!1})}_onUpdate(e,t,s){super._onUpdate(e,t,s);const a=e.system?.implanted;null!=a&&this.executeScriptCalls("implant",{implanted:a})}_activeStateChange(e){return e.system?.implanted}getLabels({actionId:e,rollData:t}={}){const s=super.getLabels({actionId:e,rollData:t});if(s.subType=ffd20.config.implantTypes[this.subType],"cybertech"===this.subType)s.slot=ffd20.config.implantSlots.cybertech[this.system.slot]??ffd20.config.implantSlots.cybertech.none;return s.equipped=this.system.implanted?'<i class="fa-solid fa-check"></i>':'<i class="fa-solid fa-times"></i>',s}adjustContained(){this.system.carried=!0,this.system.implanted=!1}prepareWeight(){super.prepareWeight();const e=this.system,t=e.weight;if(e.implanted&&(t.total=0,t.converted.total=0,e.quantity>1)){const s=t.value*this.getWeightMultiplier();t.total=s*(e.quantity-1),t.converted.total=ffd20.utils.convertWeight(t.total)}}get isActive(){return!(this.system.quantity<=0)&&(("cybertech"!==this.subType||!this.system.disabled)&&(this.system.implanted||!1))}get activeState(){return this.system.implanted||!1}async setActive(e,t){return this.update({"system.implanted":e},t)}}const $e=Object.freeze(Object.defineProperty({__proto__:null,ItemAttackPF,ItemBasePF,ItemBuffPF,ItemClassPF,ItemConsumablePF,ItemContainerPF,ItemEquipmentPF,ItemFeatPF,ItemImplantPF,ItemLootPF,ItemPF,ItemPhysicalPF,ItemRacePF,ItemSpellPF,ItemWeaponPF},Symbol.toStringTag,{value:"Module"})),We=Object.freeze(Object.defineProperty({__proto__:null,ActiveEffectPF,ChatMessagePF,CombatPF,CombatantPF,TokenDocumentPF,actor:qe,controls:je,item:$e,macros:s,settings:N},Symbol.toStringTag,{value:"Module"}));class IDField extends foundry.data.fields.StringField{constructor(e={},t){if(e.choices)throw Error("choices is not valid option for IDField");super(e,t)}static get _defaults(){const e=super._defaults;return e.required=!0,e.nullable=!1,e.blank=!1,e.readonly=!0,e.initial=()=>foundry.utils.randomID(16),e}_validateType(e){if("string"!=typeof e)throw Error("must be a string");if(!/^[a-z\d]+$/i.test(e))throw Error("must be alphanumeric")}}const Ge=Object.freeze(Object.defineProperty({__proto__:null,FormulaField,IDField},Symbol.toStringTag,{value:"Module"}));class PreparedModel extends foundry.abstract.DataModel{_initialize(e={}){super._initialize(e),this._safePrepareData()}_safePrepareData(){try{this.prepareData()}catch(e){console.error(e,this,{parent:this.parent})}}prepareData(){}}class DocumentLikeModel extends PreparedModel{static defineSchema(e){const t=foundry.data.fields;return{_id:new IDField,name:new t.StringField({required:!0,blank:!1,nullable:!1,initial:e.name})}}get id(){return this._id}}const Ve=Object.freeze(Object.defineProperty({__proto__:null,DocumentLikeModel,PreparedModel},Symbol.toStringTag,{value:"Module"}));class AEBaseModel extends foundry.abstract.TypeDataModel{static defineSchema(){const e=foundry.data.fields;return{end:new e.StringField({required:!1,blank:!1,choices:()=>ffd20.config.durationEndEvents,label:"FFD20.DurationEndTiming"}),initiative:new e.NumberField({required:!1,initial:void 0,nullable:!1,label:"FFD20.Initiative"}),level:new e.NumberField({required:!1,initial:void 0,integer:!0,nullable:!1,label:"FFD20.Level"})}}get item(){const e=this.parent?.parent;return e instanceof Item?e:null}}class AEBuffModel extends AEBaseModel{static defineSchema(){return foundry.data.fields,{...super.defineSchema()}}async _preCreate(e,t,s){await super._preCreate(e,t,s),e.disabled&&this.parent.updateSource({disabled:!1})}async _preUpdate(e,t,s){await super._preUpdate(e,t,s),delete e.disabled}async _preDelete(e,t){if(await super._preDelete(e,t),this.item?.isActive)return!1}get isTracker(){return!!this.item}}const Ze=Object.freeze(Object.defineProperty({__proto__:null,AEBaseModel,AEBuffModel},Symbol.toStringTag,{value:"Module"})),CompactingMixin=e=>class extends e{toObject(e=!0,t=!0){const s=super.toObject(e);return t&&this.constructor.pruneData(s),s}static pruneData(e){}};class DamagePartModel extends(CompactingMixin(foundry.abstract.DataModel)){static defineSchema(){const e=foundry.data.fields;return{formula:new FormulaField,types:new e.SetField(new e.StringField({blank:!1,nullable:!1}))}}static migrateData(e){return!e.types&&e.type&&(e.types=e.type?.values??[],"string"==typeof e.type?.custom&&e.type.custom.length&&e.types.push(e.type.custom.split(";").map((e=>e.trim())))),super.migrateData(e)}_initialize(e){super._initialize(e),Object.defineProperty(this,"type",{get(){foundry.utils.logCompatibilityWarning("DamagePartModel.type is deprecated in favor of DamagePartModel.types",{since:"PF1 v11",until:"PF1 v12"});const e=this.parsed;return{values:[...e.standard].map((e=>e.id)),custom:[...e.custom].join(";")}}})}static pruneData(e){e.formula||delete e.formula,e.types=e.types?.map((e=>e.trim())).filter((e=>!!e)),e.types?.length||delete e.types}get parsed(){const e={standard:new Set,custom:new Set,get all(){return[...this.standard,...this.custom]}};for(const t of this.types){const s=ffd20.registry.damageTypes.get(t);s?e.standard.add(s):e.custom.add(t)}return e}get names(){return this.parsed.all.map((e=>e.name||e))}get standard(){return this.parsed.standard}get custom(){return this.parsed.custom}}class ExtraAttackModel extends(CompactingMixin(foundry.abstract.DataModel)){static defineSchema(){return{name:new foundry.data.fields.StringField,formula:new FormulaField}}static migrateData(e){if(Array.isArray(e)){const[t,s]=e;e={formula:t,name:s}}return super.migrateData(e)}static pruneData(e){e.formula||delete e.formula,e.name||delete e.name}}const Je=Object.freeze(Object.defineProperty({__proto__:null,DamagePartModel,ExtraAttackModel},Symbol.toStringTag,{value:"Module"})),ReplaceableSourceMixin=e=>class extends e{replaceSource(e){e=foundry.utils.deepClone(e),this.constructor.migrateData(e);for(const[t,s]of Object.entries(this.schema.fields))s.readonly||t in e||t in this._source&&(e[t]=void 0);return this.updateSource(e)}},Ke=Object.freeze(Object.defineProperty({__proto__:null,CompactingMixin,ReplaceableSourceMixin},Symbol.toStringTag,{value:"Module"}));class BaseMessageModel extends(CompactingMixin(foundry.abstract.TypeDataModel)){static defineSchema(){const e=foundry.data.fields;return{subject:new e.ObjectField,reference:new e.StringField({initial:void 0,blank:!1,nullable:!1}),combat:new e.StringField,config:new e.ObjectField}}static pruneData(e){for(const[t,s]of Object.entries(e.subject??{}))"object"==typeof s&&delete e.subject[t];foundry.utils.isEmpty(e.subject)&&delete e.subject,e.reference||delete e.reference,e.combat||delete e.combat,foundry.utils.isEmpty(e.config)&&delete e.config}get skill(){return foundry.utils.logCompatibilityWarning("ChatMessagePF.flags.ffd20.metadata.skill.rank has been deprecated in favor of ChatMessagePF.system.config.rank",{since:"PF1 v11",until:"PF1 v12"}),{rank:this.config.rank}}}class ItemMessageModel extends BaseMessageModel{static defineSchema(){const e=foundry.data.fields;return{...super.defineSchema(),actor:new e.StringField,template:new e.StringField,item:new e.SchemaField({id:new e.StringField,name:new e.StringField,description:new e.HTMLField,identified:new e.BooleanField({initial:!0})})}}static migrateData(e){return"string"==typeof e.item&&(e.item={id:e.item}),super.migrateData(e)}static pruneData(e){super.pruneData(e),e.actor||delete e.actor,e.template||delete e.template,e.item&&(e.item.id||delete e.item.id,e.item.identified&&delete e.item.identified,e.item.description||delete e.item.description,e.item.name||delete e.item.name,foundry.utils.isEmpty(e.item)&&delete e.item)}}class ActionMessageModel extends ItemMessageModel{static defineSchema(){const e=foundry.data.fields;return{...super.defineSchema(),config:new e.SchemaField({critMult:new e.NumberField({initial:void 0,min:1,step:1,integer:!0}),nonlethal:new e.BooleanField({initial:!1,required:!1}),cl:new e.NumberField({initial:void 0,required:!1,integer:!0,min:0}),sl:new e.NumberField({initial:void 0,required:!1,integer:!0,min:0})}),rolls:new e.ObjectField,targets:new e.ArrayField(new e.StringField({initial:void 0,blank:!1,nullable:!1})),action:new e.SchemaField({id:new e.StringField,name:new e.StringField,description:new e.HTMLField}),save:new e.SchemaField({dc:new e.NumberField({initial:void 0,integer:!0,nullable:!1}),type:new e.StringField},{initial:void 0,required:!1})}}static migrateData(e){if(e)return"string"==typeof e.action&&(e.action={id:e.action}),void 0!==e.action?.dc&&(e.save??={},e.save.dc??=e.action?.dc),super.migrateData(e)}prepareBaseData(){super.prepareBaseData(),this.action&&Object.defineProperty(this.action,"dc",{get:()=>(foundry.utils.logCompatibilityWarning("ChatMessagePF.system.action.dc is deprecated in favor of ChatMessagePF.system.save.dc",{since:"PF1 v11.3",until:"PF1 v12"}),this.save?.dc)})}static pruneData(e){if(super.pruneData(e),e.rolls){if(e.rolls.attacks?.length>0)for(const t of e.rolls.attacks)t.critConfirm||delete t.critConfirm,t.critDamage?.length||delete t.critDamage,t.damage?.length||delete t.damage;else delete e.rolls.attacks;foundry.utils.isEmpty(e.rolls)&&delete e.rolls}e.targets?.length||delete e.targets,!1===e.config?.nonlethal&&delete e.config?.nonlethal,Number.isFinite(e.config?.sl)||delete e.config?.sl,Number.isFinite(e.config?.cl)||delete e.config?.cl,e.action&&(e.action.id||delete e.action.id,e.action.description||delete e.action.description,e.action.name||delete e.action.name,Number.isFinite(e.action.dc)||delete e.action.dc,foundry.utils.isEmpty(e.action)&&delete e.action),void 0===e.save?.dc&&delete e.save}}class CheckMessageModel extends BaseMessageModel{static defineSchema(){const e=foundry.data.fields;return{...super.defineSchema(),dc:new e.NumberField({initial:void 0,nullable:!1,integer:!0})}}static pruneData(e){super.pruneData(e),"number"!=typeof e.dc&&delete e.dc}}const Xe=Object.freeze(Object.defineProperty({__proto__:null,ActionMessageModel,BaseMessageModel,CheckMessageModel,ItemMessageModel},Symbol.toStringTag,{value:"Module"}));class HauntModel extends foundry.abstract.TypeDataModel{static defineSchema(){const e=foundry.data.fields;return{attributes:new e.SchemaField({hp:new e.SchemaField({base:new e.NumberField({initial:0,integer:!0,nullable:!1}),offset:new e.NumberField({initial:0,integer:!0,nullable:!1})}),init:new e.SchemaField({value:new e.NumberField({initial:10,integer:!0,nullable:!1})})}),templates:new e.ArrayField(new e.StringField({blank:!1})),traits:new e.SchemaField({size:new e.StringField({required:!0,initial:"med",choices:()=>ffd20.config.actorSizes})}),details:new e.SchemaField({alignment:new e.StringField({required:!0,initial:"tn",choices:()=>ffd20.config.alignments}),area:new e.SchemaField({size:new e.NumberField({initial:0,integer:!0,min:0,nullable:!1}),type:new e.StringField({initial:"circle",required:!0,choices:()=>ffd20.utils.internal.getTemplateTypes()})}),aura:new e.SchemaField({custom:new e.BooleanField({initial:!1}),school:new e.StringField}),cl:new e.NumberField({initial:1,integer:!0,min:1,nullable:!1}),cr:new e.SchemaField({base:new e.NumberField({initial:0,nullable:!1})}),destruction:new e.HTMLField,effect:new e.HTMLField,notes:new e.HTMLField,notice:new e.SchemaField({dc:new e.NumberField({initial:0,integer:!0,min:0,nullable:!1}),desc:new e.StringField,value:new e.StringField}),reset:new e.SchemaField({value:new e.StringField,units:new e.StringField({blank:!0,choices:()=>ffd20.config.timePeriods})}),trigger:new e.StringField,weakness:new e.StringField})}}static migrateData(e){const t=e.details?.alignment?.toLowerCase();t&&Object.keys(ffd20.config.alignments).includes(t)&&(e.details.alignment=t),"string"==typeof e.details?.aura&&(e.details.aura={custom:!0,school:e.details.aura}),"string"==typeof e.details?.area&&(e.details.area={size:e.details.area.match(/\d+/)?.[0]??0,type:"circle"}),"string"==typeof e.details?.reset&&(e.details.reset={value:e.details.reset,units:"spec"}),"string"==typeof e.details?.notice&&(e.details.notice={value:e.details.notice,dc:0}),"string"==typeof e.details?.notes?.value&&(e.details.notes=e.details.notes.value)}}class TrapModel extends foundry.abstract.TypeDataModel{static defineSchema(){const e=foundry.data.fields;return{bypass:new e.StringField({blank:!0,choices:()=>ffd20.config.traps.bypass}),cr:new e.SchemaField({base:new e.NumberField({initial:0,min:0,nullable:!1})}),disarm:new e.NumberField({initial:0,integer:!0,min:0,nullable:!1}),duration:new e.SchemaField({value:new e.StringField,units:new e.StringField({blank:!0,initial:"inst",choices:()=>ffd20.config.timePeriods})}),effect:new e.HTMLField,notes:new e.HTMLField,perception:new e.NumberField({initial:0,integer:!0,min:0,nullable:!1}),reset:new e.SchemaField({type:new e.StringField({blank:!0,choices:()=>ffd20.config.traps.reset}),value:new e.StringField,units:new e.StringField({blank:!0,initial:"inst",choices:()=>ffd20.config.timePeriods})}),trigger:new e.SchemaField({type:new e.StringField({blank:!0,choices:()=>ffd20.config.traps.trigger}),value:new e.StringField,vision:new e.StringField({blank:!0,choices:()=>ffd20.config.traps.vision}),units:new e.StringField({blank:!0,initial:"inst",choices:()=>ffd20.config.timePeriods})}),type:new e.StringField({initial:"mechanical"}),technology:new e.BooleanField({initial:!1})}}static migrateData(e){if(e.details){if(e.details.cr&&(e.cr??={base:e.details.cr.base}),["disarm","effect","perception"].forEach((t=>{e.details[t]&&(e[t]??=e.details[t])})),e.details.type){const t=e.details.type;for(const[s,a]of Object.entries(ffd20.config.traps.types))if(a===t){e.type??=s;break}e.type??=t}e.details.duration&&(e.duration??={value:e.details.duration,units:""}),e.details.reset&&(e.reset??={type:"automatic",value:e.details.reset,units:""}),e.details.trigger&&(e.duration??={type:"location",value:e.details.trigger,units:""}),"string"==typeof e.details?.notes?.value&&(e.notes=e.details.notes.value),delete e.details}}}class VehicleModel extends foundry.abstract.TypeDataModel{static defineSchema(){const e=foundry.data.fields;return{attributes:new e.SchemaField({ac:new e.SchemaField({normal:new e.SchemaField({bonus:new e.NumberField({initial:0,nullable:!1})}),touch:new e.SchemaField({bonus:new e.NumberField({initial:0,nullable:!1})}),stopped:new e.SchemaField({bonus:new e.NumberField({initial:0,nullable:!1})})}),hardness:new e.SchemaField({base:new e.NumberField({initial:0,nullable:!1,integer:!0}),bonus:new e.NumberField({initial:0,nullable:!1})}),hp:new e.SchemaField({bonus:new e.NumberField({initial:0,nullable:!1,integer:!0}),offset:new e.NumberField({initial:0,nullable:!1,integer:!0})}),init:new e.SchemaField({value:new e.NumberField({initial:0,nullable:!1,integer:!0})}),savingThrows:new e.SchemaField({save:new e.SchemaField({base:new e.NumberField({initial:0,nullable:!1,integer:!0})})})}),crew:new e.SchemaField({value:new e.NumberField({initial:0,integer:!0,min:0,nullable:!1}),max:new e.NumberField({initial:1,integer:!0,min:1,nullable:!1}),passengers:new e.NumberField({initial:0,integer:!0,min:0,nullable:!1})}),currency:new e.SchemaField({pp:new e.NumberField({initial:0,min:0,nullable:!1,integer:!0}),gp:new e.NumberField({initial:0,min:0,nullable:!1,integer:!0}),sp:new e.NumberField({initial:0,min:0,nullable:!1,integer:!0}),cp:new e.NumberField({initial:0,min:0,nullable:!1,integer:!0})}),material:new e.SchemaField({base:new e.StringField({}),magicallyHardened:new e.BooleanField({initial:!1})}),squares:new e.NumberField({initial:2,integer:!0,min:2,nullable:!1}),traits:new e.SchemaField({size:new e.StringField({required:!0,initial:"lg",choices:()=>ffd20.config.actorSizes}),type:new e.StringField({required:!0,initial:"land",choices:()=>ffd20.config.vehicles.type})}),details:new e.SchemaField({carryCapacity:new e.SchemaField({}),acceleration:new e.NumberField({initial:0,min:0,integer:!0,nullable:!1}),cost:new e.NumberField({initial:0,min:0,nullable:!1}),currentSpeed:new e.NumberField({initial:0,min:0,integer:!0,nullable:!1}),decks:new e.NumberField({initial:0,min:0,integer:!0,nullable:!1}),description:new e.HTMLField({}),drivingCheck:new e.StringField({}),drivingDevice:new e.StringField({}),drivingSpace:new e.StringField({}),forwardFacing:new e.StringField({}),maxSpeed:new e.NumberField({initial:0,min:0,integer:!0,nullable:!1}),propulsion:new e.StringField({}),notes:new e.HTMLField}),driver:new e.SchemaField({skill:new e.StringField,uuid:new e.StringField})}}static migrateData(e){e.details&&("number"==typeof e.details.hardness&&(e.attributes.hardness??={base:e.details.hardness,bonus:0},delete e.details.hardness),Number.isInteger(e.details.crew)&&(e.details.crew={value:e.details.crew,max:e.details.crew,passengers:0}),"string"==typeof e.details?.notes?.value&&(e.details.notes=e.details.notes.value))}}const Qe=Object.freeze(Object.defineProperty({__proto__:null,HauntModel,TrapModel,VehicleModel},Symbol.toStringTag,{value:"Module"})),Ye=Object.freeze(Object.defineProperty({__proto__:null,abstract:Ve,action:Je,actor:Qe,ae:Ze,chat:Xe,fields:Ge,mixin:Ke},Symbol.toStringTag,{value:"Module"})),et=Object.freeze(Object.defineProperty({__proto__:null,ActionUse,ChatAttack,ERR_REQUIREMENT:de},Symbol.toStringTag,{value:"Module"})),tt=new Set(["yes","true","1","y"]);async function findItem(e,{type:t}={}){const s=game.items.find((s=>ffd20.chat.enrichers.matchItem(s,{name:e,type:t})));if(s)return s.uuid;const a={items:1e3,world:2e3,module:3e3,system:4e3},i=[...game.packs].map((e=>({pack:e,visible:e.visible??!0,disabled:e.config.ffd20?.disabled??!1,sort:a[e.metadata.packageType]}))).filter((e=>!e.disabled&&e.visible&&"Item"===e.pack.metadata.type)).sort(((e,t)=>e.sort-t.sort));for(const{pack:s}of i){s.indexed||await s.getIndex();const a=s.index.find((s=>ffd20.chat.enrichers.matchItem(s,{name:e,type:t})));if(a)return a.uuid}return null}function getRollData(e){let t=e.actionSource??e.itemSource;t??=e.speaker?ChatMessage.getSpeakerActor(e.speaker):null;const s=t?.getRollData(),a=e.system?.config;return a&&s&&(void 0!==a.cl&&(s.cl=a.cl),void 0!==a.sl&&(s.sl=a.sl),void 0!==a.critMult&&(s.critMult=a.critMult)),s}class PF1TextEnricher{id;pattern;match;enricher;click(e,t){}drag(e,t){}constructor(e,t,s,{click:a,drag:i}={}){if(!(t instanceof RegExp))throw Error("TextEnricher pattern must be a regular expression");if(!t.global)throw Error("TextEnricher pattern must be global");this.id=e,this.pattern=t,this.enricher=s.bind(this),a&&(this.click=a),i&&(this.drag=i)}}function setIcon(e,t){const s=document.createElement("i");s.inert=!0,s.classList.add(...t.split(" ")),e.prepend(s," ")}function parseDuration(e){const t=/^(?<time>\d+)(?<unit>[a-z]+)?$/.exec(e);if(!t)return[];const{time:s,unit:a}=t.groups,i=(()=>{switch(a?.[0]?.toLowerCase()){default:case"r":return game.i18n.localize("FFD20.Time.Period.round.Label");case"s":return game.i18n.localize("FFD20.Time.Period.second.Label");case"h":return game.i18n.localize("FFD20.Time.Period.hour.Label");case"m":return game.i18n.localize("FFD20.Time.Period.minute.Label")}})();return[parseInt(s),a||"r",i]}function createElement({label:e,icon:t,click:s=!1,drag:a=!1,handler:i,options:n,broken:o=!1}={}){const r=document.createElement("a");return s||a?r.classList.add("pf1-link"):r.classList.add("pf1-info"),s&&r.classList.add("button"),a&&(r.classList.add("content"),r.draggable=!0),t&&setIcon(r,t),e&&r.append(e,": "),i&&(r.dataset.handler=i),o&&r.classList.add("broken"),setElementOptions(r,n),r.dataset.tooltipClass="ffd20",r}function getSpeakerData(e,t){return t??=getMessage(e),t?.speaker}function getMessage(e){const t=e.closest("[data-message-id]")?.dataset.messageId;return game.messages.get(t)}function getRelevantActors(e,t=!0){const s=[],a=e.dataset.as||(e.dataset.speaker?"speaker":null),i="speaker"===a,n="sheet"===a,o=["auto","context"].includes(a);if(i||o){const t=function getSpeaker(e,t){const s=getSpeakerData(e,t);if(s)return ChatMessage.implementation.getSpeakerActor(s)}(e);t&&s.push(t)}if(n||o){const t=function getSheetActor(e){const t=e.closest(".app[data-appid]")?.dataset.appid;return ui.windows[t]?.actor}(e);t&&s.push(t)}if(!a)if(canvas.tokens.controlled.length){const e=canvas.tokens.controlled.map((e=>e.actor));for(const t of e)t&&s.push(t)}else{const e=game.user.character;e&&s.push(e)}if(t&&0==s.length)throw ui.notifications.error(game.i18n.localize("FFD20.EnrichedText.Errors.NoActors"),{console:!1}),Error("No valid actors found.");return new Set(s)}function generateTooltip(e,t={}){const{roll:s,formula:a,bonus:i,speaker:n,name:o,level:r,as:l,card:c,dc:d}=e.dataset,u=[];o&&u.push(o),s?/d\d+/.test(s)?u.push(game.i18n.localize("FFD20.Roll")+": "+s):u.push(game.i18n.format("FFD20.TakeX",{number:s})):a&&u.push(a),r&&u.push(game.i18n.localize("FFD20.Level")+": "+r),i&&u.push(game.i18n.localize("FFD20.Bonus")+": "+i),(n||"speaker"===l)&&u.push(game.i18n.localize("FFD20.EnrichedText.AsSpeaker")),t.card&&(c?u.push(game.i18n.localize("FFD20.EnrichedText.AsCard")):u.push(game.i18n.localize("FFD20.EnrichedText.Direct"))),u.length&&(e.dataset.tooltip=u.join("<br>"))}function setElementOptions(e,t){if(t)for(const s of t.split(";")){const[t,a]=s.split("=",2);e.dataset[t]?e.dataset[t]+=";"+a:e.dataset[t]=a??!0}}function onSave(e,t){const s=getRelevantActors(t),a={},{roll:i,bonus:n,type:o,dc:r}=t.dataset;if(!o)throw Error("No save type defined");i&&(a.staticRoll=i),n&&(a.bonus=n),r&&(a.dc=parseInt(r));for(const e of s)e.rollSavingThrow(o,foundry.utils.deepClone(a))}function onAbility(e,t){const s=getRelevantActors(t),a={},{ability:i,bonus:n,roll:o}=t.dataset;if(!i)throw Error("No ability check type defined");o&&(a.staticRoll=o),n&&(a.bonus=n);for(const e of s)e.rollAbilityTest(i,foundry.utils.deepClone(a))}async function onDraw(e,t){const{ident:s}=t.dataset;if(!s)throw Error("No roll table defined");const a=await fromUuid(s);if(!a)throw Error(`Roll table not found for "${s}"`);await a.draw({roll:!0,displayChat:!0})}function onSkill(e,t){const s={},{skill:a,bonus:i,roll:n,info:o,dc:r}=t.dataset;if(!a)throw Error("No skill key defined");if(o){const e=ffd20.config.skillCompendiumEntries[a];if(!e)throw Error(`Journal entry not found for skill "${a}"`);return void ffd20.utils.openJournal(e)}n&&(s.staticRoll=n),i&&(s.bonus=i),r&&(s.dc=parseInt(r));const l=getRelevantActors(t);for(const e of l)e.rollSkill(a,foundry.utils.deepClone(s))}function onUse(e,t){const{type:s,item:a,action:i,speaker:n}=t.dataset;if(!a)throw Error("No item name defined");const o=getRelevantActors(t);for(const e of o){const t=e.items.find((e=>(!s||e.type===s)&&0==e.name.localeCompare(a,void 0,{usage:"search"})));if(!t){const t=game.i18n.format("FFD20.Warning.NoItemOnActor",{actor:e.name,item:a});ui.notifications.warn(t,{console:!1}),console.warn("FFD20 | @Use |",t,e);continue}let n;if(i){const s=/^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(i),{actionTag:a,actionId:o}=s?.groups??{},r=a||o?null:i;if(n=t.actions.find((e=>o?e.id===o:a?e.tag===a:0==e.name.localeCompare(r,void 0,{usage:"search"}))),!n){const s=game.i18n.format("FFD20.Warning.NoActionInItem",{item:t.name,action:i});ui.notifications.warn(s,{console:!1}),console.warn("FFD20 | @Use |",s,e);continue}n.use()}else t.use()}}function onAction(e,t){const{action:s}=t.dataset,a=t.closest(".chat-message[data-message-id]")?.dataset.messageId,i=game.messages.get(a),n=i.itemSource;if(!n){const e=game.i18n.format("FFD20.EnrichedText.Errors.NoItemInMessage");return ui.notifications.warn(e,{console:!1}),void console.warn("FFD20 | @Action |",e,i)}const o=n.actor,r=/^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(s),{actionTag:l,actionId:c}=r?.groups??{},d=l||c?null:s,u=n.actions.find((e=>c?e.id===c:l?e.tag===l:0==e.name.localeCompare(d,void 0,{usage:"search"})));if(!u){const e=game.i18n.format("FFD20.Warning.NoActionInItem",{item:n.name,actor:o.name});return ui.notifications.warn(e,{console:!1}),void console.warn("FFD20 | @Action |",e,o)}u.use()}async function onHealth(e,t){const{command:s,formula:a,speaker:i,nonlethal:n,wounds:o,manadamage:r,vars:l,dual:c,card:d}=t.dataset,u=getRelevantActors(t),m={};n&&(m.asNonlethal=!0),r&&(m.asManaDamage=!0),tt.has(c)&&(m.dualHeal=!0),o&&(m.asWounds=!0);const p=getMessage(t),h=getSpeakerData(t,p),f="target"===l;let g=f?null:getRollData(p);const y="heal"===s;if(d&&0==u.size)ffd20.chat.command(s,a,void 0,{rollData:g,speaker:h});else for(const i of u)if(f&&(g=i.getRollData()),d){const e=i.token?.name??i.name;ffd20.chat.command(s,a,game.i18n.format("FFD20.EnrichedText.Subject",{name:e}),{rollData:g,speaker:h})}else{let s=(await RollPF.safeRoll(a,g)).total;y&&(s=-s),i.applyDamage(s,{...m,event:e,element:t})}}function onBrowse(e,t){const{category:s,options:a}=t.dataset,i=ffd20.applications.compendiums[s],n={};n.tags=t.dataset.tag?.split(";").map((e=>e?.trim())),n.tags?.length&&i._queueFilters(n),i?i.render(!0,{focus:!0}):ui.notifications.error(game.i18n.format("FFD20.EnrichedText.Errors.BrowserNotFound",{category:s}))}async function onCondition(e,t){const{condition:s,toggle:a,remove:i,duration:n,options:o,vars:r,info:l}=t.dataset,c=ffd20.registry.conditions.getAliased(s);if(!c)throw Error(`Condition "${s}" not found!`);let d=!i,u=n;if(n&&!l){const[e,t]=parseDuration(n);if(e){u=e*({s:1,r:CONFIG.time.roundTime,m:60,h:3600}[t?.[0]]??CONFIG.time.roundTime)}}if(l){const e=c?.journal;if(!e)throw Error(`Journal entry not found for condition "${s}"`);return void ffd20.utils.openJournal(e)}const m="target"===r;let p;!u||Number.isFinite(u)||m||(p=getRollData(getMessage(t)),u=(await RollPF.safeRoll(u,p)).total*CONFIG.time.roundTime);const h=getRelevantActors(t);for(const e of h)!i&&u&&(Number.isFinite(u)?d={duration:{seconds:u}}:m?p=e.getRollData():p??=d={duration:{seconds:(await RollPF.safeRoll(u,p)).total*CONFIG.time.roundTime}}),a?e.toggleCondition(s,d):e.setCondition(s,d)}async function onApply(e,t){const{uuid:s,level:a,vars:i}=t.dataset,n=getRelevantActors(t);if(0==n.length)return;const o=await fromUuid(s);if(!o){const e=game.i18n.localize("FFD20.EnrichedText.Errors.ItemNotFound");return ui.notifications.warn(e,{console:!1}),void console.error("FFD20 | @Apply |",e,s)}if("buff"!==o.type)return void ui.notifications.error(game.i18n.format("FFD20.EnrichedText.Errors.UnsupportedItemType",{type:o.type}));const r=game.items.fromCompendium(o,{clearFolder:!0});let l;r.system.active=!0;const c="target"===i,d=getMessage(t);let u=c?null:getRollData(d);!c&&a?.length&&(l=await RollPF.safeRoll(a,u),r.system.level=l.total);for(const e of n){c&&a?.length&&(u=e.getRollData(),l=await RollPF.safeRoll(a,u),r.system.level=l.total);const t=e.itemTypes[o.type].find((e=>e._stats?.compendiumSource===s));if(t){const e={system:{active:!0}};l&&(e.system.level=l.total),t.update(e)}else Item.implementation.create(r,{parent:e})}}async function onToggle(e,t){const{name:s,level:a,enable:i,disable:n,type:o,vars:r}=t.dataset,l=getRelevantActors(t);if(0==l.length)return;let c;i?c=!0:n&&(c=!1);const d="target"===r,u=getMessage(t);let m=d?null:getRollData(u);for(const e of l){let t=e.items;o&&(t=e.itemTypes[o]);const i=t?.getName(s);if(i)if(console.debug(`FFD20 | @Toggle | Setting ${s} state to`,c??!i.activeState,`on ${e.name} [${e.uuid}]`),"buff"===o&&a){d&&(m=e.getRollData());const t=await RollPF.safeRoll(a,m);i.update({system:{active:c??!i.activeState,level:t.total}})}else i.setActive(c??!i.activeState);else console.debug(`FFD20 | @Toggle | ${s} not found on ${e.name} [${e.uuid}]`),1===l.size&&ui.notifications.error("FFD20.EnrichedText.Errors.ItemNotFound",{localize:!0})}}const st=[new PF1TextEnricher("apply",/@Apply\[(?<ident>.*?)(?:;(?<options>.*?))?\](?:\{(?<label>.*?)})?/g,(async(e,t)=>{const{ident:s,options:a,label:i}=e.groups,n=fromUuidSync(s)??fromUuidSync(await findItem(s,{type:"buff"}));n||console.warn("FFD20 | @Apply | Could not find item",s);const o=createElement({label:i,click:!0,handler:"apply",options:a,broken:!n});return n?(o.dataset.name=`${game.i18n.localize("DOCUMENT.Item")}: ${n.name}`,o.dataset.uuid=n.uuid,o.append(n.name),generateTooltip(o)):o.replaceChildren(s),setIcon(o,"fa-solid fa-angles-right"),o}),{click:onApply}),new PF1TextEnricher("toggle",/@Toggle\[(?<ident>.*?)(?:;(?<options>.*?))?\](?:\{(?<label>.*?)})?/g,(async(e,t)=>{const{ident:s,options:a,label:i}=e.groups;if(!s)throw Error("No target");const n=createElement({label:i,click:!0,handler:"toggle",options:a});return n.dataset.name=s.trim(),generateTooltip(n),n.append(i||s),n.dataset.enable?setIcon(n,"fa-solid fa-toggle-on"):n.dataset.disable?setIcon(n,"fa-solid fa-toggle-off"):setIcon(n,"fa-solid fa-shuffle"),n}),{click:onToggle}),new PF1TextEnricher("save",/@Save\[(?<save>\w+)(;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,((e,{rollData:t}={})=>{const{save:s,options:a,label:i}=e.groups,n=createElement({label:i,click:!0,handler:"save",options:a}),o=ffd20.config.savingThrows[s];let r=n.dataset.dc;if(r?.length&&!/^\d+$/.test(r)){n.dataset.formula=r;r=RollPF.safeRollSync(r,t,{formula:r},{},{minimize:!0}).total,n.dataset.dc=r}const l=r?.length?game.i18n.format("FFD20.SavingThrowButtonLabel",{type:o,dc:r}):o;return n.append(l),n.dataset.type=s,r?.length&&(n.dataset.sensitiveLabel=o),generateTooltip(n),setIcon(n,"fa-solid fa-shield-halved"),n}),{click:onSave}),new PF1TextEnricher("ability",/@Ability\[(?<ability>\w+)(;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,((e,t)=>{const{ability:s,label:a,options:i}=e.groups,n=createElement({label:a,click:!0,handler:"ability",options:i}),o=ffd20.config.abilities[s]??s;return n.dataset.ability=s,n.append(o),generateTooltip(n),setIcon(n,"fa-solid fa-brain"),n}),{click:onAbility}),new PF1TextEnricher("skill",/@Skill\[(?<skill>\w+)(;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,((e,{rollData:t})=>{const{skill:s,label:a,options:i}=e.groups,n=createElement({label:a,click:!0,handler:"skill",options:i}),o=ffd20.config.skills[s]??s;if(n.dataset.skill=s,n.dataset.info){if(!ffd20.config.skillCompendiumEntries[s])return;setIcon(n,"fa-solid fa-book")}else setIcon(n,"fa-solid fa-hands-clapping");let r=n.dataset.dc;if(r?.length&&!/^\d+$/.test(r)){n.dataset.formula=r;r=RollPF.safeRollSync(r,t,{formula:r},{},{minimize:!0}).total,n.dataset.dc=r}const l=r?.length?game.i18n.format("FFD20.SavingThrowButtonLabel",{type:o,dc:r}):o;return n.append(l),r?.length&&(n.dataset.sensitiveLabel=o),generateTooltip(n),n}),{click:onSkill}),new PF1TextEnricher("use",/@Use\[(?<item>.*?)(?:#(?<action>.*?))?(?:;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,((e,t)=>{const{item:s,action:a,label:i,options:n}=e.groups,o=createElement({label:i,click:!0,handler:"use",options:n});if(o.append(s?.trim()),o.dataset.item=s?.trim(),a){const e=a.replace(/^(id|tag):\s*/,"")?.trim();o.append(` (${e})`),o.dataset.action=a?.trim()}return generateTooltip(o),setIcon(o,"fa-solid fa-trowel"),o}),{click:onUse}),new PF1TextEnricher("action",/@Action\[(?<action>.*?)(?:;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,((e,t)=>{const{action:s,label:a,options:i}=e.groups,n=createElement({label:a,click:!0,handler:"action",options:i});return n.append(s),n.dataset.speaker=!0,n.dataset.action=s?.trim(),generateTooltip(n),setIcon(n,"fa-solid fa-trowel"),n}),{click:onAction}),new PF1TextEnricher("health",/@(?<command>Heal|Damage)\[(?<formula>.*?)(?:;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,((e,t)=>{const{command:s,formula:a,label:i,options:n}=e.groups,o=createElement({click:!0,handler:"health",options:n});return o.dataset.command=s.toLowerCase(),o.dataset.formula=a,o.append(game.i18n.format("FFD20.EnrichedText.Health."+s,{value:i||a,NL:o.dataset.nonlethal?game.i18n.localize("FFD20.EnrichedText.Health.NL"):""})),generateTooltip(o,{card:!0}),"heal"===o.dataset.command?setIcon(o,"fa-solid fa-heart-pulse"):setIcon(o,"fa-solid fa-heart-crack"),o}),{click:onHealth}),new PF1TextEnricher("browse",/@Browse\[(?<category>\w+)(?:;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,(e=>{const{category:t,label:s,options:a}=e.groups,i=createElement({click:!0,handler:"browse",options:a});let n;i.dataset.category=t;const o=ffd20.applications.compendiumBrowser.CompendiumBrowser.BROWSERS[t];return o?(setIcon(i,"fa-solid fa-book"),n=game.i18n.localize(o.typeName)):(setIcon(i,"fa-solid fa-link-slash"),i.classList.add("invalid"),n=t),n=game.i18n.format("FFD20.EnrichedText.Browse",{value:n}),s?i.append(s):i.append(n),generateTooltip(i),s&&(i.dataset.tooltip=n),o||(s&&(i.dataset.tooltip+="<br>"),i.dataset.tooltip+=game.i18n.localize("FFD20.EnrichedText.Error")+": "+game.i18n.localize("FFD20.EnrichedText.Errors.NoCategory")),i}),{click:onBrowse}),new PF1TextEnricher("weight",/@Weight\[(?<formula>.+?)(?:;(?<options>.*?))?\]/g,((e,t)=>{const{formula:s,options:a}=e.groups,i=createElement({options:a}),n=!!i.dataset.dual,o=/^(?<value>.+?)\s*(?<unit>lbs|kg)?$/.exec(s),{value:r,unit:l}=o?.groups??{};"kg"===l?(i.dataset.metric="true",delete i.dataset.imperial):"lbs"===l&&(i.dataset.imperial="true",delete i.dataset.metric);const c=!!i.dataset.metric,d=!c,u=RollPF.safeRollSync(r||"0",t).total;let m=u,p=u;d&&(p=ffd20.utils.swapWeight(u,"lbs")),c&&(m=ffd20.utils.swapWeight(u,"kg"));const h=`${ffd20.utils.limitPrecision(p,3)} ${ffd20.config.weightUnitsShort.kg}`,f=`${ffd20.utils.limitPrecision(m,3)} ${ffd20.config.weightUnitsShort.lbs}`,g="metric"==ffd20.utils.getWeightSystem();let y;return y=n?g?`${h} (${f})`:`${f} (${h})`:g?h:f,i.textContent=y,i})),new PF1TextEnricher("distance",/@Distance\[(?<formula>.+?)(?:;(?<options>.*?))?\]/g,((e,t)=>{const{formula:s,options:a}=e.groups,i=createElement({options:a}),n=!!i.dataset.dual,o=/^(?<value>.+?)\s*(?<unit>ft|m)?$/.exec(s),{value:r,unit:l}=o?.groups??{};"m"===l?(i.dataset.metric="true",delete i.dataset.imperial):"ft"===l&&(i.dataset.imperial="true",delete i.dataset.metric);const c=!!i.dataset.metric,d=!c,u=RollPF.safeRollSync(r||"0",t).total;let m=u,p=u;d&&(p=ffd20.utils.swapDistance(u,"ft")),c&&(m=ffd20.utils.swapDistance(u,"m"));const h=`${ffd20.utils.limitPrecision(p,3)} ${ffd20.config.measureUnitsShort.m}`,f=`${ffd20.utils.limitPrecision(m,3)} ${ffd20.config.measureUnitsShort.ft}`,g="metric"==ffd20.utils.getDistanceSystem();let y;return y=n?g?`${h} (${f})`:`${f} (${h})`:g?h:f,i.textContent=y,i.dataset.tooltip=s,i})),new PF1TextEnricher("condition",/@Condition\[(?<condition>\w+)(?:;(?<options>.*?))?](?:\{(?<label>.*?)})?/g,(e=>{const{condition:t,options:s,label:a}=e.groups;let i=ffd20.registry.conditions.getAliased(t);if(!i){const e=[...ffd20.registry.conditions.keys(),...[...ffd20.registry.conditions.values()].map((e=>[...e.aliases])).flat()].filter((e=>e.startsWith(t))).sort(((e,t)=>t.length-e.length))[0];i=ffd20.registry.conditions.getAliased(e)}let n=a||i?.name||t;const o=createElement({click:!0,handler:"condition",options:s,broken:!i});if(i||o.classList.add("broken"),o.dataset.condition=i?.id||t,o.dataset.disable&&(o.dataset.remove=!0),o.dataset.info?(setIcon(o,"fa-solid fa-book"),i?.journal||o.classList.add("broken")):o.dataset.remove?(setIcon(o,"fa-solid fa-minus"),o.dataset.tooltip=game.i18n.format("FFD20.EnrichedText.Remove",{value:n})):o.dataset.toggle?(setIcon(o,"fa-solid fa-plus-minus"),o.dataset.tooltip=game.i18n.format("FFD20.EnrichedText.Toggle",{value:n})):(setIcon(o,"fa-solid fa-plus"),o.dataset.tooltip=game.i18n.format("FFD20.EnrichedText.Add",{value:n})),o.dataset.duration){let[e,t,s]=parseDuration(o.dataset.duration);e||(e=o.dataset.duration,s=game.i18n.localize("FFD20.Time.Period.round.Label")),o.dataset.tooltip+="<br>"+game.i18n.format("FFD20.EnrichedText.Condition.Duration",{unit:s,period:e}),n=game.i18n.format("FFD20.ForDuration",{subject:n,duration:game.i18n.format("FFD20.Time.Format",{value:e,unit:s})})}return o.append(n),o}),{click:onCondition}),new PF1TextEnricher("draw",/@Draw\[(?<ident>.*?)\](?:\{(?<label>.*?)\})?/g,(async(e,t)=>{const{ident:s,label:a}=e.groups,i=fromUuidSync(s)||game.tables.getName(s);i||console.warn("FFD20 | @Draw | Could not find roll table",s);const n=createElement({click:!0,handler:"draw",broken:!i});return i?(n.dataset.name=`${game.i18n.localize("DOCUMENT.RollTable")}: ${i.name}`,n.dataset.ident=i.uuid,n.append(a||i.name),generateTooltip(n)):n.replaceChildren(s),setIcon(n,"fa-solid fa-th-list"),n}),{click:onDraw}),new PF1TextEnricher("source",/@Source\[(?<ident>\w+)(?:;(?<options>.*?))?]/g,(async(e,t)=>{const{ident:s,options:a}=e.groups;let i=ffd20.registry.sources.get(s);i||(i=ffd20.registry.sources.find((e=>e.abbr.toLowerCase()===s.toLowerCase())));const n=createElement({handler:"source",options:a,broken:!i});if(i){n.append(i.name);const e=n.dataset.pages;e&&n.append(" ",game.i18n.format("FFD20.ContentSource.Pages",{pages:e}));const t=[game.i18n.localize("FFD20.ContentSource.Info.ID")+": "+i.id];i.date&&t.push(game.i18n.localize("FFD20.ContentSource.Info.Release")+": "+i.date),i.publisher&&t.push(game.i18n.localize("FFD20.ContentSource.Info.Publisher")+": "+i.publisher),n.dataset.tooltip=t.join("<br>")}else n.replaceChildren(s);return setIcon(n,"fa-solid fa-bookmark"),n}))];Hooks.once("setup",(()=>{CONFIG.TextEditor.enrichers.push(...st)}));Hooks.once("ready",(()=>{$("body").on("click","a.pf1-link.button",(e=>((e,t=!0)=>{const s=e.currentTarget,a=s.dataset.handler,i=st.find((e=>e.id===a));if(!i)throw Error("Relevant enricher not found: "+a);s.classList.contains("broken")||(e.stopPropagation(),e.preventDefault(),t?i.click(e,s):i.drag(e,s))})(e,!0)))}));const at=Object.freeze(Object.defineProperty({__proto__:null,PF1TextEnricher,createElement,enrichers:st,findItem,generateTooltip,getRelevantActors,matchItem:function matchItem(e,t){const{name:s,type:a}=t;return e.name===s&&(!a||e.type===a)},onAbility,onAction,onApply,onBrowse,onCondition,onDraw,onHealth,onSave,onSkill,onToggle,onUse,setElementOptions},Symbol.toStringTag,{value:"Module"}));Hooks.on("chatMessage",(function handleChatInput(e,t,s){const a=/^\/(?<command>h|heal|d|damage)\s+(?<formula>.*?)(\s*#\s*(?<comment>.*))?$/i.exec(t);if(!a)return;const{command:i,formula:n,comment:o}=a.groups;return ffd20.chat.command(i,n,o,s),!1}));const it=Object.freeze(Object.defineProperty({__proto__:null,command:async function command(e,t,s,a){e=e.toLowerCase(),console.debug("FFD20 | Chat Command:",{command:e,formula:t,comment:s});let{speaker:i,rollData:n}=a;i=i??ChatMessage.implementation.getSpeaker();const o=ChatMessage.implementation.getSpeakerActor(i),r=o?.token;try{switch(e){case"d":case"damage":case"h":case"heal":{n??=o?.getRollData()??{};const a=await new Roll(t,n).evaluate(),l=/^H/i.test(e),c=await renderTemplate("systems/ffd20/templates/chat/simple-damage.hbs",{actor:o,token:r,isHealing:l,css:l?"heal":"damage",value:{total:a.total*(l?-1:1),half:Math.floor(a.total/2)*(l?-1:1)},roll:a,total:a.total,details:await a.getTooltip(),hasDetails:a.terms.length>1||!a.isDeterministic}),d={rolls:[a],flavor:s,sound:CONFIG.sounds.dice,speaker:i,rollMode:game.settings.get("core","rollMode"),content:c,system:{subject:{health:l?"healing":"damage"}}};ChatMessage.implementation.create(d)}}}catch(a){ui.notifications.error("FFD20.Error.CommandParse",{localize:!0,console:!1}),console.error("Error handling chat command:",{command:e,formula:t,comment:s},"\n",a)}},enrichers:at},Symbol.toStringTag,{value:"Module"})),withinRect=(e,t)=>e.x>=t.x&&e.x<t.x+t.width&&e.y>=t.y&&e.y<t.y+t.height;class TemplateLayerPF extends TemplateLayer{_onDragLeftMove(e){if(!game.settings.get("ffd20","measureStyle"))return super._onDragLeftMove(e);const t=e.interactionData,s=!e.shiftKey;if(s){const e=CONST.GRID_SNAPPING_MODES.CENTER|CONST.GRID_SNAPPING_MODES.EDGE_MIDPOINT|CONST.GRID_SNAPPING_MODES.CORNER;t.destination=this.getSnappedPoint(t.destination,{mode:e})}const{origin:a,destination:i,preview:n}=t,o=new Ray(a,i);let r;if(game.settings.get("core","gridTemplates"))r=canvas.grid.measurePath([a,i]).distance;else{const e=canvas.dimensions.size/canvas.dimensions.distance;r=o.distance/e}if(s&&"cone"===n.document.t){const e=CONFIG.MeasuredTemplate.defaults.angle/2,t=Math.normalizeDegrees(Math.toDegrees(o.angle));n.document.direction=Math.floor((t+e/2)/e)*e}else n.document.direction=Math.normalizeDegrees(Math.toDegrees(o.angle));n.document.distance=r,n.renderFlags.set({refreshShape:!0})}}class MeasuredTemplatePF extends MeasuredTemplate{_getTemplateSnapCoordinates(){let{x:e,y:t}=this.document;const s=canvas.grid;if("cone"===this.document.t&&game.canvas.grid.isSquare){const a=this.document.direction;a<=45||a>=315?e=Math.ceil(e/s.size)*s.size:a>=135&&a<=225&&(e=Math.floor(e/s.size)*s.size),a>=45&&a<=135?t=Math.ceil(t/s.size)*s.size:a>=225&&a<=315&&(t=Math.floor(t/s.size)*s.size)}return{x:e,y:t}}_setElementOffsets(){const{x:e,y:t}=this._getTemplateSnapCoordinates(),s=e-this.document.x,a=t-this.document.y;this.template.x=s,this.template.y=a,this.ruler.position.set(this.ray?.dx+10+s,this.ray?.dy+5+a)}_refreshRulerText(){super._refreshRulerText(),this._setElementOffsets()}_refreshPosition(){super._refreshPosition(),this._setElementOffsets()}_refreshTemplate(){super._refreshTemplate(),this._setElementOffsets()}_getGridHighlightPositions(){const e=this.document.t;if(!game.settings.get("ffd20","measureStyle")||"circle"!==e&&("cone"!==e||canvas.grid.isHexagonal))return super._getGridHighlightPositions();const t=canvas.grid,{x:s,y:a}=this._getTemplateSnapCoordinates(),i=s%t.size===Math.ceil(t.size/2)&&a%t.size===Math.ceil(t.size/2),n=this.shape.getBounds();n.x+=s,n.y+=a,n.fit(canvas.dimensions.rect),n.pad(1);const o=[],[r,l,c,d]=t.getOffsetRange(n);for(let n=r;n<c;n++)for(let r=l;r<d;r++){const l={i:n,j:r},{x:c,y:d}=t.getCenterPoint(l),u=t.measurePath([{x:c,y:d},{x:s,y:a}]).distance;switch(e){case"cone":{const e=Math.abs(180*Math.atan2(d-a,c-s)/Math.PI-this.document.direction)%360,i=this.document.angle/2;u<this.document.distance&&(e<=i||e>=360-i)&&o.push(t.getTopLeftPoint(l));break}case"circle":(i||canvas.grid.isHexagonal?u<=1.02*this.document.distance:u<this.document.distance)&&o.push(t.getTopLeftPoint(l))}}return o}async getTokensWithin(){const e=this.document.t,t=this.scene.dimensions,s=t.size,a=t.distance;this.shape||(this._applyRenderFlags({refreshShape:!0}),await new Promise((e=>canvas.app.ticker.addOnce((()=>e()))),void 0,PIXI.UPDATE_PRIORITY.LOW));const i=(()=>"rect"!==e?this.center:{x:this.x+this.width/2,y:this.y+this.height/2})(),{distance:n,angle:o,direction:r}=this.document,l=Math.max(this.height,this.width)+s+1,c=new Set(canvas.tokens.placeables.filter((e=>new Ray(e.center,i).distance-e.sizeErrorMargin<=l))),d=new Set,isLargeToken=e=>e.document.width>1||e.document.height>1,withinCone=(e,t,o)=>{const r=new Ray(i,e),l=Math.normalizeDegrees(Math.toDegrees(r.angle)),c=(u=o,m=l,d=Math.normalizeDegrees(d=t),u=Math.normalizeDegrees(u),m=Math.normalizeDegrees(m),d<u?m>=d&&m<=u:m>=d||m<=u);var d,u,m;const p=r.distance/s*a;return c&&p<=n+1};if("rect"===e){const e={x:this.x,y:this.y,width:this.shape.width,height:this.shape.height};for(const t of c)if(isLargeToken(t)){t.getOccupiedCells({center:!0}).some((t=>withinRect(t,e)))&&d.add(t)}else withinRect(t.center,e)&&d.add(t)}else if(canvas.grid.type===CONST.GRID_TYPES.GRIDLESS&&["circle","cone"].includes(e)){let t,l;"cone"===e&&(t=Math.normalizeDegrees(r-o/2),l=Math.normalizeDegrees(r+o/2));for(const o of c){const r=isLargeToken(o)?o.getOccupiedCells({center:!0}):[o.center];switch(e){case"circle":r.some((e=>new Ray(i,e).distance/s*a<=n+1))&&d.add(o);break;case"cone":r.some((e=>withinCone(e,t,l)))&&d.add(o)}}}else{const mapCoordsToCell=({x:e,y:t})=>({x:e,y:t,width:s,height:s}),e=this._getGridHighlightPositions().map(mapCoordsToCell);for(const t of e)for(const e of c){(isLargeToken(e)?e.getOccupiedCells({center:!0}):[e.center]).some((e=>withinRect(e,t)))&&(d.add(e),c.delete(e))}}return Array.from(d)}getHighlightLayer(){return canvas.interface.grid.getHighlightLayer(this.highlightId)}get origin(){const{uuid:e,action:t}=this.document.getFlag("ffd20","origin")??{};if(!e)return null;const s=fromUuidSync(e),a=s?.actions?.get(t);return a??s??null}}const nt={fill:Color.from("#FF0000"),border:Color.from("#FF0000").multiply(.9)},ot={fill:Color.from("#FFFF00"),border:Color.from("#FFFF00").multiply(.9)};class SquareHighlight{constructor(e,t=65280,s=0,a){this.origin=e,this.borderColor=s,this.fillColor=t,this._squares=[],this._id=foundry.utils.randomID(),this.name=a,this.layer=canvas.interface.grid.addHighlightLayer(this.name)}addSquare(e,t){this._squares.push({x:e,y:t})}clear(){this.layer?.clear()}render(){const e=canvas.grid.size;this.clear();const t=this.layer.name,s=canvas.interface.grid;for(const a of this._squares){const i=Math.floor(this.origin.x-a.x)*e,n=Math.floor(this.origin.y-a.y)*e;s.highlightPosition(t,{x:i,y:n,border:this.borderColor,color:this.fillColor})}}}class AttackHighlightBase{clearHighlight(){throw Error("must be overridden")}renderHighlight(){throw Error("must be overridden")}get isValid(){throw Error("must be overridden")}constructor(e,t){const s=t?.item;if(!t||!e||!s)throw Error("Invalid arguments.");this._id=foundry.utils.randomID(),this.name="AttackHighlight."+this._id,this.layer=canvas.interface.grid.addHighlightLayer(this.name)}}class GridlessHighlight extends AttackHighlightBase{#d;get isValid(){return(this.#d?.length??0)>=2}#u;constructor(e,t){super(e,t);const s=canvas.grid.size,a=e.document.width,i=e.document.height;this.#u={x:Math.floor(e.x+a*s/2),y:Math.floor(e.y+i*s/2)};const n=t.getRollData(),o=t.range.units;if(!["melee","touch","reach","ft","close","medium"].includes(o))return;const r=ffd20.utils.convertDistanceBack(t.getRange({type:"min",rollData:n}))[0],l=ffd20.utils.convertDistanceBack(t.getRange({type:"single",rollData:n}))[0],c=[r||0,l];if("ft"===o){const e=t.range.maxIncrements;for(let t=1;t<e;t++)c.push((t+1)*l)}this.#d=c.map((e=>{const t=0===e?0:a*s/2;return e*canvas.dimensions.distancePixels+t}))}clearHighlight(){if(this.isValid){const e=this.layer;if(!e)return;e.removeChildren(),this.#d=void 0}}renderHighlight(){if(this.isValid){const e=this.layer;if(!e)return;e.clear();const{x:t,y:s}=this.#u,a=new PIXI.Graphics,i=this.#d;for(let e=i.length-1;e>0;e--){const n=i[e],o=i[e-1],r=[nt,ot][(e+1)%2];a.beginFill(r.fill,.1),a.drawCircle(t,s,n),o&&(a.beginHole(),a.beginFill(ot.fill,.1),a.drawCircle(t,s,o),a.endHole())}a.endFill(),e.addChild(a)}}}class SquareGridHighlight extends AttackHighlightBase{#m;get isValid(){return!!this.#m}constructor(e,t){super(e,t);const s=canvas.grid.size,a=e.document.width,i=e.document.height,n={x:Math.floor((e.x+a*s-.5*s)/s),y:Math.floor((e.y+i*s-.5*s)/s)},o=t.getRollData(),r=t.range.units;if(!["melee","touch","reach","ft","close","medium"].includes(r))return;const l="ft"===r,c=ffd20.utils.convertDistanceBack(t.getRange({type:"min",rollData:o}))[0],d=ffd20.utils.convertDistanceBack(t.getRange({type:"single",rollData:o}))[0],u={normal:[],extra:[]},m=!0!==game.settings.get("ffd20","alternativeReachCornerRule");if(u.normal=this.#p(e,d,c,{useReachRule:!!l||m}),l){const s=ffd20.utils.convertDistance(d)[0],a=game.settings.get("ffd20","performance").reachLimit,i=Math.min(a,Math.max(canvas.dimensions.width/canvas.dimensions.distancePixels,canvas.dimensions.height/canvas.dimensions.distancePixels)+s),n=t.range.maxIncrements;for(let t=1;t<n;t++)(t+1)*s<=i&&u.extra.push(this.#p(e,(t+1)*d,t*d,{useReachRule:m}))}const p={normal:new SquareHighlight(n,nt.fill,nt.border,this.name+".base"),extra:[]};for(const e of u.normal)p.normal.addSquare(e[0],e[1]);for(let e=0;e<u.extra.length;e++){const t=u.extra[e],s={fill:e%2==1?nt.fill:ot.fill,border:e%2==1?nt.border:ot.border},a=new SquareHighlight(n,s.fill,s.border,this.name+"."+e);for(const e of t)a.addSquare(e[0],e[1]);p.extra.push(a)}this.#m=p}#p(e,t,s=0,a){const i=[];if(canvas.grid.type!==CONST.GRID_TYPES.SQUARE)return i;t=ffd20.utils.convertDistance(t)[0],"number"==typeof s&&(s=ffd20.utils.convertDistance(s)[0]);const n=canvas.scene.grid.distance,o=canvas.grid.size,r=[];for(let t=0;t<Math.floor(e.w/o);t++)for(let s=0;s<Math.floor(e.h/o);s++){const a=Math.floor((e.x+.5*o)/o+t),i=Math.floor((e.y+.5*o)/o+s);r.push([a,i])}const l=[Math.floor((e.x+.5*o)/o),Math.floor((e.y+.5*o)/o),Math.floor(e.w/o),Math.floor(e.h/o)],getClosestTokenSquare=e=>{const t={square:null,dist:null};for(const s of r){const a=Math.sqrt((s[0]-e[0])**2+(s[1]-e[1])**2);(null==t.dist||a<t.dist)&&(t.square=s,t.dist=a)}return t.square},c=Math.round(t/n),d=2*c+l[2],u=2*c+l[3],m=[l[0]-c,l[1]-c];for(let e=m[0];e<m[0]+d;e++)for(let n=m[1];n<m[1]+u;n++){const o=getClosestTokenSquare([e,n]),r=[e-l[0],n-l[1]];e>=l[0]&&e<l[0]+l[2]&&n>=l[1]&&n<l[1]+l[2]&&null!=s||!this.#h([e,n],o,t,s,a)||i.push(r)}return i}#h(e,t,s,a,{useReachRule:i=!1}={}){const n=canvas.grid.size,o={x:t[0]*n,y:t[1]*n},r={x:e[0]*n,y:e[1]*n},l=canvas.grid.measurePath([o,r]).distance,c=i?new foundry.grid.SquareGrid({size:canvas.grid.size,distance:canvas.grid.distance,diagonals:CONST.GRID_DIAGONALS.EQUIDISTANT}).measurePath([o,r]).distance:null,d=ffd20.utils.convertDistance(10)[0];return!(l>s&&(!i||s!==d))&&(!(null!=a&&l<=a)&&!(i&&a>=d&&c<=d))}clearHighlight(){if(this.#m){this.#m.normal.clear();for(const e of this.#m.extra)e.clear();this.#m=void 0}}renderHighlight(){if(this.#m){this.#m.normal.render();for(const e of this.#m.extra)e.render()}}}let rt;const showAttackReach=(e,t)=>{clearHighlight();const s=canvas.grid.type===CONST.GRID_TYPES.SQUARE?SquareGridHighlight:GridlessHighlight;try{const a=new s(e,t);if(!a.isValid)return;rt=a,rt.renderHighlight()}catch{}},clearHighlight=()=>{rt?.clearHighlight(),rt=void 0};function addReachListeners(e){e.on("pointerenter",".card-range",_onMouseEnterReach),e.on("pointerleave",".card-range",_onMouseLeaveReach)}const _onMouseEnterReach=e=>{if(e.preventDefault(),game.settings.get("ffd20","performance").reachLimit<10)return;const t=e.currentTarget.closest(".chat-card"),{tokenUuid:s,actionId:a,itemId:i}=t.dataset;i&&a&&s&&async function(e){if(!e)return;const t=await fromUuid(e);return t instanceof TokenDocument?t.object:t?.token??(null!=t?canvas.tokens.placeables.find((e=>e.actor===t)):null)}(s).then((e=>{if(!e)return;const t=e.actor.allItems.find((e=>e.id===i)),s=t?.actions.get(a);s&&showAttackReach(e,s)}))},_onMouseLeaveReach=e=>{e.preventDefault(),clearHighlight()},lt=Object.freeze(Object.defineProperty({__proto__:null,addReachListeners,clearHighlight,showAttackReach},Symbol.toStringTag,{value:"Module"}));const LLVMixin=e=>class extends e{_getLightSourceData(){const e=super._getLightSourceData(),{dim:t,bright:s}=this.getRadius(e.dim,e.bright);return void 0!==e.dim&&(e.dim=t),void 0!==e.bright&&(e.bright=s),e}getRadius(e,t){const s={dim:e,bright:t};let a={dim:1,bright:1};if(!game.settings.get("ffd20","systemVision"))return s;if(this.document.getFlag("ffd20","disableLowLight"))return s;const hasSystemVision=e=>!0!==e.getFlag("ffd20","customVisionRules"),i=this.object?.document;if(i&&!hasSystemVision(i))return s;const n=game.user.isGM||game.settings.get("ffd20","lowLightVisionMode"),o=canvas.tokens.placeables.filter((e=>{const t=e.document;return e.actor?.testUserPermission(game.user,"OBSERVER")&&(!n||e.controlled)&&hasSystemVision(t)})),r=o.filter((e=>!0===e.actorVision.lowLight));if(n){if(r.length&&r.length===o.length){a={dim:999,bright:999};for(const e of r){const t=e.actorVision;a.dim=Math.min(a.dim,t.lowLightMultiplier),a.bright=Math.min(a.bright,t.lowLightMultiplierBright)}}}else for(const e of r){const t=e.actorVision;a.dim=Math.max(a.dim,t.lowLightMultiplier),a.bright=Math.max(a.bright,t.lowLightMultiplierBright)}return s.dim*=a.dim,s.bright*=a.bright,s}};function reinitLightSources(){for(const{object:e}of canvas.effects.lightSources)e.initializeLightSource?.()}const ct=foundry.utils.debounce(reinitLightSources,100);Hooks.on("renderAmbientLightConfig",((e,t)=>ffd20.canvas.lowLightVision.addLowLightVisionToLightConfig(e,t)));const dt=Object.freeze(Object.defineProperty({__proto__:null,LLVMixin,addLowLightVisionToLightConfig:function addLowLightVisionToLightConfig(e,t){const s=e.document,a=(new foundry.data.fields.BooleanField).toFormGroup({label:game.i18n.localize("FFD20.SETTINGS.DisableLLV.Label"),hint:game.i18n.localize("FFD20.SETTINGS.DisableLLV.Hint")},{name:"flags.ffd20.disableLowLight",value:s.getFlag("ffd20","disableLowLight")??!1}),i=document.createElement("fieldset"),n=document.createElement("legend");n.innerText=game.i18n.localize("FFD20.Title"),i.append(n,a),t.querySelector('section.tab[data-tab="advanced"]').append(i)},debouncedLightSourceReInit:ct,reinitLightSources},Symbol.toStringTag,{value:"Module"}));class TokenPF extends Token{get actorVision(){const e=this.actor.system.traits?.senses?.ll??{};return{lowLight:e.enabled,lowLightMultiplier:e.multiplier?.dim,lowLightMultiplierBright:e.multiplier?.bright}}get disableLowLight(){return!0===this.document.getFlag("ffd20","disableLowLight")}_onControl(e){super._onControl(e),ffd20.canvas.lowLightVision.debouncedLightSourceReInit()}_onRelease(e){super._onRelease(e),ffd20.canvas.lowLightVision.debouncedLightSourceReInit()}_isVisionSource(){if(!canvas.visibility.tokenVision||!this.hasSight)return!1;const e=game.user.isGM;if(this.document.hidden&&!e)return!1;if(this.controlled)return!0;if(e)return!1;if(!0===this.actor?.sharesVision)return!0;const t=game.settings.get("ffd20","guaranteedVision");return!!(this.actor?.testUserPermission(game.user,t)??!1)&&!this.layer.controlled.some((e=>!e.document.hidden&&e.hasSight))}_getBarBoost(e){return"attributes.hp"===e.attribute?{value:this.actor.system.attributes.hp.temp,color:12637924}:"attributes.vigor"===e.attribute?{value:this.actor.system.attributes.vigor.temp,color:12637924}:null}_getBarUnderline(e){return"attributes.hp"===e.attribute?{value:this.actor.system.attributes.hp.nonlethal,color:8202280}:null}_drawBar(e,t,s){const a=this._getBarBoost(s),i=this._getBarUnderline(s),n=s.max,o=Number(s.value);s.max=Math.max(s.max,(a?.value??0)+o);const r=Math.clamp(o,0,s.max)/s.max,l=Math.clamp(o,0,n)/n;let c=Math.max(canvas.dimensions.size/12,8);const d=this.w,u=Math.clamp(c/8,1,2);this.document.height>=2&&(c*=1.6);let m;if(m=0===e?Color.fromRGBvalues(1-l/2,l,0):Color.fromRGBvalues(.5*l,.7*l,.5+l/2),t.clear(),t.beginFill(0,.5).lineStyle(u,0,1).drawRoundedRect(0,0,this.w,c,3),a?.value>0){const e=Math.clamp(o+a.value,0,s.max)/s.max;t.beginFill(a.color,1).lineStyle(u,0,1).drawRoundedRect(0,0,e*d,c,2)}if(t.beginFill(m,1).lineStyle(u,0,1).drawRoundedRect(0,0,r*d,c,2),i?.value>0){const e=Math.clamp(i.value,0,s.max)/s.max;t.beginFill(i.color,1).lineStyle(u,0,1).drawRoundedRect(0,c/2,e*d,c/2,2)}const p=0===e?this.h-c:0;t.position.set(0,p)}get sizeErrorMargin(){return Math.max(this.w/2,this.h/2)}getOccupiedCells({center:e=!1}={}){const t=this.document,s=this.scene.grid.size??1,{x:a,y:i,width:n,height:o}=t,r=e?s/2:0,l=[],c=n-1,d=o-1;for(let e=0;e<=c;e++)for(let t=0;t<=d;t++)l.push({x:a+e*s+r,y:i+t*s+r});return l}get isSquare(){return this.document.width===this.document.height}}class DetectionModeInvisibilityPF extends DetectionModeInvisibility{static ID="seeInvisibility";static LABEL="FFD20.Sense.seeInvis";static PRIORITY=1e5;_testPoint(e,t,s,a){if(!this._testLOS(e,t,s,a))return!1;if(this._testRange(e,t,s,a))return!0;if(t.limited)return!1;const{x:i,y:n}=a.point;for(const e of canvas.effects.lightSources.values())if(e.active&&e.shape.contains(i,n))return!0;return!1}}class DetectionModeBlindSensePF extends DetectionMode{static ID="blindSense";static LABEL="FFD20.Sense.blindsense";static DETECTION_TYPE=DetectionMode.DETECTION_TYPES.OTHER;static PRIORITY=200100;constructor(e={},...t){e.walls=!0,super(e,...t)}static getDetectionFilter(){return this._detectionFilter??=OutlineOverlayFilter.create({outlineColor:[0,.33,.6,1],knockout:!1,wave:"blindSense"===this.ID})}_canDetect(e,t){return!0}}class DetectionModeBlindSightPF extends DetectionModeBlindSensePF{static ID="blindSight";static LABEL="FFD20.Sense.blindsight";static DETECTION_TYPE=DetectionMode.DETECTION_TYPES.OTHER;static PRIORITY=2e5;static getDetectionFilter(){return this._detectionFilter??=OutlineOverlayFilter.create({outlineColor:[0,.33,.6,1],knockout:!1,wave:!1})}}class DetectionModeLifesensePF extends DetectionMode{static ID="lifesense";static LABEL="FFD20.Sense.lifesense";static DETECTION_TYPE=DetectionMode.DETECTION_TYPES.OTHER;static PRIORITY=200200;static getDetectionFilter(){return this._detectionFilter??=OutlineOverlayFilter.create({outlineColor:[1,.1,.2,1],knockout:!1,wave:"lifesense"===this.ID})}_canDetect(e,t){const s=super._canDetect(e,t);if(s){const e=t.actor?.system?.traits;if(!e?.living)return!1}return s}}class DetectionModeTremorPF extends DetectionModeTremor{static ID="feelTremor";static LABEL="FFD20.Sense.tremorsense";static DETECTION_TYPE=DetectionMode.DETECTION_TYPES.MOVE;static PRIORITY=201e3;constructor(e={},...t){e.walls=!1,super(e,...t)}_canDetect(e,t){const s=super._canDetect(e,t);return(!s||!t.document.hasStatusEffect(CONFIG.specialStatusEffects.SWIM))&&s}}const ut=Object.freeze(Object.defineProperty({__proto__:null,DetectionModeBlindSensePF,DetectionModeBlindSightPF,DetectionModeInvisibilityPF,DetectionModeLifesensePF,DetectionModeTremorPF},Symbol.toStringTag,{value:"Module"})),mt=(()=>{const e=CONFIG.Canvas.visionModes.darkvision.toObject();return delete e.lighting.levels[VisionMode.LIGHTING_LEVELS.DIM],new VisionMode(e)})(),pt=Object.freeze(Object.defineProperty({__proto__:null,darkvision:mt},Symbol.toStringTag,{value:"Module"}));class TokenHUDPF extends TokenHUD{_getStatusEffectChoices(){const e=super._getStatusEffectChoices(),t={},s=this.object.actor?.itemTypes.buff??[];for(const e of s){const s="buff-"+e.id;t[s]={_id:s,id:s,title:e.name,src:e.img,isActive:e.isActive,isOverlay:!1,cssClass:e.isActive?"active":""}}const a=this.actor.statuses,i=new Set;for(const e of a){const t=ffd20.registry.conditions.get(e);for(const e of t.statuses)i.add(e)}for(const t of a){const s=e[t];s.isActive||(i.has(t)?s.cssClass+=" auxiliary":(s.isActive=!0,s.cssClass+=" active"))}return{...e,...t}}activateListeners(e){super.activateListeners(e),this.addQuickActions(this,e[0])}_onRender(e,t){super._onRender(e,t),this.addQuickActions(this,this.element)}async addQuickActions(e,t){const s=e.object,a=s.actor,i=a?.getQuickActions?.();if(!i?.length)return;const n={actions:i},o=document.createElement("template");o.innerHTML=renderCachedTemplate("systems/ffd20/templates/hud/quick-actions.hbs",n);const r=o.content;this.addQuickActionListeners(r),Hooks.callAll("pf1RenderQuickActions",e,s,r),t.querySelector(".col.middle").after(r)}addQuickActionListeners(e){const t=game.settings.get("ffd20","performance").reachLimit>=10,s=this.object,a=s.actor;for(const i of e.querySelectorAll(".token-quick-action"))if(i.addEventListener("click",(e=>{e.preventDefault();const t=e.target.dataset.itemId,i=a.items.get(t);e.ctrlKey?i.displayCard({token:s.document}):i.use({ev:e,token:s.document,skipDialog:getSkipActionPrompt()})})),i.addEventListener("contextmenu",(e=>{e.preventDefault();const t=e.target.dataset.itemId;a.items.get(t).sheet.render(!0,{focus:!0})})),t){const e=i.dataset.itemId,t=a.items.get(e).defaultAction;i.addEventListener("pointerenter",(()=>showAttackReach(s,t)),{passive:!0}),i.addEventListener("pointerleave",(()=>clearHighlight()),{passive:!0})}}}const ht=Object.freeze(Object.defineProperty({__proto__:null,AbilityTemplate:class AbilityTemplate extends MeasuredTemplatePF{static RENDER_THROTTLE=30;static fromData(e,{action:t}={}){const{type:s,distance:a,flags:i}=e;if(!s||!a||!canvas.scene)return null;if(!["cone","circle","rect","ray"].includes(s))return null;const n={t:s,distance:a||game.system.grid.distance,direction:0,x:0,y:0,flags:i,fillColor:e.color?e.color:game.user.color,texture:e.texture?e.texture:null};switch(s){case"cone":n.angle=game.settings.get("ffd20","measureStyle")?game.canvas.grid.isHexagonal?60:CONFIG.MeasuredTemplate.defaults.angle:CONFIG.MeasuredTemplate.defaults.originalAngle;break;case"rect":n.distance=Math.sqrt(Math.pow(a,2)+Math.pow(a,2)),n.direction=45;break;case"ray":n.width=CONFIG.MeasuredTemplate.defaults.width}const o=new this(new(0,CONFIG.MeasuredTemplate.documentClass)(n,{parent:canvas.scene}));return o.action=t,o}async drawPreview(e){const t=canvas.activeLayer;return await this.draw(),this.layer.activate(),this.layer.preview.addChild(this),this.activatePreviewListeners(t)}pfStyle=!0;#f;#g;activatePreviewListeners(e){return this.#g=e,this.pfStyle=!0===game.settings.get("ffd20","measureStyle"),new Promise(((e,t)=>{this.#f={confirm:this._onConfirm.bind(this),cancel:this._onCancel.bind(this),move:this._onMove.bind(this),rotate:this._onRotate.bind(this),resolve:e,reject:t},this.controlIcon&&this.controlIcon.removeAllListeners(),canvas.stage.on("pointermove",this.#f.move),canvas.stage.on("click",this.#f.confirm),canvas.app.view.addEventListener("contextmenu",this.#f.cancel),canvas.app.view.addEventListener("wheel",this.#f.rotate)}))}#y=0;_onMove(e){e.stopPropagation();const t=performance.now();if(t-this.#y<=this.constructor.RENDER_THROTTLE)return;const s=CONST.GRID_SNAPPING_MODES.CENTER|CONST.GRID_SNAPPING_MODES.EDGE_MIDPOINT|CONST.GRID_SNAPPING_MODES.CORNER,a=e.data.getLocalPosition(this.layer),i=canvas.grid.getSnappedPoint(a,{mode:s});this.document.updateSource({x:i.x,y:i.y}),this.refresh(),this.#y=t}_onCancel(e){console.debug("FFD20 | Cancelling template placement for",this.action?.item?.name??"unknown"),this._onFinish(e),this.#f.reject()}_onConfirm(e){if(console.debug("FFD20 | Placing template for",this.action?.item?.name??"unknown"),this._onFinish(e),!this.document.distance)return this.#f.reject();const t={result:!0,place:async()=>(this.document=await MeasuredTemplateDocument.create(this.document.toObject(!1),{parent:canvas.scene}),this.document),delete:()=>this.document.delete()};this.#f.resolve(t)}_onRotate(e){e.preventDefault(),e.stopPropagation();let t,{distance:s,direction:a}=this.document;if(e.ctrlKey)t=canvas.dimensions.distance*-Math.sign(e.deltaY),s+=t,s<0&&(s=0);else{let i;this.pfStyle&&"cone"===this.document.t?(t=game.canvas.grid.isHexagonal?60:90,i=e.shiftKey?t:game.canvas.grid.isHexagonal?30:45):(t=canvas.grid.type>CONST.GRID_TYPES.SQUARE?30:15,i=e.shiftKey?t:5),"rect"===this.document.t?(i=Math.sqrt(50),s+=i*-Math.sign(e.deltaY)):a+=i*Math.sign(e.deltaY)}this.document.updateSource({distance:s,direction:a}),this.refresh()}_onClickRight(e){e.stopPropagation()}_onFinish(e){this.layer._onDragLeftCancel(e),canvas.stage.off("pointermove",this.#f.move),canvas.stage.off("click",this.#f.confirm),canvas.app.view.removeEventListener("contextmenu",this.#f.cancel),canvas.app.view.removeEventListener("wheel",this.#f.rotate),this.#g.activate()}},MeasuredTemplatePF,TemplateLayerPF,TokenHUDPF,TokenPF,attackReach:lt,detectionModes:ut,lowLightVision:dt,visionModes:pt},Symbol.toStringTag,{value:"Module"}));class D20RollPF extends RollPF{options;static standardRoll="1d20";constructor(e,t,s={},a={}){super(e,t,s),this.options=foundry.utils.mergeObject(this.constructor.defaultOptions,s),Number.isFinite(this.options.critical)||delete this.options.critical,this.options.check&&delete this.options.check,this.options.flavor||delete this.options.flavor,Number.isFinite(this.options.staticRoll)||delete this.options.staticRoll,this.options.bonus||delete this.options.bonus,Number.isFinite(this.options.dc)||delete this.options.dc,this.context=a,this._applyStaticRoll()}_applyStaticRoll(e=!1){if(!1===this.options.check)return;if(this._evaluated&&!0!==e)return;const t=this.d20,s=t.total,a=t instanceof foundry.dice.terms.NumericTerm,i=t instanceof foundry.dice.terms.Die;if(a)this.options.staticRoll=s;else if(!i)throw Error("Invalid D20RollPF formula provided: "+this._formula);if(!this.isStatic)return;const n=i?t.toJSON():{};n.number=1,n.faces=20,n.results=[{result:this.options.staticRoll,active:!0}],n.method="manual",n.evaluated=!0,this.terms[0]=new foundry.dice.terms.Die(n)}static get defaultOptions(){return{critical:20}}static DIALOG_TEMPLATE="systems/ffd20/templates/chat/roll-dialog.hbs";static CHAT_TEMPLATE="systems/ffd20/templates/chat/roll-ext.hbs";static STATIC_ROLL={TEN:10,TWENTY:20};get d20(){return this.terms[0]}get isCheck(){return!1!==this.options.check}get isCrit(){if(this._evaluated)return!!Number.isFinite(this.options.critical)&&this.d20.total>=this.options.critical}get isNat20(){if(this._evaluated)return 20===this.d20.total}get isNat1(){if(this._evaluated)return 1===this.d20.total}get dc(){return this.options.dc}get isSuccess(){if(!this._evaluated)return;const e=this.dc;return Number.isFinite(e)?e<=this.total:void 0}get isFailure(){if(!this._evaluated)return;const e=this.dc;return Number.isFinite(e)?e>this.total:void 0}get offset(){return this._evaluated?this.total-this.dc:NaN}get overBy5(){return Math.floor(this.offset/5)}get isMisfire(){if(this._evaluated)return this.natural<=(this.options.misfire??0)}get natural(){if(this._evaluated)return this.d20.total}get isStatic(){return Number.isFinite(this.options.staticRoll)||"manual"===this.d20.method}get isNonRoll(){return"Die"!==this.d20.constructor.name&&!1===this.options.check}get isNormal(){return this.d20.expression===this.constructor.standardRoll}get bonus(){if(this._evaluated)return this.total-this.natural}get formula(){let e=this.constructor.getFormula(this.terms);const t=this.constructor.parse(""+this.options.bonus,this.data);return this.options.bonus&&!this._evaluated&&(e+=" + "+this.constructor.getFormula(t)),e}get flavor(){return this.options.flavor}async promptDialog(e={}){const{rollMode:t=game.settings.get("core","rollMode"),template:s=this.constructor.DIALOG_TEMPLATE}=e,a=this.isStatic?this.options.staticRoll:this.d20.formula,i=Number.isFinite(e.dc),n=game.user.isGM||!i||!game.settings.get("ffd20","obscureSaveDCs"),o={check:!0,data:this.data,rollMode:e.rollMode||t,rollModes:CONFIG.Dice.rollModes,d20:a===ffd20.dice.D20RollPF.standardRoll?"":a,bonus:this.options.bonus||e.bonus,dc:e.dc,editDC:n};let r=e.title||game.i18n.localize("FFD20.Roll");i&&n&&(r+=" ("+game.i18n.format("FFD20.DCThreshold",{threshold:e.dc})+")");const l={window:{title:r,icon:"fa-solid fa-dice-d20"},position:{width:420},classes:["pf1-v2","roll-prompt"],content:await renderTemplate(s,o),buttons:[{action:"normal",default:!0,icon:"fa-solid fa-dice-d20",label:game.i18n.localize("FFD20.Normal"),callback:(e,t,s)=>this._onDialogSubmit(s,null)},{action:"take10",label:game.i18n.format("FFD20.TakeX",{number:this.constructor.STATIC_ROLL.TEN}),callback:(e,t,s)=>this._onDialogSubmit(s,this.constructor.STATIC_ROLL.TEN)},{action:"take20",label:game.i18n.format("FFD20.TakeX",{number:this.constructor.STATIC_ROLL.TWENTY}),callback:(e,t,s)=>this._onDialogSubmit(s,this.constructor.STATIC_ROLL.TWENTY)}],close:()=>null,rejectClose:!1,subject:e.subject,speaker:e.speaker,roll:this};return e.dialogOptions&&foundry.utils.mergeObject(l,e.dialogOptions),foundry.applications.api.DialogV2.wait(l)}_getFormData(e){return foundry.utils.expandObject(new FormDataExtended(e).object)}_onDialogSubmit(e,t){e instanceof foundry.applications.api.DialogV2&&(e=e.element);const s=e.querySelector("form");if(!s)return this;const a=this._getFormData(s);if(a.bonus&&(this.options.bonus=a.bonus),a.d20){const e=this.constructor.parse(a.d20,this.data);e[0]instanceof foundry.dice.terms.NumericTerm?this.options.staticRoll=e[0].total:e[0]instanceof foundry.dice.terms.Die&&(this.terms=[...e,...this.terms.slice(1)],this.options.staticRoll=t)}else this.options.staticRoll=t;return a.rollMode&&(this.options.rollMode=a.rollMode),Number.isFinite(a.dc)&&(this.options.dc=a.dc),this._formula=this.constructor.getFormula(this.terms),this}async render({flavor:e,template:t=this.constructor.CHAT_TEMPLATE,isPrivate:s=!1}={}){this._evaluated||await this.evaluate({allowInteractive:!s});const a={onDemand:!0,isPrivate:s,formula:s?"???":this._formula,flavor:s?null:e??this.options.flavor,user:game.user.id,details:s?"":await this.getTooltip(),total:s?"?":ffd20.utils.limitPrecision(this.total,2),roll:this,d20:this.d20.total,bonus:this.bonus,precision:Math.floor(100*(this.total-Math.floor(this.total))),isCrit:this.isCrit,isMisfire:this.isMisfire,isNat20:this.isNat20,isNat1:this.isNat1,dc:this.dc,hasDC:Number.isFinite(this.dc),isSuccess:this.isSuccess,isFailure:this.isFailure,natural:this.natural,options:this.options,isStatic:this.isStatic,isNormal:this.isNormal,isNonRoll:this.isNonRoll,get isAbnormal(){return!this.isNonRoll&&(this.isStatic||!this.isNormal)},get abnormalTooltip(){return this.isStatic?game.i18n.format("FFD20.TakeX",{number:this.d20}):this.isAbnormal?"FFD20.CustomRollDesc":""}};return renderTemplate(t,a)}async toMessage(e={},t={}){this._evaluated||await this.evaluate();const s=t.chatTemplate||this.constructor.CHAT_TEMPLATE,a=foundry.utils.mergeObject({formula:this.formula,details:await this.getTooltip(),roll:this,d20:this.d20.total,total:ffd20.utils.limitPrecision(this.total,2),bonus:this.bonus,precision:Math.floor(100*(this.total-Math.floor(this.total))),isCrit:this.isCrit,isMisfire:this.isMisfire,isNat20:this.isNat20,isNat1:this.isNat1,dc:this.dc,hasDC:Number.isFinite(this.dc),isSuccess:this.isSuccess,isFailure:this.isFailure,natural:this.natural,options:this.options,isStatic:this.isStatic,isNormal:this.isNormal,isNonRoll:this.isNonRoll,get isAbnormal(){return!this.isNonRoll&&(this.isStatic||!this.isNormal)},get abnormalTooltip(){return this.isStatic?game.i18n.format("FFD20.TakeX",{number:this.d20}):this.isAbnormal?"FFD20.CustomRollDesc":""},flavor:this.options.flavor,compendiumEntry:t.compendium?.entry,compendiumEntryType:t.compendium?.type},t.chatTemplateData||{}),i=t.rollMode||this.options.rollMode||game.settings.get("core","rollMode");(e=foundry.utils.mergeObject({type:"check",style:CONST.CHAT_MESSAGE_STYLES.OTHER,sound:t.noSound?void 0:CONFIG.sounds.dice,content:await renderTemplate(s,a),system:{dc:this.dc,reference:t.reference}},e)).rolls=[this],e.system??={},t.subject&&(e.system.subject=t.subject);const n=ChatMessage.getSpeakerActor(e.speaker);n&&game.combat?.combatants.some((e=>e.actor===n))&&foundry.utils.setProperty(e,"system.combat",game.combat.id);const o=new ChatMessage.implementation(e);return i&&o.applyRollMode(i),e=o.toObject(),t.create??1?ChatMessage.implementation.create(e,{rollMode:i}):e}async _evaluate(e){return this._applyBonus(),this._applyStaticRoll(!0),await super._evaluate(e),this}_evaluateSync(e){return this._applyBonus(),this._applyStaticRoll(!0),super._evaluateSync(e),this}_applyBonus(){if(this.options.bonus){foundry.utils.logCompatibilityWarning("D20RollPF bonus option is deprecated in favor of including it in the base formula itself",{since:"PF1 v11",until:"PF1 v12"});const e=this.constructor.parse(""+this.options.bonus,this.data);e[0]instanceof foundry.dice.terms.OperatorTerm||e.unshift(new foundry.dice.terms.OperatorTerm({operator:"+"})),this.terms.push(...e),this._formula=this.constructor.getFormula(this.terms)}}addBonus(e){const t=this.constructor.parse(""+e,this.data);"+"!==t[0].operator&&t.unshift(new foundry.dice.terms.OperatorTerm({operator:"+"})),this.terms.push(...t),this._formula=this.constructor.getFormula(this.terms)}async getTooltip(){const e=this.d20;return"Die"===e?.constructor.name&&(e.options??={},e.options.flavor||=game.i18n.localize("FFD20.Rolls.Check.Label")),super.getTooltip()}}class DamageRoll extends RollPF{constructor(e,t,s={}){if(super(e,t,s),this.options.damageType??=["untyped"],this.options.damageType instanceof Set&&(this.options.damageType=[...this.options.damageType]),game.dice3d?.isEnabled()&&game.dice3d?.constructor.CONFIG().enableFlavorColorset){const e=this.options.damageType[Math.floor(Math.random()*this.options.damageType.length)],t=ffd20.registry.damageTypes.get(e);t?.diceSoNice&&(this.options.appearance={...t.diceSoNice})}}static TYPES={NORMAL:"normal",CRITICAL:"crit",NON_CRITICAL:"nonCrit"};get damageType(){return new ffd20.models.action.DamagePartModel({types:this.options.damageType})}get type(){return this.options.type}get isCritical(){return this.type===this.constructor.TYPES.CRITICAL}}class FunctionTermPF extends CONFIG.Dice.termTypes.FunctionTerm{get expression(){if(this._evaluated&&"sizeRoll"===this.fn){const e=[...this.terms];return e.pop(),`sizeRoll(${e.join(",")})`}return super.expression}get simplify(){switch(this.fn){case"sizeRoll":return this._evaluated?this.terms.at(-1):2===this.terms.length?this.terms.join("d"):this.expression;case"if":{const e=this.rolls[0];return e.isDeterministic?0!==e.total?this.terms[1]:"0":this.expression}case"ifelse":{const e=this.rolls[0];return e.isDeterministic?0!==e.total?this.terms[1]:this.terms[2]:this.expression}case"lookup":{const e=this.rolls[0];if(!e.isDeterministic)return this.expression;const t=e.total;return this.terms[t+1]??this.terms[1]}}return this.expression}get flavor(){return this.options.flavor||""}get isDeterministic(){return"sizeRoll"!==this.fn&&super.isDeterministic}_evaluateSync(e={}){if(super._evaluateSync(e),"sizeRoll"===this.fn){const t=this.rolls.at(-1);t.options.flavor||=this.flavor,t.propagateFlavor(this.flavor),t._evaluated||t.evaluateSync(e),this.result=t.total}return this}async _evaluateAsync(e={}){if(await super._evaluateAsync(e),"sizeRoll"===this.fn){const t=this.rolls.at(-1);t.options.flavor||=this.flavor,t.propagateFlavor(this.flavor),t._evaluated||await t.evaluate(e),this.result=t.total}return this}toJSON(){const e=super.toJSON();return e.class=super.constructor.name,e}}class StringTermPF extends foundry.dice.terms.StringTerm{constructor({term:e,options:t}={}){if(["true","false"].includes(e))return new foundry.dice.terms.NumericTerm({number:"true"===e?1:0,options:t});super({term:e,options:t})}}const ft=Object.freeze(Object.defineProperty({__proto__:null,FunctionTermPF,StringTermPF},Symbol.toStringTag,{value:"Module"})),gt=Object.freeze(Object.defineProperty({__proto__:null,D20RollPF,DamageRoll,RollPF,d20Roll:async function d20Roll(e={}){const{skipDialog:t=getSkipActionPrompt(),staticRoll:s=null,chatTemplateData:a={},chatMessage:i=!0,compendium:n,noSound:o=!1,flavor:r="",parts:l=[],dice:c=ffd20.dice.D20RollPF.standardRoll,rollData:d={},subject:u,bonus:m="",speaker:p,messageData:h,dc:f,reference:g}=e;let y=e.rollMode;const b=[c,...l].join(" + "),F=new ffd20.dice.D20RollPF(b,d,{flavor:r,staticRoll:s,bonus:m,dc:f},{speaker:p});if(!t){const e=p?.alias?`${p.alias}: ${r}`:r;if(null===await F.promptDialog({title:e,rollMode:y,bonus:m,subject:u,speaker:p,dc:f}))return;y=F.options.rollMode,delete F.options.rollMode}if(F.options?.bonus&&(F.addBonus(F.options.bonus),delete F.options.bonus),!1!==Hooks.call("pf1PreD20Roll",F,e))return F.toMessage({...h,speaker:p},{create:i,noSound:o,chatTemplateData:a,compendium:n,subject:u,dc:f,reference:g,rollMode:y})},terms:ft},Symbol.toStringTag,{value:"Module"}));class ItemAction extends(ReplaceableSourceMixin(CompactingMixin(DocumentLikeModel))){static FALLBACK_IMAGE="systems/ffd20/icons/skills/gray_04.jpg";static metadata=Object.freeze({name:"Action",label:"FFD20.Action"});constructor(e,t){t instanceof Item&&(foundry.utils.logCompatibilityWarning("ItemAction constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.",{since:"PF1 v11",until:"PF1 v12"}),t={parent:t}),super(e,t)}_configure(e){super._configure(e),Object.defineProperties(this,{apps:{value:{},writable:!1,enumerable:!1},_sheet:{value:null,writable:!0,enumerable:!1},_conditionals:{value:new Collection,writable:!1,enumerable:!1}})}static defineSchema(){const e=foundry.data.fields,t={nullable:!0,blank:!1};return{...super.defineSchema({name:()=>game.i18n.localize("FFD20.Action")}),img:new e.FilePathField({categories:["IMAGE"]}),description:new e.HTMLField,tag:new e.StringField({blank:!1,nullable:!0}),activation:new e.SchemaField({cost:new e.NumberField({initial:1,nullable:!0,min:1,integer:!0}),type:new e.StringField({initial:"nonaction"}),unchained:new e.SchemaField({cost:new e.NumberField({initial:1,nullable:!0,min:1,integer:!0}),type:new e.StringField({initial:"nonaction"})})}),duration:new e.SchemaField({value:new e.StringField,units:new e.StringField,dismiss:new e.BooleanField({initial:!1}),concentration:new e.BooleanField({initial:!1})}),target:new e.SchemaField({value:new e.StringField}),range:new e.SchemaField({value:new e.StringField({...t}),units:new e.StringField({...t}),maxIncrements:new e.NumberField({integer:!0,nullable:!1,initial:1}),minValue:new e.StringField({...t}),minUnits:new e.StringField({...t})}),uses:new e.SchemaField({autoDeductChargesCost:new e.StringField,perAttack:new e.BooleanField({initial:!1}),self:new e.SchemaField({value:new e.NumberField({integer:!0,min:0,nullable:!1,initial:0}),maxFormula:new FormulaField,per:new e.StringField}),spellPointCost:new FormulaField}),measureTemplate:new e.SchemaField({type:new e.StringField,size:new FormulaField,color:new e.ColorField,texture:new e.FilePathField({categories:["IMAGE","VIDEO"]})}),bab:new FormulaField,attackName:new e.StringField,actionType:new e.StringField({initial:"other"}),attackBonus:new FormulaField,critConfirmBonus:new FormulaField,damage:new e.SchemaField({parts:new e.ArrayField(new e.EmbeddedDataField(DamagePartModel)),critParts:new e.ArrayField(new e.EmbeddedDataField(DamagePartModel)),nonCritParts:new e.ArrayField(new e.EmbeddedDataField(DamagePartModel))}),extraAttacks:new e.SchemaField({type:new e.StringField,manual:new e.ArrayField(new e.EmbeddedDataField(ExtraAttackModel)),formula:new e.SchemaField({count:new FormulaField,bonus:new FormulaField,label:new e.StringField})}),ability:new e.SchemaField({attack:new e.StringField,damage:new e.StringField,max:new e.NumberField({integer:!0,nullable:!0}),damageMult:new e.NumberField({initial:null}),critRange:new e.NumberField({initial:20,nullable:!0,min:0,integer:!0}),critMult:new e.NumberField({initial:2,nullable:!0,min:1,integer:!0})}),save:new e.SchemaField({dc:new FormulaField,type:new e.StringField,description:new e.StringField,harmless:new e.BooleanField({initial:!1})}),notes:new e.SchemaField({effect:new e.ArrayField(new e.StringField),footer:new e.ArrayField(new e.StringField)}),soundEffect:new e.FilePathField({categories:["AUDIO"]}),powerAttack:new e.SchemaField({multiplier:new e.NumberField({min:0,initial:null,nullable:!0}),damageBonus:new e.NumberField({min:0,initial:2,integer:!0}),critMultiplier:new e.NumberField({min:1,initial:1,integer:!0})}),naturalAttack:new e.SchemaField({primary:new e.BooleanField({initial:!0}),secondary:new e.SchemaField({attackBonus:new FormulaField,damageMult:new e.NumberField({initial:.5,positive:!0})})}),held:new e.StringField({choices:()=>ffd20.config.weaponHoldTypes,initial:void 0,blank:!0}),nonlethal:new e.BooleanField({initial:!1}),manadamage:new e.BooleanField({initial:!1}),splash:new e.BooleanField({initial:!1}),touch:new e.BooleanField({initial:!1}),ammo:new e.SchemaField({type:new e.StringField({initial:""}),cost:new e.NumberField({integer:!0,min:0,initial:void 0}),misfire:new e.NumberField({integer:!0,min:0,initial:null,nullable:!0})}),effect:new e.StringField,area:new e.StringField,conditionals:new e.ArrayField(new e.ObjectField),enh:new e.SchemaField({value:new e.NumberField({integer:!0,min:0,initial:null,nullable:!0})}),material:new e.SchemaField({normal:new e.SchemaField({value:new e.StringField,custom:new e.BooleanField({initial:!1})}),addon:new e.SetField(new e.StringField({nullable:!1,blank:!1}))}),alignments:new e.SchemaField({lawful:new e.BooleanField({nullable:!0,initial:null}),chaotic:new e.BooleanField({nullable:!0,initial:null}),good:new e.BooleanField({nullable:!0,initial:null}),evil:new e.BooleanField({nullable:!0,initial:null})})}}static migrateData(e){if("object"!=typeof e)return;e.activation??={},e.activation.unchained??={},e.unchainedAction?.activation&&(e.activation.unchained=e.unchainedAction.activation),"normal"===e.held&&(e.held="1h"),"string"==typeof e.activation.cost&&(e.activation.cost=1),"string"==typeof e.activation.unchained?.cost&&(e.activation.unchained.cost=1),void 0!==e.enh&&("object"!=typeof e.enh&&(e.enh={value:e.enh??null}),(!1===e.enh.override||null!==e.enh.value&&"number"!=typeof e.enh.value)&&(e.enh.value=null)),!1===e.uses?.autoDeductCharges?e.uses.autoDeductChargesCost="0":!0===e.uses?.autoDeductCharges&&(e.uses.autoDeductChargesCost="1"),e.actionType||="other",e.area||=e.spellArea,"unlimited"===e.uses?.self?.per&&delete e.uses.self.per;const t=e.measureTemplate;if(t&&(t.color||=t.customColor,t.texture||=t.customTexture),(null===e.range?.maxIncrements||e.range?.maxIncrements<1)&&(e.range.maxIncrements=1),e.spellEffect&&!e.effect&&(e.effect=e.spellEffect),void 0!==e.naturalAttack?.primaryAttack&&void 0===e.naturalAttack?.primary&&(e.naturalAttack.primary=e.naturalAttack?.primaryAttack),e.notes??={},e.effectNotes&&!e.notes.effect&&(e.notes.effect=e.effectNotes),e.attackNotes&&!e.notes.footer&&(e.notes.footer=e.attackNotes),"none"===e.range?.units&&delete e.range.units,e.ability?.critMult<=0&&(e.ability.critMult=1),e.damage)for(const t of["parts","critParts","nonCritParts"]){const s=e.damage[t]??[];s.some((e=>Array.isArray(e)))&&(e.damage[t]=s.map((e=>{if(Array.isArray(e)){const[t,s]=e;return{formula:t,type:s}}return e})))}return super.migrateData(e)}get uuid(){return this.parent.uuid+`.${this.constructor.metadata.name}.${this.id}`}getEmbeddedDocument(e,t,s={}){let a;if(e===ffd20.components.ItemConditional.metadata.name)a=this.conditionals?.get(t);if(s.strict)throw Error(`${e} id [${t}] does not exist in ${this.uuid}`);return a}get _defaultDamageAbility(){switch(this.actionType){case"heal":case"other":case"rsak":case"msak":case"spellsave":case"save":return null;default:return"str"}}get _defaultAttackAbility(){switch(this.actionType){case"mwak":case"msak":case"mcman":return this.actor?.system.attributes?.attack?.meleeAbility||"str";case"rwak":case"twak":case"rsak":case"rcman":return this.actor?.system.attributes?.attack?.rangedAbility||"dex"}return null}prepareData(){this.actionType||="other",this.img||=this.item?.img||this.constructor.FALLBACK_IMAGE,this.tag||=ffd20.utils.createTag(this.name),this.naturalAttack&&Object.defineProperty(this.naturalAttack,"primaryAttack",{get(){return foundry.utils.logCompatibilityWarning("ItemAction.naturalAttack.primaryAttack is deprecated in favor of ItemAction.naturalAttack.primary",{since:"PF1 v11",until:"PF1 v12"}),this.primary}});const e=this.ammo?.type;if(this.ammo.type="none"===e?null:e||this.item?.system.ammo?.type||null,this.ammo.type?this.ammo.cost??=1:this.ammo.cost=0,game.settings.get("ffd20","unchainedActionEconomy")&&(this.activation=this.activation.unchained),this._prepareConditionals(),!this.item)return;const t=this.getRollData();if("spell"===this.item.type){const e=this.item.spellbook?.ability;e&&("_key"===this.ability?.damage&&(this.ability.damage=e),"_key"===this.ability?.attack&&(this.ability.attack=e))}if("_default"===this.ability?.damage&&(this.ability.damage=this._defaultDamageAbility),"_default"===this.ability?.attack&&(this.ability.attack=this._defaultAttackAbility),this.uses.self?.per){const e="single"===this.uses.self.per?"1":this.uses.self.maxFormula,s=RollPF.safeRollSync(e,t).total??0;this.uses.self.max=s}if(null==this.enh?.value||["weapon","attack"].includes(this.item.type)||(this.enh.value=null),!Number.isFinite(this.ability?.damageMult)){let e=this.item.isPhysical||this.item.isQuasiPhysical||!1;this.hasAttack||(e=!1),e||(this.ability.damageMult=1)}}get normalMaterial(){return this.material.normal.value||this.item.normalMaterial||null}get addonMaterial(){return(this.material.addon||this.item.addonMaterial||[]).filter((e=>!!e))}get isCombatManeuver(){return["mcman","rcman"].includes(this.actionType)}static async create(e,t={}){const{parent:s,...a}=t;if(!(s instanceof Item))throw Error("No parent declared");e=e.map((e=>new this(e).toObject()));const i=s.toObject().system.actions||[];return i.push(...e),await s.update({"system.actions":i},a),e.map((e=>s.actions.get(e._id)))}get item(){return this.parent}get actor(){return this.parent?.actor}get id(){return this._id}get canUse(){const e=this.item;if(!e.canUse)return!1;if(this.isSelfCharged&&(this.uses.self?.value??0)<=0)return!1;if(e.isPhysical&&e.system.quantity<=0)return!1;if(this.isCharged){const t=this.getChargeCostSync({maximize:!0})?.total??0,s=e.charges;if(t>0&&t>s)return!1}const t=this.ammo.type;return!t||0!==this.actor?.itemTypes.loot.filter((e=>"ammo"===e.subType&&e.system.extraType===t&&e.system.quantity>0)).length}get hasAttack(){return["mwak","rwak","twak","msak","rsak","mcman","rcman"].includes(this.actionType)}get hasMultiAttack(){if(!this.hasAttack)return!1;const e=this.extraAttacks??{};return e.manual?.length>0||!!e.type}get autoDeductCharges(){return this.getChargeCostSync({maximize:!0})?.total>0}get isCharged(){return this.item.isCharged??!1}get isSelfCharged(){return!!this.uses?.self?.per}async getChargeCost({minimize:e=!1,maximize:t=!1,rollData:s=null,interactive:a=!1}={}){if(!this.isCharged)return null;let i="spell"===this.item.type&&this.item.useSpellPoints()?this.uses.spellPointCost:this.uses.autoDeductChargesCost;i?"string"!=typeof i&&(console.warn(this.item.name,"action",this.name,"has invalid charge formula:",i,this),i=this.item.getDefaultChargeFormula()):i=this.item.getDefaultChargeFormula(),s??=this.getRollData();const n=await RollPF.safeRoll(i,s,void 0,void 0,{maximize:t,minimize:e,allowInteractive:a});return this.item.isSingleUse&&(n._total=Math.clamp(n._total,-1,1)),n}getChargeCostSync({minimize:e=!1,maximize:t=!1,rollData:s=null}={}){if(!this.isCharged)return null;let a="spell"===this.item.type&&this.item.useSpellPoints()?this.uses.spellPointCost:this.uses.autoDeductChargesCost;a?"string"!=typeof a&&(console.warn(this.item.name,"action",this.name,"has invalid charge formula:",a,this),a=this.item.getDefaultChargeFormula()):a=this.item.getDefaultChargeFormula(),s??=this.getRollData(),t||e||(t=!0);const i=RollPF.safeRollSync(a,s,void 0,void 0,{maximize:t,minimize:e});return this.item.isSingleUse&&(i._total=Math.clamp(i._total,-1,1)),i}get rangeIncrement(){return this.getRange({type:"single"})}get minRange(){return this.getRange({type:"min"})}get maxRange(){return this.getRange({type:"max"})}getRange({type:e="single",rollData:t=null}={}){const s=this.range.units,a="min"===e?this.range.minValue:this.range.value;let i="min"===e?this.range.minUnits:s;if("min"===e&&!["reach","ft","mi","seeText"].includes(s))return 0;if(!i){if("min"!==e)return null;if("reach"!==s)return 0;i="natural"}t??=this.getRollData();const n=ffd20.utils.calculateRange(a,i,t)[0];return["single","min"].includes(e)?n:n*this.range.maxIncrements}get hasTemplate(){const{type:e,size:t}=this.measureTemplate;return!!e&&!!t}get hasDamage(){return!!this.damage.parts?.length}get critRange(){return this.ability?.critRange<=0?null:this.item.isBroken||this.isCombatManeuver?20:this.ability?.critRange||20}get misfire(){const e=this.ammo?.misfire??null;return Number.isFinite(e)?e:this.item.system.ammo?.misfire??0}getPowerAttackMult({rollData:e=null}={}){e??=this.getRollData();const t=e.action?.held||e.item?.held||"1h";let s=e.action?.powerAttack?.multiplier;if(s)return s;if(s=1,"natural"===this.item.subType)if(e.action.naturalAttack?.primary){(e.action.ability?.damageMult??1)>=1.5&&(s=1.5)}else s=.5;else"2h"===t?s=1.5:"oh"===t&&(s=.5);return s}get hasRange(){const e=this.range?.units;return!!e&&!!e}get isHealing(){return"heal"===this.actionType&&this.hasDamage}get hasEffect(){return this.hasDamage||this.notes.effect.length>0}get hasSave(){return!!this.save?.type}getDC(e=null){e??=this.getRollData();let t=10;const s=e.dcBonus??0;if("spell"===this.item.type){const t=this.item.spellbook;if(t){let a=t.baseDCFormula;const i=e.action;i.save.dc&&(a+=" + "+i.save.dc);const n=e.attributes.spells?.school?.[this.item.system.school]?.dc??0,o=e.attributes?.spells?.school?.all?.dc??0;return RollPF.safeRollSync(a,e).total+s+n+o}{const e=this.item.system.level??1;return 10+e+Math.floor(e/2)+s}}{const a=this.save.dc?.toString()||"0";return t=RollPF.safeRollSync(a,e).total+s,t}}get enhancementBonus(){return this.enh?.value??this.item.system.enh??null}get isRanged(){return["rwak","twak","rsak","rcman"].includes(this.actionType)}get isSpell(){return["rsak","msak","spellsave"].includes(this.actionType)}get damageSources(){const e=[ffd20.const.actionTypeToContext[this.actionType]??"damage"];this.isRanged?e.push("rdamage"):e.push("mdamage"),"natural"===this.item.subType&&e.push("ndamage");const t=this.item.getContextChanges(e);return 0==t.length?[]:getHighestChanges(t,{ignoreTarget:!0})}get allDamageSources(){const e=this.conditionals.filter((e=>e.default)).filter((e=>e.modifiers.find((e=>"damage"===e.target)))),t=this.getRollData();if(!t)return[];const s=Object.keys(ffd20.config.bonusTypes),a=[];for(const i of e)for(const e of i.modifiers){if("damage"!==e.target)continue;let n,o;try{n=new RollPF(e.formula,t),o=n.isDeterministic,o&&n.evaluateSync()}catch(t){console.error("Invalid conditional formula:",{formula:e.formula,conditional:i,action:this,item:this.item},"\n",t)}const r=s.includes(e.type);a.push({flavor:i.name,value:o?n.total:e.formula,modifier:r?e.type:"untyped",type:r?void 0:e.type,formula:e.formula})}const i=[...this.damageSources,...a],n=this.enhancementBonus;return n&&i.push({flavor:game.i18n.localize("FFD20.EnhancementBonus"),value:n,type:"enh",formula:n.toString()}),this.item.isBroken&&i.push({flavor:game.i18n.localize("FFD20.Broken"),value:-2,type:"untyped",formula:"-2"}),getHighestChanges(i,{ignoreTarget:!0})}getRollData(e){const t=this.item,s=t?.getRollData({...e,cache:!1})??{};if(s.action=ffd20.utils.deepClone(this),s.dc=this.hasSave?this.getDC(s):0,"spell"===t?.type&&(s.cl+=s.attributes?.spells?.school?.[t.system.school]?.cl??0),this.hasAttack){const e=s.size||4;s.sizeBonus=Object.values(this.isCombatManeuver?ffd20.config.sizeSpecialMods:ffd20.config.sizeMods)[e]}if(s.action.bab){const e=RollPF.safeRollSync(s.action.bab,s).total;foundry.utils.setProperty(s,"attributes.bab.total",e||0)}return s.bab=s.attributes?.bab?.total||0,Hooks.events.pf1GetRollData?.length>0&&Hooks.callAll("pf1GetRollData",this,s),s}_prepareConditionals(){const e=this._conditionals,t=new Collection(e.entries());e.clear();for(const s of this._source.conditionals){let a;t&&t.has(s._id)?(a=t.get(s._id),a.replaceSource(s)):a=new ffd20.components.ItemConditional(s,{parent:this,strict:!1}),e.set(a.id,a)}this.conditionals=e}async delete(){const e=this.item.toObject().system.actions;e.findSplice((e=>e._id==this.id));const t=[];for(const e of Object.values(this.apps))t.push(e.close({ffd20:{action:"delete"},submit:!1,force:!0}));return await Promise.all(t),this.item.update({"system.actions":e})}async update(e,t={}){delete(e=foundry.utils.expandObject(e))._id,this.updateSource(e);const s=this.item.actions.map((e=>e.toObject()));await this.item.update({"system.actions":s},t)}async getChatData(e={}){return this.item.getChatData({...e,actionId:this.id})}getLabels({rollData:e,isolated:t=!1}={}){const s={};e??=this.getRollData();const a=!!this.actor;if(this.activation){const e=this.activation;if(e){const t=game.settings.get("ffd20","unchainedActionEconomy"),a=t?ffd20.config.abilityActivationTypes_unchained:ffd20.config.abilityActivationTypes,i=t?ffd20.config.abilityActivationTypesPlurals_unchained:ffd20.config.abilityActivationTypesPlurals,n=e.type||"nonaction";"special"===e.type?s.activation=a.special:e.cost>1&&i[n]?s.activation=[e.cost.toString(),i[n]].filterJoin(" "):s.activation=[["minute","hour","action"].includes(n)&&e.cost?e.cost.toString():"",a[n]].filterJoin(" ")}}const i=this.duration;switch(i?.units){case"spec":s.duration=i.value;break;case"seeText":case"inst":case"perm":s.duration=ffd20.config.timePeriods[i.units];break;case"turn":{const e=ffd20.config.timePeriods[i.units];s.duration=game.i18n.format("FFD20.Time.Format",{value:1,unit:e});break}case"round":case"minute":case"hour":case"day":case"month":case"year":if(i.value){const a=ffd20.config.timePeriods[i.units];let n,o;s.durationFormula=i.value,s.variableDuration=/@\w/.test(i.value);try{if(n=new RollPF(i.value,e),t){const t=foundry.utils.deepClone(e),s=new RollPF(i.value,t);s.evaluateSync({minimize:!0}),t.cl=20,foundry.utils.setProperty(t,"attributes.hd.total",20),foundry.utils.setProperty(t,"attributes.bab.total",20),t.bab=20,foundry.utils.setProperty(t,"class.level",20);const a=new RollPF(i.value,t);a.evaluateSync({maximize:!0}),o=s.total!==a.total?`${s.total} - ${a.total}`:""+s.total}else if(n.isDeterministic)n.evaluateSync(),o=n.total;else{let t=ffd20.utils.formula.unflair(i.value||"0");t=RollPF.replaceFormulaData(t||"0",e),o=ffd20.utils.formula.compress(ffd20.utils.formula.simplify(t))}s.duration=game.i18n.format("FFD20.Time.Format",{value:o,unit:a})}catch(t){console.error("Error in duration formula:",{formula:i.value,rollData:e,roll:n},n?.err??t,this)}}}if(s.duration&&"spec"!==i.units&&(i.dismiss&&(s.duration+=" "+game.i18n.localize("FFD20.DismissableMark")),i.concentration&&(s.duration=game.i18n.format("FFD20.ConcentationDuration",{duration:s.duration}))),this.hasSave){const t=e.dc+(e.dcBonus??0);s.save=game.i18n.format("FFD20.DCThreshold",{threshold:t})}if(this.hasRange){const t=this.range.units,i=this.range.value,n=ffd20.config.distanceUnits[t];if(s.range=n,"spec"===t)s.range=i||s.range;else if(["personal","touch","melee","reach"].includes(t));else{const a=this.getRange({type:"single",rollData:e});if(a>0){const e="metric"===ffd20.utils.getDistanceSystem()?"m":"ft",t=new Intl.NumberFormat(void 0).format(a);s.range=`${t} ${e}`}["close","medium","long"].includes(t)&&(s.range+=` (${n})`)}if(!a){const e=ffd20.utils.getDistanceSystem();switch(t){case"close":s.range=`${n} (${game.i18n.localize("metric"==e?"FFD20.SpellRangeShortMetric":"FFD20.SpellRangeShort")})`;break;case"medium":s.range=`${n} (${game.i18n.localize("metric"==e?"FFD20.SpellRangeMediumMetric":"FFD20.SpellRangeMedium")})`;break;case"long":s.range=`${n} (${game.i18n.localize("metric"==e?"FFD20.SpellRangeLongMetric":"FFD20.SpellRangeLong")})`}}}const n=this.target?.value;return n&&(s.targets=n),this?.area&&(s.area=this.area),s.actionType=ffd20.config.itemActionTypes[this.actionType],s}get attackSources(){const e=["~attackCore"];this.isCombatManeuver&&e.push("cmb"),this.isRanged?e.push("rattack"):e.push("mattack");const t="natural"===this.item.subType;switch(t&&e.push("nattack"),this.actionType){case"twak":e.push("tattack"),t||e.push("wattack");break;case"mwak":case"rwak":t||e.push("wattack");break;case"msak":case"rsak":e.push("sattack")}return this.item.getContextChanges(e)}async rollAttack({data:e=null,extraParts:t=[],extraChanges:s=[],bonus:a=null,primary:i=!0,...n}={}){"boolean"==typeof n.primaryAttack&&(foundry.utils.logCompatibilityWarning("ItemAttack.rollAttack()'s `primaryAttack` option is deprecated in favor of `primary`",{since:"PF1 v11",until:"PF1 v12"}),i=n.primaryAttack);const o=e??this.getRollData(),r=o.item,l=o.action,c={};r.primaryAttack=i,r.proficiencyPenalty=-4;const d=l.ability.attack,u=[];0!==o.sizeBonus&&u.push(`@sizeBonus[${game.i18n.localize("FFD20.Size")}]`);const m=o.abilities?.[d];m&&0!==m?.mod&&u.push(`@abilities.${d}.mod[${ffd20.config.abilities[d]}]`);const p=this.attackSources;p.push(...s),["mwak","rwak","twak","mcman","rcman"].includes(this.actionType)&&this.item.system.masterwork&&p.push(new ffd20.components.ItemChange({formula:"1",operator:"add",target:"attack",type:"enh",value:1,flavor:game.i18n.localize("FFD20.EnhancementBonus")})),this.enhancementBonus&&p.push(new ffd20.components.ItemChange({formula:this.enhancementBonus.toString(),operator:"add",target:"attack",type:"enh",value:this.enhancementBonus,flavor:game.i18n.localize("FFD20.EnhancementBonus")})),u.push(...t),"string"!=typeof l.attackBonus||["","0"].includes(l.attackBonus)?"number"==typeof l.attackBonus&&(r.attackBonus=l.attackBonus,u.push(`@item.attackBonus[${game.i18n.localize("FFD20.AttackRollBonus")}]`)):u.push(l.attackBonus);try{c.proficient=this.item.getProficiency(!0)}catch(e){c.proficient=!0}const h="natural"===this.item.subType&&!1===i;if(c.secondaryPenalty=h?ffd20.config.naturalAttacks.secondary.penalty:"0",o.bonus=0,a){const e=await RollPF.safeRoll(a,o);o.bonus=e.total}const f={critical:this.critRange};if(this.ammo.type&&this.ammo.cost>0){const e=this.misfire;e>0&&(f.misfire=e)}Hooks.call("pf1PreAttackRoll",this,c,o,f,u,p);const g=getHighestChanges(p.filter((e=>(e.applyChange(this.actor),"set"!==e.operator))),{ignoreTarget:!0});for(const t of g){let s=t.value;l.bab&&"_bab"===t._id&&(s=RollPF.safeRollSync(t.formula,e).total||0),0!=s&&u.push(`${s}[${RollPF.cleanFlavor(t.flavor)}]`)}if(0!=c.secondaryPenalty){RollPF.parse(c.secondaryPenalty).length>1&&(c.secondaryPenalty=`(${c.secondaryPenalty})`),u.push(`${c.secondaryPenalty}[${game.i18n.localize("FFD20.SecondaryAttack")}]`)}0!=o.bonus&&u.push(`@bonus[${game.i18n.localize("FFD20.SituationalBonus")}]`),c.proficient||u.push(`@item.proficiencyPenalty[${game.i18n.localize("FFD20.Proficiency.Penalty")}]`);const y=new ffd20.dice.D20RollPF([o.d20||ffd20.dice.D20RollPF.standardRoll,...u.filter((e=>!!e))].join("+"),o,f);try{await y.evaluate()}catch(e){throw Error(`Attack roll evaluation failed:\n${y.formula}\n`,{cause:e})}return delete o.bonus,Hooks.call("pf1AttackRoll",this,y,c),y}async rollDamage({data:e=null,critical:t=!1,extraParts:s=[],conditionalParts:a={},primaryAttack:i=!0}={}){const n=e??this.getRollData(),o=n.item,r=n.action;if(!this.hasDamage)throw Error("You may not make a Damage Roll with this Action.");const l="natural"===this.item.subType;if(n.critMult=1,t&&(n.critMult=r.ability.critMult),null==n.ablMult){const e=r?.held||o?.held||"1h";n.ablMult=r?.ability.damageMult??(l?null:ffd20.config.abilityDamageHeldMultipliers[e])??1}const c=[],addParts=(e,t)=>{c.push(...this.damage[e]?.map((e=>({base:e.formula,extra:[],damageType:e.types,type:t})))??[]),a["damage."+t]?.forEach((e=>{const[s,a,i]=e;i?c[0].extra.push(s):c.push({base:s,extra:[],damageType:a,type:t})}))};addParts("parts","normal"),t?addParts("critParts","crit"):addParts("nonCritParts","nonCrit");let d=[];if(!this.isHealing&&(d=this.damageSources,this.enhancementBonus&&d.push(new ffd20.components.ItemChange({formula:this.enhancementBonus.toString(),operator:"add",target:"damage",type:"enh",value:this.enhancementBonus,flavor:game.i18n.localize("FFD20.EnhancementBonus")})),this.item.isBroken)){const e=game.i18n.localize("FFD20.Broken");c[0].extra.push(`-2[${e}]`)}Hooks.call("pf1PreDamageRoll",this,n,c,d),getHighestChanges(d.filter((e=>(e.applyChange(this.actor),"set"!==e.operator))),{ignoreTarget:!0}).forEach((e=>{let t=e.value;/[\s+-?:]/.test(t)&&(t=`(${t})`),c[0].extra.push(`${t}[${e.flavor}]`)}));const u=r.ability.damage,m=n.abilities?.[u];if(m){const e=r.ability?.max??1/0;m.mod<0?n.ablDamage=Math.min(e,m.mod):n.ablDamage=Math.floor(Math.min(e,m.mod)*n.ablMult);const t=ffd20.config.abilities[u];c[0].extra.push(`@ablDamage[${t}]`)}delete n.previous,delete n.base;const p=[];for(let e=0;e<c.length;e++){const a=c[e];let i=[];0===e&&(i=[...a.extra,...s]);const o=[a.base,...i].join(" + ");if(0==o.length)continue;let r;try{r=await new DamageRoll(o,n,{damageType:a.damageType,type:a.type}).evaluate(),p.push(r)}catch(e){throw console.error("Error with damage formula:",o,this),e}const l=r.dice[0];0!==e||t||(n.base={total:r.total,dice:l?.expression,die:{size:l?.faces,count:l?.number}}),n.previous={total:r.total,dice:l?.expression,die:{size:l?.faces,count:l?.number}}}return p}getConditionalTargets(){const e=this.hasAttack,t=this.hasDamage,s=this.hasSave,a=[{id:"attack",sort:1e3,label:ffd20.config.conditionalTargets.attack._label,disabled:!e},{id:"critMult",sort:2e3,label:ffd20.config.conditionalTargets.critMult._label,disabled:!e,simple:!0},{id:"damage",sort:3e3,label:ffd20.config.conditionalTargets.damage._label,disabled:!t},{id:"size",sort:4e3,label:ffd20.config.conditionalTargets.size._label,disabled:!t,simple:!0},{id:"dc",sort:5e3,label:game.i18n.localize("FFD20.DC"),disabled:!s,simple:!0},{id:"effect",sort:6e3,label:ffd20.config.conditionalTargets.effect._label,choices:{},get disabled(){return foundry.utils.isEmpty(this.choices)}},{id:"misc",sort:7e3,label:ffd20.config.conditionalTargets.misc._label,choices:{},get disabled(){return foundry.utils.isEmpty(this.choices)}},{id:"charges",sort:8e3,label:game.i18n.localize("FFD20.ChargeCost"),disabled:!this.isCharged,simple:!0}];this.item.getConditionalTargets(a);for(const e of a)this.getConditionalSubTargets(e);const i={};for(const e of a.sort(((e,t)=>e.sort-t.sort)))e.disabled||!e.simple&&foundry.utils.isEmpty(e.choices)||(i[e.id]=e);return i}getConditionalSubTargets(e,t){if("string"==typeof e||t)throw Error("ItemAction#getConditionalSubTargets() called with invalid arguments");e.choices??={};const s=e.id,a=ffd20.config.conditionalTargets[s];if(a)for(const[t,s]of Object.entries(a))t.startsWith("_")||t.startsWith("~")||(e.choices[t]=s);if(["attack","damage"].includes(s))if(this.hasAttack){e.choices.attack_0=game.i18n.localize("FFD20.Attack")+" 1";const t=this.extraAttacks;t?.manual?.length&&t.manual.forEach(((t,s)=>{e.choices["attack_"+(s+1)]=t.name}))}else delete e.choices.rapidShotDamage;return this.item.getConditionalSubTargets?.(e),e}getConditionalModifierTypes(e){const t={};if("attack"===e||"damage"===e)for(const[e,s]of Object.entries(ffd20.config.bonusTypes))t[e]=s;if("damage"===e)for(const e of ffd20.registry.damageTypes)t[e.id]=e.name;return t}getConditionalCritical(e){let t={};return"attack"===e&&(t={...t,normal:"FFD20.Normal",crit:"FFD20.CriticalConfirmBonus"}),"damage"===e&&(t={...t,normal:"FFD20.Normal"},this.hasAttack&&(t={...t,crit:"FFD20.OnCritBonusFormula",nonCrit:"FFD20.NonMultBonusFormula"})),t}getAttacks({full:e=!0,rollData:t,resolve:s=!1,conditionals:a=!1,bonuses:i=!1}={}){t||=this.getRollData();const n=ffd20.config.extraAttacks[this.extraAttacks?.type]??{},o=n.modToAll;let r=0;const l=new Set,getUniqueName=(e,t)=>{t&&-1==t.indexOf("{0}")&&(t=null);let s=e;for(;l.has(s)||!s;)r+=1,s=t?game.i18n.has(t)?game.i18n.format(t,{0:r}):t.replace("{0}",r):game.i18n.format("FFD20.ExtraAttacks.Formula.LabelDefault",{0:r});return l.add(s),s};t.attackCount=0;const replaceSpecificRollData=(e,t)=>e.replace(/@\w+\b/,(e=>{const s=e.slice(1);return s in t?t[s]:e})),c=game.i18n.localize(n.flavor||"");let d=`(${n.bonus||"0"} + ${o||"0"})`+(c?`[${c}]`:"");d=replaceSpecificRollData(d,{attackCount:0,attackSetCount:0,formulaicAttack:0}),d=ffd20.utils.formula.simplify(d);const u=[{bonus:d,label:getUniqueName(this.attackName)}];if(e){t.fullAttack=1;const e=game.settings.get("ffd20","unchainedActionEconomy");let s=0;const parseAttacks=async(e,a,i,n)=>{if(e||="0",a||="0",!e||"0"==e)return;const r=RollPF.safeRollSync(e,t,void 0,void 0,{minimized:!0})?.total??0;if(!(r<=0))try{for(let e=0;e<r;e++){const t={attackCount:s+=1,attackSetCount:e,formulaicAttack:e+1};let r=a;o&&(r+=" + "+o),r=replaceSpecificRollData(r,t);const l=game.i18n.has(i)?game.i18n.format(i,{0:e+1}):i?.replace("{0}",e+1);u.push({bonus:n?`(${r})[${n}]`:`(${r})`,formula:r,flavor:n,label:getUniqueName(l,i),rollData:t})}}catch(e){console.error(e)}};if(n.iteratives&&!e&&parseAttacks(ffd20.config.iterativeExtraAttacks,ffd20.config.iterativeAttackModifier,null,game.i18n.localize("FFD20.Iterative")),n.count&&parseAttacks(n.count,n.bonus,n.attackName,c),n.manual){const e=this.extraAttacks?.manual??[];for(const{name:t,formula:s}of e)t&&l.add(t),u.push({bonus:s,label:t||getUniqueName()})}if(n.formula){const e=this.extraAttacks.formula??{};parseAttacks(e.count,e.bonus,e.label)}}if(s){const e=Array(u.length).fill(0);if(a){const s=this.conditionals.filter((e=>e.default&&e.modifiers.find((e=>"attack"===e.target))));for(const a of s)for(const s of a.modifiers){const a=RollPF.safeRollSync(s.formula,t,void 0,void 0,{minimize:!0});if(0!=a.total&&s.subTarget?.match(/^attack\.(\d+)$/)){const t=parseInt(RegExp.$1,10);t in e&&(e[t]+=a.total)}}}let s=0;if(i){const e=this.item.getAttackSources(this.id,{rollData:t});s=e.reduce(((e,s)=>{let a=s.value;if("string"==typeof a){a=RollPF.safeRollSync(a,t,void 0,void 0,{minimize:!0}).total}return e+a}),0)}u.forEach(((a,i)=>{t.attackCount=i;const n=RollPF.safeRollSync(a.bonus,t,void 0,void 0,{minimize:!0});a.bonus=n.total+s+e[i],delete t.attackCount}))}return u}async use(e={}){return e.actionId=this.id,this.item.use(e)}static pruneData(e){e.img||delete e.img,e.tag||delete e.tag,e.bab||delete e.bab,null===e.enh?.value&&delete e.enh.value,foundry.utils.isEmpty(e.enh)&&delete e.enh,e.attackName||delete e.attackName,e.attackBonus||delete e.attackBonus,e.critConfirmBonus||delete e.critConfirmBonus,e.measureTemplate?.type||delete e.measureTemplate,e.extraAttacks?.type||delete e.extraAttacks,e.extraAttacks&&(e.extraAttacks.formula||delete e.extraAttacks.formula,e.extraAttacks.count||delete e.extraAttacks.count,e.extraAttacks.label||delete e.extraAttacks.label,0==e.extraAttacks.manual?.length&&delete e.extraAttacks.manual),e.uses?.self?.per||delete e.uses?.self,""===e.uses?.spellPointCost&&delete e.uses?.spellPointCost,e.save&&!e.save.type&&(e.save.description||delete e.save.description,!1===e.save.harmless&&delete e.save.harmless,!0===e.save.harmless||e.save.description?(delete e.save.type,delete e.save.dc):delete e.save),e.held||delete e.held,e.duration?.units||delete e.duration,!1===e.duration?.dismiss&&delete e.duration.dismiss,!1===e.duration?.concentration&&delete e.duration.concentration,e.target?.value||delete e.target,e.uses?.autoDeductChargesCost||delete e.uses?.autoDeductChargesCost,!1===e.uses?.perAttack&&delete e.uses.perAttack,foundry.utils.isEmpty(e.uses)&&delete e.uses,e.ability?.damage||(delete e.ability?.damage,delete e.ability?.damageMult,delete e.ability.max),["other","save","spellSave","healing"].includes(e.actionType||"other")&&(delete e.ability?.attack,delete e.ability?.critMult,delete e.ability?.critRange),e.ability?.critMult<=0&&(e.ability.critMult=1),e.ability?.critRange<=0&&(delete e.ability?.critMult,e.ability.critRange=null),e.ability?.attack||delete e.ability?.attack,null===e.ability?.damageMult&&delete e.ability?.damageMult,null===e.ability?.max&&delete e.ability.max,foundry.utils.isEmpty(e.ability)&&delete e.ability,null===e.powerAttack?.multiplier&&delete e.powerAttack?.multiplier,e.area||delete e.area,e.effect||delete e.effect,e.notes?.effect&&0===e.notes.effect.length&&delete e.notes.effect,e.notes?.footer&&0===e.notes.footer.length&&delete e.notes.footer,foundry.utils.isEmpty(e.notes)&&delete e.notes,e.range?.units?(e.range?.minUnits||delete e.range?.minValue,1===e.range?.maxIncrements&&delete e.range?.maxIncrements):delete e.range,e.damage&&(0==e.damage.parts?.length&&delete e.damage.parts,0==e.damage.critParts?.length&&delete e.damage.critParts,0==e.damage.nonCritParts?.length&&delete e.damage.nonCritParts,0==Object.keys(e.damage).length&&delete e.damage),e.material&&(e.material.normal?.value||e.material.normal?.custom||delete e.material?.normal,e.material.addon?.length>0||delete e.material?.addon,0==Object.keys(e.material).length&&delete e.material);const t=(new this).toObject(!0,!1),s=foundry.utils.diffObject(t,e);if(s.naturalAttack||delete e.naturalAttack,s.alignments||delete e.alignments,e.damage)for(const t of Object.values(e.damage))for(const e of t)DamagePartModel.pruneData(e);if(e.extraAttacks?.manual?.length)for(const t of e.extraAttacks.manual)ExtraAttackModel.pruneData(t);0===e.conditionals?.length&&delete e.conditionals,""===e.ammo?.type&&delete e.ammo.type,null===e.ammo?.misfire&&delete e.ammo.misfire,null!==e.ammo?.cost&&void 0!==e.ammo?.cost||delete e.ammo?.cost,foundry.utils.isEmpty(e.ammo)&&delete e.ammo,e.soundEffect||delete e.soundEffect,e.description||delete e.description,e.splash||delete e.splash,e.touch||delete e.touch,e.nonlethal||delete e.nonlethal}get sheet(){return this._sheet??=new ffd20.applications.component.ItemActionSheet(this),this._sheet}render(e=!1,t={}){Object.values(this.apps).forEach((s=>s.render(e,t)))}static get defaultData(){return foundry.utils.logCompatibilityWarning("ItemAction.defaultData has been deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),(new this).toObject(void 0,!1)}get data(){return foundry.utils.logCompatibilityWarning("ItemAction.data has been deprecated. Use the data directly on the action instead.",{since:"PF1 v11",until:"PF1 v12"}),this}static get defaultDamageType(){return foundry.utils.logCompatibilityWarning("ItemAction.defaultDamageType is deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),[]}get hasSound(){return foundry.utils.logCompatibilityWarning("ItemAction.hasSound is deprecated with no replacement. Test !!action.soundEffect instead.",{since:"PF1 v11",until:"PF1 v12"}),!!this.soundEffect}get ammoType(){return foundry.utils.logCompatibilityWarning("ItemAction.ammoType is deprecated in favor of ItemAction.ammo.type",{since:"PF1 v11",until:"PF1 v12"}),this.ammo.type}get spellArea(){return foundry.utils.logCompatibilityWarning("ItemAction.spellArea is deprecated in favor of ItemAction.area",{since:"PF1 v10",until:"PF1 v12"}),this.area}get ammoCost(){return foundry.utils.logCompatibilityWarning("ItemAction.ammoCost is deprecated in favor of ItemAction.ammo.cost",{since:"PF1 v11",until:"PF1 v12"}),this.ammo.cost}get spellEffect(){return foundry.utils.logCompatibilityWarning("ItemAction.spellEffect is deprecated in favor of ItemAction.effect",{since:"PF1 v11",until:"PF1 v12"}),this.effect}get attackNotes(){return foundry.utils.logCompatibilityWarning("ItemAction.attackNotes is deprecated in favor of ItemAction.notes.footer",{since:"PF1 v11",until:"PF1 v12"}),this.notes?.footer}get effectNotes(){return foundry.utils.logCompatibilityWarning("ItemAction.effectNotes is deprecated in favor of ItemAction.notes.effect",{since:"PF1 v11",until:"PF1 v12"}),this.notes?.effect}}class ItemChange extends(ReplaceableSourceMixin(CompactingMixin(foundry.abstract.DataModel))){static metadata=Object.freeze({name:"Change",label:"Change"});static defineSchema(){const e=foundry.data.fields;return{_id:new e.StringField({blank:!1,initial:()=>foundry.utils.randomID(8),required:!0,readonly:!0}),formula:new FormulaField,operator:new e.StringField({blank:!1,initial:"add",choices:["add","set"]}),target:new e.StringField({blank:!0,required:!1}),type:new e.StringField({blank:!1,required:!1,initial:"untyped"}),priority:new e.NumberField({initial:0,required:!1}),value:new e.NumberField({initial:0,required:!1}),flavor:new e.StringField({blank:!0,initial:void 0,required:!1}),continuous:new e.BooleanField({initial:void 0,required:!1})}}static migrateData(e){return e.subTarget&&(e.target=e.subTarget,delete e.subTarget),e.modifier&&(e.type=e.modifier,delete e.modifier),"script"===e.operator||"+"===e.operator?e.operator="add":"="===e.operator&&(e.operator="set"),super.migrateData(e)}constructor(e,t={}){super(e,t),this.updateTime=new Date}get subTarget(){return foundry.utils.logCompatibilityWarning("ItemChange#subTarget is deprecated in favor of ItemChange#target",{since:"PF1 v11.4",until:"PF1 v12"}),this.target}get modifier(){return foundry.utils.logCompatibilityWarning("ItemChange#modifier is deprecated in favor of ItemChange#type",{since:"PF1 v11.4",until:"PF1 v12"}),this.type}get uuid(){return this.parent.uuid+`.${this.constructor.metadata.name}.${this.id}`}_initialize(e={}){super._initialize(e),Object.defineProperty(this,"_id",{value:this._source._id,writable:!1,configurable:!0}),this.prepareData()}prepareData(){this.flavor||=this.parent?.name.replace(/\[|\]/g,"")||this.type}static async create(e,{parent:t=null}={}){if(Array.isArray(e)||(e=[e]),t instanceof ffd20.documents.item.ItemPF){e=e.map((e=>new this(e).toObject()));const s=t.toObject().system.changes??[],a=new Set(s.map((e=>e._id)));a.delete(void 0),a.delete("");const i=new Set;for(const t of e){for(t._id||=foundry.utils.randomID(8);a.has(t._id);)t._id=foundry.utils.randomID(8);a.add(t._id),i.add(t._id)}const n=[...s,...e];return await t.update({"system.changes":n}),[...t.changes.filter((e=>i.has(e._id)))]}return[]}async delete(){const e=this.parent;if(!e)throw Error("Can not delete Change not in an item");const t=e.toObject().system.changes??[],s=this.id;return t.findSplice((e=>e._id===s)),e.update({"system.changes":t})}get id(){return this._id}get cssClass(){return this.isSimple?"simple":this.isDeferred?"roll":"deterministic"}get isSimple(){const e=ffd20.config.buffTargets[this.target];return e?.simple??!1}get isDeferred(){const e=ffd20.config.buffTargets[this.target];return e?e.deferred??!1:/^skill\./.test(this.target)}get isDistance(){return/speed|sense/i.test(this.target)}get source(){return console.warn("ItemChange.source does not exist"),null}getSourceInfoTargets(e){switch(this.target){case"aac":case"sac":case"nac":return["system.attributes.ac.normal.total","system.attributes.ac.flatFooted.total"]}return getChangeFlat(e,this.target,this.type)}_preUpdate(e){}updateSource(e,t){return e={...e},this.id&&e._id&&delete e._id,super.updateSource(e,t)}async update(e,t={},s={}){if(!this.parent)throw Error("ItemChange has no parent to update.");this.updateTime=new Date,this._preUpdate(e),e._id&&delete e._id;const a=this.parent.toObject().system.changes??[],i=a.findIndex((e=>e._id===this.id));if(i>=0){const t=new this.constructor(this.toObject()),n=t.updateSource(e);return foundry.utils.isEmpty(n)?null:(a[i]=t.toObject(),this.parent.update({"system.changes":a},s))}throw Error(`Change #${this.id} not found on parent ${this.parent.uuid}`)}_safeApplyChange(e,t=null,{applySourceInfo:s=!0}={}){try{this.applyChange(e,t,{applySourceInfo:s})}catch(s){if(this.parent?.isOwner||e.isOwner){const a=this.parent?`from ${this.parent.name} [${this.parent.uuid}] to ${e.name}`:`to ${e.name} [${e.uuid}]]`,i=`Failed to apply ItemChange ${this.id} ${a}`,n={change:this,parent:this.parent,actor:e,targets:t};Hooks.onError("ItemChange#applyChange",s,{msg:i,log:"error",data:n}),ui.notifications?.error(s.message,{console:!1})}}}applyChange(e,t=null,{applySourceInfo:s=!0,rollData:a}={}){t??=this.getTargets(e),a??=this.parent?this.parent.getRollData({refresh:!0}):e.getRollData({refresh:!0});const i=e.changeOverrides;for(const n of t){const t=i[n],o=this.operator;if(!t)continue;let r=0;if(this.formula&&(r=isNaN(this.formula)?this.isDeferred&&RollPF.parse(this.formula).some((e=>!e.isDeterministic))?RollPF.replaceFormulaData(this.formula,a,{missing:0}):RollPF.safeRollSync(this.formula,a,{formula:this.formula,target:n,change:this,rollData:a},{suppressError:this.parent&&!this.parent.isOwner},{maximize:!0}).total:parseFloat(this.formula)),this.value=r,!n)continue;const l=t[o][this.type];switch(o){case"add":{let s=foundry.utils.getProperty(e,n);if(null==s){if(n.match(/^system\.abilities/))continue;s=0}if("string"==typeof r)break;if("number"==typeof s){if(e.changeFlags.loseDexToAC&&r>0&&"dodge"===this.type&&this.isAC)continue;if(ffd20.config.stackingBonusTypes.includes(this.type))foundry.utils.setProperty(e,n,s+r),t[o][this.type]=(l??0)+r;else{const a=l?Math.max(0,r-(l??0)):r;foundry.utils.setProperty(e,n,s+a),t[o][this.type]=Math.max(l??0,r)}}}break;case"set":foundry.utils.setProperty(e,n,r),t[o][this.type]=r}s&&this.applySourceInfo(e);const c=n.match(/^system\.abilities\.([a-zA-Z0-9]+)\.(?:total|penalty|base)$/),d=c?.[1];if(d){const t=e.system.abilities[d];t.mod=ffd20.utils.getAbilityModifier(t.total,{damage:t.damage,penalty:t.penalty})}}}get isAC(){return["ac","aac","sac","nac","tac","ffac"].includes(this.target)}applySourceInfo(e){const t=this.getSourceInfoTargets(e),s=this.value,a={value:s,operator:this.operator,name:this.parent?this.parent.name:this.flavor,modifier:this.type,type:this.parent?this.parent.type:null,change:this};switch(this.operator){case"add":if(ffd20.config.stackingBonusTypes.includes(this.type)){const i=s>=0?"positive":"negative";for(const s of t)getSourceInfo(e.sourceInfo,s)[i].push(a)}else for(const i of t){const t=s>=0?"positive":"negative",n=getSourceInfo(e.sourceInfo,i)[t];let o=!0,r=s;const l=n.find((e=>{const t=e.change?.parent===this.parent,s="base"===e.change?.type&&"enhancement"===this.type||"enhancement"===e.change?.type&&"base"===this.type,a=e.change?.target===this.target;return t&&s&&a}));if(l){if(o=!1,"base"===l.change?.type){l.value+=s;continue}{r+=l.value;const e=!n.some((e=>{const t=e.modifier==e.modifier,s=e.change?.target,a=!s||s===this.target,i=e.value>r;return t&&a&&i}));n.findSplice((e=>e===l),e?{...a,value:r}:void 0)}}if(this.type)for(const e of n){if(!e.type)continue;e.change?.type===e.type&&(e.value<r?n.splice(n.indexOf(e),1):o=!1)}o&&n.push({...a})}break;case"set":for(const s of t)getSourceInfo(e.sourceInfo,s).positive.push({...a})}}getTargets(e){return getChangeFlat(e,this.target,this.type,this.value)}static pruneData(e){null===e.priority&&delete e.priority;for(const[t,s]of Object.entries(e))void 0===s&&delete e[t]}toObject(e,t){const s=super.toObject(e,t);return delete s.value,delete s.continuous,s}}class ItemConditional extends(ReplaceableSourceMixin(CompactingMixin(PreparedModel))){static metadata=Object.freeze({name:"Conditional",label:"Conditional"});constructor(e,t){t instanceof ffd20.components.ItemAction&&(foundry.utils.logCompatibilityWarning("ItemConditional constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.",{since:"PF1 v11",until:"PF1 v12"}),t={parent:t}),super(e,t)}static defineSchema(){const e=foundry.data.fields;return{_id:new IDField,name:new e.StringField,default:new e.BooleanField({initial:!1}),modifiers:new e.ArrayField(new e.EmbeddedDataField(ItemConditionalModifier))}}get uuid(){return this.parent.uuid+`.${this.constructor.metadata.name}.${this.id}`}getEmbeddedDocument(e,t,s={}){let a;if("Modifier"===e)a=this.modifiers?.get(t);if(s.strict)throw Error(`${e} id [${t}] does not exist in ${this.uuid}`);return a}_configure(e){super._configure(e),Object.defineProperties(this,{_modifiers:{value:new Collection,writable:!1,enumerable:!1}})}prepareData(){this._prepareModifiers()}_prepareModifiers(){const e=this._modifiers,t=new Collection(e.entries());e.clear();for(const s of this.modifiers){let a=null;t&&t.has(s.id)?(a=t.get(s.id),s!==a&&a.replaceSource(s._source)):a=s,e.set(a.id,a)}this.modifiers=e}static async create(e,t={}){const{parent:s}=t;if(!(s instanceof ffd20.components.ItemAction))throw Error("Can not create conditionals without parent ItemAction");Array.isArray(e)||(e=[e]),e=e.map((e=>new this(e).toObject()));const a=s.toObject().conditionals||[];return a.push(...e),await s.update({conditionals:a}),e.map((e=>s.conditionals.get(e._id)))}static get defaultData(){return foundry.utils.logCompatibilityWarning("ItemConditional.defaultData has been deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),(new this).toObject(!0,!1)}get id(){return this._id}async update(e,t={}){if(t.dryRun)return this.updateSource(e,{dryRun:!0});this.updateSource(e);const s=this.parent.conditionals.map((e=>e.toObject()));await this.parent.update({conditionals:s})}async delete(){const e=this.parent.conditionals.map((e=>e.toObject()));return e.findSplice((e=>e._id===this.id)),this.parent.update({conditionals:e})}static pruneData(e){if(e.default||delete e.default,e.modifiers?.length>0)for(const t of e.modifiers)ItemConditionalModifier.pruneData(t);else delete e.modifiers}}class ItemConditionalModifier extends(ReplaceableSourceMixin(CompactingMixin(foundry.abstract.DataModel))){static metadata=Object.freeze({name:"Modifier",label:"Modifier"});constructor(e,t){t instanceof ffd20.components.ItemAction&&(foundry.utils.logCompatibilityWarning("ItemConditionalModifier constructor's second parameter as parent is deprecated. Please wrap it in options object like with datamodels.",{since:"PF1 v11",until:"PF1 v12"}),t={parent:t}),super(e,t)}static defineSchema(){const e=foundry.data.fields;return{_id:new IDField,formula:new FormulaField,target:new e.StringField,subTarget:new e.StringField,type:new e.StringField({initial:"untyped"}),damageType:new e.SetField(new e.StringField({blank:!1,nullable:!1})),critical:new e.StringField({initial:void 0})}}get uuid(){return this.parent.uuid+`.${this.constructor.metadata.name}.${this.id}`}static migrateData(e){if(e.damageType&&!Array.isArray(e.damageType)){const t=e.damageType.custom?.split(";").map((e=>e?.trim())).filter((e=>!!e))??[],s=e.damageType.values??[];e.damageType=[...s,...t]}return"effect"===e.target&&["dc","cl"].includes(e.subTarget)&&(e.target=e.subTarget,e.subTarget=void 0),["cl","dc"].includes(e.target)&&(e.subTarget=void 0),"misc"===e.target&&"charges"===e.subTarget&&(e.target=e.subTarget,e.subTarget=void 0),"damage"===e.target&&(e.subTarget||(e.subTarget="allDamage"),e.critical||(e.critical="normal")),"attack"===e.target&&(e.subTarget||(e.subTarget="allAttack"),e.critical||(e.critical="normal")),super.migrateData(e)}static get defaultData(){return foundry.utils.logCompatibilityWarning("ItemConditionalModifier.defaultData has been deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),(new this).toObject(!0,!1)}get id(){return this._id}get partID(){const e=[this.target];return this.subTarget&&e.push(this.subTarget),this.critical&&e.push(this.critical),e.join(".")}static async create(e,t={}){const{parent:s}=t;if(!(s instanceof ffd20.components.ItemConditional))throw Error("Conditional modifier's parent must be a Conditional");Array.isArray(e)||(e=[e]);const a=s.toObject().modifiers??[];return e=e.map((e=>new this(e).toObject())),a.push(...e),await s.update({modifiers:a}),e.map((e=>s.modifiers.get(e._id)))}async update(e,t={}){if(t.dryRun)return this.updateSource(e,{dryRun:!0});this.updateSource(e);const s=this.parent.modifiers.map((e=>e.toObject()));return this.parent.update({modifiers:s})}async delete(){const e=this.parent.toObject().modifiers??[],t=e.findIndex((e=>e._id===this.id));if(t<0)throw Error("Modifier not found in parent "+this.parent.name);return e.splice(t,1),this.parent.update({modifiers:e})}static pruneData(e){e.type||delete e.type,e.formula||delete e.formula,e.critical&&"normal"!==e.critical||delete e.critical,e.target||delete e.target,e.subTarget||delete e.subTarget,["attack","damage"].includes(e.target)||delete e.critical,"damage"!==e.target?delete e.damageType:(e.damageType?.length&&(e.damageType=[...new Set(e.damageType)].filter((e=>!!e))),e.damageType?.length>0||delete e.damageType),["damage","size","charges","critMult","cl","sl"].includes(e.target)&&delete e.type}}class ItemScriptCall extends(ReplaceableSourceMixin(PreparedModel)){constructor(e,t){t instanceof foundry.abstract.DataModel&&(foundry.utils.logCompatibilityWarning("ItemScriptCall second constructor parameter is no longer plain parent.",{since:"PF1 v11",until:"PF1 v12"}),t={parent:t}),super(e,t)}static defineSchema(){const e=foundry.data.fields;return{_id:new e.StringField({required:!0,blank:!1,readonly:!0,initial:()=>foundry.utils.randomID(8)}),name:new e.StringField({required:!0,initial:()=>game.i18n.localize("FFD20.ScriptCalls.NewName")}),img:new e.FilePathField({required:!1,blank:!1,categories:["IMAGE"]}),type:new e.StringField({required:!0,blank:!1,nullable:!1,initial:"script",choices:["script","macro"]}),value:new e.StringField({required:!0,nullable:!1,blank:!0}),category:new e.StringField({required:!1}),hidden:new e.BooleanField({initial:!1,required:!1})}}static migrateData(e){return"macro"==e.type&&(e.name="",e.img=""),super.migrateData(e)}get data(){return foundry.utils.logCompatibilityWarning("ItemScriptCall.data is deprecated in favor of directly accessing the data.",{since:"PF1 v11",until:"PF1 v12"}),this}static get defaultData(){return foundry.utils.logCompatibilityWarning("ItemScriptCall.defaultData is deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),(new this).toObject()}prepareData(){if("macro"===this.type){const e=fromUuidSync(this.value);this.name=e?.name||`${game.i18n.localize("FFD20.Unknown")} (${game.i18n.localize("DOCUMENT.Macro")})`,this.img=e?.img||"icons/svg/hazard.svg"}}static async create(e,t){const{parent:s}=t;if(!(s instanceof ffd20.documents.item.ItemPF))throw Error("Can not create script calls outside of items.");e=e.map((e=>new ItemScriptCall(e,{parent:s}).toObject()));const a=s.toObject().system.scriptCalls||[];return a.push(...e),await s.update({"system.scriptCalls":a}),e.map((e=>s.scriptCalls.get(e._id)))}get id(){return this._id}get hide(){return this.hidden&&!game.user.isGM}async getDelegate(){return"script"===this.type?new Macro({type:"script",command:this.value,name:this.name}):fromUuid(this.value)}async update(e,t={}){if(null!=this.parent){const s=this.parent.system.scriptCalls.findIndex((e=>e._id===this.id));if(s>=0)return e=Object.entries(e).reduce(((e,t)=>(e[`system.scriptCalls.${s}.${t[0]}`]=t[1],e)),{}),this.parent.update(e,t)}}async edit({editable:e=!0}={}){if("macro"===this.type){const t=await fromUuid(this.value);if(!t)return void ui.notifications.error(game.i18n.format("FFD20.Error.NoMacroID",{id:this.value}));t.sheet.render(!0,{focus:!0,editable:e})}else{const e=new ffd20.applications.ScriptEditor({command:this.value,name:this.name,parent:this.parent,script:this.id,scriptCall:!0});e.render(!0);const t=await e.awaitResult();if(t)return this.update({value:t.command,name:t.name})}}async execute(e,t={}){const s=this.parent,a=s.actor,i=e.action??null,n=a?.token?.object??a?.getActiveTokens(!1,!1)[0],o=await this.getDelegate();if(o)return o.execute({item:s,actor:a,token:n,shared:e,action:i,...t})}}class ContextNote extends foundry.abstract.DataModel{static defineSchema(){const e=foundry.data.fields;return{text:new e.StringField({initial:"",nullable:!1,blank:!0}),target:new e.StringField({initial:"",nullable:!1,blank:!0})}}static migrateData(e){return e.subTarget&&("spell"===e.target&&"effect"===e.subTarget?e.target="spellEffect":e.target=e.subTarget),super.migrateData(e)}}const yt=Object.freeze(Object.defineProperty({__proto__:null,ContextNote,ItemAction,ItemChange,ItemConditional,ItemConditionalModifier,ItemScriptCall},Symbol.toStringTag,{value:"Module"}));function convertDistance$1(e,t){return Number.isFinite(e)?ffd20.utils.convertDistance(e,"string"==typeof t?t:void 0)[0]:e}function actionRange(e,t){if(!e?.hasRange)return null;const s=e.range.value,a=e.range.units;if(!a)return null;if("spec"===a)return null;let[i,n]=ffd20.utils.calculateRange(s,a,t);return[i,n]=ffd20.utils.simplifyRange(i,n),`${i} ${ffd20.config.measureUnitsShort[n]||n}`}function actionDamage$1(e,t,s){return e.hasDamage?ffd20.utils.formula.actionDamage(e,{simplify:s?.hash?.combine??!0}):null}function numberFormatAlt(e,{hash:t}={}){return t.fraction?ffd20.utils.fractionalToString(e):ffd20.utils.limitPrecision(e,t.decimals)}function register$1(){const e={convertDistance:convertDistance$1,actionRange,actionDamage:actionDamage$1,numberFormatAlt};for(const[t,s]of Object.entries(e))t in Handlebars.helpers&&console.error(`FFD20 | Masking "${t}" HBS helper`),Handlebars.registerHelper(t,s)}const bt=Object.freeze(Object.defineProperty({__proto__:null,actionDamage:actionDamage$1,actionRange,convertDistance:convertDistance$1,numberFormatAlt,register:register$1},Symbol.toStringTag,{value:"Module"})),Ft=Object.freeze(Object.defineProperty({__proto__:null,helpers:bt,preload,renderCachedTemplate},Symbol.toStringTag,{value:"Module"}));const vt=Object.freeze(Object.defineProperty({__proto__:null,measureDistances:function measureDistances(e,t={}){return foundry.utils.logCompatibilityWarning("ffd20.utils.canvas.measureDistances() is deprecated in favor of canvas.grid.measureDistances() and canvas.grid.measurePath()",{since:"PF1 v11",until:"PF1 v12"}),canvas.grid.measureDistances(e,t)}},Symbol.toStringTag,{value:"Module"}));const Dt=Object.freeze(Object.defineProperty({__proto__:null,getActor:async function getActor(e){return e.document??=!1,ActorSelector.wait(e)},getItem:async function getItem(e={}){if(e.document??=!0,!(e.type||e.subType||e.filterFunc||e.items))throw Error("Insufficient filter rules provided.");return e.filterFunc||=t=>!(e.type&&t.type!==e.type||e.subType&&t.subType!==e.subType),e.window||(e.window={}),e.window.title||e.filterFunc||!e.type||(e.window.title=game.i18n.format("FFD20.SelectSpecific",{specifier:e.subType?ffd20.config[e.type+"Types"]?.[e.subType]:game.i18n.localize(CONFIG.Item.typeLabels[e.type])})),ItemSelector.wait(e)},getNumber:async function getNumber({title:e,label:t,hint:s,initial:a,placeholder:i,min:n,max:o,step:r,classes:l=[],render:c,dialog:d={}}={}){const u={value:a,min:n,max:o,step:r,placeholder:i,label:t,hint:s},m=await renderTemplate("systems/ffd20/templates/apps/get-number.hbs",u),p={window:{title:e||game.i18n.localize("FFD20.Application.GetNumber.Title")},classes:["pf1-v2","get-number",...l],content:m,position:{width:260},buttons:[{icon:"fa-solid fa-check",label:"FFD20.Application.GetNumber.Confirm",action:"confirm",default:!0,callback:(e,t,s)=>(s instanceof foundry.applications.api.DialogV2&&(s=s.element),s.querySelector("form input[name='number']").valueAsNumber)}],render:(e,t)=>{t instanceof foundry.applications.api.DialogV2&&(t=t.element),t.querySelector("form input[name='number']").select(),c?.(e,t)},close:()=>NaN,rejectClose:!1};return foundry.applications.api.DialogV2.wait(foundry.utils.mergeObject(p,d))}},Symbol.toStringTag,{value:"Module"}));const St=Object.freeze(Object.defineProperty({__proto__:null,convert:function convert(e,t,{pad:s=!0}={}){if(!(Number.isFinite(e)&&e>=0))throw Error("Invalid currency quantity: "+e);const a=ffd20.config.currency;if(t||=a.standard,t!==a.base&&void 0===a.rate[t])throw Error(`Invalid currency type "${t}"`);const{base:i,rate:n}=a,o=Object.entries(n).sort(((e,t)=>t[1]-e[1])),r=n[t]??1,l={};for(const[t,a]of o){if(a>r){s&&(l[t]=0);continue}const i=Math.floor(e/a);(0!==i||s)&&(l[t]=i,e-=i*a)}return(0!=e||s)&&(l[i]=e),l},merge:function merge({...e}={},t){const{rate:s,base:a}=ffd20.config.currency;t||=ffd20.config.currency.base;let i=0;for(let[t,n]of Object.entries(e)){if(n??=0,!Number.isFinite(n))throw Error(`Invalid currency value "${n}" for type "${t}"`);if(0==n)continue;const e=s[t];if(e)i+=n*e;else{if(t!==a)throw Error(`Invalid currency type: "${t}"`);i+=n}}return t===a?i:i/s[t]},split:function split(e,{omit:t=[],standard:s=!0,pad:a=!0}={}){const i=ffd20.config.currency,n=Object.entries(i.rate).filter((([e])=>!t.includes(e))).sort(((e,t)=>t[1]-e[1])),o=s?i.standardRate:1/0,r={};for(const[t,s]of n){if(s>o){a&&(r[t]=0);continue}const i=Math.floor(e/s);(0!=i||a)&&(r[t]=i,e-=i*s)}return(0!=e||a)&&(r[i.base]=e),r}},Symbol.toStringTag,{value:"Module"})),unflair=e=>e.replace(/\[[^\]]*]/g,""),compress=e=>e.replace(/\s+/g,"").replace(/\+-/g,"-").replace(/--/g,"+").replace(/-\+/g,"-").replace(/\+\++/g,"+"),isSimpleTerm=e=>e instanceof foundry.dice.terms.NumericTerm||e?.simple||!1;class FormulaPart{terms=[];simple=!1;constructor(e=[],t=!1,s=!0){this.terms=e.filter((e=>!!e)),this.simple=t,s&&this.evaluate()}get isDeterministic(){return this.terms.every((e=>e.isDeterministic))}#b;get formula(){if(this.#b)return this.#b;const e=this.terms.map((e=>{if(e.isDeterministic)return""+e.total;if(e instanceof foundry.dice.terms.FunctionTerm)return""+(e.simplify||e.expression);if(e instanceof foundry.dice.terms.Die&&e._number instanceof Roll&&1==e._number.terms.length&&e._number.terms[0]instanceof foundry.dice.terms.ParentheticalTerm){const t=simplify(e._number.terms[0].roll.formula);return e._number=new Roll.defaultImplementation(t).evaluateSync({maximize:!0}),e.formula}return e.formula})).join(""),t=new Roll.defaultImplementation(e);return t.isDeterministic?this.#b=t.evaluateSync({minimize:!0}).total.toString():this.#b=e,this.#b}_total=null;evaluate(){const e=new Roll.defaultImplementation(this.formula).evaluateSync({minimize:!0});this._total=e.total}get total(){if(null===this._total)throw console.error("Must be evaluated first!",this),Error("Must be evaluated first!");return this._total}}function triTermOps(e,t,s=!1){const a=[];for(;e.length;){const i=e.shift();if(i instanceof foundry.dice.terms.OperatorTerm&&t.includes(i.operator)&&(!s||isSimpleTerm(a.at(-1))&&isSimpleTerm(e[0]))){const t=a.pop(),s=e.shift();a.push(new FormulaPart([t,i,s],isSimpleTerm(t)&&isSimpleTerm(s)))}else a.push(i)}return a}function simplify(e,t={},{strict:s=!0}={}){e=compress(Roll.replaceFormulaData(unflair(e),t,{missing:0})),e=Roll.defaultImplementation.parse(e).map((e=>{if(e instanceof foundry.dice.terms.ParentheticalTerm){if(e.isDeterministic){e.evaluate({minimize:!0});return""+e.total}{const t=simplify(e.roll.formula);return 1===Roll.defaultImplementation.parse(t).length?t:`(${t})`}}return e.formula})).join("");const a=new Roll.defaultImplementation(e);try{a.evaluateSync({minimize:!0})}catch(t){if(s)throw t;return compress(e)}let i=function replaceZeroDice(e){for(let t=0;t<e.length;t++){const s=e[t];s instanceof foundry.dice.terms.Die&&0===s.number&&e.splice(t,1,foundry.dice.terms.RollTerm.fromData({number:0,class:"NumericTerm",_evaluated:!0}))}return e}(a.terms);i=function negativeTerms(e){const t=[];for(;e.length;){const s=e.shift();if(s instanceof foundry.dice.terms.OperatorTerm&&"-"===s.operator){if(!(t.at(-1)instanceof foundry.dice.terms.OperatorTerm)){const e=new foundry.dice.terms.OperatorTerm({operator:"+"});e._evaluated=!0,t.push(e)}t.push(new FormulaPart([s,e.shift()],!0))}else t.push(s)}return t}(i),i=triTermOps(i,["**"]),i=triTermOps(i,["/","*"]),i=triTermOps(i,["==","===",">",">=","<","<=","!=","!=="]),i=triTermOps(i,["+","-"],!0),i=function stringTerms(e){const t=[];for(;e.length;){const s=e.shift();s instanceof foundry.dice.terms.StringTerm?/^d\d/.test(s.expression)?t.push(new FormulaPart([t.pop(),s])):t.push(new FormulaPart([s,e.shift()])):t.push(s)}return t}(i);return new FormulaPart(i,void 0,!1).formula.replace(/ \+ 0\b/g,"")}const kt=Object.freeze(Object.defineProperty({__proto__:null,actionDamage:function actionDamage(e,{simplify:t=!0,strict:s=!0}={}){const a=e.actor,i=e.item,n=a?.system,o=[],r={get rollData(){return this._cache??=e.getRollData(),this._cache}},handleFormula=(t,a)=>{try{switch(typeof t){case"string":{const e=t.indexOf("@")>=0?a?.parent?.getRollData()??r.rollData:{};if(0!=t){const a=ffd20.utils.formula.simplify(t,e,{strict:s});0!=a&&o.push(a)}break}case"number":0!=t&&o.push(""+t)}}catch(s){console.error(`Action damage formula parsing error with "${t}"`,s,"\n",{action:e,change:a}),o.push("NaN")}},handleParts=e=>e.forEach((({formula:e})=>handleFormula(e)));handleParts(e.damage.parts);const l="natural"===e.item.subType,c=e.ability.damage;if(c){const t=e.ability?.max??1/0,s=Math.min(n?.abilities?.[c]?.mod??0,t),a=e.held||i?.system.held||"1h";let r=e.ability.damageMult??(l?null:ffd20.config.abilityDamageHeldMultipliers[a])??1;l&&!(e.naturalAttack?.primary??1)&&(r=e.naturalAttack?.secondary?.damageMult??.5);const d=s>=0?Math.floor(s*r):s;0!=d&&o.push(d)}if(handleParts(e.damage.nonCritParts),e.allDamageSources.forEach((e=>handleFormula(e.formula,e))),0===o.length||o.some((e=>"NaN"===e)))return console.warn("Action damage resulted in invalid formula:",o.join(" + "),e),"NaN";const d=ffd20.utils.formula.compress(o.join("+"));if(!t)return d;try{const e=d.indexOf("@")>=0?r.rollData:void 0,t=ffd20.utils.formula.simplify(d,e,{strict:s});return ffd20.utils.formula.compress(t)}catch(t){return console.error("Invalid action damage formula:",o.join(" + "),e,t),"NaN"}},compress,simplify,unflair},Symbol.toStringTag,{value:"Module"}));function sizeRoll(e,t,s="M",a="M"){if(!Number.isFinite(e)||!Number.isFinite(t))return[new foundry.dice.terms.NumericTerm({number:NaN})];const _getSizeIndex=e=>"string"==typeof e?Object.values(ffd20.config.sizeChart).indexOf(e.toUpperCase()):e;if((s=_getSizeIndex(s))===(a=_getSizeIndex(a)))return 1===e&&1===t?[new foundry.dice.terms.NumericTerm({number:1})]:[new foundry.dice.terms.Die({number:e,faces:t})];e>1&&(10===t?(s<a?a--:(e*=2,a++),t=8):4===t&&(t=e%2==0?8:6,e=Math.floor((e+1)/2))),12===t&&(e*=2,t=6);let i=`${e}d${t}`;const n=ffd20.config.sizeDie;if(-1===n.indexOf(i)&&[6,8].includes(t)){let s;const a=n.map((e=>e.split("d").map((e=>Number(e)))));if(6===t?s=a.filter((([s,a])=>s<e&&a===t)).at(-1):8===t&&(s=a.filter((([s,a])=>s>e&&a===t)).at(0)),s){const[e,t]=s;i=`${e}d${6===t?8:6}`}}let o=n.indexOf(i);-1===o&&"1d1"===i&&(o=0);let r=i;if(o>=0){const e=n.indexOf("1d6"),t=n.indexOf("1d8");let i=a-s,l=a;for(;i>0;)l<=4||o<=t?(o--,i--,l--):(o-=2,i--,l--);for(;i<0;)l<=3||o<=e?(o++,i++,l++):(o+=2,i++,l++);o=Math.max(0,Math.min(n.length-1,o)),r=n[o]}-1===o&&ui.notifications.warn(game.i18n.format("FFD20.Warning.NoSizeDie",{fallback:i,formula:r}));const[l,c]=r.split("d").map((e=>parseInt(e)));return!c||1===l&&1===c?[new foundry.dice.terms.NumericTerm({number:l})]:[new foundry.dice.terms.Die({number:l,faces:c})]}const sizeReach=(e="M",t=!1,s="tall")=>("number"==typeof e&&(e=Object.values(ffd20.config.sizeChart)[e]),e=Object.entries(ffd20.config.sizeChart).find((t=>t[1]===e))[0],ffd20.documents.actor.ActorPF.getReach(e,s)[t?"reach":"melee"]);function ifelse(e,t,s){return e?t:s}const Ct=Object.freeze(Object.defineProperty({__proto__:null,functions:{sizeRoll:function sizeRollFn(e,t,s,a){const[i]=sizeRoll(e,t,s,a);if(this.terms.push(i.formula),i instanceof foundry.dice.terms.Die){const e=Roll.defaultImplementation.fromTerms([i]);return e.options.final=!0,this.rolls.push(e),0}return i.number},sizeReach,lookup:function lookup(e,t,...s){return s[e-1]??t},ifelse,if:function _if(e,t){return ifelse(e,t,0)},eq:(e,t)=>e===t?1:0,ne:(e,t)=>e!==t?1:0,lt:(e,t)=>e<t?1:0,lte:(e,t)=>e<=t?1:0,gt:(e,t)=>e>t?1:0,gte:(e,t)=>e>=t?1:0,and:(...e)=>e.every((e=>!!e))?1:0,or:(...e)=>e.some((e=>!!e))?1:0,xor:(...e)=>1==e.filter((e=>!!e)).length?1:0,not:e=>!e},sizeReach,sizeRoll},Symbol.toStringTag,{value:"Module"}));const wt=Object.freeze(Object.defineProperty({__proto__:null,getConditions:function getConditions(){const e=CONFIG.statusEffects.filter((e=>"dead"!==e.id));let t=ffd20.registry.conditions.map((e=>{const t=e.toStatusEffect();for(const[e,s]of Object.entries({label:"name",icon:"img"})){const a=`StatusEffectConfig#${e} has been deprecated in favor of StatusEffectConfig#${s}`;Object.defineProperty(t,e,{get(){return foundry.utils.logCompatibilityWarning(a,{since:12,until:14,once:!0}),this[s]},set(e){foundry.utils.logCompatibilityWarning(a,{since:12,until:14,once:!0}),this[s]=e},enumerable:!1,configurable:!0})}return t}));game.settings.get("ffd20","coreEffects")&&t.push(...e),t.sort(((e,t)=>e.name.localeCompare(t.name)));const s=t.findSplice((e=>"dead"===e.id));return t=[s,...t],t}},Symbol.toStringTag,{value:"Module"}));const Tt=Object.freeze(Object.defineProperty({__proto__:null,addStatic:function addStatic(e){e.step=5}},Symbol.toStringTag,{value:"Module"}));const _t=new Intl.NumberFormat(void 0).format,Pt=Object.freeze(Object.defineProperty({__proto__:null,join:function join(e,t="u",s=!0){return t={c:"conjunction",d:"disjunction",u:"unit"}[t[0]],new Intl.ListFormat(game.i18n.lang,{style:s?"short":"long",type:t}).format(e)},numberFormat:_t},Symbol.toStringTag,{value:"Module"}));const At=Object.freeze(Object.defineProperty({__proto__:null,getClassIDMap:async function getClassIDMap(){if(this.classIDMap)return this.classIDMap;const e={world:4e3,module:3e3,system:2e3};let t=[...game.packs].map((t=>({pack:t,visible:t.visible??!0,disabled:t.config.ffd20?.disabled??!1,sort:e[t.metadata.packageType]}))).filter((e=>!e.disabled&&e.visible&&"Item"===e.pack.metadata.type)).sort(((e,t)=>e.sort-t.sort));await Promise.all(t.map((e=>e.pack.getIndex({fields:["system.tag","system.subType"]})))),t=t.filter((e=>e.pack.index.size>0&&"class"===[...e.pack.index][0]?.type));const s={};for(const{pack:e}of t)for(const t of e.index){if(t.system?.subType&&!["base","npc"].includes(t.system?.subType))continue;const e=t.system?.tag;e&&(s[e]=t.name)}return this.classIDMap=s,s}},Symbol.toStringTag,{value:"Module"})),{HandlebarsApplicationMixin:It,ApplicationV2:Ot}=foundry.applications.api;class PartyRestConfig extends(It(NoAutocomplete(Ot))){constructor(e,t){super(t),e.hours??=null,this.restConfig=e,this.constructor._prepareActors(e),this.constructor._calculateHours(e,null===e.hours)}static DEFAULT_OPTIONS={tag:"form",form:{handler:this._onSubmit,submitOnChange:!0,closeOnSubmit:!1},classes:["pf1-v2","party-rest","standard-form"],window:{title:"FFD20.Application.XPDistributor.Title",minimizable:!1,resizable:!0},actions:{rest:this._onRest,toggle:this._onToggleCategory,sheet:{handler:this._onOpenSheet,buttons:[2]}},position:{width:500}};static PARTS={form:{template:"systems/ffd20/templates/apps/party-rest.hbs"},footer:{template:"templates/generic/form-footer.hbs"}};static _prepareActors(e){const{longTermCare:t,restoreHealth:s,restoreUses:a,restOptions:i}=e;e.actors=e.actors.map((e=>{if(["haunt","vehicle","trap"].includes(e.type))return null;const n=this._isConscious(e);return{name:e.token?.name||e.name,img:e.token?.img||e.prototypeToken?.texture?.src||e.img,uuid:e.uuid,conscious:n,watch:n,options:{...i,longTermCare:t,restoreHealth:s,restoreUses:a}}})).filter((e=>!!e))}static _isConscious(e){if(game.settings.get("ffd20","healthConfig").getActorConfig(this.actor).rules.useWoundsAndVigor){const t=e.system.attributes.wounds;return t.value>=t.threshold}{const t=e.system.attributes.hp;return t.value+t.temp>=0}}static _calculateHours(e,t=!0){const s="none"===e.watches,a="duo"===e.watches,i=!a,n=s?1:Math.max(1,e.actors.filter((e=>e.watch)).length),o=ffd20.config.partyRest[n]??Object.values(ffd20.config.partyRest).at(-1);let r=e.hours;if(t&&(r=i?o.hours:o.double??o.hours,e.hours=r),n>1){const t=Math.clamp(r,0,24);e.watchTime=t/(i?n:Math.floor(n/2))}else e.watchTime=0;e.duo=o.double??!1,!e.duo&&a&&(e.watches="solo")}get title(){return game.i18n.localize("FFD20.Application.PartyRest.Title")}_prepareContext(){const e=this.restConfig;return{id:this.id,...e,buttons:[{type:"button",label:"FFD20.Rest",icon:"fa-solid fa-bed",action:"rest"}]}}static _onToggleCategory(e,t){const s=this.restConfig,a=t.dataset.toggle,i="watch"===a,n=s.actors.some((e=>i?!e.watch:!e.options[a]));s.actors.forEach((e=>{i?e.watch=n:e.options[a]=n})),i&&this.constructor._calculateHours(s),this.render()}static async _onRest(e,t){e.pf1NoRender=!0,await this._onSubmitForm(this.options.form,e);const s=this.restConfig,a=this.element.querySelector(".window-content");a.classList.add("resting");for(const e of a.querySelectorAll("input,button"))e.disabled=!0;!1!==await this.constructor._performRest(s)?ui.notifications.info(game.i18n.format("FFD20.Application.PartyRest.Rested",{people:s.actors.length,hours:ffd20.utils.limitPrecision(s.hours,1)})):s.cancelled=!0,this.resolve(s),this.close()}static async _performRest(e){if(!1===Hooks.call("pf1PrePartyRest",e))return!1;const{actors:t,hours:s}=e,a=[];for(const e of t){const{restoreHealth:t,restoreUses:s,longTermCare:i,...n}=e.options,o=fromUuidSync(e.uuid);if(!o)continue;const r=o.performRest({...n,restoreHealth:t,restoreDailyUses:s,longTermCare:i});a.push(r)}await Promise.allSettled(a),s>0&&game.user.isGM&&await game.time.advance(Math.floor(3600*s)),Hooks.callAll("pf1PartyRest",e)}static _onSubmit(e,t,s){const a=this.restConfig;(s=foundry.utils.expandObject(s.object)).actors=Object.values(s.actors).map(((e,t)=>foundry.utils.mergeObject(a.actors[t],e))),foundry.utils.mergeObject(a,s),this.constructor._calculateHours(a,"hours"!==e.target.name),!0!==e.pf1NoRender&&this.render()}close(...e){super.close(...e),this.resolve(null)}static _onOpenSheet(e,t){fromUuidSync(t.dataset.actorUuid).sheet.render(!0)}static async quickRest({actors:e=[],hours:t,restoreUses:s=!0,restoreHealth:a=!0,longTermCare:i=!0,restOptions:n={},watches:o="none"}={}){const r={actors:e,hours:t,restoreUses:s,restoreHealth:a,longTermCare:i,restOptions:n,watches:o};return this._prepareActors(r),this._calculateHours(r,void 0===t),await this._performRest(r),r}static async open(e){return new Promise((t=>{const s=new PartyRestConfig(e);s.resolve=t,s.render(!0,{focus:!0})}))}}const xt=Object.freeze(Object.defineProperty({__proto__:null,PartyRestConfig,rest:async function rest({actors:e=[],watches:t=!0,hours:s=null,restoreHealth:a=!0,restoreUses:i=!0,longTermCare:n=!1,skipDialog:o=!1,restOptions:r={}}={}){if(0==(e=e.filter((e=>e instanceof Actor&&e.isOwner))).length)throw Error("No valid actors chosen to rest");return"boolean"==typeof t&&(t=t?"solo":"none"),o?PartyRestConfig.quickRest({actors:e,hours:s,restoreUses:i,restoreHealth:a,longTermCare:n,restOptions:r}):PartyRestConfig.open({actors:e,watches:t,hours:s,restoreUses:i,restoreHealth:a,longTermCare:n,restOptions:r})}},Symbol.toStringTag,{value:"Module"}));const convertDistance=(e,t="ft")=>"metric"===getDistanceSystem()?"mi"===t?[Math.round(1.6*e*100)/100,"km"]:[Math.round(e/5*1.5*100)/100,"m"]:(["ft","mi"].includes(t)||(t="ft"),[e,t]);const getDistanceSystem=()=>{let e=game.settings.get("ffd20","distanceUnits");return"default"===e&&(e=game.settings.get("ffd20","units")),e},getWeightSystem=()=>{let e=game.settings.get("ffd20","weightUnits");return"default"===e&&(e=game.settings.get("ffd20","units")),e};const binarySearch=(e,t,s)=>{let a=0,i=e.length-1;for(;a<=i;){const n=i+a>>1,o=s(t,e[n]);if(o>0)a=n+1;else{if(!(o<0))return n;i=n-1}}return-a-1};function uniquePermutations(e){if((e=e.map((e=>e.trim())).filter((e=>e?.length>0))).length>7)return console.warn("Array too large. Not attempting.",e),!1;const t=new Set;for(let s=0;s<e.length;s+=1){const a=uniquePermutations(e.slice(0,s).concat(e.slice(s+1)));if(a.length)for(let i=0;i<a.length;i+=1)t.add([e[s]].concat(a[i]));else t.add([e[s]])}return[...t]}function TextEditor_replaceTextNode(e,t,s,{replaceParent:a=!1}={}){let i=e;t.index>0&&(i=e.splitText(t.index)),t[0].length<i.length&&i.splitText(t[0].length);const n=i.parentElement;n.parentElement&&n.childNodes.length<2&&a?n.replaceWith(s):i.replaceWith(s)}const calculateRangeFormula=(e,t="ft",s={})=>{switch(t){case"natural":return s.traits?.reach?.natural?.melee??0;case"melee":case"touch":return s.range?.melee??0;case"reach":return s.range?.reach??0;case"close":return RollPF.safeRollSync(ffd20.config.spellRangeFormulas.close,s).total;case"medium":return RollPF.safeRollSync(ffd20.config.spellRangeFormulas.medium,s).total;case"long":return RollPF.safeRollSync(ffd20.config.spellRangeFormulas.long,s).total;case"mi":return 5280*RollPF.safeRollSync(e,s).total;case"m":return RollPF.safeRollSync(e,s).total/1.5*5;case"km":return 1e3*RollPF.safeRollSync(e,s).total/1.5*5;default:return RollPF.safeRollSync(e,s).total}};const diffObjectAndArray=(e,t,{inner:s=!1,keepLength:a=!1}={})=>(foundry.utils.logCompatibilityWarning("ffd20.utils.diffObjectAndArray() is deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),Object.keys(t).reduce(((i,n)=>{if(s&&!(n in e))return i;const[o,r]=function _difference(e,t){const i=foundry.utils.getType(e);if(i!==foundry.utils.getType(t))return[!0,t];if("Array"===i){if(e.length!==t.length)return[!0,t];const i=[];for(let n=0;n<e.length;n++){const o=diffObjectAndArray(e[n],t[n],{inner:s,keepLength:a});foundry.utils.isEmpty(o)?a&&i.push({}):i.push(o)}return i.length>0?[!0,i]:[!1,i]}if("Object"===i){if(foundry.utils.isEmpty(e)!==foundry.utils.isEmpty(t))return[!0,t];const i=diffObjectAndArray(e,t,{inner:s,keepLength:a});return[!foundry.utils.isEmpty(i),i]}return[e!==t,t]}(e[n],t[n]);return o&&(i[n]=r),i}),{}));function limitPrecision(e,t=2,s="floor"){const a=Math.pow(10,t);return Math[s](e*a)/a}function _deepClone(e,t=!1,s=!1,a=0){if(a>100)throw Error("Maximum depth exceeded. Be sure your object does not contain cyclical data structures.");if(a++,"object"!=typeof e||null===e)return e;if(Array.isArray(e))return e.map((e=>_deepClone(e,t,s,a)));if(e instanceof Date)return new Date(e);if(e instanceof foundry.abstract.Document){if(s)return e.toObject();if(t)throw Error("Document instance encountered");return e}if(e instanceof PIXI.DisplayObject){if(t)throw Error("PIXI graphic encountered");return e}if(e instanceof foundry.abstract.DataModel){if(s)return e.toObject()}else if(e.constructor&&e.constructor!==Object){if("function"==typeof e.toObject)return e.toObject();if("function"==typeof e.toJSON)return e.toJSON();if(t)throw Error("Unsupported advanced object: "+e.constructor.name);return e}const i={};for(const n of Object.keys(e))i[n]=_deepClone(e[n],t,s,a);return i}const Mt=Object.freeze(Object.defineProperty({__proto__:null,CR:class CR{static fromString(e){return"1/8"===e?.125:"1/6"===e?.1625:"1/4"===e?.25:"1/3"===e?.3375:"1/2"===e?.5:parseFloat(e)}static fromNumber(e=0){return.125===e?"1/8":.1625===e?"1/6":.25===e?"1/4":.3375===e?"1/3":.5===e?"1/2":Number.isNumeric(e)?e?.toString()??"":"0"}static getXP(e){return e<1?Math.floor(Math.max(400*e,0)):ffd20.config.CR_EXP_LEVELS[e]||null}},SemanticVersion,binarySearch,calculateRange:function calculateRange(e,t="ft",s={}){const a=calculateRangeFormula(e,t,s);return convertDistance(a,"ft")},calculateRangeFormula,canvas:vt,chat:a,convertDistance,convertDistanceBack:(e,t="ft")=>"metric"===getDistanceSystem()?"mi"===t?[Math.round(e/1.6*100)/100,"mi"]:[Math.round(5*e/1.5*100)/100,"ft"]:[e,t],convertWeight:e=>"metric"===getWeightSystem()?e/2:e,convertWeightBack:e=>"metric"===getWeightSystem()?2*e:e,createTag:function createTag(e,{allowUpperCase:t=!1,camelCase:s=!0,replacement:a="",allowInitialNumbers:i=!1,allowUnderScore:n=!0}={}){return e?(e=e.normalize("NFD").replace(/\p{Diacritic}/gu,"").replace(/[^a-zA-Z0-9_\s]/g,a).split(/\s+/).map(((e,a)=>(t||(e=e.toLowerCase()),a>0&&s&&(e=e.substring(0,1).toUpperCase()+e.substring(1)),e))).join(""),n||(e=e.replaceAll("_","")),i||(e=e.replace(/^\d+/,"")),e):""},currency:St,deepClone:function deepClone(e,{strict:t=!1,source:s=!1}={}){return _deepClone(e,t,s)},dialog:Dt,diffObjectAndArray,enrichHTMLUnrolled:async function enrichHTMLUnrolled(e,{secrets:t,documents:s,links:a,embeds:i,rolls:n=!1,rollData:o,relativeTo:r}={}){let l=await TextEditor.enrichHTML(e,{secrets:t,documents:s,links:a,embeds:i,rolls:n,rollData:o,relativeTo:r});if(!0!==n){const e=document.createElement("div");e.innerHTML=l;const t=function TextEditor_getTextNodes(e){const t=[],s=document.createTreeWalker(e,NodeFilter.SHOW_TEXT);for(;s.nextNode();)t.push(s.currentNode);return t}(e);o=o instanceof Function?o():o||{};const s=/\[\[(\/[a-zA-Z]+\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;await async function TextEditor_replaceTextContent(e,t,s,a={}){let i=!1;for(const n of e){const e=n.textContent.matchAll(t);for(const t of Array.from(e).reverse()){let e;try{e=await s(t)}catch(e){Hooks.onError("TextEditor.enrichHTML",e,{log:"error"})}e&&(TextEditor_replaceTextNode(n,t,e,a),i=!0)}}return i}(t,s,(e=>ffd20.utils.internal.createInlineFormula(e,o))),l=e.innerHTML}return l},findInCompendia:(e,{packs:t=[],type:s,docType:a,disabled:i=!1}={})=>{t=t?.length?t.flatMap((e=>game.packs.get(e)??[])):game.packs.filter((e=>!s||e.metadata.type==s)),i||(t=t.filter((e=>!0!==e.config?.ffd20?.disabled))),e=e.toLocaleLowerCase();for(const s of t){s.fuzzyIndex||(s.fuzzyIndex=ffd20.utils.internal.sortArrayByName([...s.index]));let t=s.fuzzyIndex;a&&(t=t.filter((e=>e.type===a)));const i=binarySearch(t,e,((e,t)=>e.localeCompare(t.name,void 0,{ignorePunctuation:!0})));if(i>-1){const e=s.index.get(t[i]._id);return{pack:s,index:e}}}let n=uniquePermutations(e.split(/[, _-]/));n?n=n.map((e=>e.join(" "))):(n=[null],n.push(e.split(/[ _-]/).reverse().join(" ")),n.push(e.split(/[,;] ?/).reverse().flatMap((e=>e.split(" "))).join(" ")));for(const e of t){let t=e.fuzzyIndex;a&&(t=t.filter((e=>e.type===a)));for(let s=1;s<n.length;s++){const a=binarySearch(t,n[s],((e,t)=>e.localeCompare(t.name,void 0,{ignorePunctuation:!0})));if(a>-1){const s=e.index.get(t[a]._id);if(s)return{pack:e,index:s}}}}return!1},formula:kt,fractionalToString:e=>{const t=Math.floor(e),s=ffd20.utils.limitPrecision(e-t,3,"round");if(0===s)return""+t;const a=[];return 0!==t&&a.push(t),.25===s?a.push("1/4"):.333===s?a.push("1/3"):.5===s?a.push("1/2"):.667===s?a.push("2/3"):.75===s&&a.push("3/4"),a.join(" ")},getAbilityModifier:function getAbilityModifier(e=null,t={}){if(null!=e){const s=Math.abs(t.penalty??0),a=Math.abs(t.damage??0);return Math.max(-5,Math.floor((e-10)/2)-Math.floor(s/2)-Math.floor(a/2))}return 0},getActors:function*getActors({base:e=!0,types:t=null,scene:s=null,scenes:a=!1,linked:i=!0,unlinked:n=!0,users:o=[game.user],ownership:r=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER}={}){o=o.map((e=>e instanceof User?e:game.users.get(e)));const testUsers=e=>!o.length||o.some((t=>e.testUserPermission(t,r)));if(e)for(const e of[...game.actors])t&&!t.includes(e.type)||testUsers(e)&&(yield e);let l;s?l=s instanceof Scene?[s]:[game.scenes.get(s)]:a&&(l=[...game.scenes]);for(const s of l)for(const a of[...s.tokens]){const s=a.actor;if(!s)continue;if(t&&!t.includes(s.type))continue;if(!testUsers(s))continue;const o=a.isLinked;(o&&i&&!e||!o&&n)&&(yield s)}},getDistanceSystem,getWeightSystem,handlebars:Ft,i18n:Pt,init:wt,internal:t,isItemSameSubGroup:function isItemSameSubGroup(e,t){return"spell"===e.type?e.system.spellbook===t.system.spellbook&&e.system.level===t.system.level:!e.subType||e.subType===t.subType},limit:function limit(e,t=100){let s=0;return(...a)=>{const i=performance.now();i-s<t||(s=i,e(...a))}},limitPrecision,measureDistance:(e,t,{ray:s=null,diagonalRule:a="5105",state:i={diagonals:0,cells:0}}={})=>{foundry.utils.logCompatibilityWarning("ffd20.utils.measureDistance() is deprecated in favor of canvas.grid.measurePath()",{since:"PF1 v11",until:"PF1 v12"}),s??=new Ray(e,t);const n=canvas.dimensions.size,o=Math.ceil(Math.abs(s.dx/n)),r=Math.ceil(Math.abs(s.dy/n)),l=Math.min(o,r),c=Math.abs(r-o);i.diagonals+=l;let d=0;if("5105"===a){const e=Math.floor(i.diagonals/2)-Math.floor((i.diagonals-l)/2);d=2*e+(l-e)+c}else d=c+l;return i.cells+=d,d*canvas.dimensions.distance},naturalSort:(e,t="",{numeric:s=!0,ignorePunctuation:a=!1}={})=>{const i=new Intl.Collator(game.settings.get("core","language"),{numeric:s,ignorePunctuation:a});return e.sort(((e,s)=>{const a=t?t in e?e[t]:foundry.utils.getProperty(e,t):e,n=t?t in s?s[t]:foundry.utils.getProperty(s,t):s;return i.compare(a,n)}))},openJournal:async function openJournal(e,t={}){const s=await fromUuid(e);return s instanceof JournalEntryPage?s.parent.sheet.render(!0,{pageId:s.id,editable:!1,collapsed:!0,width:600,height:700,...t}):s.sheet.render(!0,{editable:!1,...t}),s},overlandSpeed:function overlandSpeed(e){const t=getDistanceSystem(),s="metric"===t?game.settings.get("ffd20","overlandMetricVariant"):"default",{per:a,out:i,unit:n}=ffd20.config.overlandSpeed[t][s];return{speed:e/a*i,unit:n}},packs:At,parseAlignment:function parseAlignment(e){return{lawful:e.includes("l")?1:0,evil:e.includes("e")?1:0,chaotic:e.includes("c")?1:0,good:e.includes("g")?1:0,neutral:"tn"==e?2:e.includes("n")?1:0}},party:xt,refreshActors:function refreshActors({renderOnly:e=!1,renderForEveryone:t=!1}={}){e||(game.actors.forEach((e=>e.reset())),game.scenes.forEach((e=>e.tokens.filter((e=>e.actor&&!e.isLinked)).map((e=>e.actor)).forEach((e=>e.reset()))))),ffd20.utils.renderApplications({systemOnly:!0}),t&&(foundry.utils.logCompatibilityWarning("ffd20.utils.refreshActors() renderForEveryone option is deprecated with no replacement.",{since:"PF1 v11",until:"PF1 v12"}),game.socket.emit("ffd20","refreshActorSheets"))},refreshSheets:function refreshSheets({reset:e=!0,actor:t=!0,item:s=!0,action:a=!0}={}){Object.values(ui.windows).forEach((i=>{(t&&i instanceof ActorSheet||s&&i instanceof ItemSheet||a&&i instanceof ffd20.applications.component.ItemActionSheet)&&(e&&i.object instanceof Document&&i.object.reset(),i.render())}))},renderApplications:async function renderApplications({systemOnly:e=!1,force:t}={}){const s=[];for(const t of Object.values(ui.windows))e&&!t.options.classes.includes("ffd20")||s.push(t);for(const t of foundry.applications.instances.values())e&&!t.options.classes.includes("pf1-v2")||s.push(t);s.sort(((e,t)=>e.position.zIndex-t.position.zIndex));for(const e of s)e.minimized||e.render(t,{zIndex:e.position.zIndex});console.debug("FFD20 |",s.length,"application(s) re-rendered")},roll:Ct,rollData:Tt,simplifyRange:function simplifyRange(e,t="ft"){switch(t){case"km":if(e<.8)return[Math.floor(1e3*e),"m"];break;case"m":if(e%1e3==0)return[Math.floor(e/1e3),"km"];if(e>800)return[limitPrecision(e/1e3,2),"km"];break;case"mi":if(e<.3)return[Math.floor(5280*e),"ft"];break;case"ft":if(e%5280==0)return[Math.floor(e/5280),"mi"];if(e>2e3)return[limitPrecision(e/5280,2),"mi"]}return[e,t]},swapDistance:function swapDistance(e,t){if(!Number.isFinite(e))throw Error("value parameter must be a number");switch(t){case"ft":return Math.round(100*e/5*1.5)/100;case"m":return Math.round(100*e/1.5*5)/100;default:throw Error("type parameter must be defined")}},swapWeight:function swapWeight(e,t){if(!Number.isFinite(e))throw Error("value parameter must be a number");switch(t){case"kg":return 2*e;case"lbs":return e/2;default:throw Error("type parameter must be defined")}},throttle:function throttle(e,t){let s=-1;return()=>(s<=0&&(s=setTimeout((()=>{s=-1,e()}),t)),s)}},Symbol.toStringTag,{value:"Module"})),Et=foundry.data.fields;class Registry extends foundry.utils.Collection{static model=null;static _defaultData=[];model;constructor(){super(),Object.defineProperty(this,"model",{value:this.constructor.model,writable:!1,enumerable:!1}),this._initialize()}get name(){return this.constructor.name}_initialize(){this.clear();for(const e of this.constructor._defaultData)try{const t=new this.model({...e,namespace:"ffd20"});super.set(t.id,t)}catch(e){console.error(e)}Hooks.callAll("pf1Register"+this.name,this),this.setup()}setup(){}localize(){for(const e of this)e.localize()}set(e,t){const s=this.model;if(!(t instanceof s))throw Error(`Registry '${this.name}' can only register ${s.name}`);return super.set(e,t)}register(e,t,s){if(!e||!t)throw Error("Registering requires both a namespace and an ID");if(this.has(t))throw Error(`Registry '${this.name}' already has a key '${t}'`);return this.set(t,new this.model({...s,namespace:e,_id:t}))}unregister(e,t){if(!e)throw Error("Unregistering requires a namespace");if(t){const s=this.get(t);if(!s||s.namespace!==e)throw Error(`Registry '${this.name}' has no key '${t}'`);this.delete(t)}else for(const t of this)t.namespace===e&&this.delete(t.id)}toObject(e=!1){return Object.fromEntries(this.map((t=>[t.id,t.toObject(e)])))}getLabels(){return Object.fromEntries(this.map((e=>[e.id,e.name])))}}class RegistryEntry extends foundry.abstract.DataModel{static defineSchema(){return{_id:new Et.StringField({required:!0,blank:!1,readonly:!0}),name:new Et.StringField({required:!1,initial:"",localize:!0}),flags:new Et.ObjectField({required:!1,initial:{}}),namespace:new Et.StringField({required:!0,blank:!1})}}get id(){return this._id}_initialize(){super._initialize(),this.prepareData()}prepareData(){}localize(){for(const[e,t]of Object.entries(this.constructor.schema.fields))t instanceof Et.StringField&&!0===t.options.localize&&(this[e]=game.i18n.localize(this[e]))}}const Rt=foundry.data.fields;class DamageType extends RegistryEntry{static defineSchema(){return{...super.defineSchema(),abbr:new Rt.StringField({required:!1,blank:!1,nullable:!0,initial:null}),icon:new Rt.StringField({required:!1,initial:""}),img:new Rt.FilePathField({categories:["IMAGE"]}),category:new Rt.StringField({required:!0,blank:!1,initial:"misc",choices:()=>DamageTypes.CATEGORIES}),isModifier:new Rt.BooleanField({required:!1,initial:!1}),color:new Rt.StringField({required:!0,initial:"black"}),resist:new Rt.BooleanField({initial:!0}),diceSoNice:new Rt.SchemaField({colorset:new Rt.StringField({required:!1}),texture:new Rt.StringField({required:!1}),material:new Rt.StringField({required:!1})},{initial:void 0,required:!1})}}}class DamageTypes extends Registry{static model=DamageType;static CATEGORIES=["physical","energy","misc"];static _defaultData=[{_id:"untyped",name:"FFD20.DamageTypes.untyped.Label",icon:"ra ra-uncertainty",resist:!1,category:"misc"},{_id:"slashing",name:"FFD20.DamageTypes.slashing.Label",abbr:"FFD20.DamageTypes.slashing.Abbr",icon:"ra ra-sword",color:"yellow",category:"physical"},{_id:"piercing",name:"FFD20.DamageTypes.piercing.Label",abbr:"FFD20.DamageTypes.piercing.Abbr",icon:"ra ra-spear-head",color:"blue",category:"physical"},{_id:"bludgeoning",name:"FFD20.DamageTypes.bludgeoning.Label",abbr:"FFD20.DamageTypes.bludgeoning.Abbr",icon:"ra ra-large-hammer",color:"red",category:"physical"},{_id:"fire",name:"FFD20.DamageTypes.fire.Label",icon:"ra ra-fire",color:"orange",category:"energy",diceSoNice:{colorset:"fire",texture:"fire"}},{_id:"ice",name:"FFD20.DamageTypes.ice.Label",icon:"ra ra-frost-emblem",color:"aqua",category:"energy",diceSoNice:{colorset:"ice",texture:"ice"}},{_id:"wind",name:"FFD20.DamageTypes.wind.Label",icon:"ra ra-slash-ring",color:"#04e0ce",category:"energy",diceSoNice:{colorset:"lightning",texture:"fire"}},{_id:"earth",name:"FFD20.DamageTypes.earth.Label",icon:"ra ra-groundbreaker",color:"#664a02",category:"energy",diceSoNice:{colorset:"acid",texture:"marble"}},{_id:"lightning",name:"FFD20.DamageTypes.lightning.Label",icon:"ra ra-lightning-bolt",color:"yellow",category:"energy",diceSoNice:{colorset:"lightning",texture:"ice"}},{_id:"water",name:"FFD20.DamageTypes.water.Label",icon:"ra ra-droplet",color:"blue",category:"energy",diceSoNice:{colorset:"water",texture:"marble"}},{_id:"light",name:"FFD20.DamageTypes.light.Label",icon:"ra ra-sunbeams",color:"#defffc",category:"energy",diceSoNice:{colorset:"astralsea",texture:"astral"}},{_id:"dark",name:"FFD20.DamageTypes.dark.Label",icon:"ra ra-skull",color:"#765898",category:"energy",diceSoNice:{colorset:"necrotic",texture:"skulls"}},{_id:"nonelemental",name:"FFD20.DamageTypes.nonElemental.Label",icon:"ra ra-doubled",color:"#a200ff",category:"energy",diceSoNice:{colorset:"prism",texture:"stainedglass"}},{_id:"precision",name:"FFD20.Precision",icon:"ra ra-archery-target",isModifier:!0},{_id:"nonlethal",name:"FFD20.Nonlethal",icon:"ra ra-hand",isModifier:!0},{_id:"manapoint",name:"FFD20.ManaDamage",icon:"ra ra-incense",isModifier:!0},{_id:"areaOfEffect",name:"FFD20.DamageTypes.areaOfEffect.Label",icon:"ra ra-bomb-explosion",isModifier:!0}]}const Nt=foundry.data.fields;class Material extends RegistryEntry{static defineSchema(){return{...super.defineSchema(),name:new Nt.StringField({required:!1,localize:!0,initial:e=>"FFD20.Materials.Types."+e._id}),shortName:new Nt.StringField({required:!1,initial:void 0,blank:!1,localize:!0}),treatedAs:new Nt.StringField({required:!1,initial:void 0,blank:!1}),addon:new Nt.BooleanField({required:!1,initial:!1}),intrinsic:new Nt.BooleanField({required:!1,initial:!1}),primitive:new Nt.BooleanField({required:!1,initial:!1}),baseMaterial:new Nt.ArrayField(new Nt.StringField,{required:!1,initial:[]}),hardness:new Nt.NumberField({required:!1,initial:10,integer:!0,min:0}),hardnessMultiplier:new Nt.NumberField({required:!1,initial:null,nullable:!0,min:0}),healthPerInch:new Nt.NumberField({required:!1,initial:null,integer:!0,min:0,nullable:!0}),healthBonus:new Nt.NumberField({required:!1,initial:0,integer:!0,min:0}),healthMultiplier:new Nt.NumberField({required:!1,initial:1,integer:!1,positive:!0}),masterwork:new Nt.BooleanField({required:!1,initial:!1}),allowed:new Nt.SchemaField({lightBlade:new Nt.BooleanField({required:!1,initial:!0}),oneHandBlade:new Nt.BooleanField({required:!1,initial:!0}),twoHandBlade:new Nt.BooleanField({required:!1,initial:!0}),rangedWeapon:new Nt.BooleanField({required:!1,initial:!0}),buckler:new Nt.BooleanField({required:!1,initial:!0}),lightShield:new Nt.BooleanField({required:!1,initial:!0}),heavyShield:new Nt.BooleanField({required:!1,initial:!0}),towerShield:new Nt.BooleanField({required:!1,initial:!0}),lightArmor:new Nt.BooleanField({required:!1,initial:!0}),mediumArmor:new Nt.BooleanField({required:!1,initial:!0}),heavyArmor:new Nt.BooleanField({required:!1,initial:!0})}),armor:new Nt.SchemaField({acp:new Nt.NumberField({required:!1,initial:0,integer:!0}),maxDex:new Nt.NumberField({required:!1,initial:0,integer:!0}),asf:new Nt.NumberField({required:!1,initial:0,integer:!0})}),dr:new Nt.BooleanField({required:!1,initial:!1}),incompatible:new Nt.ArrayField(new Nt.StringField,{required:!1,initial:[]}),price:new Nt.SchemaField({multiplier:new Nt.NumberField({required:!1,initial:1,integer:!1,positive:!0}),perPound:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),ammunition:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),lightWeapon:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),oneHandWeapon:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),twoHandWeapon:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),rangedOneHandWeapon:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),rangedTwoHandWeapon:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),shield:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),lightArmor:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),mediumArmor:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),heavyArmor:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1}),enhancement:new Nt.SchemaField({weapon:new Nt.NumberField({required:!1,initial:0,min:0})})}),shield:new Nt.SchemaField({acp:new Nt.NumberField({required:!1,initial:0,integer:!0}),maxDex:new Nt.NumberField({required:!1,initial:0,integer:!0}),asf:new Nt.NumberField({required:!1,initial:0,integer:!0})}),weight:new Nt.SchemaField({multiplier:new Nt.NumberField({required:!1,initial:1,integer:!1,positive:!0}),bonusPerPound:new Nt.NumberField({required:!1,initial:0,integer:!1,positive:!1})})}}get basic(){return!this.baseMaterial.length&&!this.addon}isAllowed(e){if(this.basic)return!1;const t=e.type,s=e.system.subType,a=e.baseMaterial;let i=!1;if(this.baseMaterial.length&&a&&!this.baseMaterial.includes(a))return i;switch(t){case"spell":i=!0;break;case"weapon":case"attack":switch("weapon"===t?e.system.weaponSubtype:e.system.weapon?.type||"all"){case"light":i=this.allowed.lightBlade;break;case"1h":i=this.allowed.oneHandBlade;break;case"2h":i=this.allowed.twoHandBlade;break;case"ranged":i=this.allowed.rangedWeapon;break;case"all":i=this.allowed.lightBlade||this.allowed.oneHandBlade||this.allowed.twoHandBlade||this.allowed.rangedWeapon;break;default:return!1}break;case"equipment":i="shield"===s&&"other"===e.system.equipmentSubtype?this.allowed.buckler:this.allowed[e.system.equipmentSubtype]}return i&&this.addon?this.isValidAddon(e)??!1:i}isValidAddon(e){return e instanceof Item?e=ffd20.registry.materials.get(e.normalMaterial):"string"==typeof e&&(e=ffd20.registry.materials.get(e)),e instanceof Material?this.addon!==e.addon&&!this.incompatible.includes(e.id):!!this.intrinsic||null}}class Materials extends Registry{static model=Material;static _defaultData=[{_id:"cloth",hardness:0,healthPerInch:2,healthMultiplier:.07},{_id:"leather",hardness:2,healthPerInch:5,healthMultiplier:.17},{_id:"adamantine",baseMaterial:["steel"],hardness:20,healthPerInch:40,dr:!0,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},healthMultiplier:1.34,price:{ammunition:60,lightWeapon:3e3,oneHandWeapon:3e3,twoHandWeapon:3e3,rangedOneHandWeapon:3e3,rangedTwoHandWeapon:3e3,lightArmor:5e3,mediumArmor:1e4,heavyArmor:15e3}},{_id:"alchemicalSilver",shortName:"FFD20.Materials.Types.silver",baseMaterial:["steel"],hardness:8,healthPerInch:10,incompatible:["adamantine","coldIron","mithral","nexavaranSteel","silversheen","sunsilver"],dr:!0,addon:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},healthMultiplier:.34,price:{ammunition:2,lightWeapon:20,oneHandWeapon:90,twoHandWeapon:180,rangedOneHandWeapon:90,rangedTwoHandWeapon:180}},{_id:"angelSkin",baseMaterial:["leather"],hardness:5,healthPerInch:5,masterwork:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,heavyArmor:!1},healthMultiplier:.17,price:{lightArmor:1e3,mediumArmor:2e3}},{_id:"aszite",addon:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{lightArmor:750,mediumArmor:750,heavyArmor:1e3},weight:{multiplier:1.1}},{_id:"blackwood",baseMaterial:["wood"],hardness:7,healthPerInch:10,masterwork:!0,shield:{acp:-2},price:{perPound:20},weight:{multiplier:.5}},{_id:"blightQuartz",addon:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{ammunition:200,lightWeapon:2500,oneHandWeapon:2500,twoHandWeapon:2500,rangedOneHandWeapon:2500,rangedTwoHandWeapon:2500}},{_id:"bloodCrystal",baseMaterial:["steel"],hardness:10,healthPerInch:10,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},healthMultiplier:.5,price:{ammunition:30,lightWeapon:1500,oneHandWeapon:1500,twoHandWeapon:1500,rangedOneHandWeapon:1500,rangedTwoHandWeapon:1500}},{_id:"caphorite",baseMaterial:["steel"],allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{ammunition:10}},{_id:"coldIron",baseMaterial:["steel"],hardness:10,healthPerInch:30,dr:!0,price:{multiplier:2,enhancement:{weapon:2e3}}},{_id:"cryptstone",baseMaterial:["stone","steel","wood"],hardness:10,healthPerInch:30,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{ammunition:10,lightWeapon:500,oneHandWeapon:500,twoHandWeapon:500,rangedOneHandWeapon:500,rangedTwoHandWeapon:500}},{_id:"darkleafCloth",baseMaterial:["leather","cloth"],hardness:10,healthPerInch:20,masterwork:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,heavyArmor:!1},armor:{acp:-3,maxDex:2,asf:-10},healthMultiplier:4,price:{lightArmor:750,mediumArmor:1500},weight:{multiplier:.5}},{_id:"darkwood",baseMaterial:["wood"],hardness:5,healthPerInch:10,masterwork:!0,shield:{acp:-2},price:{perPound:10},weight:{multiplier:.5}},{_id:"dragonhide",baseMaterial:["leather"],hardness:10,healthPerInch:10,masterwork:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,buckler:!1,towerShield:!1},price:{multiplier:2}},{_id:"druchite",addon:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},healthMultiplier:1.34,price:{ammunition:12,lightWeapon:1200,oneHandWeapon:1200,twoHandWeapon:1200,rangedOneHandWeapon:1200,rangedTwoHandWeapon:1200,lightArmor:1e3,mediumArmor:1500,heavyArmor:2e3}},{_id:"eelHide",baseMaterial:["leather"],hardness:2,healthPerInch:5,masterwork:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,heavyArmor:!1},armor:{acp:-1,maxDex:1},price:{lightArmor:1200,mediumArmor:1800}},{_id:"elysianBronze",baseMaterial:["steel"],hardness:10,healthPerInch:30,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{ammunition:20,lightWeapon:1e3,oneHandWeapon:1e3,twoHandWeapon:1e3,rangedOneHandWeapon:1e3,rangedTwoHandWeapon:1e3,lightArmor:1e3,mediumArmor:2e3,heavyArmor:3e3}},{_id:"fireForgedSteel",baseMaterial:["steel"],hardness:10,healthPerInch:30,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{ammunition:15,lightWeapon:600,oneHandWeapon:600,twoHandWeapon:600,rangedOneHandWeapon:600,rangedTwoHandWeapon:600,lightArmor:1e3,mediumArmor:2500,heavyArmor:3e3}},{_id:"frostForgedSteel",baseMaterial:["steel"],hardness:10,healthPerInch:30,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{ammunition:15,lightWeapon:600,oneHandWeapon:600,twoHandWeapon:600,rangedOneHandWeapon:600,rangedTwoHandWeapon:600,lightArmor:1e3,mediumArmor:2500,heavyArmor:3e3}},{_id:"glaucite",baseMaterial:["steel"],hardness:15,healthPerInch:30,allowed:{buckler:!1},price:{multiplier:3},weight:{multiplier:1.5}},{_id:"greenwood",baseMaterial:["wood"],hardness:5,healthPerInch:10,masterwork:!0,price:{perPound:50,ammunition:6,lightWeapon:300,oneHandWeapon:300,twoHandWeapon:300,rangedOneHandWeapon:300,rangedTwoHandWeapon:300,shield:150,lightArmor:150,mediumArmor:150,heavyArmor:150}},{_id:"griffonMane",baseMaterial:["cloth"],hardness:1,healthPerInch:4,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,mediumArmor:!1,heavyArmor:!1},healthMultiplier:2,price:{perPound:50,lightArmor:200}},{_id:"heatstonePlating",addon:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,heavyArmor:!1},price:{lightArmor:800,mediumArmor:1e3},weight:{bonusPerPound:.2}},{_id:"horacalcum",baseMaterial:["steel"],hardness:15,healthPerInch:30,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},healthMultiplier:1.25,price:{ammunition:120,lightWeapon:6e3,oneHandWeapon:6e3,twoHandWeapon:6e3,rangedOneHandWeapon:6e3,rangedTwoHandWeapon:6e3,lightArmor:1e4,mediumArmor:3e4,heavyArmor:6e4}},{_id:"inubrix",baseMaterial:["steel"],hardness:5,healthPerInch:10,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},healthMultiplier:.34,price:{ammunition:100,lightWeapon:5e3,oneHandWeapon:5e3,twoHandWeapon:5e3,rangedOneHandWeapon:5e3,rangedTwoHandWeapon:5e3}},{_id:"lazurite",addon:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{lightArmor:1500,mediumArmor:2500,heavyArmor:3500}},{_id:"liquidGlass",baseMaterial:["glass","steel","wood","stone"],hardness:10,healthPerInch:10,healthMultiplier:.34,price:{perPound:250,ammunition:16,lightWeapon:800,oneHandWeapon:800,twoHandWeapon:800,rangedOneHandWeapon:800,rangedTwoHandWeapon:800}},{_id:"livingSteel",baseMaterial:["steel"],hardness:15,healthPerInch:35,healthMultiplier:1.16,price:{perPound:250,ammunition:10,lightWeapon:500,oneHandWeapon:500,twoHandWeapon:500,rangedOneHandWeapon:500,rangedTwoHandWeapon:500,shield:100,lightArmor:500,mediumArmor:1e3,heavyArmor:1500}},{_id:"mithral",baseMaterial:["steel"],treatedAs:"alchemicalSilver",hardness:15,healthPerInch:30,masterwork:!0,armor:{acp:3,maxDex:2,asf:-10},shield:{acp:3,maxDex:2,asf:-10},price:{perPound:500,shield:1e3,lightArmor:1e3,mediumArmor:4e3,heavyArmor:9e3},weight:{multiplier:.5}},{_id:"nexavaranSteel",baseMaterial:["steel"],hardness:10,healthPerInch:30,dr:!0,treatedAs:"coldIron",price:{multiplier:1.5,enhancement:{weapon:3e3}}},{_id:"noqual",baseMaterial:["steel"],hardness:10,healthPerInch:30,armor:{acp:-3,maxDex:2,asf:20},shield:{acp:-3,maxDex:2,asf:20},price:{ammunition:10,lightWeapon:500,oneHandWeapon:500,twoHandWeapon:500,rangedOneHandWeapon:500,rangedTwoHandWeapon:500,shield:2e3,lightArmor:4e3,mediumArmor:8e3,heavyArmor:12e3},weight:{multiplier:.5}},{_id:"paueliel",baseMaterial:["wood"],hardness:7,healthPerInch:10,masterwork:!0,shield:{acp:-2},price:{perPound:15},weight:{multiplier:.5}},{_id:"pyresteel",baseMaterial:["steel"],hardness:10,healthPerInch:15,allowed:{buckler:!1},healthMultiplier:.5,price:{multiplier:2}},{_id:"siccatite",baseMaterial:["steel"],hardness:10,healthPerInch:30,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{ammunition:20,lightWeapon:1e3,oneHandWeapon:1e3,twoHandWeapon:1e3,rangedOneHandWeapon:1e3,rangedTwoHandWeapon:1e3,lightArmor:6e3,mediumArmor:6e3,heavyArmor:6e3}},{_id:"silversheen",baseMaterial:["steel"],treatedAs:"alchemicalSilver",hardness:10,healthPerInch:30,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{ammunition:15,lightWeapon:750,oneHandWeapon:750,twoHandWeapon:750,rangedOneHandWeapon:750,rangedTwoHandWeapon:750}},{_id:"singingSteel",baseMaterial:["steel"],hardness:10,healthPerInch:20,masterwork:!0,armor:{acp:-1,maxDex:1,asf:-5},shield:{acp:-1,maxDex:1,asf:-5},healthMultiplier:.67,price:{perPound:600,ammunition:120,lightWeapon:6e3,oneHandWeapon:6e3,twoHandWeapon:6e3,rangedOneHandWeapon:6e3,rangedTwoHandWeapon:6e3,shield:7e3,lightArmor:750,mediumArmor:9e3,heavyArmor:12e3}},{_id:"spireSteel",baseMaterial:["steel"],hardness:10,healthPerInch:30,masterwork:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{ammunition:10,lightWeapon:2e3,oneHandWeapon:2e3,twoHandWeapon:2e3,rangedOneHandWeapon:2e3,rangedTwoHandWeapon:2e3,lightArmor:1e3,mediumArmor:2e3,heavyArmor:3e3}},{_id:"steel",hardness:10,healthPerInch:30},{_id:"sunsilk",addon:!0,allowed:{lightBlade:!1,oneHandBlade:!1,twoHandBlade:!1,rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1},price:{lightArmor:6e3,mediumArmor:6e3,heavyArmor:6e3}},{_id:"sunsilver",baseMaterial:["steel"],treatedAs:"alchemicalSilver",hardness:8,healthPerInch:10,masterwork:!0,healthMultiplier:.34,price:{perPound:25}},{_id:"throneglass",baseMaterial:["glass","steel","wood","stone"],hardness:10,healthPerInch:30,allowed:{rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{lightWeapon:13e3,oneHandWeapon:13e3,twoHandWeapon:13e3}},{_id:"viridium",baseMaterial:["steel"],hardness:5,healthPerInch:30,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{ammunition:20,lightWeapon:200,oneHandWeapon:200,twoHandWeapon:200,rangedOneHandWeapon:200,rangedTwoHandWeapon:200}},{_id:"voidglass",baseMaterial:["glass","steel"],hardness:10,healthPerInch:30,price:{lightWeapon:1e3,oneHandWeapon:1e3,twoHandWeapon:1e3,rangedOneHandWeapon:1e3,rangedTwoHandWeapon:1e3,shield:3e3,lightArmor:1e3,mediumArmor:2e3,heavyArmor:4500}},{_id:"whipwood",baseMaterial:["wood"],hardness:5,healthPerInch:10,healthBonus:5,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{lightWeapon:500,oneHandWeapon:500,twoHandWeapon:500,rangedOneHandWeapon:500,rangedTwoHandWeapon:500}},{_id:"wyroot",baseMaterial:["wood"],hardness:5,healthPerInch:10,allowed:{rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1}},{_id:"bone",primitive:!0,hardness:5,healthPerInch:null},{_id:"bronze",primitive:!0,hardness:9,healthPerInch:30,allowed:{buckler:!1}},{_id:"glass",primitive:!0,hardnessMultiplier:.5,allowed:{buckler:!1}},{_id:"gold",primitive:!0,hardnessMultiplier:.5,allowed:{buckler:!1},price:{multiplier:10},weight:{multiplier:1.5}},{_id:"obsidian",primitive:!0,hardnessMultiplier:.5,allowed:{rangedWeapon:!1,buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},price:{multiplier:.5},weight:{multiplier:.75}},{_id:"stone",primitive:!0,hardnessMultiplier:.5,allowed:{buckler:!1},price:{multiplier:.25},weight:{multiplier:.75}},{_id:"wood",hardness:5,healthPerInch:10},{_id:"magic",addon:!0,intrinsic:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},dr:!0},{_id:"epic",addon:!0,intrinsic:!0,allowed:{buckler:!1,lightShield:!1,heavyShield:!1,towerShield:!1,lightArmor:!1,mediumArmor:!1,heavyArmor:!1},dr:!0}]}const Lt=foundry.data.fields;class ScriptCallCategory extends RegistryEntry{static defineSchema(){return{...super.defineSchema(),itemTypes:new Lt.ArrayField(new Lt.StringField({})),info:new Lt.StringField({required:!0,blank:!1,initial:""},{localize:!0})}}}class ScriptCalls extends Registry{static model=ScriptCallCategory;static _defaultData=[{_id:"use",itemTypes:["attack","buff","feat","loot","equipment","implant","consumable","spell","weapon"],name:"FFD20.ScriptCalls.Use.Name",info:"FFD20.ScriptCalls.Use.Info"},{_id:"postUse",itemTypes:["attack","buff","feat","loot","equipment","implant","consumable","spell","weapon"],name:"FFD20.ScriptCalls.PostUse.Name",info:"FFD20.ScriptCalls.PostUse.Info"},{_id:"equip",itemTypes:["weapon","equipment","loot"],name:"FFD20.ScriptCalls.Equip.Name",info:"FFD20.ScriptCalls.Equip.Info"},{_id:"implant",itemTypes:["implant"],name:"FFD20.ScriptCalls.Implant.Name",info:"FFD20.ScriptCalls.Implant.Info"},{_id:"toggle",itemTypes:["buff","feat"],name:"FFD20.ScriptCalls.Toggle.Name",info:"FFD20.ScriptCalls.Toggle.Info"},{_id:"changeQuantity",itemTypes:["loot","equipment","weapon","implant","consumable","container"],name:"FFD20.ScriptCalls.ChangeQuantity.Name",info:"FFD20.ScriptCalls.ChangeQuantity.Info"},{_id:"changeLevel",itemTypes:["buff","class"],name:"FFD20.ScriptCalls.ChangeLevel.Name",info:"FFD20.ScriptCalls.ChangeLevel.Info"}]}const omitFields=(e,t)=>{for(const s of t)delete e[s];return e};class StatusHudModel extends foundry.abstract.DataModel{static defineSchema(){const e=foundry.data.fields;return{show:new e.BooleanField({required:!1,initial:!0,label:"Show in token status HUD"}),include:new e.SetField(new e.StringField({choices:()=>Object.keys(game.model.Actor)}),{initial:[],required:!1,label:"Required actor types."}),exclude:new e.SetField(new e.StringField({choices:()=>Object.keys(game.model.Actor)}),{initial:[],required:!1,label:"Excluded actor types. Has no effect if include list is populated."})}}get actorTypes(){return this.include.size?[...this.include]:this.exclude.size?Object.keys(game.model.Actor).filter((e=>!this.exclude.has(e))):void 0}}class Condition extends RegistryEntry{static defineSchema(){const e=foundry.data.fields;return{...super.defineSchema(),aliases:new e.SetField(new e.StringField({blank:!1,nullable:!1})),texture:new e.StringField({required:!0}),track:new e.StringField({required:!1,blank:!1,nullable:!0,initial:null,choices:()=>Conditions.TRACKS}),mechanics:new e.SchemaField({changes:new e.ArrayField(new e.SchemaField({...omitFields(ItemChange.defineSchema(),["_id","value","flavor"])})),flags:new e.SetField(new e.StringField({blank:!1})),contexts:new e.SetField(new e.StringField({blank:!1}))}),journal:new e.StringField({nullable:!0,blank:!1,required:!1}),showInDefense:new e.BooleanField({required:!1,initial:!0}),showInAction:new e.BooleanField({required:!1,initial:!0}),showInBuffsTab:new e.BooleanField({required:!1,initial:!0}),hud:new e.EmbeddedDataField(StatusHudModel),statuses:new e.SetField(new e.StringField)}}toStatusEffect(){return{id:this.id,name:this.name,img:this.texture,hud:!!this.hud.show&&this.hud}}}class Conditions extends Registry{static model=Condition;static TRACKS=["dying","fear","lethargy","movement"];static SET_TO_ZERO={formula:0,type:"untypedPerm",operator:"set",priority:1001,continuous:!0};static HUD_EXCLUDE_INANIMATE={exclude:["haunt","trap","vehicle"]};static _defaultData=[{_id:"bleed",aliases:["bleeding"],name:"FFD20.Condition.bleed",texture:"systems/ffd20/icons/conditions/bleed.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.L6DTocj1PbOtuspU",showInAction:!1,showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"blind",aliases:["blinded","blinding"],name:"FFD20.Condition.blind",texture:"icons/svg/blind.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.A9KUpd2bsdZZsQqj",mechanics:{changes:[{formula:-2,target:"ac",type:"untyped"}],flags:["loseDexToAC"],contexts:["skill.per","skill.spl"]},hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"confused",aliases:["confuse","confusing"],name:"FFD20.Condition.confused",texture:"systems/ffd20/icons/conditions/confused.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.J2yma0xciBKRUh9t",showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"cowering",aliases:["cower"],name:"FFD20.Condition.cowering",texture:"systems/ffd20/icons/conditions/cowering.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eNW5geiJqrnAjjNu",mechanics:{changes:[{formula:-2,target:"ac",type:"untyped"}],flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"dazed",aliases:["daze","dazing"],name:"FFD20.Condition.dazed",texture:"systems/ffd20/icons/conditions/dazed.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.2A6Gk60pLDKR2zT0",showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"dazzled",aliases:["dazzle","dazzling"],name:"FFD20.Condition.dazzled",texture:"systems/ffd20/icons/conditions/dazzled.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.xHUnCadQ2qYsfvV0",mechanics:{changes:[{formula:-1,target:"attack",type:"untyped"}],contexts:["skill.per"]},showInDefense:!1,showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"dead",name:"FFD20.Condition.dead",texture:"icons/svg/skull.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.YvycF7bsU1hPm4pX",track:"dying",showInBuffsTab:!1},{_id:"deaf",aliases:["deafen","deafened","deafening"],name:"FFD20.Condition.deaf",texture:"icons/svg/deaf.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.3uIamlB0L1UZUwoF",mechanics:{changes:[{formula:-4,target:"init",type:"untyped"}],contexts:["savingThrow.will","skill.per","skill.spl"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"disabled",aliases:["disable","disabling"],statuses:["staggered"],name:"FFD20.Condition.disabled",texture:"systems/ffd20/icons/conditions/disabled.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.dtHHibCiKZzdjyvp",track:"dying",showInDefense:!1},{_id:"dying",name:"FFD20.Condition.dying",texture:"systems/ffd20/icons/conditions/dying.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.zG6xEGMIerpbnND0",mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"}],flags:["loseDexToAC"]},track:"dying",showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"entangled",aliases:["entangle","entangling"],name:"FFD20.Condition.entangled",texture:"icons/svg/net.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.oxmugd8SoxVjvRRl",mechanics:{changes:[{formula:-4,target:"dexPen",type:"untyped"},{formula:-2,target:"attack",type:"untyped"}]}},{_id:"exhausted",aliases:["exhaust","exhausting"],name:"FFD20.Condition.exhausted",texture:"systems/ffd20/icons/conditions/exhausted.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ITxxh53qgl74wWcE",mechanics:{changes:[{formula:-6,target:"strPen",type:"untyped"},{formula:-6,target:"dexPen",type:"untyped"}]},track:"lethargy",showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"fatigued",aliases:["fatigue","fatiguing"],name:"FFD20.Condition.fatigued",texture:"icons/svg/unconscious.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.AVaxTNildXRzYnQm",mechanics:{changes:[{formula:-2,target:"strPen",type:"untyped"},{formula:-2,target:"dexPen",type:"untyped"}]},track:"lethargy",showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"flatFooted",aliases:["flatfooted"],name:"FFD20.Condition.flatFooted",texture:"systems/ffd20/icons/conditions/flat-footed.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eSvkrrl3US7RJTai",mechanics:{flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"frightened",aliases:["frighten","frightening"],name:"FFD20.Condition.frightened",texture:"systems/ffd20/icons/conditions/frightened.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.uqpJ7ZMnWF5qjOTl",mechanics:{changes:[{formula:-2,target:"attack",type:"untyped"},{formula:-2,target:"allSavingThrows",type:"untyped"},{formula:-2,target:"skills",type:"untyped"},{formula:-2,target:"allChecks",type:"untyped"}]},track:"fear",showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"grappled",aliases:["grapple","grappling"],name:"FFD20.Condition.grappled",texture:"systems/ffd20/icons/conditions/grappled.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.i4gHNAVajJWs4cFI",mechanics:{changes:[{formula:-4,target:"dexPen",type:"untyped"},{formula:-2,target:"attack",type:"untyped"}]},hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"helpless",name:"FFD20.Condition.helpless",texture:"systems/ffd20/icons/conditions/helpless.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.6dtCytJsNkO8Hwq4",mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"}],flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"incorporeal",name:"FFD20.Condition.incorporeal",texture:"systems/ffd20/icons/conditions/incorporeal.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.acqGBiMxTbXZ47zU",mechanics:{changes:[{formula:0,target:"nac",type:"base",operator:"set",priority:-10},{formula:"max(1, @abilities.cha.mod)",operator:"add",target:"ac",type:"deflection"}]},showInAction:!1,showInDefense:!1},{_id:"invisible",name:"FFD20.Condition.invisible",texture:"icons/svg/invisible.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.Wr2ZWUZcyVWQ4GtX",showInDefense:!1},{_id:"nauseated",aliases:["nausea","nauseating"],name:"FFD20.Condition.nauseated",texture:"systems/ffd20/icons/conditions/nauseated.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ySiyyK1BMAyKPY4I",hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"panicked",aliases:["panic","panicking"],name:"FFD20.Condition.panicked",texture:"icons/svg/terror.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.nGTsTfpWcJTTU3rk",mechanics:{changes:[{formula:-2,target:"attack",type:"untyped"},{formula:-2,target:"allSavingThrows",type:"untyped"},{formula:-2,target:"skills",type:"untyped"},{formula:-2,target:"allChecks",type:"untyped"}]},track:"fear",hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"paralyzed",aliases:["paralyze","paralyzing"],statuses:["helpless"],name:"FFD20.Condition.paralyzed",texture:"systems/ffd20/icons/conditions/paralyzed.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.24p2Koq4FFCLDKnj",mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"},{...this.SET_TO_ZERO,target:"str"}],flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"petrified",aliases:["petrify","petrifying"],statuses:["helpless","unconscious"],name:"FFD20.Condition.petrified",texture:"systems/ffd20/icons/conditions/petrified.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ayGQWwbrhAc99pkH",mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"}],flags:["loseDexToAC"]},showInAction:!1,showInDefense:!1},{_id:"pinned",aliases:["pin","pinning"],name:"FFD20.Condition.pinned",texture:"systems/ffd20/icons/conditions/pinned.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.poCq8gXdDi5leaMT",mechanics:{changes:[{formula:"min(0, @abilities.dex.mod)",target:"dexMod",type:"untyped",operator:"set",priority:1001,continuous:!0},{formula:-4,target:"ac",type:"untyped"},{formula:-4,target:"cmd",type:"untyped"}],flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"prone",name:"FFD20.Condition.prone",texture:"icons/svg/falling.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.VbagnIPQS523dwxa",mechanics:{changes:[{formula:-4,target:"mattack",type:"untyped"}]},hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"shaken",aliases:["shaking"],name:"FFD20.Condition.shaken",texture:"systems/ffd20/icons/conditions/shaken.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.XxLUswkCuXnXmA5T",mechanics:{changes:[{formula:-2,target:"attack",type:"untyped"},{formula:-2,target:"allSavingThrows",type:"untyped"},{formula:-2,target:"skills",type:"untyped"},{formula:-2,target:"allChecks",type:"untyped"}]},track:"fear",showInAction:!1,showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"sickened",aliases:["sick","sickening"],name:"FFD20.Condition.sickened",texture:"systems/ffd20/icons/conditions/sickened.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.7LwCMwrX3tchvrjW",mechanics:{changes:[{formula:-2,target:"attack",type:"untyped"},{formula:-2,target:"wdamage",type:"untyped"},{formula:-2,target:"allSavingThrows",type:"untyped"},{formula:-2,target:"skills",type:"untyped"},{formula:-2,target:"allChecks",type:"untyped"}]},showInAction:!1,showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"sleep",aliases:["sleeping"],statuses:["helpless","unconscious"],name:"FFD20.Condition.sleep",texture:"icons/svg/sleep.svg",journal:null,mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"}],flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"squeezing",aliases:["squeeze"],name:"FFD20.Condition.squeezing",texture:"systems/ffd20/icons/conditions/squeezing.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.jzeZ0Uf31CAMZra9",mechanics:{changes:[{formula:-4,target:"ac",type:"untyped"},{formula:-4,target:"attack",type:"untyped"}]},hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"stable",aliases:["stabilize","stabilized"],name:"FFD20.Condition.stable",texture:"systems/ffd20/icons/conditions/stable.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.krgVb43Vd62dqpYr",mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"}],flags:["loseDexToAC"]},track:"dying",showInAction:!1,showInDefense:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"staggered",aliases:["stagger","staggering"],name:"FFD20.Condition.staggered",texture:"systems/ffd20/icons/conditions/staggered.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.TTp8q9Vb2PNAujWu",hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"stunned",aliases:["stun","stunning"],name:"FFD20.Condition.stunned",texture:"icons/svg/stoned.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ZgsBPY0uVCVl6SGh",mechanics:{changes:[{formula:-2,target:"ac",type:"untyped"}],flags:["loseDexToAC"]},showInAction:!1,hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"unconscious",name:"FFD20.Condition.unconscious",statuses:["helpless"],texture:"systems/ffd20/icons/conditions/unconscious.svg",journal:"Compendium.ffd20.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.kHwbZ38VHCa1wkUF",mechanics:{changes:[{...this.SET_TO_ZERO,target:"dex"}],flags:["loseDexToAC"]},hud:{...foundry.utils.deepClone(this.HUD_EXCLUDE_INANIMATE)}},{_id:"burrow",aliases:["burrowing","burrowed"],name:"EFFECT.StatusBurrow",texture:"icons/svg/mole.svg",track:"movement"},{_id:"fly",aliases:["flying"],name:"EFFECT.StatusFlying",texture:"icons/svg/wing.svg",track:"movement"},{_id:"hover",aliases:["hovering"],name:"EFFECT.StatusHover",texture:"icons/svg/wingfoot.svg",track:"movement"},{_id:"swim",aliases:["swimming"],name:"EFFECT.StatusSwim",texture:"systems/ffd20/icons/actions/swim.svg",track:"movement"}];getAliased(e){return this.get(e)??this.find((t=>t.aliases.has(e)))}conditionsInTrack(e){return this.contents.filter((t=>t.track===e)).map((e=>e.id))}trackedConditions(){return this.tracks.map((e=>this.conditionsInTrack(e)))}get tracks(){return this.constructor.TRACKS}}class URLField extends foundry.data.fields.StringField{_validateType(e){if(super._validateType(e),!/^https?:\/\/[\w\d.]+\.\w+/.test(e))throw Error("Must be a valid URL")}}class DateField extends foundry.data.fields.StringField{_validateType(e){if(super._validateType(e),e&&Number.isNaN(Date.parse(e)))throw Error("Must be valid date in YYYY-MM-DD format.")}}class Source extends RegistryEntry{static defineSchema(){const e=foundry.data.fields,optionalString=(t={})=>new e.StringField({required:!1,nullable:!0,blank:!0,initial:void 0,...t});return{...super.defineSchema(),name:new e.StringField({nullable:!1,blank:!1,required:!0}),abbr:new e.StringField({nullable:!1,blank:!1,required:!1,initial:void 0}),date:new DateField({required:!1,nullable:!0,blank:!1,initial:void 0}),pages:new e.NumberField({required:!1,integer:!0,min:1,initial:void 0,label:"Page count"}),isbn:optionalString(),publisher:new e.StringField({required:!1,blank:!1,nullable:!1,initial:"Paizo"}),level:new e.NumberField({required:!1,min:1,integer:!0,initial:void 0,label:"Starting level"}),tieIn:optionalString(),url:new URLField({required:!1,nullable:!0,blank:!0,initial:void 0}),legacy:new e.BooleanField({required:!1,initial:!1,label:"D&D 3.5 Material"}),type:optionalString({choices:()=>this.TYPES})}}static TYPES=["core","setting","ap","module","companion","pg","comic","pfs"]}class Sources extends Registry{static model=Source;static PREFIXES={companion:"PPC"};static _defaultData=[{_id:"PZO1110",name:"Core Rulebook",abbr:"CRB",date:"2009-08-13",pages:576,isbn:"978-1-60125-150-3",url:"https://paizo.com/products/btpy88yj",type:"core"},{_id:"PZO1114",name:"GameMastery Guide",abbr:"GMG",date:"2010-06-23",pages:320,isbn:"978-1-60125-217-3",url:"https://paizo.com/products/btpy8ffn",type:"core"},{_id:"PZO1112",name:"Bestiary [1]",date:"2009-10-21",pages:320,isbn:"978-1-60125-183-1",url:"https://paizo.com/products/btpy8auu",type:"core"},{_id:"PZO1116",name:"Bestiary 2",date:"2010-12-29",pages:320,isbn:"978-1-60125-268-5",url:"https://paizo.com/products/btpy8hif",type:"core"},{_id:"PZO1120",name:"Bestiary 3",date:"2011-12-21",pages:320,isbn:"978-1-60125-378-1",url:"https://paizo.com/products/btpy8odu",type:"core"},{_id:"PZO1127",name:"Bestiary 4",date:"2013-10-30",pages:320,isbn:"978-1-60125-575-4",url:"https://paizo.com/products/btpy91ds",type:"core"},{_id:"PZO1133",name:"Bestiary 5",date:"2015-11-18",pages:320,isbn:"978-1-60125-792-5",url:"https://paizo.com/products/btpy9g9x",type:"core"},{_id:"PZO1137",name:"Bestiary 6",date:"2017-04-26",pages:320,isbn:"978-1-60125-931-8",url:"https://paizo.com/products/btpy9r1y",type:"core"},{_id:"PZO1129",name:"Advanced Class Guide",abbr:"ACG",date:"2015-08-14",pages:256,isbn:"978-1-60125-671-3",url:"https://paizo.com/products/btpy978v",type:"core"},{_id:"PZO1115",name:"Advanced Player's Guide",abbr:"APG",date:"2010-08-05",pages:320,isbn:"978-1-60125-246-3",url:"https://paizo.com/products/btpy8fo1",type:"core"},{_id:"PZO1121",name:"Advanced Race Guide",abbr:"ARG",date:"2012-06-20",pages:256,isbn:"978-1-60125-390-3",url:"https://paizo.com/products/btpy8rv2",type:"core"},{_id:"PZO1138",name:"Adventurer's Guide",date:"2017-05-24",pages:192,isbn:"978-1-60125-938-7",url:"https://paizo.com/products/btpy9sjo",type:"core"},{_id:"PZO1128",name:"Strategy Guide",date:"2015-03-25",pages:160,isbn:"978-1-60125-626-3",url:"https://paizo.com/products/btpy99sk",type:"core"},{_id:"PZO1132",name:"Occult Adventures",abbr:"OA",date:"2015-07-29",pages:272,isbn:"978-1-60125-762-8",url:"https://paizo.com/products/btpy9egu",type:"core"},{_id:"PZO1131",name:"Pathfinder Unchained",date:"2015-04-29",pages:256,isbn:"978-1-60125-715-4",url:"https://paizo.com/products/btpy9c25",type:"core"},{_id:"PZO1136",name:"Villain Codex",date:"2016-11-16",pages:256,isbn:"978-1-60125-906-6",url:"https://paizo.com/products/btpy9oo7",type:"core"},{_id:"PZO1130",name:"Monster Codex",abbr:"MC",date:"2014-10-22",pages:256,isbn:"978-1-60125-686-7",url:"https://paizo.com/products/btpy9926",type:"core"},{_id:"PZO1135",name:"Horror Adventures",date:"2016-08-04",pages:256,isbn:"978-1-60125-849-6",url:"https://paizo.com/products/btpy9n5a",type:"core"},{_id:"PZO1126",name:"Mythic Adventures",date:"2013-08-14",pages:256,isbn:"978-1-60125-549-5",url:"https://paizo.com/products/btpy8ywe",type:"core"},{_id:"PZO1124",name:"NPC Codex",date:"2012-11-21",pages:320,isbn:"978-1-60125-467-2",url:"https://paizo.com/products/btpy8v3a",type:"core"},{_id:"PZO1125",name:"Ultimate Campaign",date:"2013-05-29",pages:256,isbn:"978-1-60125-498-6",url:"https://paizo.com/products/btpy8x64",type:"core"},{_id:"PZO1118",name:"Ultimate Combat",abbr:"UC",date:"2011-08-04",pages:256,isbn:"978-1-60125-359-0",url:"https://paizo.com/products/btpy8mcz",type:"core"},{_id:"PZO1123",name:"Ultimate Equipment",abbr:"UE",date:"2012-08-16",pages:400,isbn:"978-1-60125-449-8",url:"https://paizo.com/products/btpy8tmc",type:"core"},{_id:"PZO1134",name:"Ultimate Intrigue",abbr:"UI",date:"2016-03-30",pages:256,isbn:"978-1-60125-826-7",url:"https://paizo.com/products/btpy9j6p",type:"core"},{_id:"PZO1117",name:"Ultimate Magic",abbr:"UM",date:"2011-05-08",pages:256,isbn:"978-1-60125-299-9",url:"https://paizo.com/products/btpy8k8r",type:"core"},{_id:"PZO1139",name:"Book of the Damned",date:"2017-09-27",pages:258,isbn:"978-1-60125-986-8",url:"https://paizo.com/products/btpy9tok",type:"core"},{_id:"PZO1140",name:"Ultimate Wilderness",abbr:"UW",date:"2017-11-15",pages:288,isbn:"978-1-60125-986-8",url:"https://paizo.com/products/btpy9ujo",type:"core"},{_id:"PZO1141",name:"Planar Adventures",abbr:"PA",date:"2018-06-27",pages:192,isbn:"978-1-64078-044-6",url:"https://paizo.com/products/btpya1am",type:"core"},{_id:"PZO1002-PGE",name:"Rise of the Runelords Player's Guide",date:"2007-09-01",pages:16,isbn:"978-1-60125-059-9",legacy:!0,url:"https://paizo.com/products/btpy8bd9",type:"pg"},{_id:"PZO9001",name:"Rise of the Runelords #1: Burnt Offerings",abbr:"RotR-1",date:"2007-08-01",pages:96,isbn:"978-1-60125-035-3",url:"https://paizo.com/products/btpy7zkr",type:"ap"},{_id:"PZO9002",name:"Rise of the Runelords #2: The Skinsaw Murders",abbr:"RotR-2",date:"2007-09-01",pages:96,isbn:"978-1-60125-037-7",url:"https://paizo.com/products/btpy8029",type:"ap"},{_id:"PZO9003",name:"Rise of the Runelords #3: The Hook Mountain Massacre",abbr:"RotR-3",date:"2007-10-01",pages:96,isbn:"978-1-60125-038-4",url:"https://paizo.com/products/btpy80e8",type:"ap"},{_id:"PZO9004",name:"Rise of the Runelords #4: Fortress of the Stone Giants",abbr:"RotR-4",date:"2007-11-01",pages:96,isbn:"978-1-60125-039-1",url:"https://paizo.com/products/btpy80hm",type:"ap"},{_id:"PZO9005",name:"Rise of the Runelords #5: Sins of the Saviors",abbr:"RotR-5",date:"2007-12-01",pages:96,isbn:"978-1-60125-040-7",url:"https://paizo.com/products/btpy815p",type:"ap"},{_id:"PZO9006",name:"Rise of the Runelords #6: Spires of Xin-Shalast",abbr:"RotR-6",date:"2008-01-01",pages:96,isbn:"978-1-60125-041-4",url:"https://paizo.com/products/btpy817c",type:"ap"},{_id:"PZO9000-2S",name:"Curse of the Crimson Throne Player's Guide",date:"2008-02-01",pages:16,url:"https://paizo.com/products/btpy806v",type:"pg"},{_id:"PZO1021",name:"Curse of the Crimson Throne",date:"2016-10-01",pages:480,isbn:"978-1-60125-890-8",url:"https://paizo.com/products/btpy9nme",type:"ap"},{_id:"PZO9007",name:"Curse of the Crimson Throne #1: Edge of Anarchy",abbr:"CotCT-1",date:"2008-02-01",pages:96,isbn:"978-1-60125-088-9",url:"https://paizo.com/products/btpy81xw",type:"ap"},{_id:"PZO9008",name:"Curse of the Crimson Throne #2: Seven Days to the Grave",abbr:"CotCT-2",date:"2008-03-01",pages:96,isbn:"978-1-60125-091-9",url:"https://paizo.com/products/btpy82qy",type:"ap"},{_id:"PZO9009",name:"Curse of the Crimson Throne #3: Escape From Old Korvosa",abbr:"CotCT-3",date:"2008-04-01",pages:96,isbn:"978-1-60125-092-6",url:"https://paizo.com/products/btpy82t5",type:"ap"},{_id:"PZO9010",name:"Curse of the Crimson Throne #4: A History of Ashes",abbr:"CotCT-4",date:"2008-05-01",pages:96,isbn:"978-1-60125-093-3",url:"https://paizo.com/products/btpy82u9",type:"ap"},{_id:"PZO9011",name:"Curse of the Crimson Throne #5: Skeletons of Scarwall",abbr:"CotCT-5",date:"2008-06-01",pages:96,isbn:"978-1-60125-099-5",url:"https://paizo.com/products/btpy83yw",type:"ap"},{_id:"PZO9012",name:"Curse of the Crimson Throne #6: Crown of Fangs",abbr:"CotCT-6",date:"2008-07-01",pages:96,isbn:"978-1-60125-109-1",url:"https://paizo.com/products/btpy84el",type:"ap"},{_id:"PZO9401",name:"Second Darkness Player's Guide",date:"2008-08-01",pages:32,isbn:"978-1-60125-142-8",legacy:!0,url:"https://paizo.com/products/btpy84en",type:"pg"},{_id:"PZO9013",name:"Second Darkness #1: Shadow in the Sky",date:"2008-08-01",pages:96,isbn:"978-1-60125-115-2",url:"https://paizo.com/products/btpy84em",type:"ap"},{_id:"PZO9014",name:"Second Darkness #2: Children of the Void",date:"2008-09-01",pages:96,isbn:"978-1-60125-127-5",url:"https://paizo.com/products/btpy85ed",type:"ap"},{_id:"PZO9015",name:"Second Darkness #3: The Armageddon Echo",date:"2008-10-01",pages:96,isbn:"978-1-60125-128-2",url:"https://paizo.com/products/btpy85ep",type:"ap"},{_id:"PZO9016",name:"Second Darkness #4: Endless Night",date:"2008-11-01",pages:96,isbn:"978-1-60125-129-9",url:"https://paizo.com/products/btpy85er",type:"ap"},{_id:"PZO9017",name:"Second Darkness #5: A Memory of Darkness",date:"2008-12-01",pages:96,isbn:"978-1-60125-130-5",url:"https://paizo.com/products/btpy86j6",type:"ap"},{_id:"PZO9018",name:"Second Darkness #6: Descent into Midnight",date:"2009-01-01",pages:96,isbn:"978-1-60125-131-2",url:"https://paizo.com/products/btpy86v1",type:"ap"},{_id:"PZO9404",name:"Legacy of Fire Player's Guide",date:"2009-03-01",pages:32,isbn:"978-1-60125-168-8",tieIn:"Legacy of Fire",legacy:!0,url:"https://paizo.com/products/btpy8737",type:"pg"},{_id:"PZO9019",name:"Legacy of Fire #1: Howl of the Carrion King",abbr:"LoF-1",date:"2009-03-01",pages:96,isbn:"978-1-60125-159-6",url:"https://paizo.com/products/btpy8735",type:"ap"},{_id:"PZO9020",name:"Legacy of Fire #2: House of the Beast",abbr:"LoF-2",date:"2009-03-01",pages:96,isbn:"978-1-60125-160-2",url:"https://paizo.com/products/btpy86xw",type:"ap"},{_id:"PZO9021",name:"Legacy of Fire #3: The Jackal's Price",abbr:"LoF-3",date:"2009-04-01",pages:96,isbn:"978-1-60125-161-9",url:"https://paizo.com/products/btpy87uv",type:"ap"},{_id:"PZO9022",name:"Legacy of Fire #4: The End of Eternity",abbr:"LoF-4",date:"2009-05-01",pages:96,isbn:"978-1-60125-173-2",url:"https://paizo.com/products/btpy87ux",type:"ap"},{_id:"PZO9023",name:"Legacy of Fire #5: The Impossible Eye",abbr:"LoF-5",date:"2009-06-01",pages:96,isbn:"978-1-60125-179-4",url:"https://paizo.com/products/btpy88tp",type:"ap"},{_id:"PZO9024",name:"Legacy of Fire #6: The Final Wish",abbr:"LoF-6",date:"2009-07-01",pages:96,isbn:"978-1-60125-185-5",url:"https://paizo.com/products/btpy89a2",type:"ap"},{_id:"PZO9000-5E",name:"Council of Thieves Player's Guide",date:"2009-08-01",pages:13,url:"https://paizo.com/products/btpy89m7",type:"pg"},{_id:"PZO9025",name:"Council of Thieves #1: The Bastards of Erebus",abbr:"CoT-1",date:"2009-08-01",pages:96,isbn:"978-1-60125-190-9",url:"https://paizo.com/products/btpy89a4",type:"ap"},{_id:"PZO9026",name:"Council of Thieves #2: The Sixfold Trial",abbr:"CoT-2",date:"2009-09-01",pages:96,isbn:"978-1-60125-196-1",url:"https://paizo.com/products/btpy89vw",type:"ap"},{_id:"PZO9027",name:"Council of Thieves #3: What Lies in Dust",abbr:"CoT-3",date:"2009-11-01",pages:96,isbn:"978-1-60125-197-8",url:"https://paizo.com/products/btpy8b8h",type:"ap"},{_id:"PZO9028",name:"Council of Thieves #4: The Infernal Syndrom",abbr:"CoT-4",date:"2009-12-01",pages:96,isbn:"978-1-60125-198-5",url:"https://paizo.com/products/btpy8b9h",type:"ap"},{_id:"PZO9029",name:"Council of Thieves #5: Mother of Flies",abbr:"CoT-5",date:"2010-01-01",pages:96,isbn:"978-1-60125-199-2",url:"https://paizo.com/products/btpy8bc1",type:"ap"},{_id:"PZO9030",name:"Council of Thieves #6: The Twice-Damned Prince",abbr:"CoT-6",date:"2010-01-01",pages:96,isbn:"978-1-60125-226-5",url:"https://paizo.com/products/btpy8d54",type:"ap"},{_id:"PZO9000-6E",name:"Kingmaker Player's Guide",date:"2010-03-01",pages:16,url:"https://paizo.com/products/btpy8dqh",type:"pg"},{_id:"PZO9031",name:"Kingmaker #1: Stolen Land",date:"2010-03-01",pages:96,isbn:"978-1-60125-229-6",url:"https://paizo.com/products/btpy8dhc",type:"ap"},{_id:"PZO9032",name:"Kingmaker #2: Rivers Run Red",date:"2010-04-01",pages:96,isbn:"978-1-60125-233-3",url:"https://paizo.com/products/btpy8dml",type:"ap"},{_id:"PZO9033",name:"Kingmaker #3: The Varnhold Vanishing",date:"2010-05-01",pages:96,isbn:"978-1-60125-234-0",url:"https://paizo.com/products/btpy8e7e",type:"ap"},{_id:"PZO9034",name:"Kingmaker #4: Blood for Blood",date:"2010-06-01",pages:96,isbn:"978-1-60125-251-7",url:"https://paizo.com/products/btpy8b7w",type:"ap"},{_id:"PZO9035",name:"Kingmaker #5: War of the River Kings",date:"2010-07-01",pages:96,isbn:"978-1-60125-252-4",url:"https://paizo.com/products/btpy8b7u",type:"ap"},{_id:"PZO9036",name:"Kingmaker #6: Sound of a Thousand Screams",date:"2010-07-01",pages:96,isbn:"978-1-60125-253-1",url:"https://paizo.com/products/btpy8b7x",type:"ap"},{_id:"PZO9000-7E",name:"Serpent's Skull Player's Guide",date:"2010-07-01",pages:13,url:"https://paizo.com/products/btpy8g6d",type:"pg"},{_id:"PZO9037",name:"Serpent's Skull #1: Soul for Smuggler's Shiv",date:"2010-08-01",pages:96,isbn:"978-1-60125-254-8",url:"https://paizo.com/products/btpy8b7v",type:"ap"},{_id:"PZO9038",name:"Serpent's Skull #2: Racing to Ruin",date:"2010-09-01",pages:96,isbn:"978-1-60125-273-9",url:"https://paizo.com/products/btpy8ddc",type:"ap"},{_id:"PZO9039",name:"Serpent's Skull #3: City of Seven Spears",date:"2010-11-01",pages:96,isbn:"978-1-60125-274-6",url:"https://paizo.com/products/btpy8h6h",type:"ap"},{_id:"PZO9040",name:"Serpent's Skull #4: Vaults of Madness",date:"2010-12-01",pages:96,isbn:"978-1-60125-275-3",url:"https://paizo.com/products/btpy8dde",type:"ap"},{_id:"PZO9041",name:"Serpent's Skull #5: The Thousand Fangs Below",date:"2011-01-01",pages:96,isbn:"978-1-60125-276-0",url:"https://paizo.com/products/btpy8ddf",type:"ap"},{_id:"PZO9042",name:"Serpent's Skull #6: Sanctum of the Serpent God",date:"2011-02-01",pages:96,isbn:"978-1-60125-307-1",url:"https://paizo.com/products/btpy8g3i",type:"ap"},{_id:"PZO9000-8E",name:"Carrion Crown Player's Guide",date:"2011-03-01",pages:15,url:"https://paizo.com/products/btpy8j0q",type:"pg"},{_id:"PZO9043",name:"Carrion Crown #1: The Haunting of Harrowstone",abbr:"CC-1",date:"2011-03-01",pages:96,isbn:"978-1-60125-308-8",url:"https://paizo.com/products/btpy8g7a",type:"ap"},{_id:"PZO9044",name:"Carrion Crown #2: Trial of the Beast",abbr:"CC-2",date:"2011-04-01",pages:96,isbn:"978-1-60125-309-5",url:"https://paizo.com/products/btpy8g7b",type:"ap"},{_id:"PZO9045",name:"Carrion Crown #3: Broken Moon",abbr:"CC-3",date:"2011-05-01",pages:96,isbn:"978-1-60125-310-1",url:"https://paizo.com/products/btpy8g7c",type:"ap"},{_id:"PZO9046",name:"Carrion Crown #4: Wake of the Watcher",abbr:"CC-4",date:"2011-06-01",pages:96,isbn:"978-1-60125-311-8",url:"https://paizo.com/products/btpy8g7d",type:"ap"},{_id:"PZO9047",name:"Carrion Crown #5: Ashes at Dawn",abbr:"CC-5",date:"2011-07-01",pages:96,isbn:"978-1-60125-312-5",url:"https://paizo.com/products/btpy8g7e",type:"ap"},{_id:"PZO9048",name:"Carrion Crown #6: Shadows of Gallowspire",abbr:"CC-6",date:"2011-07-01",pages:96,isbn:"978-1-60125-313-2",url:"https://paizo.com/products/btpy8g7t",type:"ap"},{_id:"PZO9000-9E",name:"Jade Regent Player's Guide",date:"2011-07-27",pages:28,url:"https://paizo.com/products/btpy8mh3",type:"pg"},{_id:"PZO9049",name:"Jade Regent #1: The Brinewall Legacy",date:"2011-08-01",pages:96,isbn:"978-1-60125-361-3",url:"https://paizo.com/products/btpy8j35",type:"ap"},{_id:"PZO9050",name:"Jade Regent #2: Night of Frozen Shadows",date:"2011-09-01",pages:96,isbn:"978-1-60125-366-8",url:"https://paizo.com/products/btpy8jrr",type:"ap"},{_id:"PZO9051",name:"Jade Regent #3: The Hungry Storm",date:"2011-10-01",pages:96,isbn:"978-1-60125-374-3",url:"https://paizo.com/products/btpy8kgv",type:"ap"},{_id:"PZO9052",name:"Jade Regent #4: Forest of Spirits",date:"2011-11-01",pages:96,isbn:"978-1-60125-380-4",url:"https://paizo.com/products/btpy8l2h",type:"ap"},{_id:"PZO9053",name:"Jade Regent #5: Tide of Honor",date:"2012-01-01",pages:96,isbn:"978-1-60125-385-9",url:"https://paizo.com/products/btpy8mh0",type:"ap"},{_id:"PZO9054",name:"Jade Regent #6: The Empty Throne",date:"2012-02-01",pages:96,isbn:"978-1-60125-400-9",url:"https://paizo.com/products/btpy8mh1",type:"ap"},{_id:"PZO9000-10E",name:"Skull and Shackles Player's Guide",date:"2012-02-01",pages:30,url:"https://paizo.com/products/btpy8rwc",type:"pg"},{_id:"PZO9055",name:"Skull & Shackles #1: The Wormwood Mutiny",date:"2012-02-01",pages:96,isbn:"978-1-60125-404-7",url:"https://paizo.com/products/btpy8mh2",type:"ap"},{_id:"PZO9056",name:"Skull & Shackles #2: Raiders of the Fever Sea",date:"2012-03-01",pages:96,isbn:"978-1-60125-409-2",url:"https://paizo.com/products/btpy8moe",type:"ap"},{_id:"PZO9057",name:"Skull & Shackles #3: Tempest Rising",date:"2012-04-01",pages:96,isbn:"978-1-60125-413-9",url:"https://paizo.com/products/btpy8mof",type:"ap"},{_id:"PZO9058",name:"Skull & Shackles #4: Island of Empty Eyes",date:"2012-05-01",pages:96,isbn:"978-1-60125-416-0",url:"https://paizo.com/products/btpy8mog",type:"ap"},{_id:"PZO9059",name:"Skull & Shackles #5: The Price of Infamy",date:"2012-06-01",pages:96,isbn:"978-1-60125-421-4",url:"https://paizo.com/products/btpy8moh",type:"ap"},{_id:"PZO9060",name:"Skull & Shackles #6: From Hell's Heart",date:"2012-07-01",pages:96,isbn:"978-1-60125-422-1",url:"https://paizo.com/products/btpy8moi",type:"ap"},{_id:"PZO1002-PGE",name:"Rise of the Runelords Anniversary Edition Player's Guide",date:"2012-07-01",pages:17,url:"https://paizo.com/products/btpy8tgl",type:"pg"},{_id:"PZO1002",name:"Rise of the Runelords Anniversary Edition",abbr:"RotRAE",date:"2012-07-01",pages:432,isbn:"978-1-60125-436-8",url:"https://paizo.com/products/btpy8tc0",type:"ap"},{_id:"PZO9000-11E",name:"Shattered Star Player's Guide",date:"2012-08-01",pages:12,url:"https://paizo.com/products/btpy8txj",type:"pg"},{_id:"PZO9061",name:"Shattered Star #1: Shards of Sin",date:"2012-08-01",pages:96,isbn:"978-1-60125-452-8",url:"https://paizo.com/products/btpy8tmh",type:"ap"},{_id:"PZO9062",name:"Shattered Star #2: Curse of the Lady's Light",date:"2012-09-01",pages:96,isbn:"978-1-60125-459-7",url:"https://paizo.com/products/btpy8run",type:"ap"},{_id:"PZO9063",name:"Shattered Star #3: The Asylum Stone",date:"2012-10-01",pages:96,isbn:"978-1-60125-469-6",url:"https://paizo.com/products/btpy8sds",type:"ap"},{_id:"PZO9064",name:"Shattered Star #4: Beyond the Doomsday Door",date:"2012-11-01",pages:96,isbn:"978-1-60125-474-0",url:"https://paizo.com/products/btpy8t35",type:"ap"},{_id:"PZO9065",name:"Shattered Star #5: Into the Nightmare Rift",date:"2012-12-01",pages:96,isbn:"978-1-60125-487-0",url:"https://paizo.com/products/btpy8tdh",type:"ap"},{_id:"PZO9066",name:"Shattered Star #6: The Dead Heart of Xin",date:"2013-01-01",pages:96,isbn:"978-1-60125-491-7",url:"https://paizo.com/products/btpy8tvr",type:"ap"},{_id:"PZO9000-12E",name:"Reign of Winter Player's Guide",date:"2013-02-01",pages:14,url:"https://paizo.com/products/btpy8x1t",type:"pg"},{_id:"PZO9067",name:"Reign of Winter #1: The Snows of Summer",date:"2013-02-01",pages:96,isbn:"978-1-60125-492-4",url:"https://paizo.com/products/btpy8ubg",type:"ap"},{_id:"PZO9068",name:"Reign of Winter #2: The Shackled Hut",date:"2013-03-01",pages:96,isbn:"978-1-60125-493-1",url:"https://paizo.com/products/btpy8uwz",type:"ap"},{_id:"PZO9069",name:"Reign of Winter #3: Maiden, Mother, Crone",date:"2013-04-01",pages:96,isbn:"978-1-60125-494-8",url:"https://paizo.com/products/btpy8xbz",type:"ap"},{_id:"PZO9070",name:"Reign of Winter #4: The Frozen Stars",date:"2013-05-01",pages:96,isbn:"978-1-60125-495-5",url:"https://paizo.com/products/btpy8vss",type:"ap"},{_id:"PZO9071",name:"Reign of Winter #5: Rasputin Must Die!",date:"2013-06-01",pages:96,isbn:"978-1-60125-496-2",url:"https://paizo.com/products/btpy8wbv",type:"ap"},{_id:"PZO9072",name:"Reign of Winter #6: The Witch Queen's Revenge",date:"2013-07-01",pages:96,isbn:"978-1-60125-497-9",url:"https://paizo.com/products/btpy8wve",type:"ap"},{_id:"PZO9000-13E",name:"Wrath of the Righteous Player's Guide",date:"2013-08-09",pages:14,url:"https://paizo.com/products/btpy919c",type:"pg"},{_id:"PZO9073",name:"Wrath of the Righteous #1: The Worldwound Incursion",date:"2013-08-01",pages:96,isbn:"978-1-60125-553-2",url:"https://paizo.com/products/btpy8x8e",type:"ap"},{_id:"PZO9074",name:"Wrath of the Righteous #2: Sword of Valor",date:"2013-09-01",pages:96,isbn:"978-1-60125-568-6",url:"https://paizo.com/products/btpy8xsi",type:"ap"},{_id:"PZO9075",name:"Wrath of the Righteous #3: Demon's Heresy",date:"2013-10-01",pages:96,isbn:"978-1-60125-577-8",url:"https://paizo.com/products/btpy8yor",type:"ap"},{_id:"PZO9076",name:"Wrath of the Righteous #4: The Midnight Isles",date:"2013-12-01",pages:96,isbn:"978-1-60125-585-3",url:"https://paizo.com/products/btpy8z6x",type:"ap"},{_id:"PZO9077",name:"Wrath of the Righteous #5: Herald of the Ivory Labyrinth",date:"2014-01-01",pages:96,isbn:"978-1-60125-586-0",url:"https://paizo.com/products/btpy909v",type:"ap"},{_id:"PZO9078",name:"Wrath of the Righteous #6: City of Locusts",date:"2014-02-01",pages:96,isbn:"978-1-60125-587-7",url:"https://paizo.com/products/btpy921g",type:"ap"},{_id:"PZO9000-14E",name:"Mummy's Mask Player's Guide",date:"2014-03-01",pages:14,url:"https://paizo.com/products/btpy94z3",type:"pg"},{_id:"PZO9079",name:"Mummy's Mask #1: The Half-Dead City",date:"2014-03-01",pages:96,isbn:"978-1-60125-588-4",url:"https://paizo.com/products/btpy94qz",type:"ap"},{_id:"PZO9080",name:"Mummy's Mask #2: Empty Graves",date:"2014-04-01",pages:96,isbn:"978-1-60125-589-1",url:"https://paizo.com/products/btpy94vv",type:"ap"},{_id:"PZO9081",name:"Mummy's Mask #3: Shifting Sands",date:"2014-05-01",pages:96,isbn:"978-1-60125-590-7",url:"https://paizo.com/products/btpy94qb",type:"ap"},{_id:"PZO9082",name:"Mummy's Mask #4: Secrets of the Sphinx",date:"2014-06-01",pages:96,isbn:"978-1-60125-591-4",url:"https://paizo.com/products/btpy9386",type:"ap"},{_id:"PZO9083",name:"Mummy's Mask #5: The Slave Trenches of Hakotep",date:"2014-07-01",pages:96,isbn:"978-1-60125-592-1",url:"https://paizo.com/products/btpy97at",type:"ap"},{_id:"PZO9084",name:"Mummy's Mask #6: Pyramid of the Sky Pharaoh",date:"2014-07-01",pages:96,isbn:"978-1-60125-593-8",url:"https://paizo.com/products/btpy97av",type:"ap"},{_id:"PZO9000-15E",name:"Iron Gods Player's Guide",date:"2014-08-05",pages:12,url:"https://paizo.com/products/btpy98lf",type:"pg"},{_id:"PZO9085",name:"Iron Gods #1: Fires of Creation",date:"2014-08-01",pages:96,isbn:"978-1-60125-673-7",url:"https://paizo.com/products/btpy95br",type:"ap"},{_id:"PZO9086",name:"Iron Gods #2: Lords of Rust",date:"2014-09-01",pages:96,isbn:"978-1-60125-678-2",url:"https://paizo.com/products/btpy95bs",type:"ap"},{_id:"PZO9087",name:"Iron Gods #3: The Choking Tower",date:"2014-10-01",pages:96,isbn:"978-1-60125-688-1",url:"https://paizo.com/products/btpy95bt",type:"ap"},{_id:"PZO9088",name:"Iron Gods #4: Valley of the Brain Collectors",date:"2014-11-01",pages:96,isbn:"978-1-60125-704-8",url:"https://paizo.com/products/btpy95bu",type:"ap"},{_id:"PZO9089",name:"Iron Gods #5: Palace of Fallen Stars",date:"2014-12-01",pages:96,isbn:"978-1-60125-711-6",url:"https://paizo.com/products/btpy95bv",type:"ap"},{_id:"PZO9090",name:"Iron Gods #6: The Divinity Drive",date:"2015-01-01",pages:96,isbn:"978-1-60125-724-6",url:"https://paizo.com/products/btpy95bw",type:"ap"},{_id:"PZO9000-16E",name:"Giantslayer Player's Guide",date:"2015-01-25",pages:16,url:"https://paizo.com/products/btpy9bsv",type:"pg"},{_id:"PZO9091",name:"Giantslayer #1: Battle of Bloodmarch Hill",date:"2015-02-01",pages:96,isbn:"978-1-60125-725-3",url:"https://paizo.com/products/btpy96ps",type:"ap"},{_id:"PZO9092",name:"Giantslayer #2: The Hill Giant's Pledge",date:"2015-04-01",pages:96,isbn:"978-1-60125-726-0",url:"https://paizo.com/products/btpy98t4",type:"ap"},{_id:"PZO9093",name:"Giantslayer #3: Forge of the Giant God",date:"2015-05-01",pages:96,isbn:"978-1-60125-727-7",url:"https://paizo.com/products/btpy98t5",type:"ap"},{_id:"PZO9094",name:"Giantslayer #4: Ice Tomb of the Giant Queen",date:"2015-06-01",pages:96,isbn:"978-1-60125-728-4",url:"https://paizo.com/products/btpy98t6",type:"ap"},{_id:"PZO9095",name:"Giantslayer #5: Anvil of Fire",date:"2015-06-01",pages:96,isbn:"978-1-60125-729-1",url:"https://paizo.com/products/btpy98t7",type:"ap"},{_id:"PZO9096",name:"Giantslayer #6: Shadow of the Storm Tyrant",date:"2015-07-01",pages:96,isbn:"978-1-60125-730-7",url:"https://paizo.com/products/btpy98t8",type:"ap"},{_id:"PZO9000-17E",name:"Hell's Rebels Player's Guide",date:"2015-08-12",pages:34,url:"https://paizo.com/products/btpy9g44",type:"pg"},{_id:"PZO9097",name:"Hell's Rebels #1: In Hell's Bright Shadow",date:"2015-09-01",pages:96,isbn:"978-1-60125-768-0",url:"https://paizo.com/products/btpy98t9",type:"ap"},{_id:"PZO9098",name:"Hell's Rebels #2: Turn of the Torrent",date:"2015-09-01",pages:96,isbn:"978-1-60125-784-0",url:"https://paizo.com/products/btpy98ta",type:"ap"},{_id:"PZO9099",name:"Hell's Rebels #3: Dance of the Damned",date:"2015-10-01",pages:96,isbn:"978-1-60125-788-8",url:"https://paizo.com/products/btpy98tb",type:"ap"},{_id:"PZO90100",name:"Hell's Rebels #4: A Song of Silver",date:"2015-12-01",pages:128,isbn:"978-1-60125-795-6",url:"https://paizo.com/products/btpy98tf",type:"ap"},{_id:"PZO90101",name:"Hell's Rebels #5: The Kintargo Contract",date:"2016-01-01",pages:96,isbn:"978-1-60125-800-7",url:"https://paizo.com/products/btpy98td",type:"ap"},{_id:"PZO90102",name:"Hell's Rebels #6: Breaking the Bones of Hell",date:"2016-01-01",pages:96,isbn:"978-1-60125-808-3",url:"https://paizo.com/products/btpy9i8d",type:"ap"},{_id:"PZO9000-18E",name:"Hell's Vengeance Player's Guide",date:"2016-02-25",pages:20,url:"https://paizo.com/products/btpy9jva",type:"pg"},{_id:"PZO90103",name:"Hell's Vengeance #1: The Hellfire Compact",date:"2016-02-01",pages:96,isbn:"978-1-60125-818-2",url:"https://paizo.com/products/btpy9gds",type:"ap"},{_id:"PZO90104",name:"Hell's Vengeance #2: Wrath of Thrune",date:"2016-03-01",pages:96,isbn:"978-1-60125-824-3",url:"https://paizo.com/products/btpy9h32",type:"ap"},{_id:"PZO90105",name:"Hell's Vengeance #3: The Inferno Gate",date:"2016-04-01",pages:96,isbn:"978-1-60125-827-4",url:"https://paizo.com/products/btpy9hj9",type:"ap"},{_id:"PZO90106",name:"Hell's Vengeance #4: For Queen & Empire",date:"2016-05-01",pages:96,isbn:"978-1-60125-836-6",url:"https://paizo.com/products/btpy9ics",type:"ap"},{_id:"PZO90107",name:"Hell's Vengeance #5: Scourge of the Godclaw",date:"2016-06-01",pages:96,isbn:"978-1-60125-842-7",url:"https://paizo.com/products/btpy9ips",type:"ap"},{_id:"PZO90108",name:"Hell's Vengeance #6: Hell Comes to Westcrown",date:"2016-08-01",pages:96,isbn:"978-1-60125-851-9",url:"https://paizo.com/products/btpy9jd0",type:"ap"},{_id:"PZO9000-19E",name:"Strange Aeons Player's Guide",date:"2016-08-17",pages:12,url:"https://paizo.com/products/btpy9nrw",type:"pg"},{_id:"PZO90109",name:"Strange Aeons #1: In Search of Sanity",date:"2016-08-01",pages:96,isbn:"978-1-60125-882-3",url:"https://paizo.com/products/btpy9k5o",type:"ap"},{_id:"PZO90110",name:"Strange Aeons #2: The Thrushmoor Terror",date:"2016-09-01",pages:96,isbn:"978-1-60125-892-2",url:"https://paizo.com/products/btpy9l3g",type:"ap"},{_id:"PZO90111",name:"Strange Aeons #3: Dreams of the Yellow King",date:"2016-11-01",pages:96,isbn:"978-1-60125-899-1",url:"https://paizo.com/products/btpy9mbj",type:"ap"},{_id:"PZO90112",name:"Strange Aeons #4: The Whisper Out of Time",date:"2016-12-01",pages:96,isbn:"978-1-60125-908-0",url:"https://paizo.com/products/btpy9n12",type:"ap"},{_id:"PZO90113",name:"Strange Aeons #5: What Grows Within",date:"2017-01-01",pages:96,isbn:"978-1-60125-913-4",url:"https://paizo.com/products/btpy9nd3",type:"ap"},{_id:"PZO90114",name:"Strange Aeons #6: Black Stars Beckon",date:"2017-02-01",pages:96,isbn:"978-1-60125-919-6",url:"https://paizo.com/products/btpy9nd9",type:"ap"},{_id:"PZO9000-20E",name:"Ironfang Invasion Player's Guide",date:"2017-03-16",pages:12,url:"https://paizo.com/products/btpy9sc5",type:"pg"},{_id:"PZO90115",name:"Ironfang Invasion #1: Trail of the Hunted",date:"2017-03-01",pages:96,isbn:"978-1-60125-926-4",url:"https://paizo.com/products/btpy9npj",type:"ap"},{_id:"PZO90116",name:"Ironfang Invasion #2: Fangs of War",date:"2017-03-01",pages:96,isbn:"978-1-60125-932-5",url:"https://paizo.com/products/btpy9npk",type:"ap"},{_id:"PZO90117",name:"Ironfang Invasion #3: Assault on Longshadow",date:"2017-04-01",pages:96,isbn:"978-1-60125-935-6",url:"https://paizo.com/products/btpy9p1h",type:"ap"},{_id:"PZO90119",name:"Ironfang Invasion #4: Siege of Stone",date:"2017-05-01",pages:96,isbn:"978-1-60125-940-0",url:"https://paizo.com/products/btpy9pn4",type:"ap"},{_id:"PZO90119",name:"Ironfang Invasion #5: Prisoners of the Blight",date:"2017-06-01",pages:96,isbn:"978-1-60125-943-1",url:"https://paizo.com/products/btpy9npn",type:"ap"},{_id:"PZO90120",name:"Ironfang Invasion #6: Vault of the Onyx Citadel",date:"2017-07-01",pages:96,isbn:"978-1-60125-952-3",url:"https://paizo.com/products/btpy9pno",type:"ap"},{_id:"PZO9000-21E",name:"Ruins of Azlant Player's Guide",date:"2017-08-03",pages:16,url:"https://paizo.com/products/btpy9uir",type:"pg"},{_id:"PZO90121",name:"Ruins of Azlant #1: The Lost Outpost",date:"2017-08-01",pages:96,isbn:"978-1-60125-964-6",url:"https://paizo.com/products/btpy9qya",type:"ap"},{_id:"PZO90122",name:"Ruins of Azlant #2: Into the Shattered Continent",date:"2017-09-01",pages:96,isbn:"978-1-60125-972-1",url:"https://paizo.com/products/btpy9uk0",type:"ap"},{_id:"PZO90123",name:"Ruins of Azlant #3: The Flooded Cathedral",date:"2017-10-01",pages:96,isbn:"978-1-60125-981-3",url:"https://paizo.com/products/btpy9uk2",type:"ap"},{_id:"PZO90124",name:"Ruins of Azlant #4: City in the Deep",date:"2017-11-01",pages:96,isbn:"978-1-60125-988-2",url:"https://paizo.com/products/btpy9x2h",type:"ap"},{_id:"PZO90125",name:"Ruins of Azlant #5: Tower of the Drowned Dead",date:"2017-12-01",pages:96,isbn:"978-1-60125-998-1",url:"https://paizo.com/products/btpy9xa1",type:"ap"},{_id:"PZO90126",name:"Ruins of Azlant #6: Beyond the Veiled Past",date:"2017-12-01",pages:96,isbn:"978-1-64078-009-5",url:"https://paizo.com/products/btpy9xf0",type:"ap"},{_id:"PZO9000-22E",name:"War for the Crown Player's Guide",date:"2018-03-22",pages:18,url:"https://paizo.com/products/btpya08v",type:"pg"},{_id:"PZO90127",name:"War for the Crown #1: Crownfall",date:"2018-02-01",pages:96,isbn:"978-1-64078-015-6",url:"https://paizo.com/products/btpy9zk7",type:"ap"},{_id:"PZO90128",name:"War for the Crown #2: Songbird, Scion, Saboteur",date:"2018-03-01",pages:96,isbn:"978-1-64078-025-5",url:"https://paizo.com/products/btpya04x",type:"ap"},{_id:"PZO90129",name:"War for the Crown #3: The Twilight Child",date:"2018-04-01",pages:96,isbn:"978-1-64078-032-3",url:"https://paizo.com/products/btpya0fi",type:"ap"},{_id:"PZO90130",name:"War for the Crown #4: City in the Lion's Eye",date:"2018-05-01",pages:96,isbn:"978-1-64078-037-8",url:"https://paizo.com/products/btpy9wmy",type:"ap"},{_id:"PZO90131",name:"War for the Crown #5: The Reaper's Right Hand",date:"2018-06-01",pages:96,isbn:"978-1-64078-045-3",url:"https://paizo.com/products/btpy9x04",type:"ap"},{_id:"PZO90132",name:"War for the Crown #6: The Six-Legend Soul",date:"2018-07-01",pages:96,isbn:"978-1-64078-052-1",url:"https://paizo.com/products/btpy9xdq",type:"ap"},{_id:"PZO9000-23E",name:"Return of the Runelords Player's Guide",date:"2018-09-05",pages:14,url:"https://paizo.com/products/btq01su5",type:"pg"},{_id:"PZO90133",name:"Return of the Runelords #1: Secrets of Roderic's Cove",date:"2018-08-01",pages:96,isbn:"978-1-64078-062-0",url:"https://paizo.com/products/btpy9y26",type:"ap"},{_id:"PZO90134",name:"Return of the Runelords #2: It Came from Hollow Mountain",date:"2018-09-01",pages:96,isbn:"978-1-64078-070-5",url:"https://paizo.com/products/btpy9z14",type:"ap"},{_id:"PZO90135",name:"Return of the Runelords #3: Runeplague",date:"2018-10-01",pages:96,isbn:"978-1-64078-079-8",url:"https://paizo.com/products/btpy9zsl",type:"ap"},{_id:"PZO90136",name:"Return of the Runelords #4: Temple of the Peacock Spirit",date:"2018-11-01",pages:96,isbn:"978-1-64078-091-0",url:"https://paizo.com/products/btpya0b5",type:"ap"},{_id:"PZO90137",name:"Return of the Runelords #5: The City Outside of Time",date:"2018-12-01",pages:96,isbn:"978-1-64078-098-9",url:"https://paizo.com/products/btq01vak",type:"ap"},{_id:"PZO90138",name:"Return of the Runelords #6: Rise of New Thassilon",date:"2019-01-01",pages:96,isbn:"978-1-64078-106-1",url:"https://paizo.com/products/btq01w1w",type:"ap"},{_id:"PZO9000-24E",name:"Tyrant's Grasp Player's Guide",date:"2019-02-08",pages:9,url:"https://paizo.com/products/btq01xdp",type:"pg"},{_id:"PZO90139",name:"Tyrant's Grasp #1: The Dead Roads",date:"2019-02-01",pages:96,isbn:"978-1-64078-111-5",url:"https://paizo.com/products/btq01ws3",type:"ap"},{_id:"PZO90140",name:"Tyrant's Grasp #2: Eulogy for Roslar's Coffer",date:"2019-03-01",pages:96,isbn:"978-1-64078-119-1",url:"https://paizo.com/products/btq01x4b",type:"ap"},{_id:"PZO90141",name:"Tyrant's Grasp #3: Last Watch",date:"2019-04-01",pages:96,isbn:"978-1-64078-126-9",url:"https://paizo.com/products/btq01x4f",type:"ap"},{_id:"PZO90142",name:"Tyrant's Grasp #4: Gardens of Gallowspire",date:"2019-05-01",pages:96,isbn:"978-1-64078-134-4",url:"https://paizo.com/products/btq01xj6",type:"ap"},{_id:"PZO90143",name:"Tyrant's Grasp #5: Borne by the Sun's Grace",date:"2019-06-01",pages:96,isbn:"978-1-64078-140-5",url:"https://paizo.com/products/btq01znj",type:"ap"},{_id:"PZO90144",name:"Tyrant's Grasp #6: Midwives to Death",date:"2019-08-01",pages:96,isbn:"978-1-64078-144-3",url:"https://paizo.com/products/btq01zno",type:"ap"},{_id:"PZO9500",name:"Hollow's Last Hope",date:"2007-06-01",pages:16,level:1,type:"module"},{_id:"PZO9501",name:"Crown of the Kobold King",date:"2007-06-01",pages:32,level:2,isbn:"978-1-60125-048-3",type:"module"},{_id:"PZO9502",name:"Conquest of Bloodsworn Vale",date:"2007-07-01",pages:32,level:6,isbn:"978-1-60125-049-0",type:"module"},{_id:"PZO9503",name:"Seven Swords of Sin",date:"2007-08-01",pages:32,level:7,isbn:"978-1-60125-050-6",type:"module"},{_id:"PZO9504",name:"Gallery of Evil",date:"2007-09-01",pages:32,level:8,isbn:"978-1-60125-051-3",type:"module"},{_id:"PZO9505",name:"Entombed with the Pharaohs",date:"2007-10-01",pages:32,level:6,isbn:"978-1-60125-052-0",type:"module"},{_id:"PZO9500-TC1",name:"Into the Haunted Forest",date:"2007-11-01",pages:16,level:1,isbn:"978-1-60125-108-4",type:"module"},{_id:"PZO9506",name:"Carnival of Tears",date:"2007-11-01",pages:32,level:5,isbn:"978-1-60125-055-1",type:"module"},{_id:"PZO9507",name:"Guardians of Dragonfall",date:"2007-12-01",pages:32,level:11,isbn:"978-1-60125-056-8",type:"module"},{_id:"PZO9508",name:"Hangman's Noose",date:"2008-01-01",pages:32,level:1,isbn:"978-1-60125-073-5",type:"module"},{_id:"PZO9509",name:"Crucible of Chaos",date:"2008-02-01",pages:32,level:8,isbn:"978-1-60125-074-2",type:"module"},{_id:"PZO9510",name:"River into Darkness",date:"2008-03-01",pages:32,level:4,isbn:"978-1-60125-075-9",type:"module"},{_id:"PZO9511",name:"The Demon Within",date:"2008-04-01",pages:32,level:11,isbn:"978-1-60125-076-6",type:"module"},{_id:"PZO9512",name:"Flight of the Red Raven",date:"2008-05-01",pages:32,level:4,isbn:"978-1-60125-101-5",type:"module"},{_id:"PZO9500-2",name:"Revenge of the Kobold King",date:"2008-06-01",pages:16,level:5,type:"module"},{_id:"PZO9513",name:"Tower of the Last Baron",date:"2008-06-01",pages:32,level:5,isbn:"978-1-60125-102-2",type:"module"},{_id:"PZO9514",name:"Treasure of Chimera Cove",date:"2008-10-01",pages:32,level:7,isbn:"978-1-60125-119-0",type:"module"},{_id:"PZO9515",name:"Hungry Are the Dead",date:"2008-10-01",pages:32,level:6,isbn:"978-1-60125-120-6",type:"module"},{_id:"PZO9516",name:"The Pact Stone Pyramid",date:"2008-11-01",pages:32,level:8,isbn:"978-1-60125-145-9",type:"module"},{_id:"PZO9517",name:"Clash of the Kingslayers",date:"2009-01-01",pages:32,level:10,isbn:"978-1-60125-125-1",type:"module"},{_id:"PZO9518",name:"Blood of Dragonscar",date:"2009-03-01",pages:32,level:15,isbn:"978-1-60125-170-1",type:"module"},{_id:"PZO9519",name:"Beyond the Vault of Souls",date:"2009-07-01",pages:32,level:9,isbn:"978-1-60125-174-9",type:"module"},{_id:"PZO9520NM",name:"Crypt of the Everflame",date:"2009-08-01",pages:32,level:1,isbn:"978-1-60125-186-2",type:"module"},{_id:"PZO9521",name:"Carrion Hill",date:"2009-11-01",pages:32,level:5,isbn:"978-1-60125-206-7",type:"module"},{_id:"PZO9522",name:"Masks of the Living God",date:"2009-12-01",pages:32,level:3,isbn:"978-1-60125-207-4",type:"module"},{_id:"PZO9523",name:"Realm of the Fellnight Queen",date:"2010-02-01",pages:32,level:7,isbn:"978-1-60125-224-1",type:"module"},{_id:"PZO9524",name:"City of Golden Death",date:"2010-04-01",pages:32,level:5,isbn:"978-1-60125-225-8",type:"module"},{_id:"PZO9525",name:"From Shore to Sea",date:"2010-06-01",pages:32,level:6,isbn:"978-1-60125-257-9",type:"module"},{_id:"PZO9500-4",name:"Master of the Fallen Fortress",date:"2010-06-01",pages:16,level:1,isbn:"978-1-60125-365-1",type:"module"},{_id:"PZO9526",name:"Curse of the Riven Sky",date:"2010-07-01",pages:32,level:10,isbn:"978-1-60125-258-6",type:"module"},{_id:"PZO9527",name:"The Witchwar Legacy",date:"2010-09-01",pages:32,level:17,isbn:"978-1-60125-279-1",type:"module"},{_id:"PZO9528",name:"The Godsmouth Heresy",date:"2010-12-01",pages:32,level:1,isbn:"978-1-60125-280-7",type:"module"},{_id:"PZO9529",name:"Cult of the Ebon Destroyers",date:"2011-02-01",pages:32,level:8,isbn:"978-1-60125-317-0",type:"module"},{_id:"PZO9530",name:"Tomb of the Iron Medusa",date:"2011-04-01",pages:32,level:14,isbn:"978-1-60125-318-7",type:"module"},{_id:"PZO9531",name:"Academy of Secrets",date:"2011-06-01",pages:32,level:13,isbn:"978-1-60125-343-9",type:"module"},{_id:"PZO9500-5",name:"We Be Goblins!",date:"2011-06-01",pages:16,level:1,type:"module"},{_id:"PZO9532",name:"The Harrowing",date:"2011-07-01",pages:32,level:9,isbn:"978-1-60125-355-2",type:"module"},{_id:"PZO9533",name:"Feast of Ravenmoor",date:"2011-09-01",pages:32,level:3,isbn:"978-1-60125-367-5",type:"module"},{_id:"PZO9534",name:"The Ruby Phoenix Tournament",date:"2012-01-01",pages:32,level:11,isbn:"978-1-60125-381-1",type:"module"},{_id:"PZO9535",name:"The Midnight Mirror",date:"2012-04-01",pages:32,level:4,isbn:"978-1-60125-401-6",type:"module"},{_id:"PZO9536",name:"No Response from Deepmar",date:"2012-05-01",pages:32,level:8,isbn:"978-1-60125-410-8",type:"module"},{_id:"PZO9500-6",name:"Dawn of the Scarlet Sun",date:"2012-06-01",pages:16,level:5,type:"module"},{_id:"PZO9537",name:"The Moonscar",date:"2012-08-01",pages:32,level:16,isbn:"978-1-60125-426-9",type:"module"},{_id:"PZO9538",name:"Murder's Mark",date:"2012-10-01",pages:32,level:1,isbn:"978-1-60125-447-4",type:"module"},{_id:"PZO9539",name:"Broken Chains",date:"2013-03-01",pages:32,level:6,isbn:"978-1-60125-461-0",type:"module"},{_id:"PZO9540",name:"Fangwood Keep",date:"2013-04-01",pages:32,level:4,isbn:"978-1-60125-476-4",type:"module"},{_id:"PZO9541",name:"Doom Comes to Dustpawn",date:"2013-05-01",pages:32,level:9,isbn:"978-1-60125-504-4",type:"module"},{_id:"PZO9500-7",name:"We Be Goblins Too!",date:"2013-06-01",pages:16,level:3,type:"module"},{_id:"PZO9542",name:"The Dragon's Demand",date:"2013-07-01",pages:64,level:1,isbn:"978-1-60125-527-3",type:"module"},{_id:"PZO9543",name:"Wardens of the Reborn Forge",date:"2013-12-01",pages:64,level:12,isbn:"978-1-60125-555-6",type:"module"},{_id:"PZO9544",name:"Tears at Bitter Manor",date:"2014-03-01",pages:64,level:5,isbn:"978-1-60125-613-3",type:"module"},{_id:"PZO9500-8",name:"Risen from the Sands",date:"2014-06-01",pages:16,level:3,type:"module"},{_id:"PZO9545",name:"The Emerald Spire Superdungeon",date:"2014-06-01",pages:160,level:1,isbn:"978-1-60125-655-3",type:"module"},{_id:"PZO9546",name:"Plunder & Peril",date:"2014-11-01",pages:64,level:4,isbn:"978-1-60125-680-5",type:"module"},{_id:"PZO9547",name:"Daughters of Fury",date:"2015-02-01",pages:64,level:3,isbn:"978-1-60125-706-2",type:"module"},{_id:"PZO9500-9",name:"We Be Goblins Free!",date:"2015-06-01",pages:16,level:4,type:"module"},{_id:"PZO9548",name:"Feast of Dust",date:"2015-11-01",pages:64,level:11,isbn:"978-1-60125-735-2",type:"module"},{_id:"PZO9549",name:"The House on Hook Street",date:"2015-12-01",pages:64,level:6,isbn:"978-1-60125-790-1",type:"module"},{_id:"PZO9550",name:"Down the Blighted Path",date:"2016-02-01",pages:64,level:5,isbn:"978-1-60125-815-1",type:"module"},{_id:"PZO9551",name:"Ire of the Storm",date:"2016-05-01",pages:64,level:1,isbn:"978-1-60125-830-4",type:"module"},{_id:"PZO9500-10",name:"We B4 Goblins!",date:"2016-06-01",pages:16,level:1,type:"module"},{_id:"PZO9552",name:"Gallows of Madness",date:"2016-08-01",pages:64,level:1,isbn:"978-1-60125-854-0",type:"module"},{_id:"PZO9553",name:"Seers of the Drowned City",date:"2016-11-01",pages:64,level:6,isbn:"978-1-60125-902-8",type:"module"},{_id:"PZOGENA001",name:"Heroes for Highdelve",date:"2017-08-01",pages:20,level:1,isbn:"978-1-64078-002-6",type:"module"},{_id:"PZOGAUNTLET",name:"The Gauntlet",date:"2018-05-01",pages:16,level:8,type:"module"},{_id:"PZO9500-12",name:"We Be 5uper Goblins!",date:"2018-06-01",pages:16,level:6,type:"module"},{_id:"PZO9554",name:"Cradle of Night",date:"2018-12-01",pages:64,level:8,isbn:"978-1-60125-991-2",type:"module"},{_id:"PZO9500-14",name:"We Be Heroes?",date:"2019-06-01",pages:16,level:1,type:"module"},{_id:"PZO9402",name:"Elves of Golarion",date:"2008-10-01",isbn:"978-1-60125-143-5",legacy:!0,type:"companion"},{_id:"PZO9403",name:"Osirion, Land of Pharaohs",date:"2008-12-01",isbn:"978-1-60125-144-2",url:"https://paizo.com/products/btpy86j7",legacy:!0,type:"companion"},{_id:"PZO9405",name:"Taldor, Echoes of Glory",date:"2009-04-01",isbn:"978-1-60125-169-5",legacy:!0,type:"companion"},{_id:"PZO9406",name:"Qadira, Gateway to the East",date:"2009-06-01",isbn:"978-1-60125-180-0",type:"companion"},{_id:"PZO9407",name:"Cheliax, Empire of Devils",date:"2009-08-01",isbn:"978-1-60125-191-6",tieIn:"Council of Thieves",type:"companion"},{_id:"PZO9408",name:"Dwarves of Golarion",date:"2009-12-01",isbn:"978-1-60125-204-3",type:"companion"},{_id:"PZO9409",name:"Andoran, Spirit of Liberty",date:"2010-01-01",isbn:"978-1-60125-205-0",type:"companion"},{_id:"PZO9410",name:"Adventurer's Armory",abbr:"AA",date:"2010-04-01",isbn:"978-1-60125-222-7",tieIn:"Kingmaker",type:"companion"},{_id:"PZO9411",name:"Gnomes of Golarion",date:"2010-05-01",isbn:"978-1-60125-223-4",type:"companion"},{_id:"PZO9412",name:"Sargava, the Lost Colony",date:"2010-06-01",isbn:"978-1-60125-255-5",type:"companion"},{_id:"PZO9413",name:"Orcs of Golarion",date:"2010-08-01",isbn:"978-1-60125-256-2",tieIn:"Serpent's Skull",type:"companion"},{_id:"PZO9414",name:"Inner Sea Primer",date:"2010-11-01",isbn:"978-1-60125-277-7",type:"companion"},{_id:"PZO9415",name:"Halflings of Golarion",date:"2011-01-01",isbn:"978-1-60125-278-4",type:"companion"},{_id:"PZO9416",name:"Faiths of Purity",date:"2011-04-01",isbn:"978-1-60125-314-9",tieIn:"Carrion Crown",type:"companion"},{_id:"PZO9417",name:"Humans of Golarion",date:"2011-06-01",isbn:"978-1-60125-315-6",type:"companion"},{_id:"PZO9418",name:"Faiths of Balance",date:"2011-07-01",isbn:"978-1-60125-316-3",type:"companion"},{_id:"PZO9419",name:"Goblins of Golarion",date:"2011-08-01",isbn:"978-1-60125-362-0",tieIn:"Jade Regent",type:"companion"},{_id:"PZO9420",name:"Faiths of Corruption",date:"2011-10-01",isbn:"978-1-60125-375-0",type:"companion"},{_id:"PZO9421",name:"Dragon Empires Primer",date:"2012-01-01",isbn:"978-1-60125-386-6",type:"companion"},{_id:"PZO9422",name:"Pirates of the Inner Sea",abbr:"PotIS",date:"2012-02-01",isbn:"978-1-60125-405-4",tieIn:"Skull & Shackles",type:"companion"},{_id:"PZO9423",name:"Blood of Fiends",date:"2012-04-01",isbn:"978-1-60125-423-8",type:"companion"},{_id:"PZO9424",name:"Blood of Angels",date:"2012-07-01",isbn:"978-1-60125-438-2",type:"companion"},{_id:"PZO9425",name:"Varisia, Birthplace of Legends",date:"2012-08-02",isbn:"978-1-60125-453-5",tieIn:"Shattered Star",type:"companion"},{_id:"PZO9426",name:"Knights of the Inner Sea",date:"2012-09-01",isbn:"978-1-60125-460-3",type:"companion"},{_id:"PZO9427",name:"Blood of the Night",date:"2012-12-06",isbn:"978-1-60125-470-2",type:"companion"},{_id:"PZO9428",name:"People of the North",date:"2013-01-22",isbn:"978-1-60125-475-7",type:"companion"},{_id:"PZO9429",name:"Animal Archive",date:"2013-02-13",isbn:"978-1-60125-488-7",tieIn:"Reign of Winter",type:"companion"},{_id:"PZO9430",name:"Dungeoneer's Handbook",abbr:"DHB",date:"2013-03-08",isbn:"978-1-60125-510-5",type:"companion"},{_id:"PZO9431",name:"Champions of Purity",date:"2013-04-16",isbn:"978-1-60125-511-2",type:"companion"},{_id:"PZO9432",name:"Kobolds of Golarion",date:"2013-06-13",isbn:"978-1-60125-512-9",type:"companion"},{_id:"PZO9433",name:"Quests & Campaigns",date:"2013-06-13",isbn:"978-1-60125-513-6",type:"companion"},{_id:"PZO9434",name:"Dragonslayer's Handbook",date:"2013-07-11",isbn:"978-1-60125-526-6",type:"companion"},{_id:"PZO9435",name:"Pathfinder Society Primer",date:"2013-07-11",isbn:"978-1-60125-534-1",type:"companion"},{_id:"PZO9436",name:"Faiths & Philosophies",date:"2013-08-19",isbn:"978-1-60125-543-3",tieIn:"Wrath of the Righteous",type:"companion"},{_id:"PZO9437",name:"Demon Hunter's Handbook",date:"2013-08-17",isbn:"978-1-60125-554-9",type:"companion"},{_id:"PZO9438",name:"Mythic Origins",date:"2013-09-25",isbn:"978-1-60125-569-3",type:"companion"},{_id:"PZO9439",name:"Blood of the Moon",date:"2013-10-21",isbn:"978-1-60125-578-5",type:"companion"},{_id:"PZO9440",name:"Magical Marketplace",abbr:"MM",date:"2013-12-11",isbn:"978-1-60125-600-3",type:"companion"},{_id:"PZO9441",name:"People of the Sands",date:"2014-01-09",isbn:"978-1-60125-601-0",type:"companion"},{_id:"PZO9442",name:"Bastards of Golarion",date:"2014-02-06",isbn:"978-1-60125-602-7",tieIn:"Mummy's Mask",type:"companion"},{_id:"PZO9443",name:"Champions of Balance",date:"2014-03-25",isbn:"978-1-60125-603-4",type:"companion"},{_id:"PZO9444",name:"Undead Slayer's Handbook",abbr:"USH",date:"2014-04-30",isbn:"978-1-60125-604-1",type:"companion"},{_id:"PZO9445",name:"Alchemy Manual",abbr:"AM",date:"2014-04-30",isbn:"978-1-60125-605-8",type:"companion"},{_id:"PZO9446",name:"The Harrow Handbook",date:"2014-05-28",isbn:"978-1-60125-650-8",type:"companion"},{_id:"PZO9447",name:"Blood of the Elements",date:"2014-06-25",isbn:"978-1-60125-654-6",type:"companion"},{_id:"PZO9448",name:"People of the River",date:"2014-07-25",isbn:"978-1-60125-666-9",type:"companion"},{_id:"PZO9449",name:"People of the Stars",date:"2014-08-14",isbn:"978-1-60125-674-4",tieIn:"Iron Gods",type:"companion"},{_id:"PZO9450",name:"Champions of Corruption",date:"2014-09-10",isbn:"978-1-60125-679-9",type:"companion"},{_id:"PZO9451",name:"Advanced Class Origins",date:"2014-10-22",isbn:"978-1-60125-689-8",type:"companion"},{_id:"PZO9452",name:"Ranged Tactics Toolbox",date:"2014-11-24",isbn:"978-1-60125-705-5",type:"companion"},{_id:"PZO9453",name:"Giant Hunter's Handbook",date:"2014-12-17",isbn:"978-1-60125-712-3",type:"companion"},{_id:"PZO9454",name:"Familiar Folio",abbr:"FF",date:"2015-01-28",isbn:"978-1-60125-731-4",type:"companion"},{_id:"PZO9455",name:"Melee Tactics Toolbox",date:"2015-03-25",isbn:"978-1-60125-732-1",tieIn:"Giant Slayer",type:"companion"},{_id:"PZO9456",name:"Heroes of the Wild",date:"2015-04-29",isbn:"978-1-60125-733-8",type:"companion"},{_id:"PZO9457",name:"Cohorts and Companions",date:"2015-05-27",isbn:"978-1-60125-734-5",type:"companion"},{_id:"PZO9458",name:"Monster Summoner's Handbook",date:"2015-06-24",isbn:"978-1-60125-758-1",type:"companion"},{_id:"PZO9459",name:"Dirty Tactics Toolbox",date:"2015-09-02",isbn:"978-1-60125-763-5",tieIn:"Hell's Rebels",type:"companion"},{_id:"PZO9460",name:"Heroes of the Streets",date:"2015-09-30",isbn:"978-1-60125-769-7",type:"companion"},{_id:"PZO9461",name:"Occult Origins",abbr:"OO",date:"2015-10-21",isbn:"978-1-60125-785-7",type:"companion"},{_id:"PZO9462",name:"Black Markets",abbr:"BM",date:"2015-10-21",isbn:"978-1-60125-789-5",type:"companion"},{_id:"PZO9463",name:"Weapon Master's Handbook",date:"2015-11-18",isbn:"978-1-60125-796-3",type:"companion"},{_id:"PZO9464",name:"Agents of Evil",date:"2015-12-16",isbn:"978-1-60125-801-4",type:"companion"},{_id:"PZO9465",name:"Arcane Anthology",abbr:"AA",date:"2016-01-27",isbn:"978-1-60125-814-4",type:"companion"},{_id:"PZO9466",name:"Blood of Shadows",date:"2016-02-24",isbn:"978-1-60125-820-5",tieIn:"Hell's Vengeance",type:"companion"},{_id:"PZO9467",name:"Armor Master's Handbook",date:"2016-04-27",isbn:"978-1-60125-829-8",type:"companion"},{_id:"PZO9468",name:"Magic Tactics Toolbox",date:"2016-05-25",isbn:"978-1-60125-838-0",type:"companion"},{_id:"PZO9469",name:"Spymaster's Handbook",date:"2016-06-29",isbn:"978-1-60125-844-1",type:"companion"},{_id:"PZO9470",name:"Legacy of Dragons",date:"2016-08-04",isbn:"978-1-60125-853-3",tieIn:"Strange Aeons",type:"companion"},{_id:"PZO9471",name:"Haunted Heroes Handbook",date:"2016-08-31",isbn:"978-1-60125-884-7",type:"companion"},{_id:"PZO9472",name:"Divine Anthology",date:"2016-09-28",isbn:"978-1-60125-894-6",type:"companion"},{_id:"PZO9473",name:"Blood of the Beast",date:"2016-11-16",isbn:"978-1-60125-901-1",type:"companion"},{_id:"PZO9474",name:"Paths of the Righteous",date:"2016-12-14",isbn:"978-1-60125-910-3",type:"companion"},{_id:"PZO9475",name:"Healer's Handbook",abbr:"HH",date:"2017-01-25",isbn:"978-1-60125-914-1",type:"companion"},{_id:"PZO9476",name:"Heroes of the High Court",date:"2017-02-22",isbn:"978-1-60125-920-2",type:"companion"},{_id:"PZO9477",name:"Psychic Anthology",date:"2017-02-22",isbn:"978-1-60125-928-8",type:"companion"},{_id:"PZO9478",name:"Monster Hunter's Handbook",date:"2017-03-29",isbn:"978-1-60125-933-2",tieIn:"Ironfang Invasion",type:"companion"},{_id:"PZO9479",name:"Heroes of the Darklands",date:"2017-04-26",isbn:"978-1-60125-936-3",type:"companion"},{_id:"PZO9480",name:"Legacy of the First World",date:"2017-05-31",isbn:"978-1-60125-941-7",type:"companion"},{_id:"PZO9481",name:"Adventurer's Armory 2",abbr:"AA2",date:"2017-06-28",isbn:"978-1-60125-945-5",type:"companion"},{_id:"PZO9482",name:"Blood of the Sea",date:"2017-07-26",isbn:"978-1-60125-955-4",type:"companion"},{_id:"PZO9483",name:"Elemental Master's Handbook",date:"2017-08-17",isbn:"978-1-60125-965-3",tieIn:"Ruins of Azlant",type:"companion"},{_id:"PZO9484",name:"Antihero's Handbook",date:"2017-09-20",isbn:"978-1-60125-973-8",type:"companion"},{_id:"PZO9485",name:"Blood of the Coven",date:"2017-10-18",isbn:"978-1-60125-982-0",type:"companion"},{_id:"PZO9486",name:"People of the Wastes",date:"2017-11-15",isbn:"978-1-60125-990-5",type:"companion"},{_id:"PZO9487",name:"Potions & Poisons",abbr:"P&P",date:"2017-12-13",isbn:"978-1-64078-000-2",type:"companion"},{_id:"PZO9488",name:"Disciple's Doctrine",date:"2018-01-31",isbn:"978-1-64078-011-8",type:"companion"},{_id:"PZO9489",name:"Merchant's Manifest",date:"2018-03-28",isbn:"978-1-64078-026-2",tieIn:"War for the Crown",type:"companion"},{_id:"PZO9490",name:"Blood of the Ancients",date:"2018-05-30",isbn:"978-1-64078-038-5",type:"companion"},{_id:"PZO9491",name:"Heroes from the Fringe",date:"2018-08-29",isbn:"978-1-64078-053-8",tieIn:"Return of the Runelords",type:"companion"},{_id:"PZO9492",name:"Plane-Hopper's Handbook",date:"2018-09-19",isbn:"978-1-64078-071-2",type:"companion"},{_id:"PZO9493",name:"Martial Arts Handbook",date:"2018-11-14",isbn:"978-1-64078-092-7",type:"companion"},{_id:"PZO9494",name:"Wilderness Origins",date:"2019-01-30",isbn:"978-1-64078-107-8",type:"companion"},{_id:"PZO9495",name:"Heroes of Golarion",date:"2019-03-27",isbn:"978-1-64078-120-7",tieIn:"Tyrant's Grasp",type:"companion"},{_id:"PZO9496",name:"Chronicle of Legends",date:"2019-05-29",isbn:"978-1-64078-136-8",type:"companion"},{_id:"PZO1106",name:"Pathfinder Chronicles: Guide to Korvosa",date:"2008-03-01",pages:64,isbn:"978-1-60125-078-0",type:"setting"},{_id:"PZO1105",name:"Pathfinder Chronicles: Gazetteer",date:"2008-04-01",pages:64,isbn:"978-1-60125-077-3",type:"setting"},{_id:"PZO1107",name:"Pathfinder Chronicles: Classic Monsters Revisited",date:"2008-04-01",pages:64,isbn:"978-1-60125-079-7",type:"setting"},{_id:"PZO1108",name:"Pathfinder Chronicles: Guide to Darkmoon Vale",date:"2008-07-01",pages:64,isbn:"978-1-60125-100-8",type:"setting"},{_id:"PZO1111",name:"Pathfinder Chronicles: Campaign Setting",date:"2008-08-01",pages:256,isbn:"978-1-60125-112-1",url:"https://paizo.com/products/btpy84eo",type:"setting"},{_id:"PZO9202",name:"Pathfinder Chronicles: Gods and Magic",date:"2008-10-01",pages:32,isbn:"978-1-60125-139-8",type:"setting"},{_id:"PZO9204",name:"Pathfinder Chronicles: Into the Darklands",date:"2008-11-01",pages:64,isbn:"978-1-60125-140-4",type:"setting"},{_id:"PZO9205",name:"Pathfinder Chronicles: Guide to Absalom",date:"2008-12-01",pages:64,isbn:"978-1-60125-141-1",type:"setting"},{_id:"PZO9207",name:"Pathfinder Chronicles: Dragons Revisited",date:"2009-03-01",pages:64,isbn:"978-1-60125-165-7",type:"setting"},{_id:"PZO9208",name:"Pathfinder Chronicles: Dark Markets: A Guide to Katapesh",date:"2009-04-01",pages:64,isbn:"978-1-60125-166-4",type:"setting"},{_id:"PZO9209",name:"Pathfinder Chronicles: The Great Beyond",date:"2009-05-01",pages:64,isbn:"978-1-60125-167-1",type:"setting"},{_id:"PZO9210",name:"Pathfinder Chronicles: Dungeon Denizens Revisited",abbr:"DDR",date:"2009-05-01",pages:64,isbn:"978-1-60125-172-5",type:"setting",legacy:!0},{_id:"PZO9211",name:"Pathfinder Chronicles: Seekers of Secrets",abbr:"SoS",date:"2009-10-01",pages:64,isbn:"978-1-60125-178-7",type:"setting"},{_id:"PZO9213",name:"Pathfinder Chronicles: Princes of Darkness",date:"2009-10-01",pages:64,isbn:"978-1-60125-189-3",type:"setting"},{_id:"PZO9214",name:"Pathfinder Chronicles: Cities of Golarion",date:"2009-11-01",pages:64,isbn:"978-1-60125-178-7",type:"setting"},{_id:"PZO9216",name:"Pathfinder Chronicles: Classic Horrors Revisited",date:"2010-01-01",pages:64,isbn:"978-1-60125-202-9",type:"setting"},{_id:"PZO9217E",name:"Pathfinder Chronicles: Guide to the River Kingdoms",date:"2010-02-01",pages:64,isbn:"978-1-60125-203-6",type:"setting"},{_id:"PZO9219",name:"Pathfinder Chronicles: NPC Guide",date:"2010-03-01",pages:64,isbn:"978-1-60125-219-7",type:"setting"},{_id:"PZO9220",name:"Pathfinder Chronicles: Classic Treasures Revisited",date:"2010-04-01",pages:64,isbn:"978-1-60125-220-3",type:"setting",url:"https://paizo.com/products/btpy8dmn"},{_id:"PZO9221",name:"Pathfinder Chronicles: Faction Guide",abbr:"FG",date:"2010-05-01",pages:64,isbn:"978-1-60125-221-0",type:"setting"},{_id:"PZO9222",name:"Pathfinder Chronicles: Heart of the Jungle",date:"2010-06-01",pages:64,isbn:"978-1-60125-247-0",type:"setting"},{_id:"PZO9223",name:"Pathfinder Chronicles: City of Strangers",date:"2010-07-01",pages:64,isbn:"978-1-60125-248-7",type:"setting"},{_id:"PZO9227",name:"Misfit Monsters Redeemed",date:"2010-11-01",pages:64,isbn:"978-1-60125-270-8",type:"setting"},{_id:"PZO9225",name:"Lords of Chaos",date:"2010-12-01",pages:64,isbn:"978-1-60125-250-0",type:"setting"},{_id:"PZO9229",name:"Lost Cities of Golarion",date:"2011-01-01",pages:64,isbn:"978-1-60125-272-2",type:"setting"},{_id:"PZO9226",name:"The Inner Sea World Guide",abbr:"ISWG",date:"2011-03-01",pages:320,isbn:"978-1-60125-269-2",url:"https://paizo.com/products/btpy8ief",type:"setting"},{_id:"PZO9231",name:"Rule of Fear",date:"2011-04-01",pages:64,isbn:"978-1-60125-301-9",type:"setting"},{_id:"PZO9232",name:"Rival Guide",date:"2011-05-01",pages:64,isbn:"978-1-60125-302-6",type:"setting"},{_id:"PZO9233",name:"Undead Revisited",date:"2011-06-01",pages:64,isbn:"978-1-60125-303-3",type:"setting"},{_id:"PZO9234",name:"Dungeons of Golarion",date:"2011-07-01",pages:64,isbn:"978-1-60125-304-0",type:"setting"},{_id:"PZO9235",name:"Pathfinder Society Field Guide",abbr:"PSFG",date:"2011-07-01",pages:64,isbn:"978-1-60125-305-7",type:"setting"},{_id:"PZO9237",name:"Inner Sea Magic",date:"2011-07-01",pages:64,isbn:"978-1-60125-360-6",type:"setting"},{_id:"PZO9238",name:"Lands of the Linnorm Kings",date:"2011-10-01",pages:64,isbn:"978-1-60125-365-1",type:"setting"},{_id:"PZO9239",name:"Horsemen of the Apocalypse",date:"2011-11-01",pages:64,isbn:"978-1-60125-373-6",type:"setting"},{_id:"PZO9240",name:"Dragon Empires Gazetteer",date:"2011-12-01",pages:64,isbn:"978-1-60125-379-8",type:"setting"},{_id:"PZO9241",name:"Mythical Monsters Revisited",date:"2012-01-01",pages:64,isbn:"978-1-60125-384-2",type:"setting"},{_id:"PZO9243",name:"Distant Worlds",date:"2012-02-01",pages:64,isbn:"978-1-60125-403-0",type:"setting"},{_id:"PZO9244",name:"Isles of the Shackles",date:"2012-04-01",pages:64,isbn:"978-1-60125-408-5",type:"setting"},{_id:"PZO9245",name:"Giants Revisited",date:"2012-05-01",pages:64,isbn:"978-1-60125-412-2",type:"setting"},{_id:"PZO9246",name:"Lost Kingdoms",date:"2012-06-01",pages:64,isbn:"978-1-60125-415-3",type:"setting"},{_id:"PZO9248",name:"Magnimar, City of Monuments",date:"2012-07-01",pages:64,isbn:"978-1-60125-446-7",type:"setting"},{_id:"PZO9249",name:"Paths of Prestige",date:"2012-08-01",pages:64,isbn:"978-1-60125-451-1",type:"setting"},{_id:"PZO9250",name:"Artifacts & Legends",date:"2012-09-01",pages:64,isbn:"978-1-60125-458-0",type:"setting"},{_id:"PZO9251",name:"Inner Sea Bestiary",abbr:"ISB",date:"2012-11-01",pages:64,isbn:"978-1-60125-468-9",type:"setting"},{_id:"PZO9252",name:"Mystery Monsters Revisited",date:"2012-12-01",pages:64,isbn:"978-1-60125-473-3",type:"setting"},{_id:"PZO9253",name:"Irrisen, Land of Eternal Winter",date:"2013-01-01",pages:64,isbn:"978-1-60125-486-3",type:"setting"},{_id:"PZO9255",name:"Chronicle of the Righteous",date:"2013-05-01",pages:64,isbn:"978-1-60125-506-8",type:"setting"},{_id:"PZO9256",name:"Fey Revisited",date:"2013-05-01",pages:64,isbn:"978-1-60125-507-5",type:"setting"},{_id:"PZO9257",name:"Castles of the Inner Sea",date:"2013-06-01",pages:64,isbn:"978-1-60125-508-2",type:"setting"},{_id:"PZO9258",name:"Dragons Unleashed",date:"2013-06-01",pages:64,isbn:"978-1-60125-525-9",type:"setting"},{_id:"PZO9259",name:"The Worldwound",date:"2013-07-01",pages:64,isbn:"978-1-60125-532-7",type:"setting"},{_id:"PZO9261",name:"Demons Revisited",date:"2013-08-01",pages:64,isbn:"978-1-60125-552-5",type:"setting"},{_id:"PZO9262",name:"Mythic Realms",date:"2013-09-01",pages:64,isbn:"978-1-60125-567-9",type:"setting"},{_id:"PZO9263",name:"Towns of the Inner Sea",date:"2013-10-01",pages:64,isbn:"978-1-60125-576-1",type:"setting"},{_id:"PZO9264",name:"Inner Sea NPC Codex",date:"2013-12-01",pages:64,isbn:"978-1-60125-594-5",type:"setting"},{_id:"PZO9265",name:"Osirion, Legacy of Pharaohs",date:"2014-01-01",pages:64,isbn:"978-1-60125-595-2",type:"setting"},{_id:"PZO9267",name:"Inner Sea Gods",abbr:"ISG",date:"2014-04-01",pages:320,isbn:"978-1-60125-597-6",url:"https://paizo.com/products/btpy94wj",type:"setting"},{_id:"PZO9268",name:"Inner Sea Combat",abbr:"ISC",date:"2014-05-01",pages:64,isbn:"978-1-60125-598-3",type:"setting"},{_id:"PZO9269",name:"Occult Mysteries",date:"2014-05-01",pages:64,isbn:"978-1-60125-649-2",type:"setting"},{_id:"PZO9270",name:"Numeria, Land of Fallen Stars",abbr:"NLFS",date:"2014-06-01",pages:64,isbn:"978-1-60125-653-9",type:"setting"},{_id:"PZO9272",name:"Technology Guide",abbr:"TG",date:"2014-08-01",pages:64,isbn:"978-1-60125-672-0",type:"setting"},{_id:"PZO9273",name:"Undead Unleashed",date:"2014-09-01",pages:64,isbn:"978-1-60125-677-5",type:"setting"},{_id:"PZO9274",name:"Ships of the Inner Sea",date:"2014-10-01",pages:64,isbn:"978-1-60125-702-4",type:"setting"},{_id:"PZO9275",name:"Lost Treasures",date:"2014-12-01",pages:64,isbn:"978-1-60125-703-1",type:"setting"},{_id:"PZO9276",name:"Belkzen, Hold of the Orc Hordes",date:"2015-02-01",pages:64,isbn:"978-1-60125-710-9",type:"setting"},{_id:"PZO9278",name:"Tombs of Golarion",date:"2015-03-01",pages:64,isbn:"978-1-60125-720-8",type:"setting"},{_id:"PZO9279",name:"Andoran, Birthplace of Freedom",date:"2015-05-01",pages:64,isbn:"978-1-60125-721-5",type:"setting"},{_id:"PZO9283",name:"Inner Sea Monster Codex",date:"2015-06-01",pages:64,isbn:"978-1-60125-752-9",type:"setting"},{_id:"PZO9281",name:"Hell Unleashed",date:"2015-07-01",pages:64,isbn:"978-1-60125-757-4",type:"setting"},{_id:"PZO9284",name:"Occult Bestiary",date:"2015-09-01",pages:64,isbn:"978-1-60125-767-3",type:"setting"},{_id:"PZO9280",name:"Inner Sea Races",abbr:"ISR",date:"2015-09-01",pages:256,isbn:"978-1-60125-722-2",url:"https://paizo.com/products/btpy9g9v",type:"setting"},{_id:"PZO9285",name:"Distant Shores",date:"2015-10-01",pages:64,isbn:"978-1-60125-787-1",type:"setting"},{_id:"PZO9286",name:"Occult Realms",date:"2015-11-01",pages:64,isbn:"978-1-60125-794-9",type:"setting"},{_id:"PZO9287",name:"Cheliax, The Infernal Empire",date:"2015-12-01",pages:64,isbn:"978-1-60125-799-4",type:"setting"},{_id:"PZO9289",name:"Darklands Revisited",date:"2016-02-01",pages:64,isbn:"978-1-60125-819-9",type:"setting"},{_id:"PZO9290",name:"Inner Sea Faiths",date:"2016-03-01",pages:96,isbn:"978-1-60125-825-0",type:"setting"},{_id:"PZO9291",name:"Heaven Unleashed",date:"2016-04-01",pages:64,isbn:"978-1-60125-828-1",type:"setting"},{_id:"PZO9292",name:"Inner Sea Intrigue",date:"2016-05-01",pages:64,isbn:"978-1-60125-837-3",type:"setting"},{_id:"PZO9293",name:"Path of the Hellknight",date:"2016-06-01",pages:64,isbn:"978-1-60125-843-4",type:"setting"},{_id:"PZO9295",name:"Planes of Power",date:"2016-09-01",pages:64,isbn:"978-1-60125-883-0",type:"setting"},{_id:"PZO9296",name:"Inner Sea Temples",date:"2016-10-01",pages:64,isbn:"978-1-60125-893-9",type:"setting"},{_id:"PZO9297",name:"Horror Realms",date:"2016-11-01",pages:64,isbn:"978-1-60125-900-4",type:"setting"},{_id:"PZO9298",name:"The First World, Realm of the Fey",date:"2016-12-01",pages:64,isbn:"978-1-60125-909-7",type:"setting"},{_id:"PZO9299",name:"Qadira, Jewel of the East",date:"2017-01-01",pages:64,isbn:"978-1-60125-912-7",type:"setting"},{_id:"PZO92101",name:"Lands of Conflict",date:"2017-02-01",pages:64,isbn:"978-1-60125-927-1",type:"setting"},{_id:"PZO92102",name:"Aquatic Adventures",date:"2017-06-01",pages:64,isbn:"978-1-60125-944-8",type:"setting"},{_id:"PZO92105",name:"Taldor, the First Empire",date:"2017-12-01",pages:64,isbn:"978-1-60125-999-8",type:"setting"},{_id:"PZO92107",name:"Inner Sea Taverns",date:"2018-02-01",pages:64,isbn:"978-1-64078-016-3",type:"setting"},{_id:"PZO92108",name:"Nidal, Land of Shadows",date:"2018-04-01",pages:64,isbn:"978-1-64078-033-0",type:"setting"},{_id:"PZO92109",name:"Distant Realms",date:"2018-06-01",pages:64,isbn:"978-1-64078-046-0",type:"setting"},{_id:"PZO92111",name:"Sandpoint, Light of the Lost Coast",date:"2018-10-01",pages:64,isbn:"978-1-64078-080-4",type:"setting"},{_id:"PZO92104",name:"Construct Handbook",date:"2018-11-01",pages:64,isbn:"978-1-60125-989-9",type:"setting"},{_id:"PZO92112",name:"Faiths of Golarion",date:"2018-12-01",pages:64,isbn:"978-1-64078-099-6",type:"setting"},{_id:"PZO92114",name:"Concordance of Rivals",date:"2019-04-01",pages:64,isbn:"978-1-64078-127-6",type:"setting"},{_id:"PZO92116",name:"Druma, Profit and Prophecy",date:"2019-08-01",pages:64,isbn:"978-1-64078-141-2",type:"setting"},{_id:"DYN0031-E",name:"Worldscape #1",date:"2016-10-16",pages:32,type:"comic",url:"https://paizo.com/products/btpy9oco",publisher:"Dynamite Entertainment"},{_id:"DYN0032-E",name:"Worldscape #2",date:"2016-11-16",pages:32,type:"comic",url:"https://paizo.com/products/btpy9oza",publisher:"Dynamite Entertainment"},{_id:"DYN0033-E",name:"Worldscape #3",date:"2016-12-21",pages:32,type:"comic",url:"https://paizo.com/products/btpy9qcq",publisher:"Dynamite Entertainment"},{_id:"DYN0034-E",name:"Worldscape #4",date:"2017-01-25",pages:32,type:"comic",url:"https://paizo.com/products/btpy9qcu",publisher:"Dynamite Entertainment"},{_id:"DYN0035-E",name:"Worldscape #5",date:"2017-02-22",pages:32,type:"comic",url:"https://paizo.com/products/btpy9qcy",publisher:"Dynamite Entertainment"},{_id:"DYN0036-E",name:"Worldscape #6",date:"2017-04-05",pages:32,type:"comic",url:"https://paizo.com/products/btpy9sgk",publisher:"Dynamite Entertainment"},{_id:"DYN0046-HC",name:"Spiral of Bones",date:"2019-02-09",pages:136,type:"comic",isbn:"978-1-5241-0738-3",url:"https://paizo.com/products/btq01x8j",publisher:"Dynamite Entertainment"},{_id:"DYN0010-A",name:"Pathfinder Comics #10",date:"2013-10-23",pages:32,type:"comic",publisher:"Dynamite Entertainment"},{_id:"PZOPSS0310E",name:"Pathfinder Society Scenario #3–10: The Immortal Conundrum",date:"2011-11-01",pages:24,type:"pfs"},{_id:"PZOPSS0000E",name:"Pathfinder Society Roleplaying Guild Guide",date:"2019-08-09",pages:44,type:"pfs"}]}const zt=Object.freeze(Object.defineProperty({__proto__:null,Condition,Conditions,DamageType,DamageTypes,Material,Materials,Registry,RegistryEntry,ScriptCallCategory,ScriptCalls,Source,Sources,StatusHudModel,conditions:undefined,damageTypes:undefined,materials:undefined,scriptCalls:undefined,sources:undefined},Symbol.toStringTag,{value:"Module"}));class MigrationCategory{state;id;label;isNumber=!1;processed=0;invalid=0;errors=[];current=null;total=null;ignored=0;completed=!1;constructor(e,t,s,a){this.state=a,this.id=e,this.label=game.i18n.localize(t),this.isNumber=s,s&&(this.processed=0)}get progress(){return this.ignored+this.invalid+this.processed}get percentage(){return 0===this.total?1:this.progress/this.total}get hasTotal(){return null!==this.total}get progressLabel(){return ffd20.utils.limitPrecision(100*this.percentage,1)+" %"}startEntry(e){this.current=e,this.state.emit(this,{entry:e,action:"process",actionState:"start",processing:this.processed+1})}finishEntry(e){this.current=null,this.processed+=1,this.state.emit(this,{entry:e,action:"process",actionState:"finish",processed:this.processed})}recordError(e,t){this.errors.push({entry:e,error:t})}ignoreEntry(e){this.ignored+=1,this.state.emit(this,{entry:e,action:"ignore"})}addIgnored(e){this.ignored+=e,this.state.emit(this,{action:"info",ignored:e,total:this.total,invalid:this.invalid})}setTotal(e){this.total=e,this.state.emit(this,{action:"info",total:e,ignored:this.ignored,invalid:this.invalid})}setInvalid(e){this.invalid=e,this.state.emit(this,{action:"info",total:this.total,ignored:this.ignored,invalid:this.invalid})}setProgress(e){this.current=null,this.processed=e}start(){this.completed=!1,this.state.emit(this,{action:"start"})}finish(){this.completed=!0,this.state.emit(this,{action:"finish"})}get currentName(){const e=this.current;return e?e instanceof ChatMessage?`${e.timestamp} [${e.id}]`:e instanceof foundry.abstract.Document?e.name:e instanceof CompendiumCollection?game.i18n.has(e.metadata.label)?game.i18n.localize(e.metadata.label):e.metadata.label:null:null}getInvalidEntries(){let e;switch(this.id){case"actors":case"items":case"scenes":e=game[this.id];break;default:return[]}const t=[];for(const s of e.invalidDocumentIds)t.push({id:s,entry:e.getInvalid(s)});return t}getErrorEntries(){return this.errors}}class MigrationState{label;callbacks={};categories={};completed=!1;unlock=!1;constructor(e){e&&(e=game.i18n.localize(e)),this.label=e}createCategory(e,t,s){return this.categories[e]||(this.categories[e]=new MigrationCategory(e,t,s,this),this.emit(this.categories[e],{action:"new"})),this.categories[e]}emit(e,t){for(const s of Object.values(this.callbacks))try{s(this,e,t)}catch(e){console.error(e,s)}}start(){this.completed=!1,this.emit(this,{action:"start"})}finish(){this.completed=!0,this.emit(this,{action:"finish"})}get errors(){return Object.values(this.categories).reduce(((e,t)=>e+t.errors.length),0)}get invalid(){return Object.values(this.categories).reduce(((e,t)=>e+t.invalid),0)}get ignored(){return Object.values(this.categories).reduce(((e,t)=>e+t.ignored),0)}}class MigrationIssuesDialog extends Dialog{static async open(e){const t={errors:e.getErrorEntries(),invalid:e.getInvalidEntries()};return this.prompt({title:game.i18n.localize("FFD20.Migration.Dialog.Issues")+" – "+e.label,content:await renderTemplate("systems/ffd20/templates/apps/migration-issues.hbs",t),rejectClose:!1,options:{classes:[...Dialog.defaultOptions.classes,"ffd20","migration-issues"],jQuery:!1,width:620,height:"auto",resizable:!0}})}activateListeners(e){super.activateListeners(e),e.on("click",".issue .id a",(e=>{const t=e.target,{id:s,uuid:a}=t.dataset;game.clipboard.copyPlainText(a||s);const i=a?"UUID":"ID";ui.notifications.info(game.i18n.format("DOCUMENT.IdCopiedClipboard",{label:"",type:i,id:a||s}))}))}}const{ApplicationV2:jt,HandlebarsApplicationMixin:Bt}=foundry.applications.api;class MigrationDialog extends(Bt(jt)){migrationState;autoClose;fastMigration;constructor(e){super(e),this.migrationState=e.stateTracker,this.autoClose=e.autoClose??!1,this.fastMigration=e.fast??!0,this.migrationState.callbacks[this.appId]=this._onMigration.bind(this)}get title(){const e=game.i18n.localize("FFD20.Migration.Dialog.Title");return this.migrationState.label?`${e}: ${this.migrationState.label}`:e}static DEFAULT_OPTIONS={tag:"form",classes:["pf1-v2","migration"],window:{resizable:!0},position:{top:200,width:"auto",height:"auto"},actions:{"show-details":this._showDetails,"reload-all":this._reloadClients}};static PARTS={form:{template:"systems/ffd20/templates/apps/migration-progress.hbs"},status:{template:"systems/ffd20/templates/apps/migration-status.hbs"}};async _prepareContext(e){return await super._prepareContext(e),this.migrationState}_onRender(e,t){super._onRender(e,t),this.migrationState.completed&&!0!==this.migrationState.typeChanges&&this.autoClose&&setTimeout((()=>this.close()),5e3)}static _reloadClients(e){e.preventDefault(),game.socket.emit("reload"),foundry.utils.debouncedReload()}static _showDetails(e){e.preventDefault();const t=e.target.closest(".category").dataset.category,s=this.migrationState.categories[t];MigrationIssuesDialog.open(s)}_lastProcessUpdate=0;_onMigration(e,t,s){const a=["form"];switch(s.action){case"finish":e.completed&&a.push("status");break;case"process":{const e=performance.now();if(e-this._lastProcessUpdate<200&&this.state!==this.constructor.RENDER_STATES.RENDERED)return;this._lastProcessUpdate=e;break}}this.render({parts:a})}async _preClose(e){await super._preClose(e),delete this.migrationState.callbacks[this.appId]}static async initialize(e,t,s={}){e??=new MigrationState(t),e.label||=t;const a=new this({stateTracker:e,autoClose:s.autoClose??!1});return await a.render({dialogOptions:s,force:!0}),a}}const Ht={"Compendium.ffd20.class-abilities.Item.OhHKCLQXoMlYNodk":"Compendium.ffd20.class-abilities.Item.pEODJDoTk7uhCZY7","Compendium.ffd20.class-abilities.Item.fb00TzBa32sSisGb":"Compendium.ffd20.class-abilities.Item.BoEkMviJrW0PKmhj","Compendium.ffd20.class-abilities.Item.4bcGnKYf9beV0nfa":"Compendium.ffd20.class-abilities.Item.sTlu3zgAEDdJnER5","Compendium.ffd20.class-abilities.Item.dvQdP8QfrDA9Lxzk":"Compendium.ffd20.class-abilities.Item.9EX00obqhGHcrOdp","Compendium.ffd20.class-abilities.Item.cBwQdqQ4KmVBck3t":"Compendium.ffd20.class-abilities.Item.MXj2WoyW7vLxiVYw","Compendium.ffd20.class-abilities.Item.kKaz5A6XbuxgVvhO":"Compendium.ffd20.class-abilities.Item.A54sLfcyoR5HGNbP","Compendium.ffd20.class-abilities.Item.AmsnoKelAxLttUbj":"Compendium.ffd20.class-abilities.Item.A54sLfcyoR5HGNbP","Compendium.ffd20.class-abilities.Item.KbhRBQE5ZyYedJo6":"Compendium.ffd20.class-abilities.Item.BoEkMviJrW0PKmhj"},Ut={racialhd:"racial-hd",commonbuffs:"buffs",mythicpaths:"mythic-paths","pf1e-rules":"rules","sample-macros":"macros"};function registerRedirects(){for(const[e,t]of Object.entries(Ht))CONFIG.compendium.uuidRedirects[e]=t;const e="Compendium."+game.system.id;for(const[t,s]of Object.entries(Ut))CONFIG.compendium.uuidRedirects[`${e}.${t}`]=`${e}.${s}`}const qt={nexavarianSteel:"nexavaranSteel",alchemicalsilver:"alchemicalSilver",angelskin:"angelSkin",bloodcrystal:"bloodCrystal",coldiron:"coldIron",darkleafcloth:"darkleafCloth",eelhide:"eelHide",elysianbronze:"elysianBronze",fireforgedsteel:"fireForgedSteel",frostforgedsteel:"frostForgedSteel",griffonmane:"griffonMane",liquidglass:"liquidGlass",livingsteel:"livingSteel",singingsteel:"singingSteel",spiresteel:"spireSteel"};function isMigrated(e){const t=e.flags?.ffd20?.migration;if(t){return!ffd20.utils.SemanticVersion.fromString(t).isLowerThan(ffd20.utils.SemanticVersion.fromString(game.system.version))}return!1}async function initializeStateAndDialog(e,t,s=null){return e??=new MigrationState(t),s&&await MigrationDialog.initialize(e,t,s),e}function conformTypeUpdate(e,t){game.release.generation<13||e.type&&e.type!==(t.type||"base")&&(e["==system"]=foundry.utils.mergeObject(t.system,e.system,{performDeletions:!0,inplace:!1}),delete e.system)}async function migrateActors({fast:e,state:t,dialog:s=null,noHooks:a=!1}={}){a||Hooks.callAll("pf1MigrationStarted",{scope:"actors"});const i=!t;t=await initializeStateAndDialog(t,"FFD20.Migration.Category.Actors",s),i&&t.start();const n=t.createCategory("actors","FFD20.Migration.Category.Actors",!0);console.log("FFD20 | Migration | Actors directory starting..."),n.start(),n.setTotal(game.actors.size),n.setInvalid(game.actors.invalidDocumentIds.size),s&&await new Promise((e=>setTimeout(e,100)));for(const t of game.actors)if(!t.isOwner||e&&isMigrated(t))n.ignoreEntry(t);else{n.startEntry(t);try{const e=await migrateActorData(t.toObject(),void 0,{actor:t});foundry.utils.isEmpty(e)||(console.log(`FFD20 | Migration | Actor: ${t.name} | Applying updates`),await t.update(e,{ffd20:{action:"migration"}}))}catch(e){n.recordError(t,e),console.error(`FFD20 | Migration | Actor: ${t.name} | Error`,e)}n.finishEntry(t)}console.log("FFD20 | Migration | Actors directory complete!"),n.finish(),i&&t.finish(),a||Hooks.callAll("pf1MigrationFinished",{scope:"actors"})}async function migrateItems({fast:e=!0,state:t,dialog:s=null,noHooks:a=!1}={}){a||Hooks.callAll("pf1MigrationStarted",{scope:"items"});const i=!t;t=await initializeStateAndDialog(t,"FFD20.Migration.Category.Items",s),i&&t.start();const n=t.createCategory("items","FFD20.Migration.Category.Items",!0);console.log("FFD20 | Migration | Items directory starting..."),n.start(),n.setTotal(game.items.size),n.setInvalid(game.items.invalidDocumentIds.size),s&&await new Promise((e=>setTimeout(e,100)));for(const t of game.items)if(!t.isOwner||e&&isMigrated(t))n.ignoreEntry(t);else{n.startEntry(t);try{const e=await migrateItemData(t.toObject());foundry.utils.isEmpty(e)||(console.log(`FFD20 | Migration | Item: ${t.name} | Applying updates`),await t.update(e,{ffd20:{action:"migration"}}))}catch(e){n.recordError(t,e),console.error(`FFD20 | Migration | Item: ${t.name} | Error`,e)}n.finishEntry(t)}n.finish(),i&&t.finish(),console.log("FFD20 | Migration | Items directory complete!"),a||Hooks.callAll("pf1MigrationFinished",{scope:"items"})}async function migrateScenes({fast:e,state:t,noHooks:s=!1,dialog:a=null}={}){s||Hooks.callAll("pf1MigrationStarted",{scope:"scenes"});const i=!t;t=await initializeStateAndDialog(t,"FFD20.Migration.Category.Scenes",a),i&&t.start();const n=t.createCategory("scenes","FFD20.Migration.Category.Scenes",!0);console.log("FFD20 | Migration | Scene directory starting..."),n.start(),n.setTotal(game.scenes.size),n.setInvalid(game.scenes.invalidDocumentIds.size),a&&await new Promise((e=>setTimeout(e,100)));for(const s of game.scenes)n.startEntry(s),await migrateScene(s,{fast:e,state:t,tracker:n}),n.finishEntry(s);n.finish(),i&&t.finish(),console.log("FFD20 | Migration | Scene directory complete!"),s||Hooks.callAll("pf1MigrationFinished",{scope:"scenes"})}async function migrateCompendiums(e=null,{unlock:t=!1,fast:s=!0,state:a,noHooks:i=!1,dialog:n=null}={}){i||Hooks.callAll("pf1MigrationStarted",{scope:"packs",packs:foundry.utils.deepClone(e)}),null===e&&(e=[...game.packs]);const o=!a;(a=await initializeStateAndDialog(a,"FFD20.Migration.Category.Packs",n))&&(a.unlock=t,a.fast=s),o&&a?.start();const r=a?.createCategory("packs","FFD20.Migration.Category.Packs",!0);r?.start(),r?.setTotal(e.length),n&&await new Promise((e=>setTimeout(e,100)));for(const a of e)if(t||!a.locked){r?.startEntry(a);try{await migrateCompendium(a,{unlock:t,fast:s,noHooks:!0,tracker:r})}catch(e){console.error(`FFD20 | Migration | Pack: ${a.collection} | Error\n`,e),r?.recordError({name:game.i18n.localize(a.metadata.label),uuid:a.metadata.id},e)}r?.finishEntry(a)}else r?.ignoreEntry(a);r?.finish(),o&&a?.finish(),i||Hooks.callAll("pf1MigrationFinished",{scope:"packs",packs:foundry.utils.deepClone(e)})}async function migrateCompendium(e,{unlock:t=!1,fast:s=!0,server:a=!1,marker:i=!0,noHooks:n=!1,tracker:o}={}){if("string"==typeof e&&!(e=game.packs.get(e)))throw Error(`Compendium "${e}" not found.`);if(e.locked&&!t)return;const r=e.metadata.type;if(!["Actor","Item","Scene","RollTable","Macro"].includes(r))return;n||Hooks.callAll("pf1MigrationStarted",{scope:"pack",collection:e}),console.log(`FFD20 | Migration | Pack: ${e.collection} | Starting...`);const l=e.locked;a&&(l&&await e.configure({locked:!1}),console.debug(`FFD20 | Migration | Pack: ${e.collection} | Server-side migration starting...`),await e.migrate(),console.debug(`FFD20 | Migration | Pack: ${e.collection} | Server-side migration done!`),ui.notifications.clear()),console.debug(`FFD20 | Migration | Pack: ${e.collection} | Fetching ${e.index.size} document(s)`);const c=await e.getDocuments();console.debug(`FFD20 | Migration | Pack: ${e.collection} | Building update data...`);const d=[];async function applyUpdates(){console.debug(`FFD20 | Migration | Pack: ${e.collection} | Applying update(s) to ${d.length} document(s)`),e.locked&&await e.configure({locked:!1});try{await getDocumentClass(r).updateDocuments(d,{pack:e.collection,ffd20:{action:"migration"}})}catch(t){console.error(`FFD20 | Migration | Pack: ${e.collection} | Error:`,t),o?.recordError({name:game.i18n.localize(e.metadata.label),uuid:e.metadata.id},t)}}for(;c.length;){const t=c.shift();if(!s||!isMigrated(t)){try{let e;switch(r){case"Item":e=await migrateItemData(t.toObject(),void 0,{item:t});break;case"Actor":e=await migrateActorData(t.toObject(),void 0,{actor:t});break;case"Scene":await migrateScene(t)}e&&!foundry.utils.isEmpty(e)&&(e._id=t.id,d.push(e))}catch(s){o?.recordError(t,s),console.error(`FFD20 | Migration | Pack: ${e.collection} | Error!`,s)}d.length>=ffd20.migrations.UPDATE_CHUNK_SIZE&&(await applyUpdates(),d.length=0)}}d.length?await applyUpdates():console.debug(`FFD20 | Migration | Pack: ${e.collection} | No updates needed`),l&&await e.configure({locked:!0}),n||Hooks.callAll("pf1MigrationFinished",{scope:"pack",collection:e}),console.log(`FFD20 | Migration | Pack: ${e.collection} | Complete!`)}async function migrateTokenData(e,{token:t,marker:s=!0}){const a=e.flags?.ffd20??{},i={};if(void 0!==a.lowLightVision&&(i["flags.ffd20.-=lowLightVision"]=null),void 0!==a.lowLightVisionMultiplier&&(i["flags.ffd20.-=lowLightVisionMultiplier"]=null),void 0!==a.lowLightVisionMultiplierBright&&(i["flags.ffd20.-=lowLightVisionMultiplierBright"]=null),!1===a.disableLowLight&&(i["flags.ffd20.-=disableLowLight"]=null),!1===a.staticSize&&(i["flags.ffd20.-=staticSize"]=null),!1===a.customVisionRules&&(i["flags.ffd20.-=customVisionRules"]=null),!a.customVisionRules){let t,s;"basic"!==e.sight.visionMode&&(0!==e.sight.range&&(s=0),t="basic");const{saturation:a,brightness:n,attenuation:o,contrast:r}=(new TokenDocument).toObject().sight;i.sight={saturation:a,brightness:n,attenuation:o,contrast:r,range:s,visionMode:t},e.detectionModes?.length&&(i.detectionModes=[])}return s&&!foundry.utils.isEmpty(i)&&(i["flags.ffd20.migration"]=game.system.version),i}async function migrateToken(e){const t=e.toObject(),s=await migrateTokenData(t,{token:e});if(!foundry.utils.isEmpty(s))return e.update(foundry.utils.expandObject(s),{ffd20:{action:"migration"}})}async function migrateActiveEffectsToItems(e){const t=[];for(const s of e.effects){if(s.statuses.size>0)continue;if(s.transfer)continue;if(s.disabled)continue;if("base"!==s.type)continue;if(!s.origin)continue;if(0!==s.changes.length)continue;if(s.description.length>0)continue;if(Object.keys(s.flags).some((e=>!["ffd20"].includes(e))))continue;const a=await fromUuid(s.origin,{relative:e});if(a&&a.name===s.name){if("buff"!==a.effect?.type){const e=s.toObject();e.transfer=!0,e.type="buff";const i=ActiveEffect.implementation.create(e,{parent:a});t.push(i)}t.push(s.delete())}}await Promise.all(t)}async function migrateActorData(e,t,{actor:s,marker:a=!0}={}){if(-1!==e.type.indexOf("."))return{};const i={};!function _migrateActorEncumbrance(e,t){const s={"system.attributes.encumbrance.level":"attributes.encumbrance.-=level","system.attributes.encumbrance.levels.light":"attributes.encumbrance.levels.-=light","system.attributes.encumbrance.levels.medium":"attributes.encumbrance.levels.-=medium","system.attributes.encumbrance.levels.heavy":"attributes.encumbrance.levels.-=heavy","system.attributes.encumbrance.levels.carry":"attributes.encumbrance.levels.-=carry","system.attributes.encumbrance.levels.drag":"attributes.encumbrance.levels.-=drag","system.attributes.encumbrance.carriedWeight":"attributes.encumbrance.-=carriedWeight"};for(const[a,i]of Object.entries(s)){void 0!==foundry.utils.getProperty(e,a)&&(t["system."+i]=null)}}(e,i),function _migrateActorNoteArrays(e,t){const s=["system.attributes.acNotes","system.attributes.cmdNotes","system.attributes.srNotes"];for(const a of s){const s=foundry.utils.getProperty(e,a);foundry.utils.hasProperty(e,a)&&s instanceof Array&&(t[a]=s.join("\n"))}}(e,i),function _migrateActorSpeed(e,t){const s=["attributes.speed.land","attributes.speed.climb","attributes.speed.swim","attributes.speed.fly","attributes.speed.burrow"];for(const a of s){let s=foundry.utils.getProperty(e.system,a);"string"==typeof s&&(s=parseInt(s)),"number"==typeof s?t[`system.${a}.base`]=s:null===s?t[`system.${a}.base`]=0:void 0!==s?.total&&(t[`system.${a}.-=total`]=null),"attributes.speed.fly"===a&&void 0===foundry.utils.getProperty(e.system,a+".maneuverability")&&(t[`system.${a}.maneuverability`]="average")}void 0!==e.system.attributes?.speed?.flyManeuverability&&(t["system.attributes.speed.-=flyManeuverability"]=null)}(e,i),function _migrateActorSpellbookCL(e,t){const s=Object.keys(foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{});for(const a of s){const s=`system.attributes.spells.spellbooks.${a}.cl`,i=parseInt(foundry.utils.getProperty(e,s+".base")),n=foundry.utils.getProperty(e,s+".formula");i>0&&(n.length>0?t[s+".formula"]=n+" + "+i:t[s+".formula"]=n+i,t[s+".base"]=0)}}(e,i),function _migrateActorSpellbookSlots(e,t){for(const s of Object.keys(foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{})){null==foundry.utils.getProperty(e.system,`attributes.spells.spellbooks.${s}.autoSpellLevels`)&&(t[`system.attributes.spells.spellbooks.${s}.autoSpellLevels`]=!0);for(let a=0;a<10;a++){const i=`system.attributes.spells.spellbooks.${s}.spells.spell${a}.base`,n=foundry.utils.getProperty(e,i);if(void 0===n){const n=`system.attributes.spells.spellbooks.${s}.spells.spell${a}.max`,o=foundry.utils.getProperty(e,n);"number"==typeof o&&o>0&&(t[i]=o.toString())}else{const e=parseInt(n);e>0?e!==n&&(t[i]=e):t[`system.attributes.spells.spellbooks.${s}.spells.spell${a}.-=base`]=null}}}}(e,i),function _migrateActorSpellbookPrep(e,t){for(const[s,a]of Object.entries(foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{})){const e=a.spontaneous;if(void 0===e)continue;const i=a.autoSpellLevelCalculation??!1,n=!0===a.spellPoints.useSystem;i||n||(t[`system.attributes.spells.spellbooks.${s}.spellPreparationMode`]=e?"spontaneous":"prepared",t[`system.attributes.spells.spellbooks.${s}.casterType`]="high"),t[`system.attributes.spells.spellbooks.${s}.-=spontaneous`]=null}}(e,i),function _migrateActorSpellbookKind(e,t,s){for(const[a,i]of Object.entries(foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{}))if(void 0===i.kind&&i.inUse){const e=i.class&&"_hd"!==i.class?s.itemTypes.class.find((e=>e.system.tag===i.class)):null;let n=e?.system.casting?.spells;n||(n="arcane",i.arcaneSpellFailure?n="arcane":i.psychic?n="psychic":"prepared"===i.spellPreparationMode&&"int"===i.ability?n="alchemy":"_hd"!==i.class&&(n="divine")),t[`system.attributes.spells.spellbooks.${a}.kind`]=n}}(e,i,s),function _migrateActorConcentration(e,t){const s=Object.keys(foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{});for(const a of s){const s="system.attributes.spells.spellbooks."+a,i=foundry.utils.getProperty(e,s+".concentration"),n="string"==typeof i;if((Number.isFinite(i)||n)&&(t[s+".-=concentration"]=null),n){const a=s+".concentrationFormula",n=[i];n.push(foundry.utils.getProperty(e,a)||""),t[a]=n.filter((e=>0!==e&&e?.toString().trim().length)).join(" + ")}}}(e,i),function _migrateActorBaseStats(e,t){const s={"system.attributes.hd.base":"system.attributes.hd.-=base","system.attributes.savingThrows.fort.value":"system.attributes.savingThrows.fort.-=value","system.attributes.savingThrows.ref.value":"system.attributes.savingThrows.ref.-=value","system.attributes.savingThrows.will.value":"system.attributes.savingThrows.will.-=value"};for(const[a,i]of Object.entries(s))void 0!==foundry.utils.getProperty(e,a)&&(t[i]=null);void 0!==e.system.attributes?.hp?.base&&(e.system.attributes?.hp?.base>0&&!e.items.some((e=>"class"===e.type))||(t["system.attributes.hp.-=base"]=null));void 0!==e.system.attributes?.mp?.base&&(e.system.attributes?.mp?.base>0&&!e.items.some((e=>"class"===e.type))||(t["system.attributes.mp.-=base"]=null))}(e,i),function _migrateUnusedActorCreatureType(e,t){null!=foundry.utils.getProperty(e.system,"attributes.creatureType")&&(t["system.attributes.-=creatureType"]=null)}(e,i),function _migrateActorSpellbookDCFormula(e,t){const s=Object.keys(foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{});for(const a of s){const s=`system.attributes.spells.spellbooks.${a}.baseDCFormula`;foundry.utils.getProperty(e,s)||(t[s]="10 + @sl + @ablMod")}}(e,i),function _migrateActorHPAbility(e,t){void 0===foundry.utils.getProperty(e.system,"attributes.hpAbility")&&(t["system.attributes.hpAbility"]="con");void 0===foundry.utils.getProperty(e.system,"attributes.savingThrows.fort.ability")&&(t["system.attributes.savingThrows.fort.ability"]="con");void 0===foundry.utils.getProperty(e.system,"attributes.savingThrows.ref.ability")&&(t["system.attributes.savingThrows.ref.ability"]="dex");void 0===foundry.utils.getProperty(e.system,"attributes.savingThrows.will.ability")&&(t["system.attributes.savingThrows.will.ability"]="wis")}(e,i),function _migrateActorCR(e,t){const s=foundry.utils.getProperty(e.system,"details.cr");"number"==typeof s?t["system.details.cr.base"]=s:null==s&&(t["system.details.cr.base"]=1);void 0!==foundry.utils.getProperty(e.system,"details.cr.total")&&(t["system.details.cr.-=total"]=null)}(e,i),function _migrateAttackAbility(e,t){void 0===foundry.utils.getProperty(e.system,"attributes.cmbAbility")&&(t["system.attributes.cmbAbility"]="str");void 0===foundry.utils.getProperty(e.system,"attributes.attack.meleeAbility")&&(t["system.attributes.attack.meleeAbility"]="str");void 0===foundry.utils.getProperty(e.system,"attributes.attack.rangedAbility")&&(t["system.attributes.attack.rangedAbility"]="dex")}(e,i),function _migrateActorDefenseAbility(e,t){void 0===foundry.utils.getProperty(e.system,"attributes.ac.normal.ability")&&(t["system.attributes.ac.normal.ability"]="dex");void 0===foundry.utils.getProperty(e.system,"attributes.ac.touch.ability")&&(t["system.attributes.ac.touch.ability"]="dex");void 0===foundry.utils.getProperty(e.system,"attributes.cmd.dexAbility")&&(t["system.attributes.cmd.dexAbility"]="dex");void 0===foundry.utils.getProperty(e.system,"attributes.cmd.strAbility")&&(t["system.attributes.cmd.strAbility"]="str")}(e,i),function _migrateActorSpellbookUsage(e,t){void 0!==foundry.utils.getProperty(e.system,"attributes.spells.usedSpellbooks")&&(t["system.attributes.spells.-=usedSpellbooks"]=null)}(e,i),function _migrateActorNullValues(e,t){const s={"system.attributes.energyDrain":foundry.utils.getProperty(e.system,"attributes.energyDrain")};for(const[t,a]of Object.entries(e.system.abilities||{}))s[`system.abilities.${t}.damage`]=a.damage,s[`system.abilities.${t}.drain`]=a.drain,s[`system.abilities.${t}.penalty`]=a.penalty;for(const[e,a]of Object.entries(s))null===a&&(t[e]=0)}(e,i),function _migrateActorSpellbookDomainSlots(e,t){const s=foundry.utils.getProperty(e.system,"attributes.spells.spellbooks")||{};for(const[e,a]of Object.entries(s)){if(void 0!==a.domainSlotValue)continue;t[`system.attributes.spells.spellbooks.${e}.domainSlotValue`]=1}}(e,i),function _migrateActorStatures(e,t){void 0===foundry.utils.getProperty(e.system,"traits.stature")&&(t["system.traits.stature"]="tall")}(e,i),function _migrateActorInitAbility(e,t){void 0===foundry.utils.getProperty(e.system,"attributes.init.ability")&&(t["system.attributes.init.ability"]="dex")}(e,i),function _migrateActorChangeRevamp(e,t){Object.keys(e.system.skills??{}).forEach((s=>{const a=`system.skills.${s}.`;void 0!==foundry.utils.getProperty(e,a+"changeBonus")&&(t[a+"-=changeBonus"]=null),Object.keys(foundry.utils.getProperty(e,`system.skills.${s}.subSkills`)??{}).forEach((a=>{const i=`system.skills.${s}.subSkills.${a}.`;void 0!==foundry.utils.getProperty(e,i+"changeBonus")&&(t[i+"-=changeBonus"]=null)}))}));Object.entries({"system.attributes.hp.max":"attributes.hp.-=max","system.attributes.mp.max":"attributes.mp.-=max","system.attributes.ac.normal.total":"attributes.ac.normal.-=total","system.attributes.ac.touch.total":"attributes.ac.touch.-=total","system.attributes.ac.flatFooted.total":"attributes.ac.flatFooted.-=total","system.attributes.cmd.total":"attributes.cmd.-=total","system.attributes.cmd.flatFootedTotal":"attributes.cmd.-=flatFootedTotal","system.attributes.sr.total":"attributes.sr.-=total","system.attributes.init.total":"attributes.init.-=total"}).forEach((([s,a])=>{void 0!==foundry.utils.getProperty(e,s)&&(t["system."+a]=null)}))}(e,i),function _migrateActorCMBRevamp(e,t){void 0!==foundry.utils.getProperty(e.system,"attributes.cmb.total")&&(t["system.attributes.cmb.-=total"]=null)}(e,i),function _migrateCarryBonus(e,t){if(void 0===foundry.utils.getProperty(e.system,"details.carryCapacity.bonus.user")){let s=foundry.utils.getProperty(e.system,"abilities.str.carryBonus");void 0!==s&&(s=s||0,t["system.details.carryCapacity.bonus.user"]=s),t["system.abilities.str.-=carryBonus"]=null}if(void 0===foundry.utils.getProperty(e.system,"details.carryCapacity.multiplier.user")){let s=foundry.utils.getProperty(e.system,"abilities.str.carryMultiplier");void 0!==s&&(s=s||1,t["system.details.carryCapacity.multiplier.user"]=s-1),t["system.abilities.str.-=carryMultiplier"]=null}}(e,i),function _migrateBuggedValues(e,t){const s=["system.details.xp.value","system.currency.pp","system.currency.gp","system.currency.sp","system.currency.cp","system.altCurrency.pp","system.altCurrency.gp","system.altCurrency.sp","system.altCurrency.cp"];for(const a of s){const s=foundry.utils.getProperty(e,a),i=parseInt(s??0);s!==i&&(t[a]=i)}}(e,i),function _migrateSpellbookUsage(e,t){const s=e.items.filter((e=>"spell"===e.type)).reduce(((e,t)=>t.system.spellbook?(e.includes(t.system.spellbook)||e.push(t.system.spellbook),e):e),[]);for(const a of s){const s=`system.attributes.spells.spellbooks.${a}.inUse`;!0!==foundry.utils.getProperty(e,s)&&(t[s]=!0)}}(e,i),function _migrateActorHP(e,t){for(const s of["system.attributes.hp","system.attributes.wounds","system.attributes.vigor","system.attributes.mp"]){const a=foundry.utils.getProperty(e,s+".value");if(null==foundry.utils.getProperty(e,s+".offset")){const i=foundry.utils.getProperty(e,s+".max")??0;t[s+".offset"]=(a??0)-i}void 0!==a&&(t[s+".-=value"]=null)}}(e,i),function _migrateActorSenses(e,t,s){const a=e.system.traits?.senses;if(!a)return;if("string"==typeof a){const i=s??e.prototypeToken;t["system.traits.senses"]={dv:{value:i.brightSight},ts:{value:0},bs:{value:0},bse:{value:0},ll:{enabled:i.flags?.ffd20?.lowLightVision,multiplier:{dim:i.flags?.ffd20?.lowLightVisionMultiplier??2,bright:i.flags?.ffd20?.lowLightVisionMultiplierBright??2}},sid:!1,tr:{value:0},si:!1,sc:{value:0},custom:a}}"boolean"==typeof a?.sc&&(t["system.traits.senses.sc"]={value:a.sc?30:0});"boolean"==typeof a?.tr&&(t["system.traits.senses.tr"]={value:a.tr?120:0});for(const e of["dv","ts","ls","bs","bse","sc","tr"]){const s=a?.[e];"Object"!==foundry.utils.getType(s)&&(t["system.traits.senses."+e]={value:s||0})}}(e,i,t),function _migrateActorInvaliddSkills(e,t){const s=e.system.skills;if(!s)return;for(const[e,a]of Object.entries(s))if(a)for(const[s,i]of Object.entries(a.subSkills??{}))i||(t[`system.skills.${e}.subSkills.-=${s}`]=null);else t["system.skills.-="+e]=null}(e,i),function _migrateActorSkillRanks(e,t){const s=e.system.skills;if(!s)return;for(const[e,a]of Object.entries(s))if(a){Number.isFinite(a.rank)||(t[`system.skills.${e}.rank`]=0);for(const[s,i]of Object.entries(a.subSkills??{}))i&&(Number.isFinite(i.rank)||(t[`system.skills.${e}.subSkills.${s}.rank`]=0))}}(e,i),function _migrateActorSkillJournals(e,t){const s=/^[a-zA-Z0-9]+$/;for(const[a,i]of Object.entries(e.system.skills??{}))if(i){for(const[e,n]of Object.entries(i.subSkills??{}))n&&n.journal?.match(s)&&(t[`system.skills.${a}.subSkills.${e}.journal`]="JournalEntry."+n.journal);i.journal?.match(s)&&(t[`system.skills.${a}.journal`]="JournalEntry."+i.journal)}}(e,i),function _migrateActorSubskillData(e,t){for(const[s,a]of Object.entries(e.system.skills??{}))if(a)for(const[e,i]of Object.entries(a.subSkills??{}))i&&void 0!==i.mod&&(t[`system.skills.${s}.subSkills.${e}.-=mod`]=null)}(e,i),function _migrateActorDRandER(e,t){const s=e.system.traits?.dr,a=e.system.traits?.eres;"string"==typeof s&&(t["system.traits.dr"]={value:[],custom:s});"string"==typeof a&&(t["system.traits.eres"]={value:[],custom:a})}(e,i),function _migrateActorTraits(e,t){const s=["di","dv","ci","languages","armorProf","weaponProf"];for(const a of s){const s=e.system.traits?.[a];if(!s)continue;if(Array.isArray(s))continue;const i=_migrateAnyTrait(s);i&&(t["system.traits."+a]=i)}}(e,i),function _migrateActorProficiencies(e,t){const s=t["system.traits.weaponProf"]??e.system.traits?.weaponProf;if(!s?.length)return;const a={sim:"simple",mar:"martial"};if(s.some((e=>!!a[e]))){const e=s.map((e=>a[e]||e));t["system.traits.weaponProf"]=e}}(e,i),function _migrateActorFlags(e,t){const s=e.flags?.ffd20;if(!s)return;const getUniformValue=e=>"true"===e||"yes"===e||!0===e||"false"!==e&&"no"!==e&&!1!==e&&null;if(s.visionPermission){t["flags.ffd20.visionSharing.default"]=getUniformValue(s.visionPermission.default),t["flags.ffd20.visionSharing.users"]=Object.fromEntries(Object.entries(s.visionPermission?.users??{}).map((([e,t])=>[e,getUniformValue(t.level)])));for(const[e,s]of Object.entries(t["flags.ffd20.visionSharing.users"]))null===s&&delete t["flags.ffd20.visionSharing.users"][e];foundry.utils.isEmpty(t["flags.ffd20.visionSharing.users"])&&delete t["flags.ffd20.visionSharing.users"],!0!==t["flags.ffd20.visionSharing.default"]&&delete t["flags.ffd20.visionSharing.default"],t["flags.ffd20.-=visionPermission"]=null}if(s.visionSharing){let e=!1,a=!1;if(t["flags.ffd20.visionSharing"]??={},t["flags.ffd20.visionSharing"].users??={},void 0!==s.visionSharing.default){const a=getUniformValue(s.visionSharing.default);!0!==a?(t["flags.ffd20.visionSharing"]["-=default"]=null,e=!0):a!==s.visionSharing.default&&(t["flags.ffd20.visionSharing"].default=a)}let i=0;for(const[e,a]of Object.entries(s.visionSharing.users??{})){i++;const s=getUniformValue(a);null!==s&&game.users.get(e)?a!==s&&(t["flags.ffd20.visionSharing"].users[e]=s):(t["flags.ffd20.visionSharing"].users["-="+e]=null,i--)}i||(delete t["flags.ffd20.visionSharing"]?.users,t["flags.ffd20.visionSharing"]??={},t["flags.ffd20.visionSharing"]["-=users"]=null,a=!0),e&&a&&(delete t["flags.ffd20.visionSharing"],t["flags.ffd20.-=visionSharing"]=null)}}(e,i),function _migrateActorUnusedData(e,t){void 0!==foundry.utils.getProperty(e.system,"attributes.vision")&&(t["system.attributes.-=vision"]=null);void 0!==foundry.utils.getProperty(e.prototypeToken,"flags.ffd20.lowLightVision")&&(t["prototypeToken.flags.ffd20.-=lowLightVision"]=null);void 0!==e.system.details?.xp?.max&&(t["system.details.xp.-=max"]=null);void 0!==e.system.resources&&(t["system.-=resources"]=null);void 0!==e.system.attributes?.conditions&&(t["system.attributes.-=conditions"]=null);void 0!==e.system.details?.level&&(t["system.details.-=level"]=null);e.system.details?.tooltip&&(t["system.details.-=tooltip"]=null)}(e,i),function _migrateGilToGoldBackend(e,t){const s=foundry.utils.getProperty(e.system,"currency.pgil"),a=foundry.utils.getProperty(e.system,"currency.gil"),i=foundry.utils.getProperty(e.system,"currency.sgil"),n=foundry.utils.getProperty(e.system,"currency.cgil"),o=foundry.utils.getProperty(e.system,"altCurrency.pgil"),r=foundry.utils.getProperty(e.system,"altCurrency.gil"),l=foundry.utils.getProperty(e.system,"altCurrency.sgil"),c=foundry.utils.getProperty(e.system,"altCurrency.cgil");void 0!==s&&(t["system.currency.pp"]=e.system.currency.pgil,t["system.currency.-=pgil"]=null);void 0!==a&&(t["system.currency.gp"]=e.system.currency.gil,t["system.currency.-=gil"]=null);void 0!==i&&(t["system.currency.sp"]=e.system.currency.sgil,t["system.currency.-=sgil"]=null);void 0!==n&&(t["system.currency.cp"]=e.system.currency.cgil,t["system.currency.-=cgil"]=null);void 0!==o&&(t["system.altCurrency.pp"]=e.system.altCurrency.pgil,t["system.altCurrency.-=pgil"]=null);void 0!==r&&(t["system.altCurrency.gp"]=e.system.altCurrency.gil,t["system.altCurrency.-=gil"]=null);void 0!==l&&(t["system.altCurrency.sp"]=e.system.altCurrency.sgil,t["system.altCurrency.-=sgil"]=null);void 0!==c&&(t["system.altCurrency.cp"]=e.system.altCurrency.cgil,t["system.altCurrency.-=cgil"]=null)}(s,i);const n=[];for(const t of e.items??[]){const a=t instanceof Item?t.toObject():t,i=s?.items.get(a._id);try{const e=await migrateItemData(a,s,{item:i});foundry.utils.isEmpty(e)||(e._id=a._id,n.push(foundry.utils.expandObject(e)))}catch(n){throw console.error(`Error migrating Item "${t.name}" [${i?.uuid??a._id}] on actor "${e.name}" [${s?.uuid??e._id}]`),Error(`Item "${t.name}" [${a._id}] failed migration: ${n.message}`,{cause:n})}}return n.length>0&&(i.items=n),await _migrateActorActiveEffects(e,i,s),a&&!foundry.utils.isEmpty(i)&&(i["flags.ffd20.migration"]=game.system.version),foundry.utils.expandObject(i)}async function migrateItemActiveEffects(e){const t=e.toObject(),s={};return await _migrateItemDataActiveEffects(t,s),s.effects?.length?e.updateEmbeddedDocuments("ActiveEffect",s.effects):null}async function _migrateItemDataActiveEffects(e,t){const{effects:s=[]}=e,a=[];for(const t of s){let s={};"buff"===e.type&&t.flags?.ffd20?.tracker&&"base"===t.type&&(s.type="buff",s["flags.ffd20.-=tracker"]=null);const i=t.flags?.ffd20?.duration;if(i){const e=t.flags?.ffd20?.duration?.initiative;void 0!==e&&void 0===t.system?.initiative&&(s["system.initiative"]=e);const a=t.flags?.ffd20?.duration?.end;void 0!==a&&(t.system?.end||(s["system.end"]=a)),s["flags.ffd20.-=duration"]=null}foundry.utils.isEmpty(s)||(s._id=t._id,s=foundry.utils.expandObject(s),conformTypeUpdate(s,t),a.push(s))}a.length&&(t.effects=a)}async function migrateItemData(e,t=null,{item:s,_depth:a=0,marker:i=!0}={}){const n={};if(null==e.system&&null!=e.data&&((e=foundry.utils.deepClone(e)).system=e.data,delete e.data),!Object.keys(game.system.documentTypes.Item).includes(e.type))return{};!function _migrateItemFlags(e,t){if(!e.flags?.ffd20)return;void 0!==e.flags.ffd20.abundant&&(void 0===e.system.abundant&&(t["system.abundant"]=!!e.flags.ffd20.abundant),t["flags.ffd20.-=abundant"]=null)}(e,n),function _migrateItemArrayTypes(e,t){const s=e.system.conditionals;null==s||s instanceof Array||(t["system.conditionals"]=[]);const a=e.system.contextNotes;null==a||a instanceof Array||(t["system.contextNotes"]=a instanceof Object?Object.values(a):[])}(e,n),function _migrateFlagsArrayToObject(e,t){const s=e.system.flags;if(!s)return;const a=s.boolean,i=s.dictionary;Array.isArray(a)&&(t["system.flags.boolean"]=a.reduce(((e,t)=>(e[t]=!0,e)),{}));Array.isArray(i)&&(t["system.flags.dictionary"]=i.reduce(((e,[t,s])=>(e[t]=s,e)),{}))}(e,n),function _migrateWeaponImprovised(e,t){if("weapon"!==e.type)return;"improv"===foundry.utils.getProperty(e.system,"weaponType")&&(t["system.weaponType"]="misc",t["system.properties.imp"]=!0)}(e,n),function _migrateItemSpellDescription(e,t){if("spell"!==e.type)return;e.system.shortDescription&&(t["system.-=shortDescription"]=null,t["system.description.value"]=e.system.shortDescription)}(e,n),function _migrateClassDynamics(e,t){if("class"!==e.type)return;"number"==typeof e.system.bab&&(t["system.bab"]="low");const s=["system.savingThrows.fort.value","system.savingThrows.ref.value","system.savingThrows.will.value"];for(const a of s){"number"==typeof foundry.utils.getProperty(e,a)&&(t[a]="low")}}(e,n),function _migrateClassType(e,t){if("class"!==e.type)return;void 0!==e.system.classType&&void 0===e.system.subType&&(t["system.subType"]="base")}(e,n),function _migrateClassCasting(e,t){const s=e.system?.casting;if(!s)return;if(!s.type)return void(t["system.-=casting"]=null);void 0!==s.domainSlots&&(t["system.casting.domain"]=s.domain??s.domainSlots??1,t["system.casting.-=domainSlots"]=null)}(e,n),function _migrateSpellDivineFocus(e,t){if("spell"!==e.type)return;const s=foundry.utils.getProperty(e.system,"components.divineFocus");"boolean"==typeof s&&(t["system.components.divineFocus"]=Number(s))}(e,n),function _migrateWeaponCategories(e,t){if("weapon"!==e.type)return;const s=e.system.weaponType;"misc"===s?(t["system.weaponType"]="misc",t["system.weaponSubtype"]="other"):"splash"===s&&(t["system.weaponType"]="misc",t["system.weaponSubtype"]="splash");const a=["simple","martial","exotic","chef","power"].includes(s);a&&null==e.system.weaponSubtype&&(t["system.weaponSubtype"]="1h");const i=foundry.utils.getProperty(e.system,"properties.lgt");null!=i&&(t["system.properties.-=lgt"]=null,!0===i&&a&&(t["system.weaponSubtype"]="light"));const n=foundry.utils.getProperty(e.system,"properties.two");null!=n&&(t["system.properties.-=two"]=null,!0===n&&a&&(t["system.weaponSubtype"]="2h"));const o=foundry.utils.getProperty(e.system,"weaponData.isMelee");null!=o&&(t["system.weaponData.-=isMelee"]=null,!1===o&&a&&(t["system.weaponSubtype"]="ranged"))}(e,n),function _migrateArmorCategories(e,t){if("equipment"!==e.type)return;const s=foundry.utils.getProperty(e.system,"armor.type");if(null==s)return;"clothing"===s?(t["system.equipmentType"]="misc",t["system.equipmentSubtype"]="clothing"):"shield"===s?(t["system.equipmentType"]="shield",t["system.equipmentSubtype"]="lightShield"):"misc"===s?(t["system.equipmentType"]="misc",t["system.equipmentSubtype"]="wondrous"):["light","medium","heavy"].includes(s)&&(t["system.equipmentType"]="armor",t["system.equipmentSubtype"]=s+"Armor");t["system.armor.-=type"]=null}(e,n),function _migrateArmorMaxDex(e,t){if("equipment"!==e.type)return;let s=e.system.armor?.dex;if(null==s)return;if("number"==typeof s)return;s=parseInt(s),Number.isInteger(s)?t["system.armor.dex"]=s:t["system.armor.-=dex"]=null}(e,n),function _migrateArmorACP(e,t){const s=parseInt(e.system.armor?.acp??0);s<0&&(t["system.armor.acp"]=Math.floor(Math.abs(s)))}(e,n),function _migrateItemSize(e,t){if("weapon"===e.type){const s=foundry.utils.getProperty(e.system,"weaponData.size");if(s)return t["system.size"]=s,void(t["system.weaponData.-=size"]=null)}const s=e.system.size;["spell","class","buff","feat"].includes(e.type)?void 0!==s&&(t["system.-=size"]=null):void 0===s&&(t["system.size"]="med")}(e,n),function _migrateItemFeatAbilityTypes(e,t){if("feat"!==e.type)return;const s=e.system.abilityType;void 0===ffd20.config.abilityTypes[s]&&(t["system.abilityType"]="na")}(e,n),function _migrateClassLevels(e,t){const s=e.system.levels;"number"==typeof s&&null==e.system.level&&(t["system.level"]=s,t["system.-=levels"]=null)}(e,n),function _migrateSavingThrowTypes(e,t){if(null==foundry.utils.getProperty(e.system,"save.type")&&"string"==typeof foundry.utils.getProperty(e.system,"save.description")){const s=foundry.utils.getProperty(e.system,"save.description");s.match(/REF/i)?t["system.save.type"]="ref":s.match(/FORT/i)?t["system.save.type"]="fort":s.match(/WILL/i)&&(t["system.save.type"]="will")}}(e,n),function _migrateCR(e,t){const s=e.system.crOffset;"number"==typeof s&&(t["system.crOffset"]=s.toString())}(e,n),function _migrateItemChanges(e,t){const s=e.system.changes;if(Array.isArray(s)){const e=[];for(const t of s){let s;s=Array.isArray(t)?{formula:t[0],target:t[1],subTarget:t[2],type:t[3]}:foundry.utils.deepClone(t),delete s.value,e.push(new ffd20.components.ItemChange(s,{strict:!1}).toObject())}foundry.utils.isEmpty(foundry.utils.diffObject(s,e))&&foundry.utils.isEmpty(foundry.utils.diffObject(e,s))||(t["system.changes"]=e)}const a=t["system.changes"]??e.system?.changes??[],i=[];let n=!1;for(const e of a){const t=new ffd20.components.ItemChange(foundry.utils.deepClone(e),{strict:!1}).toObject(!0,!0),s=foundry.utils.diffObject(e,t);foundry.utils.isEmpty(s)||(n=!0),/\.subSkills\./.test(t.target)&&(t.target=t.target.replace(".subSkills.","."),n=!0),"penalty"===t.type&&(["str","dex","con","int","wis","cha"].includes(t.target)&&(t.target=t.target+"Pen"),t.type="untyped",n=!0),i.push(t)}n&&(t["system.changes"]=i)}(e,n),_migrateItemChangeFlags(e,n),function _migrateItemContextNotes(e,t){const s=e.system.contextNotes;if(Array.isArray(s)&&s?.length>0){const e=[];for(const t of s){let s=foundry.utils.deepClone(t);Array.isArray(t)&&(s={text:t[0],target:t[1],subTarget:t[2]}),s=new ffd20.components.ContextNote(s).toObject(),e.push(s)}foundry.utils.isEmpty(foundry.utils.diffObject(s,e))&&foundry.utils.isEmpty(foundry.utils.diffObject(e,s))||(t["system.contextNotes"]=e)}const a=t["system.contextNotes"]??s??[];let i=!1;const n=[];for(const e of a){const t={...e};/^skill\..+\.subSkills\..+$/.test(e.target)&&(t.target=e.target.replace(".subSkills.","."),i=!0),n.push(t)}i&&(t["system.contextNotes"]=n)}(e,n),function _migrateEquipmentSize(e,t){if("equipment"!==e.type)return;e.system.size||(t["system.size"]="med")}(e,n),function _migrateSpellCosts(e,t){if("spell"!==e.type)return;null==foundry.utils.getProperty(e.system,"spellPoints.cost")&&(t["system.spellPoints.cost"]="@sl");null==e.system.slotCost&&(t["system.slotCost"]=1);const s=e.system.preparation?.autoDeductCharges;void 0!==s&&(!1===s&&(t["system.uses.autoDeductChargesCost"]="0"),t["system.preparation.-=autoDeductCharges"]=null)}(e,n),function _migrateSpellPreparation(e,t,{item:s=null}={}){if("spell"!==e.type)return;const a=s?.spellbook,i=a?.spellPreparationMode||"prepared",n=!a?.spellPoints?.useSystem&&"prepared"===i,o=e.system.preparation??{};void 0!==o.maxAmount&&(o.max>0||("number"!=typeof o.maxAmount&&(o.maxAmount=0),t["system.preparation.max"]=o.maxAmount??0),t["system.preparation.-=maxAmount"]=null);void 0!==o.spontaneousPrepared&&(o.value>0||n||(t["system.preparation.value"]=o.spontaneousPrepared?1:0),t["system.preparation.-=spontaneousPrepared"]=null);void 0!==o.preparedAmount&&(o.value>0||!n||(t["system.preparation.value"]=Math.max(o.preparedAmount,t["system.preparation.value"]||0)),t["system.preparation.-=preparedAmount"]=null)}(e,n,{item:s}),function _migrateLootEquip(e,t){"loot"===e.type&&"boolean"!=typeof e.system.equipped&&(t["system.equipped"]=!1)}(e,n),await _migrateItemLinks(e,n,{item:s,actor:t}),function _migrateItemProficiencies(e,t){const s={sim:"simple",mar:"martial"},a=Object.keys(s);if(e.system.weaponProf?.value?.some((e=>a.includes(e)))){const a=e.system.weaponProf.value.map((e=>s[e]||e));t["system.weaponProf.value"]=a}}(e,n),function _migrateItemNotes(e,t){const s=["system.attackNotes","system.effectNotes"];for(const a of s){const s=foundry.utils.getProperty(e,a);!foundry.utils.hasProperty(e,a)||s instanceof Array||(t[a]=[],"string"==typeof s&&s.length>0&&(t[a]=s.trim().split(/[\n\r]/)))}}(e,n),function _migrateScriptCalls(e,t){if(!(e.system.scriptCalls?.length>0))return;let s=!1;const a=foundry.utils.deepClone(e.system.scriptCalls);for(const e of a)"macro"==e.type&&(e.name||e.img)&&(e.name="",e.img="",s=!0);s&&(t["system.scriptCalls"]=a)}(e,n),_migrateItemActionToActions(e,n,{item:s,actor:t}),function _migrateItemChargeCost(e,t){const s=e.system.uses?.autoDeductCharges;if(void 0!==s)!1===s&&(t["system.uses.autoDeductChargesCost"]="0"),t["system.uses.-=autoDeductCharges"]=null;else if(0===e.system.level&&void 0===e.system.uses?.autoDeductChargesCost){const s=e.system.actions?.[0];!0===s?.uses?.autoDeductCharges&&void 0===t["system.uses.autoDeductChargesCost"]&&(t["system.uses.autoDeductChargesCost"]="0")}}(e,n),function _migrateItemLimitedUses(e,t){"unlimited"===e.system.uses?.per&&(t["system.uses.per"]="");const s=CONFIG.Item.documentClasses[e.type]?.isPhysical;s||"single"===e.system.uses?.per&&(t["system.uses.per"]="charges",t["system.uses.maxFormula"]="1")}(e,n),function _migrateItemWeight(e,t){const s=e.system.baseWeight,a=e.system.weight,i=CONFIG.Item.documentClasses[e.type]?.isPhysical;if(!i)return void(void 0!==a&&(t["system.-=weight"]=null));Number.isFinite(a)?t["system.weight.value"]=a:null!=a&&"object"==typeof a||(t["system.weight.value"]=0);void 0!==s&&(Number.isFinite(s)&&s>0&&(t["system.weight.value"]=s),t["system.-=baseWeight"]=null)}(e,n),function _migrateItemHealth(e,t){const s=CONFIG.Item.documentClasses[e.type]?.isPhysical,a=e.system.hp;s?a?("string"==typeof a.max&&(t["system.hp.max"]=parseInt(a.max)),"string"==typeof a.value&&(t["system.hp.value"]=parseInt(a.value))):(t["system.hp.value"]=10,t["system.hp.max"]=10):"class"!==e.type&&void 0!==a&&(t["system.-=hp"]=null)}(e,n),function _migrateContainerReduction(e,t){if("container"!==e.type)return;void 0!==e.system.weightReduction&&(t["system.weight.reduction.percent"]=e.system.weightReduction,t["system.-=weightReduction"]=null)}(e,n),function _migrateContainerPrice(e,t){if("container"!==e.type)return;void 0!==e.system.basePrice&&(t["system.price"]=e.system.basePrice,t["system.-=basePrice"]=null);void 0!==e.system.unidentified?.basePrice&&(t["system.unidentified.price"]=e.system.unidentified.basePrice,t["system.unidentified.-=basePrice"]=null)}(e,n),function _migrateItemType(e,t){const s=e.type,a=e.system[s+"Type"];if(null==a)return;t["system.subType"]=a,t[`system.-=${s}Type`]=null}(e,n),function _migrateItemLearnedAt(e,t){const s=e.system.learnedAt??{};for(const[e,a]of Object.entries(s))Array.isArray(a)&&(t["system.learnedAt."+e]=a.reduce(((e,[t,s])=>{if("string"!=typeof t||0==t.length)return e;for(let a of t.split("/"))a=a.trim().replace(".","-"),a&&(e[a]=s);return e}),{}))}(e,n),function _migrateItemTuples(e,t){"race"===e.type&&e.system.subTypes?.length&&"string"!=typeof e.system.subTypes[0]&&(t["system.subTypes"]=e.system.subTypes.flat());e.system.tags?.length&&"string"!=typeof e.system.tags[0]&&(t["system.tags"]=e.system.tags.flat());const s=e.system.associations?.classes;s?.length&&"string"!=typeof s[0]&&(t["system.associations.classes"]=s.flat())}(e,n),function _migrateEquipmentCategories(e,t){if("equipment"!==e.type)return;const s=t["system.subType"]??e.system.subType;if("misc"!==s)return;switch(e.system.equipmentSubtype){case"wondrous":t["system.subType"]="wondrous",t["system.-=equipmentSubtype"]=null;break;case"clothing":t["system.subType"]="clothing",t["system.-=equipmentSubtype"]=null;break;case"other":t["system.subType"]="other",t["system.-=equipmentSubtype"]=null}}(e,n),function _migrateSpellDescriptors(e,t){if("spell"!==e.type||void 0===e.system.types)return;const s=e.system.types.split(",").flatMap((e=>e.split(";"))).filter((e=>e)).map((e=>e.trim())),a=[],i=[],n=Object.entries(ffd20.config.spellDescriptors);s.forEach((e=>{const t=n.find((([t,s])=>e.toLowerCase()===t.toLowerCase()||e.toLowerCase()===s.toLowerCase()));t?a.push(t[0]):i.push(e)})),t["system.-=types"]=null,t["system.descriptors.value"]=a,t["system.descriptors.custom"]=i.join("; ")}(e,n),function _migrateItemTraits(e,t){const s=["armorProf","descriptors","multischool","subschool","languages","weaponGroups","weaponProf","creatureTypes","creatureSubtypes","conditions"];for(const a of s){const s=e.system?.[a];if(!s)continue;if(Array.isArray(s))continue;const i=_migrateAnyTrait(s);i&&(t["system."+a]=i)}}(e,n),function _migrateRaceItemCreatureType(e,t){if("race"!==e.type)return;e.system.creatureType&&(e.system.creatureTypes?.length||(t["system.creatureTypes"]=[e.system.creatureType]),t["system.-=creatureType"]=null);if(Array.isArray(e.system.subTypes)){const s=[],a=e.system.subTypes.flat();for(const e of a){if(!e)continue;const t=e.charAt(0).toLowerCase()+e.slice(1).replace(" ","");t in ffd20.config.creatureSubtypes?s.push(t):s.push(e)}e.system.creatureSubtypes?.length||(t["system.creatureSubtypes"]=s),t["system.-=subTypes"]=null}}(e,n),_migrateItemChangeFlags(e,n),function _migrateItemMaterials(e,t){for(const s of["material","armor.material"]){const a=foundry.utils.getProperty(e.system,s);if(!a)continue;const i="throneglass";if(a?.addon){let n=a.addon;Array.isArray(n)||(t[`system.${a}.addon`]=Object.entries(n).filter((([e,t])=>t)).map((([e])=>e)),n=t[`system.${s}.addon`]),n.includes(i)&&(t[`system.${s}.addon`]=n.filter((e=>e!==i)),e.system.material?.normal?.value||(t[`system.${s}.normal.value`]=i))}const n=t[`system.${s}.addon`]??a?.addon??[];n?.some((e=>!!qt[e]))&&(t[`system.${s}.addon`]=n.map((e=>qt[e]??e)));const o=qt[a?.normal?.value];o&&(t[`system.${s}.normal.value`]=o)}}(e,n),function _migrateSpellMultischool(e,t){if("spell"!==e.type||void 0===e.system.multischool||"string"!=typeof e.system.multischool)return;const s=e.system.multischool.split(",").flatMap((e=>e.split(";"))).map((e=>e.trim())).filter((e=>e)),a=[],i=Object.entries(ffd20.config.spellMultischools);e:for(const e of s){for(const[t,s]of i){if(e in ffd20.config.spellMultischools){a.push(t);continue e}if(RegExp(s,"i").test(e)){a.push(t);continue e}}a.push(e)}t["system.multischool"]=a,e.system.multi&&(t["system.school"]="multi");t["system.-=multi"]=null}(e,n),function _migrateSpellSubschool(e,t){if("spell"!==e.type||void 0===e.system.subschool||"string"!=typeof e.system.subschool)return;const s=e.system.subschool.split(",").flatMap((e=>e.split(";"))).map((e=>e.trim())).filter((e=>e)),a=[],i=Object.entries(ffd20.config.spellSubschools);e:for(const e of s){for(const[t,s]of i){if(e in ffd20.config.spellSubschools){a.push(t);continue e}if(RegExp(s,"i").test(e)){a.push(t);continue e}}a.push(e)}t["system.subschool"]=a}(e,n),function _migrateItemDefaultAmmo(e,t){const s=e.flags?.ffd20?.defaultAmmo;if(!s)return;e.system?.ammo?.default||(t["system.ammo.default"]=s);t["flags.ffd20.-=defaultAmmo"]=null}(e,n),function _migrateItemDurability(e,t){const s=CONFIG.Item.documentClasses[e.type]?.isPhysical;if(!s)return;const a=e.system?.hp?.max;void 0!==a&&(void 0===e.system?.hp?.base&&(t["system.hp.base"]=Number(a??10)),t["system.hp.-=max"]=null);const i=e.system?.hp?.value;void 0!==i&&(void 0===e.system?.hp?.offset&&(t["system.hp.offset"]=a>0?i-a:0),t["system.hp.-=value"]=null)}(e,n),function _migrateItemHeld(e,t){"normal"===e.system.held&&(t["system.held"]="1h")}(e,n),function _migrateItemUnusedData(e,t){void 0!==e.system.priceUnits&&(t["system.-=priceUnits"]=null);void 0!==e.system.description?.chat&&(t["system.description.-=chat"]=null);void 0!==e.system.identifiedName&&(t["system.-=identifiedName"]=null);void 0!==e.system.typeName&&(t["system.-=typeName"]=null);void 0!==e.system.weaponData&&(t["system.-=weaponData"]=null);void 0!==e.system.range&&(t["system.-=range"]=null);void 0!==e.system.primaryAttack&&(t["system.-=primaryAttack"]=null);void 0!==e.system.activation&&(t["system.-=activation"]=null);void 0!==e.system.unchainedAction&&(t["system.-=unchainedAction"]=null);void 0!==e.system.measureTemplate&&(t["system.-=measureTemplate"]=null);void 0!==e.system.useCustomTag&&(t["system.-=useCustomTag"]=null,!1===e.system.useCustomTag&&void 0!==e.system.tag&&(t["system.-=tag"]=null));void 0!==e.system.ammoType&&(t["system.-=ammoType"]=null,!e.system.ammo?.type&&e.system.ammoType&&(t["system.ammo.type"]=e.system.ammoType))}(e,n);const o=e.system.actions instanceof Array&&e.system.actions.length>0?e.system.actions:n["system.actions"];if(o instanceof Array){const t=o.map((t=>migrateItemActionData(t,n,{itemData:e,item:s}))),a=foundry.utils.diffObject(o,t),i=foundry.utils.diffObject(t,o);foundry.utils.isEmpty(a)&&foundry.utils.isEmpty(i)||(n["system.actions"]=t)}if(e.system?.inventoryItems instanceof Array){n["system.items"]={};for(const i of e.system.inventoryItems){i._id||=foundry.utils.randomID(16),i.system??={};try{"data"in i&&(i.system=foundry.utils.mergeObject(i.data,i.system,{inplace:!1}),delete i.data);const e=new Item.implementation(i,{strict:!1}),s=await migrateItemData(e.toObject(),t,{_depth:a+1});e.updateSource(s),n["system.items"][i._id]=e.toObject()}catch(e){console.error("Failed to migrate container content:",{item:i,parent:s,actor:t})}}n["system.-=inventoryItems"]=null}return await(async e=>{if(e)for(const[i,o]of Object.entries(e))try{const e=new Item.implementation(o,{strict:!1}),s=await migrateItemData(e.toObject(),t,{item:e,_depth:a+1});if(!foundry.utils.isEmpty(s)){const t=e.updateSource(s);n["system.items"]??={},n["system.items"][i]=t}}catch(e){console.error("FFD20 | Migration | Error",e,s)}})(e.system.items),await _migrateItemDataActiveEffects(e,n),i&&!foundry.utils.isEmpty(n)&&(n["flags.ffd20.migration"]=game.system.version),n}function migrateItemActionData(e,t,{itemData:s,item:a=null}={}){e=foundry.utils.deepClone(e);const i=a?.actions?.get(e._id);return function _migrateActionDamageType(e,t){if(!e.damage)return;const s=["parts","critParts","nonCritParts"];for(const t of s){if(!e.damage[t])continue;e.damage[t]=e.damage[t].map((e=>{if(Array.isArray(e)){const[t,s]=e;return{formula:t,type:s}}return e}));const s=e.damage[t];for(const e of s){const t=e.type;t&&("string"==typeof t?(e.types=_Action_ConvertDamageType(t),e.types.length||(e.types=t.split(";")),delete e.type):t instanceof Array&&(e.types=t,delete e.type))}}}(e),function _migrateActionLimitedUses(e,t){const s=CONFIG.Item.documentClasses[t.type]?.isPhysical;s||"single"===e.uses?.self?.per&&(e.uses.self.per="charges",e.uses.self.maxFormula="1")}(e,s),function _migrateActionExtraAttacks(e,t){if(e.attackParts?.length){const t=e.attackParts??[];t.some((e=>Array.isArray(e)))&&(e.attackParts=t.map((e=>Array.isArray(e)?{formula:e[0],name:e[1]}:e)));for(const t of e.attackParts)t.formula=""+t.formula}e.extraAttacks??={},void 0!==e.attackParts&&(e.extraAttacks.manual=e.attackParts??[],delete e.attackParts);void 0!==e.formulaicAttacks&&(e.extraAttacks.formula??={},e.extraAttacks.formula.count=e.formulaicAttacks?.count?.formula||"",e.extraAttacks.formula.bonus=e.formulaicAttacks?.bonus?.formula||"",e.extraAttacks.formula.label=e.formulaicAttacks?.label||"",delete e.formulaicAttacks);e.extraAttacks.type||("min(3, ceil(@attributes.bab.total / 5) - 1)"===e.extraAttacks.formula?.count&&"@formulaicAttack * -5"===e.extraAttacks.formula?.bonus?(e.extraAttacks.type="standard",delete e.extraAttacks.formula.count,delete e.extraAttacks.formula.bonus,delete e.extraAttacks.formula.label,e.extraAttacks.manual?.length?e.extraAttacks.type="advanced":delete e.extraAttacks.manual):(e.extraAttacks.formula?.count?.length||e.extraAttacks.manual?.length)&&(e.extraAttacks.type="custom"),e.extraAttacks.formula?.count||delete e.extraAttacks?.formula?.count,e.extraAttacks.formula?.bonus||delete e.extraAttacks?.formula?.bonus,e.extraAttacks.formula?.label||delete e.extraAttacks?.formula?.label,e.extraAttacks.manual?.length>0||delete e.extraAttacks?.manual);foundry.utils.isEmpty(e.extraAttacks.formula)&&delete e.extraAttacks.formula}(e),function _migrateActionAmmunitionUsage(e,t,s){!1===e.usesAmmo&&delete e.ammoType;!0===e.usesAmmo&&(t.system.ammo?.type||s["system.ammo.type"]||(s["system.ammo.type"]=e.ammoType,e.ammoType=""),t.system.ammo?.type==e.ammoType&&delete e.ammoType);e.ammoType&&(e.ammo??={},e.ammo.type=e.ammoType);delete e.ammoType,e.ammo&&!e.ammo.type&&delete e.ammo.type;delete e.usesAmmo}(e,s,t),function _migrateActionDuration(e,t){e.duration??={},"null"===e.duration.value&&(e.duration.value="");!e.duration.units&&e.duration.value&&(e.duration.units="spec");"instantaneous"===e.duration.value&&(delete e.duration.value,e.duration.units="inst");if("spec"===e.duration.units){switch(e.duration.value||""){case"1 round":case"1 full round":e.duration.value="1",e.duration.units="round";break;case"1 min.":case"1 minute":e.duration.value="1",e.duration.units="minute";break;case"1 hour":e.duration.value="1",e.duration.units="hour";break;case"8 hours":e.duration.value="8",e.duration.units="hour";break;case"24 hours":e.duration.value="24",e.duration.units="hour";break;case"1 day":e.duration.value="1",e.duration.units="day";break;case"permanent":delete e.duration.value,e.duration.units="perm";break;case"see below":case"see text":delete e.duration.value,e.duration.units="seeText"}}}(e),function _migrateActionMaterials(e,t){let s=e.material?.addon;if(s){s.some((e=>!!qt[e]))&&(e.material.addon=e.material.addon.map((e=>qt[e]||e)),s=e.material.addon);const t="throneglass";s.includes(t)&&(e.material.addon=e.material.addon.filter((e=>e!==t)),e.material.normal.value||=t)}const a=qt[e.material?.normal?.value];a&&(e.material.normal.value=a)}(e),function _migrateActionConditionals(e,t,{action:s}={}){for(const t of e.conditionals??[]){t._id??=foundry.utils.randomID(16),t.modifiers??=[],Array.isArray(t.modifiers)||(t.modifiers=Object.values(t.modifiers));for(const e of t.modifiers){let t;e._id??=foundry.utils.randomID(16),(t=e.subTarget?.match(/^attack\.([0-9]+)/))&&(e.subTarget="attack_"+t[1]),delete e.targets,delete e.subTargets,delete e.conditionalModifierTypes,delete e.conditionalCritical,"damage"===e.target&&!e.damageType?.length&&e.type&&(e.damageType=_Action_ConvertDamageType(e.type),e.damageType.length||(e.damageType=e.type.split(";")),e.type=""),ffd20.components.ItemConditionalModifier.pruneData(e)}}e.conditionals?.length&&(e.conditionals=e.conditionals.map((e=>new ffd20.components.ItemConditional(e,{strict:!1}).toObject(!0,!0))))}(e=new ffd20.components.ItemAction(e,{strict:!1}).toObject(!0,!0),0,{action:i}),e}async function migrateScene(e,{fast:t=!0,state:s,tracker:a}={}){console.log(`FFD20 | Migration | Scene: ${e.name} | Starting...`);try{await migrateSceneTokens(e,{fast:t,state:s,tracker:a}),await migrateSceneActors(e,{fast:t,state:s,tracker:a}),game.user.isGM&&await e.setFlag("ffd20","migration",game.system.version)}catch(t){a?.recordError(e,t),console.error(`FFD20 | Migration | Scene: ${e.name} | Error`,t)}console.log(`FFD20 | Migration | Scene: ${e.name} | Complete!`)}async function migrateSceneTokens(e,{fast:t=!0,state:s=null,tracker:a=null}={}){for(const s of e.tokens)if(s.isOwner&&(!t||!isMigrated(s)))try{await migrateToken(s)}catch(t){a?.recordError(s,t),console.error(`FFD20 | Migration | Scene: ${e.name} | Token: ${s.id} | Error`,s,t)}}async function migrateSceneActors(e,{fast:t=!0,state:s=null,tracker:a=null}={}){for(const s of e.tokens){if(s.isLinked)continue;const i=s.actor;if(i?.isOwner&&(!t||!isMigrated(i)))try{const e=await migrateActorData(i.toObject(),s,{actor:i});foundry.utils.isEmpty(e)||(e.items?.length>0||delete e.items,e.effects?.length>0||delete e.effects,foundry.utils.isEmpty(e)||await i.update(e,{ffd20:{action:"migration"}}))}catch(t){a?.recordError(s,t),console.error(`FFD20 | Migration | Scene: ${e.name} | Token: ${s.id} | Error`,s,t)}}}function _migrateItemChangeFlags(e,t){const s=e.system?.changeFlags;s&&void 0!==s.noEncumbrance&&(!0===s.noEncumbrance&&(t["system.changeFlags.noMediumEncumbrance"]=!0,t["system.changeFlags.noHeavyEncumbrance"]=!0),t["system.changeFlags.-=noEncumbrance"]=null)}const _migrateItemLinks=async function(e,t,{item:s,actor:a}){const i=e.system.links??{};for(const[e,s]of Object.entries(i)){let i=!1;const n=foundry.utils.deepClone(s);for(const e of n){const t=e.dataType;if(void 0!==t&&("data"===t?delete e.dataType:"world"===t?(e.uuid=e.id.replace(/^world\./,"Item."),delete e.id,delete e.dataType):"compendium"===t&&(e.uuid="Compendium."+e.id,delete e.id,delete e.dataType),delete e.img,i=!0),void 0!==e.id&&a&&(e.uuid=a.items?.get(e.id)?.getRelativeUUID(a),e.uuid&&(delete e.id,i=!0)),a&&e.uuid){let t=await fromUuid(e.uuid,{relative:a});if(t?.actor){t.actor!==a&&(t=a.items.get(t.id));const s=t?.getRelativeUUID(a);t&&s!==e.uuid&&(e.uuid=s,i=!0)}}if("."!==e.uuid?.[0]&&e.uuid){const t=ffd20.utils.internal.uniformUuid(e.uuid,a);e.uuid!==t&&(e.uuid=t,i=!0)}if(e.uuid){const t=Ht[e.uuid];t&&(e.uuid=t,i=!0)}void 0===e._index&&void 0===e.hiddenLinks||(delete e._index,delete e.hiddenLinks,i=!0);const s=Object.keys(e);(s.length<1||1===s.length&&s.includes("name"))&&(e._delete=!0,i=!0)}i&&(t["system.links."+e]=n.filter((e=>!0!==e._delete)))}};function _migrateItemActionToActions(e,t,{actor:s,item:a}={}){const i=!!e.system.actionType||!!e.system.activation?.type||!!e.system.measureTemplate;if(void 0!==e.system.actionType&&(t["system.-=actionType"]=null),void 0!==e.system.activation&&(t["system.-=activation"]=null),void 0!==e.system.measureTemplate&&(t["system.-=measureTemplate"]=null),e.system.actions?.length)return;if(!i)return;const n={};for(const t of Object.keys(e.system))n[t]=e.system[t];if(["weapon","attack"].includes(e.type)?n.name=game.i18n.localize("FFD20.Attack"):n.name=game.i18n.localize("FFD20.Use"),delete n.description,n.activation??={},n.activation.type||="standard",n.activation.unchained??={},n.activation.unchained.type||="action",n.activation.unchained.cost??=2,"spell"===e.type&&(n.duration??={},n.duration.value=e.system.spellDuration,s)){const t=e.system.spellbook,a=s.system.attributes?.spells?.spellbooks?.[t];if(a.spellPoints?.useSystem){const t=e.system.spellPoints?.cost;t&&(n.uses.autoDeductChargesCost=t)}}const o=n.powerAttack?.multiplier;"string"==typeof o&&(""===o?delete n.powerAttack.multiplier:n.powerAttack.multiplier=parseInt(o)),void 0!==e.system.attackNotes&&(t["system.-=attackNotes"]=null),void 0!==e.system.effectNotes&&(t["system.-=effectNotes"]=null),t["system.actions"]=[new ffd20.components.ItemAction(n).toObject()]}function _migrateAnyTrait(e){if(!e)return null;if(Array.isArray(e))return null;const t=new Set;return Array.isArray(e.value)&&e.value.length&&e.value.forEach((e=>t.add(e))),"string"==typeof e.custom&&(e.custom=e.custom?.split(ffd20.config.re.traitSeparator).map((e=>e.trim())).filter((e=>e))??[]),Array.isArray(e.custom)&&e.custom.length&&e.custom.forEach((e=>t.add(e))),[...t]}function _Action_ConvertDamageType(e){const t=[{tests:["b","blunt","bludgeoning"],result:"bludgeoning"},{tests:["p","pierce","piercing"],result:"piercing"},{tests:["s","slash","slashing"],result:"slashing"},{tests:["f","fire"],result:"fire"},{tests:["ice","i"],result:"ice"},{tests:["e","l","lightning","electricity","electrical"],result:"lightning"},{tests:["wind"],result:"wind"},{tests:["earth"],result:"earth"},{tests:["water"],result:"water"},{tests:["force"],result:"force"},{tests:["dark","neg","negative"],result:"dark"},{tests:["light","pos","positive"],result:"light"},{tests:["u","untyped","untype"],result:"untyped"},{tests:["n","nonelemental","non"],result:"nonelemental"}],s=e.split(/(?:\s*\/\s*|\s+and\s+|\s+or\s+)/i).map((e=>e.toLowerCase())),a=[];for(const e of t)for(const t of e.tests)s.includes(t)&&a.push(e.result);return a}const _migrateActorActiveEffects=async(e,t,s)=>{const a=[];for(const t of e.effects??[]){const e=await migrateActiveEffectData(t,s);foundry.utils.isEmpty(e)||(e._id=t._id,a.push(e))}a.length&&(t.effects=a)};const migrateActiveEffectData=async(e,t)=>{if(!t)return;const s={};e.name||(s.name="No Name");const getNewRelativeOrigin=async e=>{if("string"!=typeof e)return;const s=await fromUuid(e,{relative:t});return s instanceof Item&&t&&s.actor===t?s.getRelativeUUID(t):void 0},a=e.flags?.ffd20?.origin;if(a){if(!e.origin){const e=await getNewRelativeOrigin(a);e&&(s.origin=e)}s.flags??={},s.flags.ffd20??={},s.flags.ffd20["-=origin"]=null}if(e.origin){const t=await getNewRelativeOrigin(e.origin);t&&e.origin!==t&&(s.origin=t)}return e.statuses.some((e=>e.startsWith("pf1_")))&&(s.statuses=Array.from(new Set(e.statuses.map((e=>e.replace(/^pf1_/,"")))))),e.statuses.some((e=>e.startsWith("ffd20_")))&&(s.statuses=Array.from(new Set(e.statuses.map((e=>e.replace(/^ffd20_/,"")))))),s};function migrateRollData(e,t=!1){e=t?e:foundry.utils.deepClone(e);let s=!1;["RollPF2","RollPF$1"].includes(e.class)&&(e.class="RollPF",s=!0);for(const t of e.terms??[]){if("object"==typeof t._number&&"class"in t._number&&"terms"in t._number){migrateRollData(t._number,!0)&&(s=!0)}if("object"==typeof t.roll&&"class"in t.roll&&"terms"in t.roll){migrateRollData(t.roll,!0)&&(s=!0)}}return s?e:void 0}function migrateMessageData(e){const t={},s=e.flags?.ffd20,a=s?.metadata;a&&(t.type="action",t.flags??={},t.flags.ffd20??={},t.flags.ffd20["-=metadata"]=null,t.system=a,"object"!=typeof t.system.item&&(t.system.item={id:t.system.item}),"object"!=typeof t.system.action&&(t.system.action={id:t.system.action}));const i=s?.identifiedInfo;if(i&&(t.system??={},t.system.item??={},t.system.item.identified=i.identified??!0,t.system.item.name=i.name,t.system.item.description=i.description,t.system.action??={},t.system.action.name=i.actionName,t.system.action.description=i.actionDescription,t.flags??={},t.flags.ffd20??={},t.flags.ffd20["-=identifiedInfo"]=null),a?.speed&&(t.system??={},t.system.config??={},t.system.config.speed=a.speed),a?.skill&&(t.system??={},t.system.config??={},t.system.config.rank=a.skill.rank),s?.subject&&(t.system??={},t.system.subject=s.subject,t.flags??={},t.flags.ffd20??={},t.flags.ffd20["-=subject"]=null),"string"==typeof t.system?.subject&&(t.system.subject={info:t.system.subject}),e.rolls?.length){let s=!1;const a=[];for(let t of e.rolls){if("string"!=typeof t)break;t=JSON.parse(t);const e=migrateRollData(t);e&&(t=e,s=!0),a.push(JSON.stringify(t))}s&&(t.rolls=a)}return t}async function migrateMessages({fast:e,state:t,dialog:s=null,noHooks:a=!1}={}){a||Hooks.callAll("pf1MigrationStarted",{scope:"chat"});const i=!t;t=await initializeStateAndDialog(t,"FFD20.Migration.Category.Chat",s),i&&t.start();const n=t.createCategory("chat","FFD20.Migration.Category.Chat",!0);console.log("FFD20 | Migration | Chat log starting..."),n.start(),n.setTotal(game.messages.size),n.setInvalid(game.messages.invalidDocumentIds.size),s&&await new Promise((e=>setTimeout(e,100)));const o=[],applyUpdates=async()=>{try{console.debug("FFD20 | Migration | Chat Log | Applying updates to",o.length,"chat message(s)"),await ChatMessage.updateDocuments(o)}catch(e){console.error("Error migrating chat messages\n",e,"\n",{updates:o})}o.length=0,await new Promise((e=>setTimeout(e,0)))};for(const s of game.messages)if(e&&isMigrated(s))n.ignoreEntry(s);else{n.startEntry(s);try{const e=migrateMessageData(s.toObject());foundry.utils.isEmpty(e)||(e._id=s.id,o.push(e),t&&e.type&&e.type!==s.type&&(t.typeChanges=!0))}catch(e){console.error(e,s),n.recordError(s,e)}n.finishEntry(s),o.length>=ffd20.migrations.UPDATE_CHUNK_SIZE&&await applyUpdates()}o.length&&await applyUpdates(),console.log("FFD20 | Migration | Chat log complete!"),n.finish(),i&&t.finish(),a||Hooks.callAll("pf1MigrationFinished",{scope:"chat"})}const $t=Object.freeze(Object.defineProperty({__proto__:null,UPDATE_CHUNK_SIZE:50,_migrateItemActionToActions,_migrateItemDataActiveEffects,assets:{"systems/ffd20/icons/conditions/bleed.png":"systems/ffd20/icons/conditions/bleed.svg","systems/ffd20/icons/conditions/confused.png":"systems/ffd20/icons/conditions/confused.svg","systems/ffd20/icons/conditions/cowering.png":"systems/ffd20/icons/conditions/cowering.svg","systems/ffd20/icons/conditions/dazed.png":"systems/ffd20/icons/conditions/dazed.svg","systems/ffd20/icons/conditions/dazzled.png":"systems/ffd20/icons/conditions/dazzled.svg","systems/ffd20/icons/conditions/exhausted.png":"systems/ffd20/icons/conditions/exhausted.svg","systems/ffd20/icons/conditions/frightened.png":"systems/ffd20/icons/conditions/frightened.svg","systems/ffd20/icons/conditions/grappled.png":"systems/ffd20/icons/conditions/grappled.svg","systems/ffd20/icons/conditions/helpless.png":"systems/ffd20/icons/conditions/helpless.svg","systems/ffd20/icons/conditions/incorporeal.png":"systems/ffd20/icons/conditions/incorporeal.svg","systems/ffd20/icons/conditions/nauseated.png":"systems/ffd20/icons/conditions/nauseated.svg","systems/ffd20/icons/conditions/paralyzed.png":"systems/ffd20/icons/conditions/paralyzed.svg","systems/ffd20/icons/conditions/pinned.png":"systems/ffd20/icons/conditions/pinned.svg","systems/ffd20/icons/conditions/shaken.png":"systems/ffd20/icons/conditions/shaken.svg","systems/ffd20/icons/conditions/sickened.png":"systems/ffd20/icons/conditions/sickened.svg","systems/ffd20/icons/conditions/squeezing.png":"systems/ffd20/icons/conditions/squeezing.svg","systems/ffd20/icons/conditions/staggered.png":"systems/ffd20/icons/conditions/staggered.svg","systems/ffd20/icons/conditions/screaming.png":"systems/ffd20/icons/conditions/cowering.svg","systems/ffd20/icons/conditions/entangled.png":"icons/svg/net.svg","systems/ffd20/icons/conditions/fear.png":"icons/svg/terror.svg","systems/ffd20/icons/conditions/prone.png":"icons/svg/falling.svg","systems/ffd20/icons/conditions/sleep.png":"icons/svg/sleep.svg","systems/ffd20/icons/conditions/stunned.png":"icons/svg/stoned.svg"},compendiumRenames:Ut,isMigrated,isMigrating:!1,migrateActiveEffectsToItems,migrateActor:async function migrateActor(e){console.debug("FFD20 | Migration | Starting |",e.name,e.uuid);const t=await migrateActorData(e.toObject(),e.token,{actor:e});foundry.utils.isEmpty(t)||await e.update(t,{ffd20:{action:"migration"}}),await migrateActiveEffectsToItems(e),console.debug("FFD20 | Migration | Finished |",e.name,e.uuid)},migrateActorData,migrateActors,migrateCompendium,migrateCompendiums,migrateItem:async function migrateItem(e){let t=!1;const s=await migrateItemData(e.toObject(),e.actor,{item:e});return foundry.utils.isEmpty(s)||(t=!0,await e.update(s,{ffd20:{action:"migration"}})),await migrateItemActiveEffects(e),t?e:null},migrateItemActionData,migrateItemActiveEffects,migrateItemData,migrateItems,migrateMessage:async function migrateMessage(e,{commit:t=!0,state:s}={}){const a=foundry.utils.expandObject(migrateMessageData(e.toObject()));return a.type&&a.type!==e.type&&(s?s.typeChanges=!0:console.warn("Document type changed! Refresh required!"),conformTypeUpdate(a,e.toObject())),foundry.utils.isEmpty(a)?null:t?e.update(a):a},migrateMessageData,migrateMessages,migrateModules:async function migrateModules({unlock:e=!0,server:t=!0,fast:s=!0,state:a,dialog:i={}}={}){Hooks.callAll("pf1MigrationStarted",{scope:"modules"}),(a=await initializeStateAndDialog(a,"FFD20.Migration.Category.Modules",i)).unlock=e,a.fast=s,a.start(),console.debug("FFD20 | Migration | Module migration starting...");const n=game.packs.filter((e=>"module"===e.metadata.packageType));await migrateCompendiums(n,{unlock:e,fast:s,state:a,noHooks:!0}),console.debug("FFD20 | Migration | Module migration complete!"),a.finish(),Hooks.callAll("pf1MigrationFinished",{scope:"modules"})},migrateRollData,migrateScene,migrateSceneActors,migrateSceneTokens,migrateScenes,migrateSystem:async function migrateSystem({unlock:e=!0,fast:t=!1,server:s=!0,state:a,dialog:i={}}={}){Hooks.callAll("pf1MigrationStarted",{scope:"system"}),(a=await initializeStateAndDialog(a,"FFD20.Migration.Category.System",i)).unlock=e,a.fast=t,a.start(),console.debug("FFD20 | Migration | System migration starting...");const n=game.packs.filter((e=>"system"===e.metadata.packageType));await migrateCompendiums(n,{unlock:e,fast:t,state:a,dialog:!1,noHooks:!0}),console.debug("FFD20 | Migration | System migration complete!"),a.finish(),Hooks.callAll("pf1MigrationFinished",{scope:"system"})},migrateToken,migrateTokenData,migrateWorld:async function migrateWorld({unlock:e=!1,fast:t=!0,systemPacks:s=!1,state:a,dialog:i={}}={}){const n=game.user.isGM;if(s&&foundry.utils.logCompatibilityWarning("ffd20.migrations.migrateWorld() systemPacks parameter is deprecated in favor of ffd20.migrations.migrateSystem()",{since:"PF1 v11",until:"PF1 v12"}),ffd20.migrations.isMigrating&&game.users.activeGM)return void ui.notifications.error(game.i18n.localize("FFD20.Migration.InProgress"));n&&await game.settings.set("ffd20","migrating",!0),ffd20.migrations.isMigrating=!0,Hooks.callAll("pf1MigrationStarted",{scope:"world"}),(a=await initializeStateAndDialog(a,"FFD20.Migration.Category.World",i)).unlock=e,a.fast=t,a.start();const o=game.i18n.format("FFD20.Migration.Start",{version:game.system.version}),r=ui.notifications.info(o,{permanent:!0,console:!1});console.log("FFD20 | Migration | Starting..."),n&&await async function _migrateWorldSettings(){}(),i&&(a.createCategory("actors","FFD20.Migration.Category.Actors",!0),a.createCategory("items","FFD20.Migration.Category.Items",!0),a.createCategory("chat","FFD20.Migration.Category.Chat",!0),a.createCategory("packs","FFD20.Migration.Category.Packs",!0),a.createCategory("scenes","FFD20.Migration.Category.Scenes",!0),await new Promise((e=>setTimeout(e,100))));const l=migrateActors({state:a,fast:t,noHooks:!0}),c=migrateItems({state:a,fast:t,noHooks:!0});let d=Promise.resolve(),u=Promise.resolve();if(n){u=migrateMessages({state:a,fast:t,noHooks:!0});d=migrateCompendiums(game.packs.filter((e=>{const t=e.metadata.packageType;return!!["world","system"].includes(t)&&(!("system"===t&&!s)&&["Actor","Item","Scene"].includes(e.metadata.type))})),{unlock:e,fast:t,state:a,noHooks:!0})}await l;const m=migrateScenes({state:a,fast:t,noHooks:!0});await Promise.allSettled([c,d,m,u]),ui.notifications.remove(r),ui.notifications.info(game.i18n.format("FFD20.Migration.End",{version:game.system.version}),{console:!1}),console.log("FFD20 | Migration | Completed!"),n&&(await game.settings.set("ffd20","systemMigrationVersion",game.system.version),await game.settings.set("ffd20","migrating",!1)),a.finish(),Hooks.callAll("pf1MigrationFinished",{scope:"world"})},moved:Ht,registerRedirects},Symbol.toStringTag,{value:"Module"}));function preparePacks(){console.debug("FFD20 | Pre-caching class ID map"),ffd20.utils.packs.getClassIDMap()}function expireFromTokens(){if(game.users.activeGM?.isSelf)for(const e of canvas.tokens.placeables)if(e.actor&&!e.combatant?.combat?.started)try{e.actor.expireActiveEffects()}catch(t){console.error(`FFD20 | Failed to expire active effects from token: ${e.name} [${e.document?.uuid}]\n`,t)}}globalThis.ffd20=moduleToObject({actionUse:et,applications:Ne,canvas:ht,components:yt,config:b,const:F,dice:gt,documents:We,models:Ye,migrations:$t,registry:zt,utils:Mt,chat:it,skipConfirmPrompt:!1}),Hooks.once("init",(function(){console.log("FFD20 | Initializing Final Fantasy D20 System"),registerRedirects(),Object.defineProperty(ffd20,"_temp",{value:{},enumerable:!1,writable:!1}),globalThis.RollPF=RollPF,CONFIG.FFD20=ffd20.config,CONFIG.Canvas.layers.templates.layerClass=TemplateLayerPF,CONFIG.MeasuredTemplate.objectClass=MeasuredTemplatePF,CONFIG.MeasuredTemplate.defaults.originalAngle=CONFIG.MeasuredTemplate.defaults.angle,CONFIG.MeasuredTemplate.defaults.angle=90,CONFIG.Token.objectClass=TokenPF,CONFIG.Token.hudClass=TokenHUDPF,CONFIG.Token.documentClass=TokenDocumentPF,CONFIG.Actor.documentClass=i,CONFIG.Actor.documentClasses={character:ActorCharacterPF,npc:ActorNPCPF,haunt:ActorHauntPF,trap:ActorTrapPF,vehicle:ActorVehiclePF},CONFIG.Actor.dataModels.haunt=HauntModel,CONFIG.Actor.dataModels.trap=TrapModel,CONFIG.Actor.dataModels.vehicle=VehicleModel,CONFIG.Item.documentClass=n,CONFIG.Item.documentClasses={attack:ItemAttackPF,buff:ItemBuffPF,class:ItemClassPF,consumable:ItemConsumablePF,container:ItemContainerPF,equipment:ItemEquipmentPF,feat:ItemFeatPF,loot:ItemLootPF,race:ItemRacePF,spell:ItemSpellPF,weapon:ItemWeaponPF,implant:ItemImplantPF},CONFIG.ActiveEffect.documentClass=ActiveEffectPF,CONFIG.ActiveEffect.legacyTransferral=!1,CONFIG.ActiveEffect.dataModels.base=AEBaseModel,CONFIG.ActiveEffect.dataModels.buff=AEBuffModel,CONFIG.Combat.documentClass=CombatPF,CONFIG.Combatant.documentClass=CombatantPF,CONFIG.ChatMessage.documentClass=ChatMessagePF,CONFIG.ChatMessage.dataModels.base=BaseMessageModel,CONFIG.ChatMessage.dataModels.item=ItemMessageModel,CONFIG.ChatMessage.dataModels.action=ActionMessageModel,CONFIG.ChatMessage.dataModels.check=CheckMessageModel,CONFIG.ui.items=ItemDirectoryPF,CONFIG.Dice.rolls.unshift(RollPF),CONFIG.Dice.rolls.push(D20RollPF),CONFIG.Dice.rolls.push(DamageRoll),CONFIG.Dice.termTypes.FunctionTerm=ffd20.dice.terms.FunctionTermPF,CONFIG.Dice.termTypes.StringTerm=ffd20.dice.terms.StringTermPF;for(const[e,t]of Object.entries(ffd20.utils.roll.functions))CONFIG.Dice.functions[e]=t;CONFIG.time.roundTime=6,CONFIG.AmbientLight.objectClass=LLVMixin(CONFIG.AmbientLight.objectClass),CONFIG.Token.objectClass=LLVMixin(CONFIG.Token.objectClass),registerSystemSettings(),ffd20.utils.internal.setDefaultSceneScaling(),preload(),register$1(),Actors.unregisterSheet("core",ActorSheet),Actors.registerSheet("ffd20",ActorSheetPFCharacter,{label:"FFD20.Sheet.PC",types:["character"],makeDefault:!0}),Actors.registerSheet("ffd20",ActorSheetPFNPC,{label:"FFD20.Sheet.NPC",types:["npc"],makeDefault:!0}),Actors.registerSheet("ffd20",ActorSheetPFNPCLite,{label:"FFD20.Sheet.NPCLite",types:["npc"],makeDefault:!1}),Actors.registerSheet("ffd20",ActorSheetPFNPCLoot,{label:"FFD20.Sheet.NPCLoot",types:["npc"],makeDefault:!1}),Actors.registerSheet("ffd20",ActorSheetPFHaunt,{label:"FFD20.Sheet.Haunt",types:["haunt"],makeDefault:!0}),Actors.registerSheet("ffd20",ActorSheetPFTrap,{label:"FFD20.Sheet.Trap",types:["trap"],makeDefault:!0}),Actors.registerSheet("ffd20",ActorSheetPFVehicle,{label:"FFD20.Sheet.Vehicle",types:["vehicle"],makeDefault:!0}),Items.unregisterSheet("core",ItemSheet),Items.registerSheet("ffd20",ItemSheetPF,{label:"FFD20.Sheet.Item",types:["class","feat","spell","consumable","equipment","loot","weapon","buff","attack","race","implant"],makeDefault:!0}),Items.registerSheet("ffd20",ItemSheetPF_Container,{label:"FFD20.Sheet.Container",types:["container"],makeDefault:!0}),DocumentSheetConfig.registerSheet(JournalEntryPage,"ffd20",JournalTextPageSheetPF1,{types:["text"],makeDefault:!1,label:"FFD20.Sheet.TextPage"}),registerV13PageSheet();for(const e of Object.values(ffd20.canvas.detectionModes))CONFIG.Canvas.detectionModes[e.ID]=new e({id:e.ID,label:e.LABEL,type:e.DETECTION_TYPE??DetectionMode.DETECTION_TYPES.SIGHT});CONFIG.Canvas.visionModes.darkvision=ffd20.canvas.visionModes.darkvision,function initializeSocket(){game.socket.on("system.ffd20",runSocketFunction)}(),function initializeModuleIntegration(){const e=game.settings.get("ffd20","integration");game.modules.get("drag-ruler")?.active&&e.dragRuler&&Hooks.once("dragRuler.ready",(e=>{dragRuler.registerSystem("ffd20",class Pf1SpeedProvider extends e{get colors(){return[{id:"walk",default:65280,name:"FFD20.SETTINGS.DragRulerWalk"},{id:"dash",default:16776960,name:"FFD20.SETTINGS.DragRulerDash"},{id:"run",default:16744448,name:"FFD20.SETTINGS.DragRulerRun"}]}getRanges(e){const t=ffd20.utils.convertDistance(this.getBaseSpeed(e))[0],s=e.actor.getRollData(),a=s.armor.type>=ffd20.config.armorTypes.heavy,i=s.attributes.encumbrance.level>=ffd20.config.encumbranceLevels.heavy;let n=4;return(a||i)&&(n=3),[{range:t,color:"walk"},{range:2*t,color:"dash"},{range:t*n,color:"run"}]}getBaseSpeed(e){const t=this.getSetting("useElevation"),s=e.actor.system.attributes.speed;if(t&&e.document.elevation>0){const e=s.fly.total;if(e>0)return e}if(t&&e.document.elevation<0){const e=s.burrow.total;if(e>0)return e}return s.land.total}get settings(){return[{id:"useElevation",name:"FFD20.SETTINGS.DragRulerUseElevationName",hint:"FFD20.SETTINGS.DragRulerUseElevationHint",scope:"world",type:Boolean,default:!0}]}})}))}();const e=[["damageTypes",DamageTypes],["materials",Materials],["scriptCalls",ScriptCalls],["conditions",Conditions],["sources",Sources]];for(const[t,s]of e)ffd20.registry[t]=new s;Object.defineProperty(ffd20.documents,"customRolls",{value:function(e,t,s){foundry.utils.logCompatibilityWarning("ffd20.documents.customRolls() is deprecated in favor of ffd20.chat.command()",{since:"PF1 v11",until:"PF1 v12"});const a=/^\/(?<command>h|heal|d|damage)\s+(?<formula>.*?)(\s*#\s*(?<comment>.*))?$/i.exec(e);if(!a)throw Error("Failed to parse message: "+e);const{command:i,formula:n,comment:o}=a.groups;return ffd20.chat.command(i,n,o,{speaker:t,rollData:s})}}),Object.defineProperty(ffd20.registry,"materialTypes",{get:()=>(foundry.utils.logCompatibilityWarning("ffd20.registry.materialTypes has been moved to ffd20.registry.materials.",{since:"PF1 v11",until:"PF1 v12"}),ffd20.registry.materials)}),Object.defineProperty(ffd20.config,"measureTemplateTypes",{get:()=>(foundry.utils.logCompatibilityWarning("ffd20.config.measureTemplateTypes is deprecated in favor of CONFIG.MeasuredTemplate.types",{since:"PF1 v11",until:"PF1 v12"}),ffd20.utils.internal.getTemplateTypes())}),CONFIG.statusEffects=ffd20.utils.init.getConditions(),CONFIG.specialStatusEffects.SWIM="swim",registerSystemControls(),ffd20.applications.compendiumBrowser.CompendiumBrowser.registerDefault(),game.modules.get("babele")?.active&&game.settings.get("ffd20","integration").babele?Hooks.once("babele.ready",preparePacks):Hooks.once("ready",preparePacks),function registerTokenRuler(){if(game.release.generation>=13){class TokenRulerPF extends CONFIG.Token.rulerClass{getMovement(e){const t=this.token.document,s=t?.actor,a=s.getMovement(e);if(a)return a.speed/=ffd20.const.step,a}applyWaypointSpeedData(e,t){const s=this.getMovement(e.action),a=s.speed;let i=a>0?Math.ceil(t/a):10;i>s.max&&(i=10),s.factors&&(i=s.factors[i]??i),e.speed={step:t<=5,factor:i,factorBound:Math.clamp(i,0,s.max),factorBase:Math.ceil(t/a),singleMove:i<=1,doubleMove:i<=2&&i>1,running:i>2,runningFar:i>4,exceedMovement:i>5}}_getGridHighlightStyle(e,t){if(!this.token.actor)return super._getGridHighlightStyle(e,t);const s=this.getMovement(e.action);if(!s)return super._getGridHighlightStyle(e,t);const a=e.measurement.cost,i=a/this.token.scene.grid.distance;if(0==a)return 0==s.speed?ffd20.config.tokenRuler.grid.immobile:ffd20.config.tokenRuler.grid.start;switch(this.applyWaypointSpeedData(e,i),i<=1&&s.speed>0&&s.step?0:e.speed.factor){case 0:return ffd20.config.tokenRuler.grid.step;case 1:return ffd20.config.tokenRuler.grid.move;case 2:return ffd20.config.tokenRuler.grid.move2;case 3:return ffd20.config.tokenRuler.grid.move3;case 4:return ffd20.config.tokenRuler.grid.run;case 5:return ffd20.config.tokenRuler.grid.run2;default:return ffd20.config.tokenRuler.grid.exceed}}}CONFIG.Token.rulerClass=TokenRulerPF,CONFIG.Token.movement.actions.climb.getCostFunction=()=>e=>e,CONFIG.Token.movement.actions.crawl.getCostFunction=()=>e=>e,CONFIG.Token.movement.actions.jump.getCostFunction=()=>e=>e}}(),function register(){if(game.release.generation<13)return;const e=CONFIG.time.earthCalendarConfig,t=foundry.utils.deepClone(e);t.name="FFD20.Calendar.Label",delete t.description,t.days.values=t.days.values.map((e=>({...e,name:`FFD20.Calendar.Days.${e.ordinal}.Name`,abbreviation:void 0}))),t.months.values=t.months.values.map((e=>({...e,name:`FFD20.Calendar.Months.${e.ordinal}.Name`,abbreviation:void 0})));class GolarianCalendarData extends foundry.data.CalendarData{static YEAR_OFFSET=2700;async setEarthTime(e={}){return"year"in e&&(e.year+=this.constructor.YEAR_OFFSET),game.time.set(e)}async syncCanonical({hour:e,minute:t,second:s}={}){const a=game.time.components;e??=a.hour,t??=a.minute,s??=a.second;const i=new Date,n=i.getFullYear(),o=game.time.earthCalendar,r=o.isLeapYear(n),l=i.getMonth();let c=i.getDate();const d=o.months.values;for(let e=0;e<l;e++)c+=r?d[e].leapDays??d[e].days:d[e].days;return this.setEarthTime({day:c,year:n,hour:e,minute:t,second:s})}}CONFIG.time.golarianCalendarConfig=t,CONFIG.time.golarianCalendarClass=GolarianCalendarData,CONFIG.time.worldCalendarConfig=t,CONFIG.time.worldCalendarClass=GolarianCalendarData,console.debug("FFD20 | Golarian calendar registered")}(),Hooks.callAll("pf1PostInit")})),Hooks.once("i18nInit",(function(){const e=["abilities","abilitiesShort","alignments","alignmentsShort","currencies","distanceUnits","itemActionTypes","senses","skills","timePeriods","timePeriodsShort","durationEndEvents","savingThrows","ac","featTypes","featTypesPlurals","traitTypes","racialTraitCategories","raceTypes","conditionTypes","lootTypes","flyManeuverabilities","favouredClassBonuses","abilityTypes","weaponGroups","weaponTypes","weaponProperties","spellComponents","spellDescriptors","spellSchools","spellMultischools","spellSubschools","spellLevels","spellcasting","armorProficiencies","weaponProficiencies","actorSizes","abilityActivationTypes","abilityActivationTypesPlurals","limitedUsePeriods","equipmentTypes","equipmentSlots","implantSlots","implantTypes","consumableTypes","attackTypes","buffTypes","divineFocus","classSavingThrows","classBAB","classTypes","creatureTypes","creatureSubtypes","measureUnits","measureUnitsShort","weightUnitsShort","languages","weaponHoldTypes","auraStrengths","conditionalTargets","bonusTypes","abilityActivationTypes_unchained","abilityActivationTypesPlurals_unchained","actorStatures","ammoTypes","damageResistances","vehicles","woundThresholdConditions","changeFlags","hauntTemplateLabels","traps","classBaseMPTypes","classSubTypes","classBaseMPauto","classCastingStats","countforexp","materia"],t=["messageVisibility"],s=["bonusTypes","skills","traitTypes","racialTraitCategories","conditionTypes","consumableTypes","creatureTypes","creatureSubtypes","featTypes","weaponProperties","spellSchools","languages","spellMultischools"],doLocalize=(e,t)=>{const a=Object.entries(e).reduce(((e,[s,a])=>("string"==typeof a?e.push([s,game.i18n.localize(a)]):"object"==typeof a&&e.push([s,doLocalize(a,`${t}.${s}`)]),e)),[]);return s.includes(t)&&a.sort((([e,t],[s,a])=>{if("misc"===e)return 1;if("misc"===s)return-1;const i="string"==typeof t?t:t._label,n="string"==typeof a?a:a._label;return i.localeCompare(n)})),a.reduce(((e,[t,s])=>(e[t]=s,e)),{})},doLocalizeKeys=(e,t=[])=>{for(const s of Object.keys(foundry.utils.flattenObject(e))){const a=s.split(".").at(-1);if(t.includes(a)){const t=foundry.utils.getProperty(e,s);t&&foundry.utils.setProperty(e,s,game.i18n.localize(t))}}};for(const t of e)ffd20.config[t]=doLocalize(ffd20.config[t],t);for(const e of t)ffd20.const[e]=doLocalize(ffd20.const[e],e);const a=["buffTargets","buffTargetCategories","contextNoteTargets","contextNoteCategories","ageCategories","vehicleMaterials"];for(const e of a)for(const[t,s]of Object.entries(ffd20.config[e]))ffd20.config[e][t].label=game.i18n.localize(s.label);doLocalizeKeys(ffd20.config.extraAttacks,["label","flavor"]),((e,t=[])=>{for(const s of t){const t=foundry.utils.getProperty(e,s);t&&foundry.utils.setProperty(e,s,game.i18n.localize(t))}})(ffd20.config.levelAbilityScoreFeature,["name","system.description.value"]),doLocalizeKeys(ffd20.config.pointBuy,["label"]),doLocalizeKeys(ffd20.config.caster.type,["label"]),doLocalizeKeys(ffd20.config.caster.progression,["label","hint"]);for(const e of Object.values(ffd20.registry))e instanceof ffd20.registry.Registry&&e.localize();!function localize(){if(!CONFIG.time.golarianCalendarConfig)return;const e=CONFIG.time.golarianCalendarConfig;e.name=game.i18n.localize(e.name),e.description=game.i18n.localize(e.description)}()})),Hooks.once("setup",(()=>{!function finalize(){CONFIG.time.golarianCalendarConfig&&(game.time.golarianCalendar=new CONFIG.time.golarianCalendarClass(CONFIG.time.golarianCalendarConfig,{strict:!0}))}(),Hooks.callAll("pf1PostSetup")})),Hooks.once("ready",(async function(){let e=game.settings.get("ffd20","systemMigrationVersion");"number"==typeof e?e=e.toString()+".0":"string"==typeof e&&e.match(/^([0-9]+)\.([0-9]+)$/)&&(e+=".0");if(SemanticVersion.fromString("12.11.5.0").isHigherThan(SemanticVersion.fromString(e))){const t={};"0.0.0.0"===e?t.dialog=!1:console.debug("FFD20 | Migration |",e,"to",game.system.version),game.actors.size||game.items.size?await ffd20.migrations.migrateWorld(t):game.user.isGM&&await game.settings.set("ffd20","systemMigrationVersion",game.system.version)}if(!game.user.isGM&&game.settings.get("ffd20","migrating")&&ui.notifications.warn("FFD20.Migration.InProgress",{localize:!0}),await migrateSystemSettings(),ffd20.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers(),!game.settings.get("ffd20","dontShowChangelog")){const e=game.settings.get("ffd20","changelogVersion"),t=SemanticVersion.fromString(e),s=SemanticVersion.fromString(game.system.version);if(s.isHigherThan(t)){new ffd20.applications.ChangeLogWindow(!0).render(!0,{focus:!0}),game.settings.set("ffd20","changelogVersion",s.toString())}}Hooks.callAll("pf1PostReady")})),Hooks.on("renderChatMessage",((e,t,s)=>{const a=t[0];hideRollInfo(e,t),hideGMSensitiveInfo(e,a);const i=a.querySelector(".card-content .item-description");if(i&&!i.textContent.trim()&&i.append(game.i18n.localize("FFD20.NoDescription")),game.user.isGM||hideInvisibleTargets(e,a),addTargetCallbacks(e,t),alterTargetDefense(e,t),game.settings.get("ffd20","autoCollapseItemCards")&&a.querySelector(".card-content")?.classList.add("hidden"),game.settings.get("ffd20","hideChatButtons"))for(const e of a.querySelectorAll(".card-buttons"))e.remove();alterAmmoRecovery(e,t)})),Hooks.on("renderChatMessage",((e,[t])=>ffd20.utils.chat.addListeners(e,t))),Hooks.on("renderChatMessage",((e,t)=>addReachListeners(t))),Hooks.on("renderActorDirectory",((e,t)=>{t instanceof jQuery&&(t=t[0]);for(const e of t.querySelectorAll("li.actor"))e.addEventListener("drop",ffd20.applications.CurrencyTransfer._directoryDrop.bind(void 0,e.dataset.documentId||e.dataset.entryId))})),Hooks.on("renderItemDirectory",((e,t)=>{t instanceof jQuery&&(t=t[0]);for(const e of t.querySelectorAll("li.item"))e.addEventListener("drop",CurrencyTransfer._directoryDrop.bind(void 0,e.dataset.documentId||e.dataset.entryId))})),Hooks.on("dropActorSheetData",((e,t,s)=>{if("Currency"===s.type)return t._onDropCurrency(event,s),!1})),Hooks.once("ready",(()=>{Hooks.on("hotbarDrop",((e,t,s)=>{let a;const{type:i,uuid:n}=t;switch(i){case"Item":a=createItemMacro(n,s);break;case"pf1Action":a=createActionMacro(n,s);break;case"skill":a=createSkillMacro(t.skill,n,s);break;case"save":a=createSaveMacro(t.save,n,s);break;case"defenses":case"cmb":case"concentration":case"cl":case"attack":case"abilityScore":case"initiative":case"bab":a=createMiscActorMacro(i,n,s,t);break;default:return!0}if(null==a||a instanceof Promise)return!1}))})),Hooks.on("renderTokenConfig",(async(e,t)=>{let s=e.document??e.object;s instanceof Actor&&(s=s.prototypeToken);const a=s.flags?.ffd20??{},i={flags:a,appId:e.id},n=await renderTemplate("systems/ffd20/templates/foundry/token/token-sizing.hbs",i),o=game.settings.get("ffd20","systemVision");(t=t instanceof jQuery?t[0]:t).querySelector('.tab[data-tab="appearance"] input[name="width"]').closest(".form-group").insertAdjacentHTML("afterEnd",n);const r=t.querySelector('.tab[data-tab="vision"]'),l=!0===a.customVisionRules||!o,toggleCustomVision=e=>{let t;r.querySelector("select[name='sight.visionMode']").disabled=!e,t=game.release.generation>=13?r.querySelector(".detection-mode").parentElement:r.querySelector(".tab[data-tab='detection']");for(const s of t.querySelectorAll("input,select"))"flags.ffd20.customVisionRules"!==s.name&&(s.disabled=!e);t.classList.toggle("disabled",!e)};l||toggleCustomVision(l);const c=await renderTemplate("systems/ffd20/templates/foundry/token/custom-vision.hbs",{enabled:l||!o,noSystemVision:!o,appId:e.id});r.insertAdjacentHTML("beforeEnd",c),r.querySelector('input[name="flags.ffd20.customVisionRules"]').addEventListener("change",(async e=>{toggleCustomVision(e.target.checked)})),e.setPosition()})),Hooks.on("renderSettings",((e,t)=>{if(!(game.release.generation>=13))return;if(!(e instanceof CONFIG.ui.settings))return;const s=document.createElement("template");s.innerHTML=`<section class="flexcol" id="pf1-details">\n    <h4 class="divider">${game.i18n.localize("FFD20.Title")}</h4>\n    <button type="button" data-action="pf1-changelog">\n      <i class="fa-solid fa-receipt" inert></i>\n      ${game.i18n.localize("FFD20.Application.Changelog.Title")}\n    </button>\n    <button type="button" data-action="pf1-documentation">\n      <i class="fa-solid fa-book" inert></i>\n      ${game.i18n.localize("FFD20.Help.Label")}\n    </button>\n    <button type="button" data-action="pf1-troubleshooter">\n      <i class="fa-solid fa-screwdriver-wrench" inert></i>\n      ${game.i18n.localize("FFD20.Troubleshooter.Button")}\n    </button>\n  </section>`,Object.assign(e.options.actions,{"pf1-changelog":()=>{(Object.values(ui.windows).find((e=>e instanceof ChangeLogWindow))??new ChangeLogWindow).render(!0,{focus:!0})},"pf1-documentation":()=>ffd20.applications.helpBrowser.openUrl("Help/Home"),"pf1-troubleshooter":()=>ffd20.applications.Troubleshooter.open()});t.querySelector("section.info").after(s.content)})),Hooks.on("renderSidebarTab",((e,t)=>{if(!(e instanceof Settings))return;const s=document.getElementById("game-details"),a=document.createElement("template");a.innerHTML=`<h2>${game.i18n.localize("FFD20.Title")}</h2>\n  <div id='pf1-details'>\n    <button type="button" data-action="pf1-changelog">\n      <i class="fa-solid fa-receipt" inert></i>\n      ${game.i18n.localize("FFD20.Application.Changelog.Title")}\n    </button>\n    <button type="button" data-action="pf1-documentation">\n      <i class="fa-solid fa-book" inert></i>\n      ${game.i18n.localize("FFD20.Help.Label")}\n    </button>\n    <button type="button" data-action="pf1-troubleshooter">\n      <i class="fa-solid fa-screwdriver-wrench" inert></i>\n      ${game.i18n.localize("FFD20.Troubleshooter.Button")}\n    </button>\n  </div>`;for(const e of a.content.querySelectorAll("button"))switch(e.dataset.action){case"pf1-changelog":e.addEventListener("click",(e=>{e.preventDefault();(Object.values(ui.windows).find((e=>e instanceof ChangeLogWindow))??new ChangeLogWindow).render(!0,{focus:!0})}));break;case"pf1-documentation":e.addEventListener("click",(e=>{e.preventDefault(),ffd20.applications.helpBrowser.openUrl("Help/Home")}));break;case"pf1-troubleshooter":e.addEventListener("click",(e=>{e.preventDefault(),ffd20.applications.Troubleshooter.open()}))}s.after(a.content)})),Hooks.on("controlToken",(()=>{canvas.perception.update({initializeLighting:!0},!0)})),Hooks.on("updateWorldTime",(()=>expireFromTokens())),Hooks.on("canvasReady",(()=>expireFromTokens())),Hooks.on("canvasReady",(async e=>{if(!game.user.isGM)return;const t=e.scene?.tokens.filter((e=>e.actor));if(t.length){console.debug("FFD20 | Ensuring correct sizing of",t.length,"tokens(s)...");for(const e of t){const t=e.actor;try{t._updateTokenSize?.()}catch(s){console.error("FFD20 | Failed to adjust token size for",e.name,"\n",t,"\n",s)}}}})),window.addEventListener("focus",(()=>ffd20.skipConfirmPrompt=!1),{passive:!0});export{et as actionUse,Ne as applications,ht as canvas,it as chat,yt as components,b as config,F as const,gt as dice,We as documents,$t as migrations,Ye as models,zt as registry,o as tours,Mt as utils};
//# sourceMappingURL=ffd20.js.map
